[{"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ConfirmationAlert.js":"1","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\modules\\login\\views\\Pages\\LoginPage.jsx":"2","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\includes\\Aside.jsx":"3","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\PercentageMinFusion.jsx":"4","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\FaqListe.jsx":"5","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\CategoryClientForm.jsx":"6","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ChannelForm.jsx":"7","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ConfigCoefficient.jsx":"8","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\SeverityLevelForm.jsx":"9","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimsArchivedDetail.jsx":"10","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ParametersComponent.jsx":"11","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\UserEdit.jsx":"12","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\FaqsForm.jsx":"13","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\PerformanceIndicatorForm.jsx":"14","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ClaimObjectForm.jsx":"15","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ConfigRapportAutoForm.jsx":"16","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\UnitType.jsx":"17","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Staff.jsx":"18","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimCategory.jsx":"19","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\FAQs.jsx":"20","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\CategoryClient.jsx":"21","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Currency.jsx":"22","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Clients.jsx":"23","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimAssign.jsx":"24","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimsArchived.jsx":"25","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimListDetail.jsx":"26","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\User.jsx":"27","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\RuleEditPage.jsx":"28","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\HistoricClaimsAdd.jsx":"29","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsUnit.jsx":"30","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ImportFileForm.jsx":"31","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimAssignDetail.jsx":"32","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\UserAdd.jsx":"33","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\staff\\StaffForm.jsx":"34","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimAdd.jsx":"35","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\HeaderTablePage.jsx":"36","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsActivity.jsx":"37","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Modal\\ConfirmClaimAddModal.jsx":"38","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\APP_MACRO\\Holding\\DashboardClaimsAll.jsx":"39","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\helpers\\function.js":"40","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\notification.js":"41","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Dashboards.jsx":"42","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\CategoryFaqsForm.jsx":"43","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\PositionForm.jsx":"44","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\QualificationPeriodAdd.jsx":"45","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\TypeClientForm.jsx":"46","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\CurrencyForm.jsx":"47","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\InstitutionMessageApi.jsx":"48","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\UnitTypeForm.jsx":"49","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ParametersComponentEdit.jsx":"50","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\CategoryFAQs.jsx":"51","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Channel.jsx":"52","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimList.jsx":"53","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\MessageApi.jsx":"54","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\QualificationPeriod.jsx":"55","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\RulePage.jsx":"56","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\Participants.jsx":"57","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\PerformanceIndicator.jsx":"58","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ConfigRequirements.jsx":"59","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimToValidatedList.jsx":"60","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\UnitForm.jsx":"61","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimObject.jsx":"62","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\ClaimToPointOfServices.jsx":"63","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\DashboardSummaryReport.jsx":"64","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimMonitoring.jsx":"65","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsMy.jsx":"66","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimReporting.jsx":"67","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\config\\confirmConfig.js":"68","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\FAQsPage.jsx":"69","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimImportPage.jsx":"70","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\RejectLimitPage.jsx":"71","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\StaffChannels.jsx":"72","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ClaimCategoryForm.jsx":"73","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Institutions\\ImportInstitutionForm.jsx":"74","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\TreatmentPeriodAdd.jsx":"75","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimAssignToStaffDetail.jsx":"76","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\AddChatsForm.jsx":"77","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ProfilePage.jsx":"78","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Position.jsx":"79","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\TypeClient.jsx":"80","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\RelationShip.jsx":"81","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\SatisfactionMeasure.jsx":"82","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\HistoricClaimsTraetment.jsx":"83","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Mail.jsx":"84","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\SeverityLevel.jsx":"85","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Institution.jsx":"86","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ConfigProcessingCircuit.jsx":"87","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\DashboardStatistic.jsx":"88","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\Chats.jsx":"89","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\APP_MACRO\\Holding\\HoldingClientForm.jsx":"90","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\config\\appConfig.js":"91","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Error401.jsx":"92","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\includes\\Nav.jsx":"93","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\includes\\Body.jsx":"94","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\AddMemberForm.jsx":"95","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\RelationShipForm.jsx":"96","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\StaffImportPage.jsx":"97","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\IncompleteClaims.jsx":"98","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Clients\\ClientForm.jsx":"99","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimAssignToStaff.jsx":"100","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Unit.jsx":"101","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimToValidatedListDetail.jsx":"102","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\GraphChannel.jsx":"103","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ReasonModal.jsx":"104","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DoubleButtonDetail.jsx":"105","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimObjectImportPage.jsx":"106","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ConfigNotification.jsx":"107","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\RemoveChats.jsx":"108","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\IncompleteClaimsEdit.jsx":"109","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\ClaimToInstitution.jsx":"110","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Institutions\\InstitutionForm.jsx":"111","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\index.js":"112","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\AppContainer.js":"113","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\reducers\\planReducer.js":"114","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\serviceWorker.js":"115","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\reducers\\authReducer.js":"116","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\reducers\\IdentityReducer.js":"117","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\reducers\\treatmentReducer.js":"118","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\reducers\\languageReducer.js":"119","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\routeApp.js":"120","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\actions\\authActions.js":"121","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\token.js":"122","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\actions\\planAction.js":"123","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\NatureAppChoice.js":"124","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\actions\\languageAction.js":"125","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\actions\\treatmentAction.js":"126","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\actions\\IdentityAction.js":"127","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\helpers\\permission.js":"128","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\userClient.js":"129","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\channel.js":"130","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\layouts\\App.jsx":"131","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Toast.js":"132","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\config\\toastConfig.js":"133","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Loader.jsx":"134","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\includes\\Footer.jsx":"135","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\includes\\HeaderMobile.jsx":"136","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\middleware\\verifyToken.js":"137","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\MessageAPIForm.jsx":"138","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\SatisfactionMeasureDetail.jsx":"139","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\RecurencePage.jsx":"140","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ConfigRapportAuto.jsx":"141","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\TreatmentPeriod.jsx":"142","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\APP_MACRO\\Filiale\\FilialeInstitutionForm.jsx":"143","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\config\\errorPage.js":"144","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\dataTable.js":"145","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\currencyContry.js":"146","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\date.js":"147","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\InputRequire.jsx":"148","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\MessageList.js":"149","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\LoadingTable.jsx":"150","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\AttachmentsButton.jsx":"151","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\PeriodForm.jsx":"152","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\EmptyTable.jsx":"153","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ExportButton.jsx":"154","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\InfirmationTable.jsx":"155","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Pagination.jsx":"156","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\TreatmentButtonDetail.jsx":"157","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\AttachmentsButtonDetail.jsx":"158","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\profile\\UpdatePassword.jsx":"159","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\UnfoundedModal.jsx":"160","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\profile\\PersonalInfo.jsx":"161","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\DetailModal.jsx":"162","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\helpers\\unit.js":"163","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\helpers\\institution.js":"164","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\WithoutCode.jsx":"165","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\staff\\ConfirmSaveForm.jsx":"166","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Clients\\ConfirmClientSaveForm.jsx":"167","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ClaimButton.jsx":"168","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ClaimButtonDetail.jsx":"169","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ClientButton.jsx":"170","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ColToTreat.jsx":"171","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ColToAssignStaff.jsx":"172","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DoubleButton.jsx":"173","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ColToAssignUnit.jsx":"174","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ColToComplete.jsx":"175","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ColToMeasure.jsx":"176","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\FusionClaim.jsx":"177","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ColToValidate.jsx":"178","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ClientButtonDetail.jsx":"179","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\IdentityForm.jsx":"180","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\Message.js":"181","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ReasonSatisfaction.jsx":"182","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\DashboardStatClaim.jsx":"183","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\TreatmentForm.jsx":"184","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\EmptyNotification.jsx":"185","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimCategoryImportPage.jsx":"186","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ActivatePilotPage.jsx":"187","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ClaimDetails.jsx":"188","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\RuleAddPage.jsx":"189","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Clients\\ImportClientForm.jsx":"190","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\FormInformation.jsx":"191","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\KanbanElementDetail.jsx":"192"},{"size":341,"mtime":1606896868577,"results":"193","hashOfConfig":"194"},{"size":13472,"mtime":1606896868561,"results":"195","hashOfConfig":"194"},{"size":62087,"mtime":1606896871978,"results":"196","hashOfConfig":"194"},{"size":8321,"mtime":1606896871179,"results":"197","hashOfConfig":"194"},{"size":4067,"mtime":1606896868593,"results":"198","hashOfConfig":"194"},{"size":15519,"mtime":1606896870767,"results":"199","hashOfConfig":"194"},{"size":11044,"mtime":1606896870789,"results":"200","hashOfConfig":"194"},{"size":8822,"mtime":1608708447286,"results":"201","hashOfConfig":"194"},{"size":16498,"mtime":1606896870862,"results":"202","hashOfConfig":"194"},{"size":10025,"mtime":1606896871075,"results":"203","hashOfConfig":"194"},{"size":15092,"mtime":1606897704747,"results":"204","hashOfConfig":"194"},{"size":15160,"mtime":1606896871370,"results":"205","hashOfConfig":"194"},{"size":19033,"mtime":1606896870828,"results":"206","hashOfConfig":"194"},{"size":17299,"mtime":1606896870858,"results":"207","hashOfConfig":"194"},{"size":20492,"mtime":1606896870806,"results":"208","hashOfConfig":"194"},{"size":20100,"mtime":1606896870810,"results":"209","hashOfConfig":"194"},{"size":19259,"mtime":1606896871321,"results":"210","hashOfConfig":"194"},{"size":24432,"mtime":1606900051877,"results":"211","hashOfConfig":"194"},{"size":17607,"mtime":1606896871007,"results":"212","hashOfConfig":"194"},{"size":18123,"mtime":1606896871592,"results":"213","hashOfConfig":"194"},{"size":19241,"mtime":1606896870929,"results":"214","hashOfConfig":"194"},{"size":17592,"mtime":1606896871082,"results":"215","hashOfConfig":"194"},{"size":23019,"mtime":1606896871076,"results":"216","hashOfConfig":"194"},{"size":19357,"mtime":1606896871744,"results":"217","hashOfConfig":"194"},{"size":17969,"mtime":1606896871073,"results":"218","hashOfConfig":"194"},{"size":19097,"mtime":1606896871030,"results":"219","hashOfConfig":"194"},{"size":21784,"mtime":1607419399917,"results":"220","hashOfConfig":"194"},{"size":16726,"mtime":1606896871239,"results":"221","hashOfConfig":"194"},{"size":17201,"mtime":1606896871090,"results":"222","hashOfConfig":"194"},{"size":23277,"mtime":1606896872342,"results":"223","hashOfConfig":"194"},{"size":10989,"mtime":1606896870840,"results":"224","hashOfConfig":"194"},{"size":26120,"mtime":1606897704500,"results":"225","hashOfConfig":"194"},{"size":25657,"mtime":1606896871369,"results":"226","hashOfConfig":"194"},{"size":41304,"mtime":1606896870925,"results":"227","hashOfConfig":"194"},{"size":77226,"mtime":1606896871820,"results":"228","hashOfConfig":"194"},{"size":1945,"mtime":1606896868596,"results":"229","hashOfConfig":"194"},{"size":23372,"mtime":1606896872435,"results":"230","hashOfConfig":"194"},{"size":56947,"mtime":1606896870856,"results":"231","hashOfConfig":"194"},{"size":23562,"mtime":1606897704625,"results":"232","hashOfConfig":"194"},{"size":18780,"mtime":1606896872658,"results":"233","hashOfConfig":"194"},{"size":2524,"mtime":1606897704815,"results":"234","hashOfConfig":"194"},{"size":4779,"mtime":1606896868660,"results":"235","hashOfConfig":"194"},{"size":10275,"mtime":1606896870783,"results":"236","hashOfConfig":"194"},{"size":10799,"mtime":1606896870859,"results":"237","hashOfConfig":"194"},{"size":10795,"mtime":1606896871228,"results":"238","hashOfConfig":"194"},{"size":15755,"mtime":1606896870917,"results":"239","hashOfConfig":"194"},{"size":15143,"mtime":1606896870825,"results":"240","hashOfConfig":"194"},{"size":14613,"mtime":1606896871122,"results":"241","hashOfConfig":"194"},{"size":16714,"mtime":1606896870923,"results":"242","hashOfConfig":"194"},{"size":17275,"mtime":1606896870857,"results":"243","hashOfConfig":"194"},{"size":16842,"mtime":1606896870990,"results":"244","hashOfConfig":"194"},{"size":17941,"mtime":1606896871006,"results":"245","hashOfConfig":"194"},{"size":17975,"mtime":1606896871025,"results":"246","hashOfConfig":"194"},{"size":17989,"mtime":1606896871177,"results":"247","hashOfConfig":"194"},{"size":17806,"mtime":1606896871227,"results":"248","hashOfConfig":"194"},{"size":17986,"mtime":1606899535827,"results":"249","hashOfConfig":"194"},{"size":19495,"mtime":1606896871088,"results":"250","hashOfConfig":"194"},{"size":18834,"mtime":1606896871187,"results":"251","hashOfConfig":"194"},{"size":19979,"mtime":1606896871081,"results":"252","hashOfConfig":"194"},{"size":18776,"mtime":1606896871071,"results":"253","hashOfConfig":"194"},{"size":23853,"mtime":1606896870922,"results":"254","hashOfConfig":"194"},{"size":21100,"mtime":1606896871068,"results":"255","hashOfConfig":"194"},{"size":3566,"mtime":1606896872476,"results":"256","hashOfConfig":"194"},{"size":5462,"mtime":1606896872201,"results":"257","hashOfConfig":"194"},{"size":29157,"mtime":1606896871052,"results":"258","hashOfConfig":"194"},{"size":23460,"mtime":1606896872370,"results":"259","hashOfConfig":"194"},{"size":51031,"mtime":1606896871070,"results":"260","hashOfConfig":"194"},{"size":2461,"mtime":1606896868554,"results":"261","hashOfConfig":"194"},{"size":1939,"mtime":1601283559698,"results":"262","hashOfConfig":"194"},{"size":1976,"mtime":1604654751815,"results":"263","hashOfConfig":"194"},{"size":8334,"mtime":1606896871230,"results":"264","hashOfConfig":"194"},{"size":9717,"mtime":1606896870894,"results":"265","hashOfConfig":"194"},{"size":10916,"mtime":1606896870805,"results":"266","hashOfConfig":"194"},{"size":9236,"mtime":1606896870843,"results":"267","hashOfConfig":"194"},{"size":10765,"mtime":1606896871274,"results":"268","hashOfConfig":"194"},{"size":14486,"mtime":1606896871640,"results":"269","hashOfConfig":"194"},{"size":14904,"mtime":1606896871084,"results":"270","hashOfConfig":"194"},{"size":12014,"mtime":1606896871225,"results":"271","hashOfConfig":"194"},{"size":16732,"mtime":1606896871218,"results":"272","hashOfConfig":"194"},{"size":18431,"mtime":1606896871275,"results":"273","hashOfConfig":"194"},{"size":17513,"mtime":1606896871236,"results":"274","hashOfConfig":"194"},{"size":17317,"mtime":1606896871241,"results":"275","hashOfConfig":"194"},{"size":16626,"mtime":1606896871091,"results":"276","hashOfConfig":"194"},{"size":20823,"mtime":1606896871158,"results":"277","hashOfConfig":"194"},{"size":19529,"mtime":1606896871269,"results":"278","hashOfConfig":"194"},{"size":22012,"mtime":1606896871121,"results":"279","hashOfConfig":"194"},{"size":27538,"mtime":1606896871078,"results":"280","hashOfConfig":"194"},{"size":7145,"mtime":1606896872251,"results":"281","hashOfConfig":"194"},{"size":39419,"mtime":1608713387600,"results":"282","hashOfConfig":"194"},{"size":47008,"mtime":1606896870762,"results":"283","hashOfConfig":"194"},{"size":706,"mtime":1608719680617,"results":"284","hashOfConfig":"194"},{"size":1300,"mtime":1601283559687,"results":"285","hashOfConfig":"194"},{"size":28258,"mtime":1606897704379,"results":"286","hashOfConfig":"194"},{"size":20570,"mtime":1606896871894,"results":"287","hashOfConfig":"194"},{"size":12452,"mtime":1608713387599,"results":"288","hashOfConfig":"194"},{"size":15997,"mtime":1606896870860,"results":"289","hashOfConfig":"194"},{"size":14853,"mtime":1606896871272,"results":"290","hashOfConfig":"194"},{"size":18946,"mtime":1606896871107,"results":"291","hashOfConfig":"194"},{"size":21331,"mtime":1606896870808,"results":"292","hashOfConfig":"194"},{"size":19695,"mtime":1606896871675,"results":"293","hashOfConfig":"194"},{"size":22041,"mtime":1606896871320,"results":"294","hashOfConfig":"194"},{"size":23354,"mtime":1606896871072,"results":"295","hashOfConfig":"194"},{"size":4538,"mtime":1606896872107,"results":"296","hashOfConfig":"194"},{"size":6105,"mtime":1606897704551,"results":"297","hashOfConfig":"194"},{"size":7975,"mtime":1606896870827,"results":"298","hashOfConfig":"194"},{"size":1143,"mtime":1604565069134,"results":"299","hashOfConfig":"194"},{"size":11045,"mtime":1606896871077,"results":"300","hashOfConfig":"194"},{"size":17556,"mtime":1608713387601,"results":"301","hashOfConfig":"194"},{"size":70101,"mtime":1606896870842,"results":"302","hashOfConfig":"194"},{"size":3701,"mtime":1606896872526,"results":"303","hashOfConfig":"194"},{"size":29740,"mtime":1606896870844,"results":"304","hashOfConfig":"194"},{"size":1042,"mtime":1601283552280,"results":"305","hashOfConfig":"194"},{"size":2258,"mtime":1607419496760,"results":"306","hashOfConfig":"194"},{"size":590,"mtime":1601283552721,"results":"307","hashOfConfig":"194"},{"size":5226,"mtime":1587751018888,"results":"308","hashOfConfig":"194"},{"size":886,"mtime":1604597413820,"results":"309","hashOfConfig":"194"},{"size":885,"mtime":1601283552552,"results":"310","hashOfConfig":"194"},{"size":664,"mtime":1601283552723,"results":"311","hashOfConfig":"194"},{"size":693,"mtime":1601283552615,"results":"312","hashOfConfig":"194"},{"size":1054,"mtime":1604597413813,"results":"313","hashOfConfig":"194"},{"size":242,"mtime":1601283552391,"results":"314","hashOfConfig":"194"},{"size":70,"mtime":1601283552061,"results":"315","hashOfConfig":"194"},{"size":260,"mtime":1601283552410,"results":"316","hashOfConfig":"194"},{"size":6833,"mtime":1607419496766,"results":"317","hashOfConfig":"194"},{"size":163,"mtime":1601283552391,"results":"318","hashOfConfig":"194"},{"size":140,"mtime":1601283552416,"results":"319","hashOfConfig":"194"},{"size":136,"mtime":1601283552330,"results":"320","hashOfConfig":"194"},{"size":224,"mtime":1601283552202,"results":"321","hashOfConfig":"194"},{"size":711,"mtime":1601283552163,"results":"322","hashOfConfig":"194"},{"size":912,"mtime":1601283551908,"results":"323","hashOfConfig":"194"},{"size":2438,"mtime":1604597414432,"results":"324","hashOfConfig":"194"},{"size":651,"mtime":1601283556763,"results":"325","hashOfConfig":"194"},{"size":6078,"mtime":1601283551892,"results":"326","hashOfConfig":"194"},{"size":362,"mtime":1601283555735,"results":"327","hashOfConfig":"194"},{"size":597,"mtime":1606896868625,"results":"328","hashOfConfig":"194"},{"size":832,"mtime":1601283559224,"results":"329","hashOfConfig":"194"},{"size":254,"mtime":1606896870765,"results":"330","hashOfConfig":"194"},{"size":14305,"mtime":1606896870846,"results":"331","hashOfConfig":"194"},{"size":12542,"mtime":1606896871268,"results":"332","hashOfConfig":"194"},{"size":10326,"mtime":1606896871229,"results":"333","hashOfConfig":"194"},{"size":20794,"mtime":1606896871080,"results":"334","hashOfConfig":"194"},{"size":17601,"mtime":1606896871273,"results":"335","hashOfConfig":"194"},{"size":21147,"mtime":1606896870761,"results":"336","hashOfConfig":"194"},{"size":158,"mtime":1601283551873,"results":"337","hashOfConfig":"194"},{"size":44,"mtime":1601283551998,"results":"338","hashOfConfig":"194"},{"size":4116,"mtime":1601283551984,"results":"339","hashOfConfig":"194"},{"size":246,"mtime":1601283552024,"results":"340","hashOfConfig":"194"},{"size":199,"mtime":1601283555612,"results":"341","hashOfConfig":"194"},{"size":2875,"mtime":1601283598079,"results":"342","hashOfConfig":"194"},{"size":2040,"mtime":1601283556118,"results":"343","hashOfConfig":"194"},{"size":1150,"mtime":1601283552724,"results":"344","hashOfConfig":"194"},{"size":2642,"mtime":1601283556493,"results":"345","hashOfConfig":"194"},{"size":449,"mtime":1601283598824,"results":"346","hashOfConfig":"194"},{"size":1622,"mtime":1604562688481,"results":"347","hashOfConfig":"194"},{"size":727,"mtime":1601283555611,"results":"348","hashOfConfig":"194"},{"size":2550,"mtime":1601283556291,"results":"349","hashOfConfig":"194"},{"size":8681,"mtime":1601294159347,"results":"350","hashOfConfig":"194"},{"size":2036,"mtime":1601283552729,"results":"351","hashOfConfig":"194"},{"size":7696,"mtime":1604562688485,"results":"352","hashOfConfig":"194"},{"size":8489,"mtime":1606896870918,"results":"353","hashOfConfig":"194"},{"size":11455,"mtime":1604562688484,"results":"354","hashOfConfig":"194"},{"size":1616,"mtime":1601283558689,"results":"355","hashOfConfig":"194"},{"size":277,"mtime":1601283552217,"results":"356","hashOfConfig":"194"},{"size":283,"mtime":1601283552201,"results":"357","hashOfConfig":"194"},{"size":212,"mtime":1601283557216,"results":"358","hashOfConfig":"194"},{"size":22812,"mtime":1601283598047,"results":"359","hashOfConfig":"194"},{"size":24805,"mtime":1602501080875,"results":"360","hashOfConfig":"194"},{"size":795,"mtime":1601283552874,"results":"361","hashOfConfig":"194"},{"size":6586,"mtime":1601283553066,"results":"362","hashOfConfig":"194"},{"size":835,"mtime":1601283553291,"results":"363","hashOfConfig":"194"},{"size":3982,"mtime":1601283558582,"results":"364","hashOfConfig":"194"},{"size":3696,"mtime":1601283558332,"results":"365","hashOfConfig":"194"},{"size":1121,"mtime":1601283554716,"results":"366","hashOfConfig":"194"},{"size":3490,"mtime":1601283598042,"results":"367","hashOfConfig":"194"},{"size":3131,"mtime":1601283598043,"results":"368","hashOfConfig":"194"},{"size":3129,"mtime":1601283598044,"results":"369","hashOfConfig":"194"},{"size":9524,"mtime":1606896870829,"results":"370","hashOfConfig":"194"},{"size":3988,"mtime":1601283598045,"results":"371","hashOfConfig":"194"},{"size":5946,"mtime":1601283553367,"results":"372","hashOfConfig":"194"},{"size":18338,"mtime":1601283598019,"results":"373","hashOfConfig":"194"},{"size":6202,"mtime":1602501080892,"results":"374","hashOfConfig":"194"},{"size":5514,"mtime":1602501080879,"results":"375","hashOfConfig":"194"},{"size":6533,"mtime":1606896872303,"results":"376","hashOfConfig":"194"},{"size":10374,"mtime":1601283782102,"results":"377","hashOfConfig":"194"},{"size":548,"mtime":1601283554798,"results":"378","hashOfConfig":"194"},{"size":1166,"mtime":1604597414509,"results":"379","hashOfConfig":"194"},{"size":9044,"mtime":1608541941481,"results":"380","hashOfConfig":"194"},{"size":21995,"mtime":1601283558265,"results":"381","hashOfConfig":"194"},{"size":23932,"mtime":1606896871237,"results":"382","hashOfConfig":"194"},{"size":16456,"mtime":1606896870809,"results":"383","hashOfConfig":"194"},{"size":877,"mtime":1601283554927,"results":"384","hashOfConfig":"194"},{"size":1833,"mtime":1601283598046,"results":"385","hashOfConfig":"194"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3wkx2m",{"filePath":"388","messages":"389","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"390","messages":"391","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"394"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"394"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"394"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"394"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"394"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"394"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"394"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"430","messages":"431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"394"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"394"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"394"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"394"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"394"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"394"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"394"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"394"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"394"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"394"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"394"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"394"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"394"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"507","messages":"508","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"509","messages":"510","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"394"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"394"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"394"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"522","messages":"523","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"394"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"527","messages":"528","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"529","messages":"530","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"535","messages":"536","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"537","messages":"538","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"394"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"394"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"394"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"394"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"394"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"394"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"394"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"394"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"577","messages":"578","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"394"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"394"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"585","messages":"586","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"591","messages":"592","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"394"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"394"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"394"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"602","messages":"603","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"394"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"394"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"394"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"394"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"394"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"394"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"394"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"394"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"394"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"394"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"394"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"394"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"394"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"394"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"706","messages":"707","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"712","messages":"713","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"714","messages":"715","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"718","messages":"719","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"720","messages":"721","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"752","messages":"753","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"770","messages":"771","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"790","messages":"791","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"796","messages":"797","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"798","messages":"799","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"802","messages":"803","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"812","messages":"813","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"814","messages":"815","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"816","messages":"817","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ConfirmationAlert.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\modules\\login\\views\\Pages\\LoginPage.jsx",["822","823","824"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\includes\\Aside.jsx",["825","826","827","828","829","830","831","832"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\PercentageMinFusion.jsx",[],["833","834"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\FaqListe.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\CategoryClientForm.jsx",["835"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ChannelForm.jsx",["836"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ChannelForms = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-channel'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-channel'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n        is_response: 0,\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        is_response: [],\r\n    };\r\n\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                axios.get(`${appConfig.apiDomaine}/channels/${id}`)\r\n                    .then(response => {\r\n                        const newData = {\r\n                            name: response.data.name[\"fr\"],\r\n                            is_response: response.data.is_response\r\n                        };\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, id]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/channels/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/channels`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        redirectError401Page(errorRequest.response.data.code);\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/channels\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Canal\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification d'un canal\" : \"Ajout d'un canal\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Canal <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le nom du Canal\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/channels\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/channels\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-channel') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-channel') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChannelForms);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ConfigCoefficient.jsx",["837","838"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\SeverityLevelForm.jsx",["839"],"import React, {useState, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        store: `${appConfig.apiDomaine}/severity-levels`,\r\n        update: id => `${appConfig.apiDomaine}/severity-levels/${id}`,\r\n        create: `${appConfig.apiDomaine}/severity-levels/create`,\r\n        edit: id => `${appConfig.apiDomaine}/severity-levels/${id}/edit`\r\n    },\r\n    MACRO: {\r\n        plan: \"MACRO\",\r\n        store: `${appConfig.apiDomaine}/severity-levels`,\r\n        update: id => `${appConfig.apiDomaine}/severity-levels/${id}`,\r\n        create: `${appConfig.apiDomaine}/severity-levels/create`,\r\n        edit: id => `${appConfig.apiDomaine}/severity-levels/${id}/edit`\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        store: `${appConfig.apiDomaine}/severity-levels`,\r\n        update: id => `${appConfig.apiDomaine}/severity-levels/${id}`,\r\n        create: `${appConfig.apiDomaine}/severity-levels/create`,\r\n        edit: id => `${appConfig.apiDomaine}/severity-levels/${id}/edit`,\r\n    }\r\n};\r\n\r\nconst SeverityLevelForm = (props) => {\r\n    const {id} = useParams();\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-severity-level'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-severity-level'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const endpoint = endPointConfig[props.plan];\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n        color: \"#000000\",\r\n        description: \"\",\r\n    };\r\n\r\n    const defaultError = {\r\n        name: [],\r\n        color: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/severity-levels/${id}`)\r\n                    .then(response => {\r\n                        const newData = {\r\n                            name: response.data.name[\"fr\"],\r\n                            color: response.data.color,\r\n                            description: response.data.description[\"fr\"],\r\n                        };\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, id]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeColor = (e) => {\r\n        const newData = {...data};\r\n        newData.color = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(endpoint.update(id), data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(endpoint.store, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        console.log(errorRequest.response.data);\r\n                        setStartRequest(false);\r\n                        if (errorRequest.response.data.code === 422) {\r\n                            setError({...defaultError, ...errorRequest.response.data.error});\r\n                            ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        } else {\r\n                            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(errorRequest.response.data.error));\r\n                        }\r\n\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/severities\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Niveau de gravité\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification d'un niveau de gravité\" : \"Ajout d'un niveau de gravité\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Niveau de gravité <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le nom de la gravité\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.color.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"color\">Couleur <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"color\"\r\n                                                        type=\"color\"\r\n                                                        className={error.color.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez choisir la couleur représentative du niveau de gravité\"\r\n                                                        value={data.color}\r\n                                                        onChange={(e) => onChangeColor(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.color.length ? (\r\n                                                            error.color.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description</label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                <textarea\r\n                                                    id=\"description\"\r\n                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer la description\"\r\n                                                    cols=\"30\"\r\n                                                    rows=\"5\"\r\n                                                    value={data.description}\r\n                                                    onChange={(e) => onChangeDescription(e)}\r\n                                                />\r\n                                                    {\r\n                                                        error.description.length ? (\r\n                                                            error.description.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/severities\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/severities\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ? (\r\n            verifyPermission(props.userPermissions, 'update-severity-level') ? (\r\n                printJsx()\r\n            ) : null\r\n        ) : (\r\n            verifyPermission(props.userPermissions, 'store-severity-level') ? (\r\n                printJsx()\r\n            ) : null\r\n        )\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SeverityLevelForm);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimsArchivedDetail.jsx",["840","841"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ParametersComponent.jsx",["842"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst ParametersComponent = (props) => {\r\n    document.title = \"Satis Paramètre - Configuration formulaire\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"update-components-parameters\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [component, setComponent] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/components\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setComponent(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n    },[]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newComponent = [...component];\r\n        newComponent = newComponent.filter(el => (\r\n            getLowerCaseString(el.params[\"fr\"].title ? el.params[\"fr\"].title.value : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newComponent;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(component.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(component.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(component.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(component.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(component.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                component.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                component.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (component, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{component.params.fr.title===null?\"\":component.params.fr.title.value}</td>\r\n                <td style={{textAlign:'center'}}>\r\n                    <Link\r\n                        to={`/settings/config/edit/${component.id}`}\r\n                        className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                        title=\"Modifier\">\r\n                        <i className=\"la la-edit\"/>\r\n                    </Link>\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"update-components-parameters\")?(\r\n                <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                    <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                        <div className=\"kt-container  kt-container--fluid \">\r\n                            <div className=\"kt-subheader__main\">\r\n                                <h3 className=\"kt-subheader__title\">\r\n                                    Paramètres\r\n                                </h3>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                    <div className=\"kt-subheader__breadcrumbs\">\r\n                                        <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                            className=\"flaticon2-shelter\"/></a>\r\n                                        <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                        <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                           className=\"kt-subheader__breadcrumbs-link\">\r\n                                            Configurations\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                        <InfirmationTable\r\n                            information={\"Configuration des formulaires\"}/>\r\n\r\n                        <div className=\"kt-portlet\">\r\n\r\n                            <HeaderTablePage\r\n                                title={\"Configuration\"}\r\n                            />\r\n                            {\r\n                                load ? (\r\n                                    <LoadingTable/>\r\n                                ) : (\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 text-left\">\r\n                                                    <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                        <label>\r\n                                                            Recherche:\r\n                                                            <input id=\"myInput\" type=\"text\"\r\n                                                                   onKeyUp={(e) => searchElement(e)}\r\n                                                                   className=\"form-control form-control-sm\"\r\n                                                                   placeholder=\"\"\r\n                                                                   aria-controls=\"kt_table_1\"/>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-12\">\r\n                                                    <table\r\n                                                        className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                        id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                        style={{width: \"952px\"}}>\r\n                                                        <thead>\r\n                                                        <tr role=\"row\">\r\n                                                            <th className=\"sorting\" tabIndex=\"0\"\r\n                                                                aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                                aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\"\r\n                                                                aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                                aria-label=\"Type: activate to sort column ascending\">\r\n                                                                Action\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n                                                            component.length ? (\r\n                                                                showList ? (\r\n                                                                    showList.map((component, index) => (\r\n                                                                        printBodyTable(component, index)\r\n                                                                    ))\r\n                                                                ) : (\r\n                                                                    <EmptyTable search={true}/>\r\n                                                                )\r\n                                                            ) : (\r\n                                                                <EmptyTable/>\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                        <tfoot>\r\n                                                        <tr>\r\n\r\n                                                        </tr>\r\n                                                        </tfoot>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-12 col-md-5\">\r\n                                                    <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                         aria-live=\"polite\">Affichage de 1\r\n                                                        à {numberPerPage} sur {component.length} données\r\n                                                    </div>\r\n                                                </div>\r\n                                                {\r\n                                                    showList.length ? (\r\n                                                        <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                            <Pagination\r\n                                                                numberPerPage={numberPerPage}\r\n                                                                onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                                activeNumberPage={activeNumberPage}\r\n                                                                onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                                pages={pages}\r\n                                                                onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                                numberPage={numberPage}\r\n                                                                onClickNextPage={e => onClickNextPage(e)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ):null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ParametersComponent);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\UserEdit.jsx",["843"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastEditErrorMessageConfig, toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {formatSelectOption} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst UserEdit = (props) => {\r\n    const {id} = useParams();\r\n\r\n    document.title = \"Satis client - Paramètre Envoie de mail\";\r\n    if (!(verifyPermission(props.userPermissions, 'show-user-any-institution') || verifyPermission(props.userPermissions, \"show-user-my-institution\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    const defaultData = {\r\n        roles: [],\r\n        new_password: \"\",\r\n        new_password_confirmation: \"\",\r\n    };\r\n    const defaultError = {\r\n        roles: [],\r\n        new_password: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [roles, setRoles] = useState([]);\r\n    const [role, setRole] = useState([]);\r\n\r\n    const formatDefaultRoles = (userRoles) => {\r\n        const listRoles = [];\r\n        userRoles.map(r => listRoles.push(r.name));\r\n        return listRoles;\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            let endpoint = \"\";\r\n            if (props.plan === \"MACRO\" || props.plan === \"HUB\") {\r\n                if (verifyPermission(props.userPermissions, \"show-user-any-institution\"))\r\n                    endpoint = `${appConfig.apiDomaine}/any/users/${id}/change-role-password`;\r\n                if (verifyPermission(props.userPermissions, \"show-user-my-institution\"))\r\n                    endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\r\n            }\r\n            else if(props.plan === \"PRO\")\r\n                endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\r\n\r\n            if (verifyTokenExpire()) {\r\n                await axios.get(endpoint)\r\n                    .then(({data}) => {\r\n                        const newData = {...defaultData};\r\n                        newData.roles = formatDefaultRoles(data.user.roles);\r\n                        setRole(formatSelectOption(data.user.roles, \"name\", false, \"name\"));\r\n                        setRoles(formatSelectOption(data.roles, \"name\", false, \"name\"));\r\n                        setUser(data.user);\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [props.plan, appConfig.apiDomaine]);\r\n\r\n    const formatSelected = (selected) => {\r\n        const newSelected = [];\r\n        selected.map(s => newSelected.push(s.value));\r\n        return newSelected;\r\n    };\r\n\r\n    const handleRoleChange = (selected) => {\r\n        const newData = {...data};\r\n        newData.roles = selected ? formatSelected(selected) : [];\r\n        setRole(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const newData = {...data};\r\n        newData.new_password = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handlePasswordConfirmationChange = (e) => {\r\n        const newData = {...data};\r\n        newData.new_password_confirmation = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setStartRequest(true);\r\n        let endpoint = \"\";\r\n        if (props.plan === \"MACRO\" || props.plan === \"HUB\") {\r\n            if (verifyPermission(props.userPermissions, \"show-user-any-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/any/users/${id}/change-role-password`;\r\n            if (verifyPermission(props.userPermissions, \"show-user-my-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\r\n        }\r\n        else if(props.plan === \"PRO\")\r\n            endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\r\n\r\n        if (verifyTokenExpire()) {\r\n            console.log(\"enpoint:\", endpoint);\r\n            await axios.put(endpoint, data)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    const newData = {...data};\r\n                    newData.new_password = \"\";\r\n                    newData.new_password_confirmation = \"\";\r\n                    setError(defaultError);\r\n                    setData(newData);\r\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                })\r\n                .catch(errorRequest => {\r\n                    setStartRequest(false);\r\n                    setError({...defaultError, ...errorRequest.response.data.error});\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'show-user-any-institution') || verifyPermission(props.userPermissions, \"show-user-my-institution\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètre\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/users\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Utilisateur\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Modification\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Utilisateur\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.roles.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n                                                    <strong>Utilisateur</strong>\r\n                                                </label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <h4>{ user ? user.identite.lastname : \".......\" } { user ? user.identite.firstname : \".......\" }</h4>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.roles.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={\"role\"}>Role <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        isMulti\r\n                                                        value={role}\r\n                                                        placeholder={\"admin-satis\"}\r\n                                                        onChange={handleRoleChange}\r\n                                                        options={roles}\r\n                                                    />\r\n                                                    {\r\n                                                        error.roles.length ? (\r\n                                                            error.roles.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.new_password.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password\">Mot de passe</label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"password\"\r\n                                                        type=\"password\"\r\n                                                        className={error.new_password.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"************\"\r\n                                                        value={data.new_password}\r\n                                                        onChange={(e) => handlePasswordChange(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.new_password.length ? (\r\n                                                            error.new_password.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={\"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password_confirmation\">Confirmation</label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"password_confirmation\"\r\n                                                        type=\"password\"\r\n                                                        className={\"form-control\"}\r\n                                                        placeholder=\"************\"\r\n                                                        value={data.new_password_confirmation}\r\n                                                        onChange={(e) => handlePasswordConfirmationChange(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Modifier</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n\r\n                                                <Link to={\"/settings/users\"} className=\"btn btn-secondary mx-2\">Quitter</Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserEdit);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\FaqsForm.jsx",["844","845","846"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\PerformanceIndicatorForm.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ClaimObjectForm.jsx",["847"],"import React, {useState, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport Select from \"react-select\";\r\nimport {formatSelectOption} from \"../../helpers/function\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst ClaimObjectForm = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-claim-object'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-claim-object'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const [claimCategories, setClaimCategories] = useState([]);\r\n    const [claimCategory, setClaimCategory] = useState(null);\r\n    const [severityLevels, setSeverityLevels] = useState([]);\r\n    const [severityLevel, setSeverityLevel] = useState(null);\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n        description: \"\",\r\n        claim_category_id: claimCategories.length ? claimCategories[0].id : \"\",\r\n        severity_levels_id: \"\",\r\n        time_limit: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        description: [],\r\n        claim_category_id: [],\r\n        severity_levels_id: [],\r\n        time_limit: []\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/claim-objects/${id}/edit`)\r\n                    .then( response => {\r\n                        setClaimCategories(formatSelectOption(response.data.claimCategories, \"name\", \"fr\"));\r\n                        setSeverityLevels(formatSelectOption(response.data.severityLevels, \"name\", \"fr\"));\r\n                        const newData = {\r\n                            name: response.data.claimObject.name[\"fr\"],\r\n                            description: response.data.claimObject.description[\"fr\"],\r\n                            claim_category_id: response.data.claimObject.claim_category_id,\r\n                            severity_levels_id: response.data.claimObject.severity_levels_id === null ? \"\" : response.data.claimObject.severity_levels_id,\r\n                            time_limit: response.data.claimObject.time_limit === null ? 0 : response.data.claimObject.time_limit,\r\n                        };\r\n                        setData(newData);\r\n                        setClaimCategory({value: response.data.claimObject.claim_category_id, label: response.data.claimObject.claim_category.name[\"fr\"]});\r\n                        setSeverityLevel(\r\n                            response.data.claimObject.severity_levels_id === null ? {} : {value: response.data.claimObject.severity_levels_id, label: response.data.claimObject.severity_level.name[\"fr\"]}\r\n                        );\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            } else {\r\n                await axios.get(`${appConfig.apiDomaine}/claim-objects/create`)\r\n                    .then(response => {\r\n                        setClaimCategories(formatSelectOption(response.data.claimCategories, \"name\", \"fr\"));\r\n                        setSeverityLevels(formatSelectOption(response.data.severityLevels, \"name\", \"fr\"));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeClaimCategory = (selected) => {\r\n        const newData = {...data};\r\n        newData.claim_category_id = selected ? selected.value : \"\";\r\n        setClaimCategory(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeTimeLimit = (e) => {\r\n        const newData = {...data};\r\n        newData.time_limit = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeSeverityLevel = (selected) => {\r\n        const newData = {...data};\r\n        newData.severity_levels_id = selected ? selected.value : \"\";\r\n        setSeverityLevel(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/claim-objects/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/claim-objects`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setClaimCategory({});\r\n                        setSeverityLevel({});\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <Link to=\"/settings/claim_objects\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                Objet de réclamation\r\n                            </Link>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                {\r\n                                    id ? \"Modification\" : \"Ajout\"\r\n                                }\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"kt-portlet\">\r\n                            <div className=\"kt-portlet__head\">\r\n                                <div className=\"kt-portlet__head-label\">\r\n                                    <h3 className=\"kt-portlet__head-title\">\r\n                                        {\r\n                                            id ? \"Modification d'objet de réclamation\" : \"Ajout d'objet de réclamation\"\r\n                                        }\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <form method=\"POST\" className=\"kt-form\">\r\n                                <div className=\"kt-form kt-form--label-right\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Objet de réclamation <InputRequire/></label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <input\r\n                                                    id=\"name\"\r\n                                                    type=\"text\"\r\n                                                    className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Nom de l'objet de réclamation\"\r\n                                                    value={data.name}\r\n                                                    onChange={(e) => onChangeName(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.name.length ? (\r\n                                                        error.name.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={error.claim_category_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"unit_type\">Catégorie de l'objet <InputRequire/></label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <Select\r\n                                                    isClearable\r\n                                                    value={claimCategory}\r\n                                                    placeholder={\"Catégorie de l'objet de réclamation\"}\r\n                                                    onChange={onChangeClaimCategory}\r\n                                                    options={claimCategories}\r\n                                                />\r\n                                                {\r\n                                                    error.claim_category_id.length ? (\r\n                                                        error.claim_category_id.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"timeLimite\">Délai de traitement <InputRequire/></label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <input\r\n                                                    id=\"timeLimite\"\r\n                                                    type=\"number\"\r\n                                                    className={error.time_limit.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Temps limite de l'objet\"\r\n                                                    value={data.time_limit}\r\n                                                    onChange={(e) => onChangeTimeLimit(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.time_limit.length ? (\r\n                                                        error.time_limit.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={error.severity_levels_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"timeLimite\">Niveau de gravité <InputRequire/></label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <Select\r\n                                                    isClearable\r\n                                                    value={severityLevel}\r\n                                                    placeholder={\"Selectioner le niveau de gravité\"}\r\n                                                    onChange={onChangeSeverityLevel}\r\n                                                    options={severityLevels}\r\n                                                />\r\n                                                {\r\n                                                    error.severity_levels_id.length ? (\r\n                                                        error.severity_levels_id.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description</label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <textarea\r\n                                                    id=\"description\"\r\n                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Description\"\r\n                                                    cols=\"30\"\r\n                                                    rows=\"5\"\r\n                                                    value={data.description}\r\n                                                    onChange={(e) => onChangeDescription(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.description.length ? (\r\n                                                        error.description.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"kt-portlet__foot\">\r\n                                        <div className=\"kt-form__actions text-right\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                ) : (\r\n                                                    <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/settings/claim_objects\" className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/settings/claim_objects\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        id ? (\r\n            verifyPermission(props.userPermissions, 'update-claim-object') ? (\r\n                printJsx()\r\n            ) : null\r\n        ) : (\r\n            verifyPermission(props.userPermissions, 'store-claim-object') ? (\r\n                printJsx()\r\n            ) : null\r\n        )\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimObjectForm);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ConfigRapportAutoForm.jsx",["848","849"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig, toastEditSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport Select from \"react-select\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/reporting-claim/config`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\r\n        }\r\n    },\r\n\r\n};\r\n\r\nconst ConfigRapportAutoForm = (props) => {\r\n    const {id} = useParams();\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'config-reporting-claim-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n\r\n    const defaultData = {\r\n        institution_id: \"\",\r\n        period: \"\",\r\n        email: [],\r\n    };\r\n    const defaultError = {\r\n        institution_id: \"\",\r\n        period: [],\r\n        email: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [periodData, setPeriodData] = useState(null);\r\n    const [period, setPeriod] = useState(null);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [disabledInput, setDisabledInput] = useState(false);\r\n    const [institution, setInstitution] = useState(null);\r\n    const [institutions, setInstitutions] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.get(endPoint.list + `/${id}/edit`)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                        const newRapport = {\r\n                            period: (response.data.reportingTask.period !== null) ? (response.data.reportingTask.period) : '',\r\n                            email: response.data.reportingTask.email,\r\n                            institution_id:response.data.reportingTask.institution_targeted_id!==null?response.data.reportingTask.institution_targeted_id:\"\"\r\n                        };\r\n\r\n                        setData(newRapport);\r\n\r\n                        if (response.data.reportingTask.period !== null) {\r\n                            setPeriodData(response.data.period);\r\n                            setPeriod(response.data.reportingTask.period_tag);\r\n                        }\r\n                        if (response.data.reportingTask.institution_targeted_id !== null) {\r\n                            setInstitutions(response.data.institutions);\r\n                            setInstitution({value: response.data.reportingTask.institution_targeted.id, label: response.data.reportingTask.institution_targeted.name});\r\n\r\n                        }\r\n                    })\r\n            }\r\n            axios.get(endPoint.list + `/create`)\r\n                .then(response => {\r\n                    let options =\r\n                        response.data.institutions.length ? response.data.institutions.map(institution => ({\r\n                            value: institution.id, label: institution.name\r\n                        })) : \"\"\r\n                    ;\r\n                    setInstitutions(options);\r\n                    setPeriodData(response.data.period)\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const onChangePeriod = (selected) => {\r\n        const newData = {...data};\r\n        newData.period = selected.value;\r\n        setPeriod(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeEmail = (mail) => {\r\n        const newData = {...data};\r\n        newData.email = mail;\r\n        setData(newData);\r\n    };\r\n\r\n    const handleDisabledInputChange = () => {\r\n        setDisabledInput(!disabledInput);\r\n    };\r\n    const onChangeInstitution = (selected) => {\r\n        const newData = {...data};\r\n        if (selected) {\r\n            newData.institution_id = selected.value;\r\n            setInstitution(selected);\r\n        } else setInstitution(null);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(endPoint.list + `/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                        window.location.href=\"/settings/rapport-auto\"\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(endPoint.list, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/clients/category\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Rapport Automatique\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification des rapports automatiques\" : \"Ajout des rapports automatiques\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n\r\n                                                                <div className=\"form-group row\">\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"institution\">\r\n                                                                        <input\r\n                                                                            type=\"checkbox\"\r\n                                                                            value={disabledInput}\r\n                                                                            onChange={handleDisabledInputChange}/>\r\n                                                                        <span/>    Toutes les institutions<span/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <Select\r\n                                                                            isClearable\r\n                                                                            isDisabled={disabledInput}\r\n                                                                            placeholder={\"Veuillez sélectionner une institution\"}\r\n                                                                            value={institution}\r\n                                                                            onChange={onChangeInstitution}\r\n                                                                            options={institutions?institutions.map(institution=>institution):\"\"}\r\n                                                                        />\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className={error.period.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"exampleSelect1\">Période(s)</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                            <Select\r\n                                                                                value={period}\r\n                                                                                onChange={onChangePeriod}\r\n                                                                                options={periodData }\r\n                                                                            />\r\n                                                                        {\r\n                                                                            error.period.length ? (\r\n                                                                                error.period.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.email.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"email\">Votre Email(s)</label>\r\n                                                                    <div className=\" col-lg-9 col-xl-6\">\r\n                                                                        <TagsInput\r\n                                                                            value={data.email}\r\n                                                                            onChange={onChangeEmail}\r\n                                                                            inputProps={{\r\n                                                                                className: \"react-tagsinput-input\",\r\n                                                                                placeholder: \"Email(s)\"\r\n                                                                            }}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.email.length ? (\r\n                                                                                error.email.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Enregistrer</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Loading...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/rapport-auto\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/rapport-auto\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution') ? (\r\n            printJsx()\r\n        ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ConfigRapportAutoForm);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\UnitType.jsx",["850"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst UnitType = (props) => {\r\n    document.title = \"Satis client - Paramètre type d'unité\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-unit-type\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [unitTypes, setUnitTypes] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(`${appConfig.apiDomaine}/unit-types`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setUnitTypes(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newUnitTypes = [...unitTypes];\r\n        newUnitTypes = newUnitTypes.filter(el => (\r\n            getLowerCaseString(el.name ? el.name[\"fr\"] : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.can_be_target ? \"Oui\" : \"Non\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.can_treat ? \"Oui\" : \"Non\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description ? el.description[\"fr\"] : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newUnitTypes;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(unitTypes.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(unitTypes.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(unitTypes.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(unitTypes.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(unitTypes.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                unitTypes.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                unitTypes.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteUnitType = (unitTypeId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(`${appConfig.apiDomaine}/unit-types/${unitTypeId}`)\r\n                            .then(response => {\r\n                                const newUnitTypes = [...unitTypes];\r\n                                newUnitTypes.splice(index, 1);\r\n                                setUnitTypes(newUnitTypes);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (unitType, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{unitType.name ? unitType.name[\"fr\"] : \"-\"}</td>\r\n                <td>{unitType.can_be_target ? \"Oui\" : \"Non\"}</td>\r\n                <td>{unitType.can_treat ? \"Oui\" : \"Non\"}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"300px\" }}>{unitType.description ? unitType.description[\"fr\"] : \"-\"}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-unit-type') ? (\r\n                            <Link to={`/settings/unit_type/${unitType.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-unit-type') ? (\r\n                            <button\r\n                                onClick={(e) => deleteUnitType(unitType.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-unit-type') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Type d'unité\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-unit-type\"}\r\n                            title={\"Type d'unité\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/unit_type/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Peut-être visé par une réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Peut traité une réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"300px\" }}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        unitTypes.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((unitType, index) => (\r\n                                                                    printBodyTable(unitType, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Peut-être visé par une réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Peut traité une réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {unitTypes.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UnitType);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Staff.jsx",["851","852"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimCategory.jsx",["853"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport ExportButton from \"../components/ExportButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst ClaimCategory = (props) => {\r\n    if (!verifyPermission(props.userPermissions, 'list-claim-category'))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claimCategories, setClaimCategories] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(`${appConfig.apiDomaine}/claim-categories`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setClaimCategories(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaimCategories = [...claimCategories];\r\n        newClaimCategories = newClaimCategories.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newClaimCategories;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimCategories.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimCategories.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimCategories.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimCategories.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimCategories.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimCategories.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimCategories.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteClaimCategory = (claimCategoryId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/claim-categories/${claimCategoryId}`)\r\n                            .then(response => {\r\n                                const newClaimCategories = [...claimCategories];\r\n                                newClaimCategories.splice(index, 1);\r\n                                setClaimCategories(newClaimCategories);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newClaimCategories.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newClaimCategories.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(\r\n                                        toastErrorMessageWithParameterConfig(error.response.data.error)\r\n                                    );\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claimCategory, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claimCategory.name[\"fr\"]}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-claim-category') ? (\r\n                            <Link to={`/settings/claim_categories/${claimCategory.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-claim-category') ? (\r\n                            <button\r\n                                onClick={(e) => deleteClaimCategory(claimCategory.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-claim-category') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Catégorie de réclamation\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-claim-category\"}\r\n                            title={\"Catégories de réclamation\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/claim_categories/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <ExportButton\r\n                                                downloadLink={`${appConfig.apiDomaine}/download-excel/categories`}\r\n                                                pageUrl={\"/settings/claim_category/import\"}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claimCategories.length ? (\r\n                                                            showList ? (\r\n                                                                showList.map((claimCategory, index) => (\r\n                                                                    printBodyTable(claimCategory, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {claimCategories.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        language: state.language.languageSelected\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimCategory);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\FAQs.jsx",["854","855","856","857","858","859"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\CategoryClient.jsx",["860"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Currency.jsx",["861","862"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst Currency = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"list-currency\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [currencies, setCurrencies] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(`${appConfig.apiDomaine}/currencies`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setCurrencies(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newCurrencies = [...currencies];\r\n        newCurrencies = newCurrencies.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.iso_code).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newCurrencies;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(currencies.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(currencies.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(currencies.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(currencies.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(currencies.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                currencies.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                currencies.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteCurrency = (currencyId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/currencies/${currencyId}`)\r\n                            .then(response => {\r\n                                const newCurrencies = [...currencies];\r\n                                newCurrencies.splice(index, 1);\r\n                                setCurrencies(newCurrencies);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newCurrencies.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newCurrencies.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (currency, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{currency.name[\"fr\"]}</td>\r\n                <td>{currency.iso_code}</td>\r\n                <td>\r\n                    {/*{\r\n                        verifyPermission(props.userPermissions, 'update-currency') ? (\r\n                            <Link to={`/settings/currencies/${currency.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }*/}\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-currency') ? (\r\n                            <button\r\n                                onClick={(e) => deleteCurrency(currency.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission([\"list-currency\"], 'list-currency') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Devise\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-currency\"}\r\n                            title={\"Devise\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/currencies/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Search:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom de la devise\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">ISO\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        currencies.length ? (\r\n                                                            showList ? (\r\n                                                                showList.map((currency, index) => (\r\n                                                                    printBodyTable(currency, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom de la devise</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">ISO code</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {currencies.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Currency);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Clients.jsx",["863","864","865","866","867","868","869","870"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimAssign.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimsArchived.jsx",["871","872"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    loadCss,\r\n    forceRound,\r\n    getLowerCaseString,\r\n} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/claim-archived`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/claim-archived`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/claim-archived`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/any/claim-archived`,\r\n    }\r\n};\r\n\r\nconst ClaimsArchived = (props) => {\r\n    document.title = \"Satis client - Liste réclamations archivées\";\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'list-any-claim-archived') ||\r\n        verifyPermission(props.userPermissions, \"list-my-claim-archived\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-any-claim-archived'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-my-claim-archived'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claimsArchived, setClaimsArchived] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setClaimsArchived(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaims = [...claimsArchived];\r\n        newClaims = newClaims.filter(el => (\r\n            getLowerCaseString(el.reference).indexOf(value) >= 0 ||\r\n            getLowerCaseString(`${el.claimer.lastname} ${el.claimer.firstname}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.active_treatment.solution === null ? \"-\" : el.active_treatment.solution).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newClaims;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimsArchived.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimsArchived.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimsArchived.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimsArchived.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimsArchived.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimsArchived.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimsArchived.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (archived, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{archived.reference === null ? \"-\" : archived.reference}</td>\r\n                <td>{`${archived.claimer.lastname} ${archived.claimer.firstname}`}</td>\r\n                <td>{archived.description === null ? \"-\" : archived.description}</td>\r\n                <td>{archived.active_treatment.solution === null ? \"-\" : archived.active_treatment.solution}</td>\r\n                {\r\n                    verifyPermission(props.userPermissions, \"show-any-claim-archived\") ||\r\n                    verifyPermission(props.userPermissions, \"show-my-claim-archived\") ? (\r\n                        <td style={{textAlign: 'center'}}>\r\n                            <a href={`/process/claim_archived/${archived.id}/detail`}\r\n                               className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                               title=\"Détail\">\r\n                                <i className=\"la la-eye\"/>\r\n                            </a>\r\n                        </td>\r\n                    ) : null\r\n                }\r\n\r\n            </tr>\r\n        )\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Processus\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                               className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                Traitement\r\n                            </a>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Archivage\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable\r\n                    information={\"Liste des réclamtions archivées\"}\r\n                />\r\n\r\n                <div className=\"kt-portlet\">\r\n\r\n                    <HeaderTablePage\r\n                        title={\"Réclamations Archivées\"}\r\n                    />\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Rechercher:\r\n                                                    <input id=\"myInput\" type=\"text\"\r\n                                                       onKeyUp={(e) => searchElement(e)}\r\n                                                       className=\"form-control form-control-sm\"\r\n                                                       placeholder=\"\"\r\n                                                       aria-controls=\"kt_table_1\"\r\n                                                    />\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <table\r\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{width: \"952px\"}}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Référence\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Réclamant\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Solution\r\n                                                    </th>\r\n                                                    {\r\n                                                        verifyPermission(props.userPermissions, \"show-any-claim-archived\") ||\r\n                                                        verifyPermission(props.userPermissions, \"show-my-claim-archived\") ? (\r\n                                                            <th className=\"sorting\" tabIndex=\"0\"\r\n                                                                aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                                aria-label=\"Type: activate to sort column ascending\">\r\n                                                                Action\r\n                                                            </th>\r\n                                                        ) : null\r\n                                                    }\r\n\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {\r\n                                                    claimsArchived.length ? (\r\n                                                        showList.length ? (\r\n                                                            showList.map((archived, index) => (\r\n                                                                printBodyTable(archived, index)\r\n                                                            ))\r\n                                                        ) : <EmptyTable search={true}/>\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    )\r\n                                                }\r\n                                                </tbody>\r\n                                                <tfoot>\r\n                                                <tr/>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1\r\n                                                à {numberPerPage} sur {claimsArchived.length} données\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                            <Pagination\r\n                                                numberPerPage={numberPerPage}\r\n                                                onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                activeNumberPage={activeNumberPage}\r\n                                                onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                pages={pages}\r\n                                                onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                numberPage={numberPage}\r\n                                                onClickNextPage={e => onClickNextPage(e)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimsArchived);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimListDetail.jsx",["873"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAssignClaimSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport ReasonModal from \"../components/ReasonModal\";\r\nimport {AssignClaimConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmAssignConfig} from \"../../config/confirmConfig\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\n\r\nconst ClaimListDetail = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n    const {id} = useParams();\r\n\r\n    if (!verifyPermission(props.userPermissions, \"assignment-claim-awaiting-treatment\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [claim, setClaim] = useState(null);\r\n    const [showReason, setShowReason] = useState(false);\r\n    const [reasonTitle, setReasonTitle] = useState(\"\");\r\n    const [reasonLabel, setReasonLabel] = useState(\"\");\r\n    const [action, setAction] = useState(\"\");\r\n    const [staffs, setStaffs] = useState([]);\r\n    const [errors, setErrors] = useState([]);\r\n    const [staff, setStaff] = useState(null);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    const formatStaffsOptions = (data) => {\r\n        const newData = [];\r\n        for (let i = 0; i < data.length; i++)\r\n            newData.push({value: data[i].id, label: `${data[i].identite.lastname} ${data[i].identite.firstname}`});\r\n        return newData;\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${appConfig.apiDomaine}/claim-awaiting-treatment/${id}/edit`)\r\n                .then(response => {\r\n                    setClaim(response.data.claim);\r\n                    setStaffs(formatStaffsOptions(response.data.staffs));\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"))\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [id]);\r\n\r\n    const onChangeStaff = (selected) => {\r\n        setStaff(selected);\r\n    };\r\n\r\n    const selfAssign = () => {\r\n        AssignClaimConfirmation.fire(confirmAssignConfig)\r\n            .then(response => {\r\n                if (verifyTokenExpire()) {\r\n                    if (response.value) {\r\n                        axios.put(`${appConfig.apiDomaine}/claim-awaiting-treatment/${id}/self-assignment`, {})\r\n                            .then(response => {\r\n                                ToastBottomEnd.fire(toastAssignClaimSuccessMessageConfig);\r\n                                window.location.href = \"/process/unit-claims\";\r\n                            })\r\n                            .catch(error => console.log(\"Something is wrong\"))\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n    };\r\n\r\n    const assignClaim = () => {\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            axios.put(`${appConfig.apiDomaine}/claim-awaiting-treatment/${id}/assignment`, {staff_id: staff ? staff.value : null})\r\n                .then(response => {\r\n                    ToastBottomEnd.fire(toastAssignClaimSuccessMessageConfig);\r\n                    setStartRequest(false);\r\n                    setStaff(null);\r\n                    setErrors([]);\r\n                    window.location.href = \"/process/unit-claims\";\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    setErrors(error.response.data.error.staff_id)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const showReasonInput = async (type) => {\r\n        await setReasonTitle(\"Motif de rejet\");\r\n        await setReasonLabel(\"Le motif\");\r\n        await setAction(type);\r\n        await setShowReason(true);\r\n        document.getElementById(\"reason-modal\").click();\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"assignment-claim-awaiting-treatment\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/unit-claims\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Liste des réclamations\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"text\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        claim ? claim.reference : \"Détail réclamation\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            {\r\n                                                props.lead ? (\r\n                                                    <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                        <div className=\"kt-wizard-v2__nav-body\">\r\n                                                            <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                                <i className=\"flaticon-paper-plane\"/>\r\n                                                            </div>\r\n                                                            <div className=\"kt-wizard-v2__nav-label\">\r\n                                                                <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                                    Affectation de la réclamation\r\n                                                                </div>\r\n                                                                <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                                    Affectez la réclamation à un agent\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            {\r\n                                                !props.lead ? (\r\n                                                    verifyPermission(props.userPermissions, \"self-assignment-claim-awaiting-treatment\") ? (\r\n                                                        <button className=\"btn btn-primary btn-sm mx-2\" onClick={selfAssign}>Auto-affectation</button>\r\n                                                    ) : null\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, \"rejected-claim-awaiting-treatment\") ? (\r\n                                                    <button\r\n                                                        className=\"btn btn-danger btn-sm\"\r\n                                                        onClick={() => showReasonInput(\"reject\")}>\r\n                                                        Rejeter la réclamation\r\n                                                    </button>\r\n                                                ) : null\r\n                                            }\r\n                                            <button id={\"reason-modal\"} style={{display: \"none\"}} type=\"button\"\r\n                                                    className=\"btn btn-bold btn-label-brand btn-sm\"\r\n                                                    data-toggle=\"modal\" data-target=\"#kt_modal_4_2\"/>\r\n                                        </div>\r\n\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        {\r\n                                            props.lead ? (\r\n                                                <div className=\"kt-wizard-v2__content\"\r\n                                                     data-ktwizard-type=\"step-content\">\r\n                                                    <div className=\"kt-heading kt-heading--md\">Affectation de la\r\n                                                        réclamation\r\n                                                    </div>\r\n                                                    <div className=\"kt-form__section kt-form__section--first\">\r\n                                                        <div className=\"kt-wizard-v2__review\">\r\n                                                            <div className=\"kt-wizard-v2__review-content\">\r\n                                                                <div\r\n                                                                    className={errors.length ? \"form-group validated\" : \"form-group\"}>\r\n                                                                    <label>Agent</label>\r\n                                                                    <Select\r\n                                                                        isClearable\r\n                                                                        placeholder={\"Veillez selectioner l'agent\"}\r\n                                                                        value={staff}\r\n                                                                        onChange={onChangeStaff}\r\n                                                                        options={staffs}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        errors.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className=\"form-group d-flex justify-content-between\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button className=\"btn btn-primary\"\r\n                                                                                    onClick={assignClaim}>Affecter la\r\n                                                                                réclamation</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANTE\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                    {\r\n                                        showReason ? (\r\n                                            <ReasonModal\r\n                                                plan={props.plan}\r\n                                                id={id}\r\n                                                action={action}\r\n                                                reasonTitle={reasonTitle}\r\n                                                reasonLabel={reasonLabel}\r\n                                                onClose={() => setShowReason(false)}\r\n                                            />\r\n                                        ) : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimListDetail);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\User.jsx",["874","875"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\RuleEditPage.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\HistoricClaimsAdd.jsx",["876"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\n\r\nconst HistoricClaimsAdd = (props) => {\r\n    document.title = \"Satis client - Paramètre Historique\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"history-list-create-claim\")) {\r\n        window.location.href = ERROR_401;\r\n    }\r\n    const [load, setLoad] = useState(true);\r\n    const [claimsAdd, setClaimsAdd] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/history/list-claim\")\r\n                .then(response => {\r\n                    console.log(response.data,\"DATA\")\r\n                    setLoad(false);\r\n                    setClaimsAdd(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaimsAdd = [...claimsAdd];\r\n        newClaimsAdd = newClaimsAdd.filter(el => (\r\n            getLowerCaseString(el.claim_object ? el.claim_object.name.fr : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.claimer.lastname).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.claimer.firstname).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.request_channel_slug).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.response_channel_slug).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newClaimsAdd;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimsAdd.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimsAdd.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimsAdd.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimsAdd.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimsAdd.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimsAdd.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimsAdd.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.claimer.lastname +\" \"+claim.claimer.firstname}</td>\r\n                <td>{claim.claim_object.name.fr}</td>\r\n                <td>{claim.description}</td>\r\n                <td>{claim.request_channel_slug}</td>\r\n                <td>{claim.response_channel_slug}</td>\r\n\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Historiques\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Réclamations Créées\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Réclamations Créées\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"80px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Objets de réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Description de la Réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Canal de réception\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Ship Address: activate to sort column ascending\">Canal de réponse\r\n                                                        </th>\r\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\"*/}\r\n                                                        {/*    aria-controls=\"kt_table_1\"*/}\r\n                                                        {/*    rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}*/}\r\n                                                        {/*    aria-label=\"Type: activate to sort column ascending\">*/}\r\n                                                        {/*    Action*/}\r\n                                                        {/*</th>*/}\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claimsAdd.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr style={{textAlign:\"center\"}}>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objets de réclamtions</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description de réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canal de réception</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canal de réponse</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {claimsAdd.length} données\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HistoricClaimsAdd);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsUnit.jsx",["877"],"import React, {useEffect, useState} from 'react';\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {connect} from \"react-redux\";\r\nimport {percentageData} from \"../../../helpers/function\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst DashboardClaimsUnit = (props) => {\r\n\r\n    const [data, setData] = useState(\"\");\r\n    const [totalData, setTotalData] = useState(\"\");\r\n    const [load, setLoad] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n           await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    if (!isCancelled) {\r\n                        setData(response.data.statistics);\r\n                        setTotalData(response.data.totalClaimsRegisteredStatistics);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"show-dashboard-data-my-unit\") ?\r\n            (\r\n                <div>\r\n                    <div className=\"kt-portlet__head\">\r\n                        <div className=\"kt-portlet__head-label\">\r\n                            <h5 className=\"kt-portlet__head-title\">\r\n                                Statistiques des Réclamations de mon Unité sur les 30 derniers jours\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                                <div className=\"row row-no-padding row-col-separator-lg\">\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Enregistrées\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-brand\">\r\n\t\t\t\t\t\t\t\t\t{data.totalRegistered ? data.totalRegistered.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Incomplètes\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-danger\">\r\n\t\t\t\t\t\t\t\t\t{data.totalIncomplete ? data.totalIncomplete.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalIncomplete ?\r\n                                                        <div className=\"progress-bar kt-bg-danger\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalIncomplete.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalIncomplete.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\r\n\t\t\t\t\t\t\t\t\t% Réclamations Incomplètes\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n\r\n                                                {\r\n                                                    data.totalIncomplete ?\r\n                                                        <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalIncomplete.myUnit), totalData)}\r\n                                           </span>\r\n                                                        : \"\"\r\n                                                }\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Complètes\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-success\">\r\n\t\t\t\t\t\t\t\t\t{data.totalComplete ? data.totalComplete.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalComplete ?\r\n                                                        <div className=\"progress-bar kt-bg-success\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalComplete.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalComplete.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\r\n\t\t\t\t\t\t\t\t\t% Réclamations Complètes\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalComplete ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalComplete.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Transférées à une Unité\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-brand\">\r\n                                        {data.totalTransferredToUnit ? data.totalTransferredToUnit.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n\r\n                                                {\r\n                                                    data.totalTransferredToUnit ?\r\n                                                        <div className=\"progress-bar kt-bg-brand\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalTransferredToUnit.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalTransferredToUnit.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Réclamations Transférées à une Unité\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalTransferredToUnit ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalTransferredToUnit.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations en Cours de Traitement\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-warning\">\r\n\t\t\t\t\t\t\t\t\t   {data.totalBeingProcess ? data.totalBeingProcess.myUnit : \"\"}\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalBeingProcess ?\r\n                                                        <div className=\"progress-bar kt-bg-warning\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalBeingProcess.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalBeingProcess.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Réclamations en Cours de Traitement\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalBeingProcess ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalBeingProcess.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Traitées\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-success\">\r\n                                        {data.totalTreated ? data.totalTreated.myUnit : \"\"}\r\n                                    </span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalTreated ?\r\n                                                        <div className=\"progress-bar kt-bg-success\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalTreated.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalTreated.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : ''\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Réclamations Traitées\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalTreated ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalTreated.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Non Fondées\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-success\">\r\n                                        {data.totalUnfounded ? data.totalUnfounded.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalUnfounded ?\r\n                                                        <div className=\"progress-bar kt-bg-success\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalUnfounded.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalUnfounded.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Réclamations Non Fondées\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalUnfounded ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalUnfounded.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Satisfaction Mesurée\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-danger\">\r\n                                        {data.totalMeasuredSatisfaction ? data.totalMeasuredSatisfaction.myUnit : \"\"}\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalMeasuredSatisfaction ?\r\n                                                        <div className=\"progress-bar kt-bg-danger\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalMeasuredSatisfaction.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalMeasuredSatisfaction.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Satisfaction Mesurée\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalMeasuredSatisfaction ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalMeasuredSatisfaction.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            ) : \"\"\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DashboardClaimsUnit);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ImportFileForm.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimAssignDetail.jsx",["878","879","880","881"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {formatSelectOption, loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport FusionClaim from \"../components/FusionClaim\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport DoubleButton from \"../components/DoubleButton\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport DoubleButtonDetail from \"../components/DoubleButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport UnfoundedModal from \"../components/UnfoundedModal\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        edit: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\r\n        update: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\r\n    },\r\n    MACRO: {\r\n        plan: \"MACRO\",\r\n        edit: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\r\n        update: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\r\n\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        edit: id => `${appConfig.apiDomaine}/transfer-claim-to-unit/${id}`,\r\n        update: id => `${appConfig.apiDomaine}/transfer-claim-to-unit/${id}`,\r\n    }\r\n};\r\n\r\n\r\nconst ClaimAssignDetail = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n    const {id} = useParams();\r\n\r\n    if (!(verifyPermission(props.userPermissions, \"show-claim-awaiting-assignment\") && props.activePilot))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = endPointConfig[props.plan];\r\n\r\n    const defaultError = {\r\n        unit_id: [],\r\n    };\r\n    const [error, setError] = useState(defaultError);\r\n\r\n    const [claim, setClaim] = useState(null);\r\n    const [copyClaim, setCopyClaim] = useState(null);\r\n    const [dataId, setDataId] = useState(\"\");\r\n    const [data, setData] = useState({unit_id: null});\r\n    const [unitsData, setUnitsData] = useState({});\r\n    const [unit, setUnit] = useState(null);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [startRequestToUnit, setStartRequestToUnit] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if (verifyTokenExpire()) {\r\n                await axios.get(`${appConfig.apiDomaine}/claim-awaiting-assignment/${id}`)\r\n                    .then(response => {\r\n                        setClaim(response.data);\r\n                        setDataId(response.data.institution_targeted.name);\r\n                    })\r\n                    .catch(error => console.log(\"Something is wrong\"))\r\n                ;\r\n            }\r\n\r\n            if (verifyPermission(props.userPermissions, \"transfer-claim-to-circuit-unit\") || verifyPermission(props.userPermissions, \"transfer-claim-to-unit\")) {\r\n                if (verifyTokenExpire()) {\r\n                    await axios.get(endPoint.edit(`${id}`))\r\n                        .then(response => {\r\n                            let newUnit = Object.values(response.data.units);\r\n                            setUnitsData(formatSelectOption(newUnit, \"name\", \"fr\"))\r\n                        })\r\n                        .catch(error => console.log(\"Something is wrong\"))\r\n                    ;\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const onClickToTranfertInstitution = async (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            await axios.put(`${appConfig.apiDomaine}/transfer-claim-to-targeted-institution/${id}`)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    window.location.href = \"/process/claim-assign\";\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const onClickToTranfert = (e) => {\r\n        e.preventDefault();\r\n        setStartRequestToUnit(true);\r\n\r\n        async function fetchData() {\r\n            await axios.put(endPoint.update(`${id}`), data)\r\n                .then(response => {\r\n                    setStartRequestToUnit(false);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    window.location.href = \"/process/claim-assign\";\r\n                })\r\n                .catch(error => {\r\n                    setStartRequestToUnit(false);\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig)\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData()\r\n    };\r\n\r\n    const onChangeUnits = (selected) => {\r\n        const newData = {...data};\r\n        newData.unit_id = selected ? selected.value : null;\r\n        setUnit(selected);\r\n        setData(newData);\r\n        console.log(newData.unit_id, \"UNIT\")\r\n    };\r\n\r\n    const onClickFusionButton = async (newClaim) => {\r\n        await setCopyClaim(newClaim);\r\n        document.getElementById(`modal-button`).click();\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"show-claim-awaiting-assignment\") && props.activePilot ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\"\r\n                 id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Traitement\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/claim-assign\"\r\n                                          className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Réclamation à Transférer\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()}\r\n                                   style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Détail\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div\r\n                                            className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            {\r\n                                                claim ? (\r\n                                                    claim.active_treatment && claim.active_treatment.rejected_reason && claim.active_treatment.rejected_at ? (\r\n                                                        <div className=\"d-flex justify-content-start\">\r\n                                                            <span className=\"kt-badge kt-badge--danger kt-badge--inline\"\r\n                                                                  style={{fontWeight: \"bold\"}}>RECLAMATION  REJETEE</span>\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                ) : null\r\n                                            }<br/>\r\n\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            <DoubleButton claim={claim}/>\r\n\r\n                                            <div className=\"kt-wizard-v2__nav-item\"\r\n                                                 data-ktwizard-type=\"step\">\r\n                                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                        <i className=\"flaticon-truck\"/>\r\n                                                    </div>\r\n                                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                            Transfert\r\n                                                        </div>\r\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                            Transferer la réclamation\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        {\r\n                                            verifyPermission(props.userPermissions, \"unfounded-claim-awaiting-assignment\") ? (\r\n                                                <div className=\"d-flex justify-content-md-end\">\r\n                                                    <button type=\"button\"\r\n                                                            data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                                                            className=\"btn btn-success\">\r\n                                                        NON FONDÉ\r\n                                                    </button>\r\n                                                    {\r\n                                                        claim ? (\r\n                                                            <UnfoundedModal\r\n                                                                activeTreatment={\r\n                                                                    claim.active_treatment ? (\r\n                                                                        claim.active_treatment\r\n                                                                    ) : null\r\n                                                                }\r\n                                                                getId={`${id}`}\r\n                                                            />\r\n                                                        ) : (\r\n                                                            <UnfoundedModal\r\n                                                                getId={`${id}`}\r\n                                                            />\r\n                                                        )\r\n                                                    }\r\n\r\n                                                </div>\r\n                                            ): null\r\n                                        }\r\n\r\n\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}\r\n                                                           rejected={claim && claim.active_treatment && claim.active_treatment.rejected_reason ? true : false}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        <DoubleButtonDetail\r\n                                            claim={claim}\r\n                                            onClickFusionButton={onClickFusionButton}\r\n                                            userPermissions={props.userPermissions}\r\n                                        />\r\n\r\n                                        <div className=\"kt-wizard-v2__content\"\r\n                                             data-ktwizard-type=\"step-content\">\r\n                                            <div className=\"kt-heading kt-heading--md\">Transfert de la\r\n                                                réclamation\r\n                                            </div>\r\n                                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                                <div className=\"kt-wizard-v2__review\">\r\n                                                    {\r\n                                                        verifyPermission(props.userPermissions, \"transfer-claim-to-targeted-institution\") ?\r\n                                                            <div className=\"kt-wizard-v2__review-item\">\r\n                                                                <div\r\n                                                                    className=\"kt-wizard-v2__review-content\"\r\n                                                                    style={{fontSize: \"15px\"}}>\r\n                                                                    <label\r\n                                                                        className=\"col-xl-6 col-lg-6 col-form-label\"><strong>Institution\r\n                                                                        concernée</strong></label>\r\n                                                                    <span\r\n                                                                        className=\"kt-widget__data\">{dataId}</span>\r\n                                                                </div>\r\n                                                                <div className=\"modal-footer\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-outline-success\"\r\n                                                                                onClick={onClickToTranfertInstitution}>\r\n                                                                                TRANSFÉRER A L'INSTITUTION\r\n                                                                            </button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-success kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            : null\r\n                                                    }\r\n                                                    {\r\n                                                        (verifyPermission(props.userPermissions, \"transfer-claim-to-circuit-unit\") ||\r\n                                                            verifyPermission(props.userPermissions, \"transfer-claim-to-unit\")) ?\r\n                                                            <div className=\"kt-wizard-v2__review-item\">\r\n                                                                <div className=\"kt-wizard-v2__review-title\">\r\n                                                                    Tranferer à une unité\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className=\"kt-wizard-v2__review-content\">\r\n                                                                    <div\r\n                                                                        className={error.unit_id.length ? \"form-group validated\" : \"form-group\"}>\r\n                                                                        <label>Unité</label>\r\n                                                                        <Select\r\n                                                                            isClearable\r\n                                                                            value={unit}\r\n                                                                            onChange={onChangeUnits}\r\n                                                                            options={unitsData}\r\n                                                                            placeholder={\"Veuillez sélectionner l'unité de traitement\"}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.unit_id.length ? (\r\n                                                                                error.unit_id.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : \"\"\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"modal-footer\">\r\n                                                                    {\r\n                                                                        !startRequestToUnit ? (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-outline-success\"\r\n                                                                                onClick={onClickToTranfert}>\r\n                                                                                TRANSFÉRER A UNE UNITÉ\r\n                                                                            </button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-success kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANTE\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                    {\r\n                                        verifyPermission(props.userPermissions, \"merge-claim-awaiting-assignment\") ? (\r\n                                            <div>\r\n                                                <button style={{display: \"none\"}} id={`modal-button`}\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-bold btn-label-brand btn-sm\"\r\n                                                        data-toggle=\"modal\" data-target=\"#kt_modal_4\"/>\r\n                                                {\r\n                                                    copyClaim ? (\r\n                                                        <FusionClaim\r\n                                                            claim={claim}\r\n                                                            copyClaim={copyClaim}\r\n                                                            onCloseModal={() => setCopyClaim(null)}\r\n                                                        />\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        ) : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n        activePilot: state.user.user.staff.is_active_pilot\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimAssignDetail);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\UserAdd.jsx",["882"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastSuccessMessageWithParameterConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {formatSelectOption} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst UserAdd = (props) => {\r\n    document.title = \"Satis client - Paramètre Envoie de mail\";\r\n    if (!(verifyPermission(props.userPermissions, 'store-user-any-institution') || verifyPermission(props.userPermissions, \"store-user-my-institution\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    const optionOne = 1;\r\n    const optionTwo = 0;\r\n    const defaultData = {\r\n        identite_id: \"\",\r\n        roles: [],\r\n        activate: optionTwo,\r\n        institution_id: \"\",\r\n        password: \"\",\r\n        password_confirmation: \"\",\r\n    };\r\n    const defaultError = {\r\n        identite_id: [],\r\n        roles: [],\r\n        activate: [],\r\n        institution_id: [],\r\n        password: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [institutions, setInstitutions] = useState([]);\r\n    const [institution, setInstitution] = useState(null);\r\n    const [identities, setIdentities] = useState([]);\r\n    const [identity, setIdentity] = useState(null);\r\n    const [roles, setRoles] = useState([]);\r\n    const [role, setRole] = useState([]);\r\n    const activePilot = institution ? institution.value === props.activeUserInstitution : \"\" === props.activeUserInstitution;\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            let endpoint = \"\";\r\n            if (props.plan === \"MACRO\") {\r\n                if (verifyPermission(props.userPermissions, \"store-user-any-institution\"))\r\n                    endpoint = `${appConfig.apiDomaine}/any/users/create`;\r\n                if (verifyPermission(props.userPermissions, \"store-user-my-institution\"))\r\n                    endpoint = `${appConfig.apiDomaine}/my/users/create`;\r\n            }\r\n            else if(props.plan === \"HUB\")\r\n                endpoint = `${appConfig.apiDomaine}/any/users/create`;\r\n            else if(props.plan === \"PRO\")\r\n                endpoint = `${appConfig.apiDomaine}/my/users/create`;\r\n\r\n            await axios.get(endpoint)\r\n                .then(({data}) => {\r\n                    if (verifyPermission(props.userPermissions, \"store-user-any-institution\"))\r\n                        setInstitutions(formatSelectOption(data, \"name\", false));\r\n                    else {\r\n                        setRoles(formatSelectOption(data.roles, \"name\", false, \"name\"));\r\n                        setIdentities(formatSelectOption(formatIdentities(data.identites), \"fullName\", false));\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [props.plan, appConfig.apiDomaine]);\r\n\r\n    const handleIdentityChange = (selected) => {\r\n        const newData = {...data};\r\n        newData.identite_id = selected ? selected.value : \"\";\r\n        setIdentity(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const formatSelected = (selected) => {\r\n        const newSelected = [];\r\n        selected.map(s => newSelected.push(s.value));\r\n        return newSelected;\r\n    };\r\n\r\n    const handleRoleChange = (selected) => {\r\n        const newData = {...data};\r\n        newData.roles = selected ? formatSelected(selected) : [];\r\n        setRole(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const handleOptionChange = (e) => {\r\n        const newData = {...data};\r\n        newData.activate = parseInt(e.target.value);\r\n        setData(newData);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const newData = {...data};\r\n        newData.password = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handlePasswordConfirmationChange = (e) => {\r\n        const newData = {...data};\r\n        newData.password_confirmation = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const formatStaff = function (options, labelKey, valueKey = \"id\") {\r\n        const newOptions = [];\r\n        for (let i = 0; i < options.length; i++) {\r\n            newOptions.push({value: (options[i])[valueKey], label: (options[i])[labelKey], staff_id: options[i].staff.id});\r\n        }\r\n        return newOptions;\r\n    };\r\n\r\n    const formatIdentities = (identityList) => {\r\n        for (let i = 0; i < identityList.length; i++)\r\n            identityList[i].fullName = `${identityList[i].lastname} ${identityList[i].firstname}`;\r\n        return identityList\r\n    };\r\n\r\n    const loadStaff = async (institutionId) => {\r\n        if (institutionId) {\r\n            if (verifyTokenExpire()) {\r\n                await axios.get(`${appConfig.apiDomaine}/any/users/${institutionId}/create`)\r\n                    .then(({data}) => {\r\n                        setRoles(formatSelectOption(data.roles, \"name\", false, \"name\"));\r\n                        setIdentities(formatStaff(formatIdentities(data.identites), \"fullName\"));\r\n                    })\r\n                    .catch(() => console.log(\"Something is wrong\"))\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInstitutionChange = (selected) => {\r\n        const newData = {...defaultData, roles: []};\r\n        newData.institution_id = selected ? selected.value : \"\";\r\n        setInstitution(selected);\r\n        setRole(null);\r\n        setIdentity(null);\r\n        setData(newData);\r\n        loadStaff(selected ? selected.value : null);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setStartRequest(true);\r\n        let endpoint = \"\";\r\n        if (props.plan === \"MACRO\") {\r\n            if (verifyPermission(props.userPermissions, \"store-user-any-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/any/users`;\r\n            if (verifyPermission(props.userPermissions, \"store-user-my-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/my/users`;\r\n        }\r\n        else if(props.plan === \"HUB\")\r\n            endpoint = `${appConfig.apiDomaine}/any/users`;\r\n        else if(props.plan === \"PRO\")\r\n            endpoint = `${appConfig.apiDomaine}/my/users`;\r\n\r\n        if (verifyTokenExpire()) {\r\n            if ((data.roles.includes(\"pilot-filial\") || data.roles.includes('pilot-holding')) && activePilot) {\r\n                const addUser = await axios.post(endpoint, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        setRole(null);\r\n                        setInstitution(null);\r\n                        return true;\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        return false;\r\n                    })\r\n                ;\r\n\r\n                if (addUser) {\r\n                    if (data.activate === 1) {\r\n                        setStartRequest(true);\r\n                        const active = await axios.put(`${appConfig.apiDomaine}/active-pilot/institutions/${data.institution_id}`, {staff_id: identity.staff_id})\r\n                            .then(({data}) => {\r\n                                setStartRequest(false);\r\n                                setIdentity(null);\r\n                                return true;\r\n                            })\r\n                            .catch(({response}) => {\r\n                                setStartRequest(false);\r\n                                setIdentity(null);\r\n                                return false;\r\n                            })\r\n                        ;\r\n\r\n                        if (addUser && active) {\r\n                            ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Utilisateur enregistré et désigné comme pilote\"));\r\n                        }\r\n\r\n                        if (addUser && !active) {\r\n                            ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Utilisateur enregistré mais non défini comme pilote actif\"));\r\n                        }\r\n                    } else {\r\n                        setIdentity(null);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig)\r\n                    }\r\n                }\r\n            } else {\r\n                const addUser = await axios.post(endpoint, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        setRole(null);\r\n                        setInstitution(null);\r\n                        return true;\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        return false;\r\n                    })\r\n                ;\r\n\r\n                if (addUser) {\r\n                    setIdentity(null);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig)\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'store-user-any-institution') || verifyPermission(props.userPermissions, \"store-user-my-institution\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètre\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/users\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Utilisateur\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Ajout\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Utilisateur\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, \"store-user-any-institution\") ? (\r\n                                                    <div className={error.institution_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"institution\">Institution <InputRequire/></label>\r\n                                                        <div className=\"col-lg-9 col-xl-6\">\r\n                                                            <Select\r\n                                                                isClearable\r\n                                                                value={institution}\r\n                                                                placeholder={\"SATIS\"}\r\n                                                                onChange={handleInstitutionChange}\r\n                                                                options={institutions}\r\n                                                            />\r\n                                                            {\r\n                                                                error.institution_id.length ? (\r\n                                                                    error.institution_id.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            <div className={error.identite_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"staff\">Agent<InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        value={identity}\r\n                                                        placeholder={\"HOUNSSOU Romaric\"}\r\n                                                        onChange={handleIdentityChange}\r\n                                                        options={identities}\r\n                                                    />\r\n                                                    {\r\n                                                        error.identite_id.length ? (\r\n                                                            error.identite_id.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.roles.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={\"role\"}>Role <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        isMulti\r\n                                                        value={role}\r\n                                                        placeholder={\"admin-satis\"}\r\n                                                        onChange={handleRoleChange}\r\n                                                        options={roles}\r\n                                                    />\r\n                                                    {\r\n                                                        error.roles.length ? (\r\n                                                            error.roles.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                (data.roles.includes(\"pilot-filial\") || data.roles.includes('pilot-holding')) && activePilot ? (\r\n                                                    <div className={error.activate.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={\"role\"}>Pilote actif <InputRequire/></label>\r\n                                                        <div className=\"col-lg-9 col-xl-6\">\r\n                                                            <div className=\"kt-radio-inline\">\r\n                                                                <label className=\"kt-radio\">\r\n                                                                    <input type=\"radio\" className={error.activate.length ? \"form-control is-invalid\" : \"form-control\"}  value={optionOne} onChange={handleOptionChange} checked={optionOne === data.activate}/> OUI<span/>\r\n                                                                </label>\r\n                                                                <label className=\"kt-radio\">\r\n                                                                    <input type=\"radio\" className={error.activate.length ? \"form-control is-invalid\" : \"form-control\"} value={optionTwo} onChange={handleOptionChange} checked={optionTwo === data.activate}/> NON<span/>\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            {\r\n                                                                error.activate.length ? (\r\n                                                                    error.activate.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            <div className={error.password.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password\">Mot de passe <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"password\"\r\n                                                        type=\"password\"\r\n                                                        className={error.password.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"************\"\r\n                                                        value={data.password}\r\n                                                        onChange={(e) => handlePasswordChange(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.password.length ? (\r\n                                                            error.password.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={\"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password_confirmation\">Confirmation <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"password_confirmation\"\r\n                                                        type=\"password\"\r\n                                                        className={\"form-control\"}\r\n                                                        placeholder=\"************\"\r\n                                                        value={data.password_confirmation}\r\n                                                        onChange={(e) => handlePasswordConfirmationChange(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Enregistrer</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n\r\n                                                <Link to={\"/settings/users\"} className=\"btn btn-secondary mx-2\">Quitter</Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        activeUserInstitution: state.user.user.institution.id,\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAdd);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\staff\\StaffForm.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimAdd.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\HeaderTablePage.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsActivity.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Modal\\ConfirmClaimAddModal.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\APP_MACRO\\Holding\\DashboardClaimsAll.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\helpers\\function.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\notification.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Dashboards.jsx",["883"],"import React from 'react';\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport DashboardClaimsAll from \"../../APP_MACRO/Holding/DashboardClaimsAll\";\r\nimport DashboardClaimsMy from \"../components/DashboardForm/DashboardClaimsMy\";\r\nimport DashboardClaimsUnit from \"../components/DashboardForm/DashboardClaimsUnit\";\r\nimport DashboardSummaryReport from \"../components/DashboardForm/DashboardSummaryReport\";\r\nimport DashboardStatClaim from \"../components/DashboardForm/DashboardStatClaim\";\r\nimport DashboardStatistic from \"../components/DashboardForm/DashboardStatistic\";\r\nimport GraphChannel from \"../components/DashboardForm/GraphChannel\";\r\nimport DashboardClaimsActivity from \"../components/DashboardForm/DashboardClaimsActivity\";\r\nimport ClaimToInstitution from \"../components/DashboardForm/ClaimToInstitution\";\r\nimport ClaimToPointOfServices from \"../components/DashboardForm/ClaimToPointOfServices\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst Dashboards = (props) => {\r\n    document.title = \"Satis client - Dashboard\";\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Tableau de bord\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                {/*<InfirmationTable information={\"Représentation graphique des statiques des collectes et traitements des réclamations sur les 30 derniers jours\"} />*/}\r\n                <div>\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ?\r\n                            <div className=\"kt-portlet\">\r\n                                <DashboardClaimsAll/>\r\n                            </div>:null\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\") ?\r\n                            <div className=\"kt-portlet\">\r\n                                <DashboardClaimsMy/>\r\n                            </div>:null\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"show-dashboard-data-my-unit\") ?\r\n                            <div className=\"kt-portlet\">\r\n                                <DashboardClaimsUnit/>\r\n                            </div>:null\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"show-dashboard-data-my-activity\") ?\r\n                        <div className=\"kt-portlet\">\r\n                            <DashboardClaimsActivity/>\r\n                        </div>:null\r\n                    }\r\n\r\n                    <div>\r\n                        <DashboardSummaryReport/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <GraphChannel/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <DashboardStatClaim/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <DashboardStatistic/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {\r\n                            verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") &&\r\n                            (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\r\n                                <div className=\"kt-portlet\">\r\n                                    <ClaimToInstitution/>\r\n                                </div> : null\r\n                        }\r\n                        {\r\n                            !verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") &&\r\n                            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\") ?\r\n                                <div className=\"kt-portlet\">\r\n                                    <ClaimToPointOfServices/>\r\n                                </div> : null\r\n                        }\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboards);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\CategoryFaqsForm.jsx",["884","885","886"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {connect} from \"react-redux\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\r\n\r\nconst CategoryFaqsForm = (props) => {\r\n    const {id}=useParams();\r\n\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-faq-category'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-faq-category'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (id){\r\n            if (verifyTokenExpire()) {\r\n                axios.get(appConfig.apiDomaine+`/faq-categories/${id}`)\r\n                    .then(response => {\r\n\r\n                        const newCategory={\r\n                            name:response.data.name.fr,\r\n                        };\r\n                        setData(newCategory)\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if(id){\r\n                axios.put(appConfig.apiDomaine+`/faq-categories/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }else{\r\n                axios.post(appConfig.apiDomaine+`/faq-categories`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/faqs/category\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Categorie FAQ\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id?\r\n                                                    \"Modification des catégories de FAQ\":\" Ajout des catégories de FAQ\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n\r\n                                        <div className={error.name.length ? \"form-group  validated\" : \"form-group\"}>\r\n                                            <label htmlFor=\"name\">Libellé <InputRequire/></label>\r\n                                            <div className=\"col-md-6 mb-3\">\r\n                                                <input\r\n                                                    id=\"name\"\r\n                                                    type=\"text\"\r\n                                                    className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le nom\"\r\n                                                    value={data.name}\r\n                                                    onChange={(e) => onChangeName(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.name.length ? (\r\n                                                        error.name.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"kt-portlet__foot\">\r\n                                        <div className=\"kt-form__actions\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id?\"Modifier\":\"Enregistrer\"}</button>\r\n                                                ) : (\r\n                                                    <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/settings/faqs/category\" className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/settings/faqs/category\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-faq-category') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-faq-category') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(CategoryFaqsForm);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\PositionForm.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\QualificationPeriodAdd.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\TypeClientForm.jsx",["887"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link, useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\r\n\r\n\r\nconst TypeClientForm = (props) => {\r\n    const {edittypeid} = useParams();\r\n    if (!edittypeid) {\r\n        if (!verifyPermission(props.userPermissions, 'store-type-client'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-type-client'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        name: \"\",\r\n        description: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (edittypeid) {\r\n            if (verifyTokenExpire()) {\r\n                axios.get(appConfig.apiDomaine + `/type-clients/${edittypeid}`)\r\n                    .then(response => {\r\n                        console.log(response.data, 'DATA');\r\n                        const newType = {\r\n                            name: response.data.name.fr,\r\n                            description: response.data.description.fr\r\n                        };\r\n                        setData(newType);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    },[]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (edittypeid) {\r\n                axios.put(appConfig.apiDomaine + `/type-clients/${edittypeid}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(appConfig.apiDomaine + `/type-clients`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/clients/type\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Type Client\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        edittypeid ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                edittypeid ?\r\n                                                    \"Modification de Type Client\" : \" Ajout de Type Client\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n\r\n                                                                <div\r\n                                                                    className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"name\">Le Nom</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"name\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Veillez entrer le nom\"\r\n                                                                            value={data.name}\r\n                                                                            onChange={(e) => onChangeName(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.name.length ? (\r\n                                                                                error.name.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"description\">La Description</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                        <textarea\r\n                                            id=\"description\"\r\n                                            className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                            placeholder=\"Veillez entrer la description\"\r\n                                            cols=\"30\"\r\n                                            rows=\"5\"\r\n                                            value={data.description}\r\n                                            onChange={(e) => onChangeDescription(e)}\r\n                                        />\r\n                                                                        {\r\n                                                                            error.description.length ? (\r\n                                                                                error.description.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Envoyer</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Loading...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/clients/type\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/clients/type\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        edittypeid ?\r\n            verifyPermission(props.userPermissions, 'update-type-client') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-type-client') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TypeClientForm);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\CurrencyForm.jsx",["888"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport currencies from \"../../constants/currencyContry\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst CurrencyForm = () => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission([\"update-currency\"], 'update-currency'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission([\"store-currency\"], 'store-currency'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const [listCurrency, setListCurrency] = useState(currencies);\r\n    const [currency, setCurrency] = useState(null);\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n        iso_code: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        iso_code: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/currencies/${id}`)\r\n                    .then(({data}) => {\r\n                        const newData = {\r\n                            name: data.currency.name[\"fr\"],\r\n                            iso_code: data.currency.iso_code\r\n                        };\r\n                        setData(newData);\r\n                        setListCurrency(filterCurrency(data.currencies));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            } else {\r\n                await axios.get(`${appConfig.apiDomaine}/currencies`)\r\n                    .then(({data}) => {\r\n                        setListCurrency(filterCurrency(data));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, id]);\r\n\r\n    const filterCurrency = (removeElement) => {\r\n        let newCurrencyList = [...listCurrency];\r\n\r\n        for (let i = 0; i < removeElement.length; i++) {\r\n            newCurrencyList = newCurrencyList.filter(e => e.iso_code !== removeElement[i].iso_code);\r\n        }\r\n\r\n        return newCurrencyList;\r\n    };\r\n\r\n    const onChangeCurrency = (selected) => {\r\n        if (error.iso_code.length || error.name.length)\r\n            setError(defaultError);\r\n        const newData = {...data};\r\n        newData.iso_code = selected ? selected.iso_code : null;\r\n        newData.name = selected ? selected.label : null;\r\n        setCurrency(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/currencies/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setCurrency(null);\r\n                        setError(defaultError);\r\n                        setListCurrency(filterCurrency([data]));\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/currencies`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        setCurrency(null);\r\n                        setListCurrency(filterCurrency([data]));\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        redirectError401Page(errorRequest.response.data.code);\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/unit_type\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Devise\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification de la devise\" : \"Ajout de la devise\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Devise <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        value={currency}\r\n                                                        placeholder={\"Veillez selectioner la devise\"}\r\n                                                        onChange={onChangeCurrency}\r\n                                                        options={listCurrency}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Nom <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        disabled={true}\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"\"\r\n                                                        value={data.name}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.iso_code.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"iso_code\">ISO code <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        disabled={true}\r\n                                                        id=\"iso_code\"\r\n                                                        type=\"text\"\r\n                                                        className={error.iso_code.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"\"\r\n                                                        value={data.iso_code}\r\n                                                    />\r\n                                                    {\r\n                                                        error.iso_code.length ? (\r\n                                                            error.iso_code.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Enregistrer</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/currencies\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/currencies\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission([\"update-currency\"], 'update-currency') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission([\"store-currency\"], 'store-currency') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CurrencyForm);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\InstitutionMessageApi.jsx",["889","890"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\UnitTypeForm.jsx",["891"],"import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst UnitTypeForm = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-unit-type'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-unit-type'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        name: \"\",\r\n        can_be_target: false,\r\n        can_treat: false,\r\n        description: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        can_be_target: [],\r\n        can_treat: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/unit-types/${id}/edit`)\r\n                    .then(({data}) => {\r\n                        const newData = {\r\n                            name: data.unitType.name ? data.unitType.name.fr : \"\",\r\n                            can_be_target: data.unitType.can_be_target === 1,\r\n                            can_treat: data.unitType.can_treat === 1,\r\n                            description: data.unitType.description ? data.unitType.description.fr : \"\",\r\n                        };\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [id, appConfig.apiDomaine]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handleCanBeTargetChange = e => {\r\n        const newData = {...data, can_be_target: e.target.checked};\r\n        setData(newData);\r\n    };\r\n\r\n    const handleCanTreatChange = e => {\r\n        const newData = {...data, can_treat: e.target.checked};\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/unit-types/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/unit-types`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        redirectError401Page(errorRequest.response.data.code);\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/unit_type\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Type d'unité\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification de type d'unité\" : \"Ajout d'un type d'unité\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.can_be_target.length || error.can_treat.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Unité <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <div className=\"kt-checkbox-inline\">\r\n                                                        <label className=\"kt-checkbox\">\r\n                                                            <input type=\"checkbox\" checked={data.can_be_target} onChange={handleCanBeTargetChange}/> Peut-être visé par une réclamation ?\r\n                                                            <span/>\r\n                                                            {\r\n                                                                error.can_be_target.length ? (\r\n                                                                    error.can_be_target.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </label>\r\n                                                        <label className=\"kt-checkbox\">\r\n                                                            <input type=\"checkbox\" checked={data.can_treat} onChange={handleCanTreatChange}/> Peut résoudre une réclamation ?\r\n                                                            <span/>\r\n                                                            {\r\n                                                                error.can_treat.length ? (\r\n                                                                    error.can_treat.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Unité <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le nom du type d'unité\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description</label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                <textarea\r\n                                                    id=\"description\"\r\n                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer la description\"\r\n                                                    cols=\"30\"\r\n                                                    rows=\"5\"\r\n                                                    value={data.description}\r\n                                                    onChange={(e) => onChangeDescription(e)}\r\n                                                />\r\n                                                    {\r\n                                                        error.description.length ? (\r\n                                                            error.description.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Envoyer</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/unit_type\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/unit_type\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-unit-type') ? (\r\n                printJsx()\r\n            ) : null\r\n        : verifyPermission(props.userPermissions, 'store-unit-type') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UnitTypeForm);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ParametersComponentEdit.jsx",["892","893","894"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\CategoryFAQs.jsx",["895","896","897","898","899","900"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Channel.jsx",["901"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst Channel = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"list-channel\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [channels, setChannels] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            axios.get(`${appConfig.apiDomaine}/channels`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setChannels(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newChannels = [...channels];\r\n        newChannels = newChannels.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.is_response ? \"Oui\" : \"Non\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newChannels;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(channels.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(channels.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(channels.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(channels.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(channels.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                channels.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                channels.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteChannel = (channelId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/channels/${channelId}`)\r\n                            .then(response => {\r\n                                const newChannels = [...channels];\r\n                                newChannels.splice(index, 1);\r\n                                setChannels(newChannels);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newChannels.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newChannels.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (channel, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{channel.name[\"fr\"]}</td>\r\n                <td>{channel.is_response ? \"Oui\" : \"Non\"}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-channel') && channel.is_editable ? (\r\n                            <Link to={`/settings/channels/${channel.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-channel') && channel.is_editable ? (\r\n                            <button\r\n                                onClick={(e) => deleteChannel(channel.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-channel') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Canal\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-channel\"}\r\n                            title={\"Canal\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/channels/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input\r\n                                                            id=\"myInput\"\r\n                                                            type=\"text\"\r\n                                                            onKeyUp={(e) => searchElement(e)}\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            placeholder=\"\" aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Canale de reponse\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        channels.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((channel, index) => (\r\n                                                                    printBodyTable(channel, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canale de reponse</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {channels.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Channel);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimList.jsx",["902"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\MessageApi.jsx",["903"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {Link} from \"react-router-dom\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst MessageApi = props => {\r\n    if (!verifyPermission(props.userPermissions, \"list-message-apis\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [messageAPIs, setMessageAPIs] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            axios.get(`${appConfig.apiDomaine}/message-apis`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setMessageAPIs(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newMessageApis = [...messageAPIs];\r\n        newMessageApis = newMessageApis.filter(el => (\r\n            getLowerCaseString(el.name).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.method).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newMessageApis;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(messageAPIs.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(messageAPIs.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(messageAPIs.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(messageAPIs.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(messageAPIs.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                messageAPIs.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                messageAPIs.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteMessageAPI = (messageAPIid, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/message-apis/${messageAPIid}`)\r\n                            .then(response => {\r\n                                const newMessageAPIs = [...messageAPIs];\r\n                                newMessageAPIs.splice(index, 1);\r\n                                setMessageAPIs(newMessageAPIs);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newMessageAPIs.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newMessageAPIs.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (messageAPI, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{messageAPI.name}</td>\r\n                <td>{messageAPI.method}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-message-apis') ? (\r\n                            <Link to={`/settings/message-apis/${messageAPI.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-message-apis') ? (\r\n                            <button\r\n                                onClick={(e) => deleteMessageAPI(messageAPI.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-message-apis') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Message API\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-message-apis\"}\r\n                            title={\"Message API\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/message-apis/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input\r\n                                                            id=\"myInput\"\r\n                                                            type=\"text\"\r\n                                                            onKeyUp={(e) => searchElement(e)}\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            placeholder=\"\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Méthode\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        messageAPIs.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((messageAPI, index) => (\r\n                                                                    printBodyTable(messageAPI, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Méthode</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {messageAPIs.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MessageApi);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\QualificationPeriod.jsx",["904"],"import React, {useEffect, useState} from \"react\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst QualificationPeriod = props => {\r\n    document.title = \"Satis client - Paramètre délai de qualification\";\r\n    if (!verifyPermission(props.userPermissions, \"list-delai-qualification-parameters\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [qualificationPeriods, setQualificationPeriods] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            axios.get(`${appConfig.apiDomaine}/delai-qualification-parameters`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setQualificationPeriods(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire()) {\r\n            fetchData();\r\n        }\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newQualificationPeriods = [...qualificationPeriods];\r\n        newQualificationPeriods = newQualificationPeriods.filter(el => (\r\n            getLowerCaseString(`${el.borne_sup === \"+\" ? `Plus de ${el.borne_inf}` : `${el.borne_inf}-${el.borne_sup}`} jours`).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newQualificationPeriods;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(qualificationPeriods.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(qualificationPeriods.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(qualificationPeriods.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(qualificationPeriods.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(qualificationPeriods.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                qualificationPeriods.slice(\r\n                    getEndByPosition(activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                qualificationPeriods.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deletePeriod = (qualificationPeriodId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/delai-qualification-parameters/${qualificationPeriodId}`)\r\n                            .then(response => {\r\n                                const newUnitTypes = [...qualificationPeriods];\r\n                                newUnitTypes.splice(index, 1);\r\n                                setQualificationPeriods(newUnitTypes);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (qualificationPeriod, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd text-center\">\r\n                <td>\r\n                    {\r\n                        qualificationPeriod.borne_sup === \"+\" ? (\r\n                            `Plus de ${qualificationPeriod.borne_inf}`\r\n                        ) : (\r\n                            `${qualificationPeriod.borne_inf}-${qualificationPeriod.borne_sup}`\r\n                        )\r\n                    } Jours\r\n                </td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-delai-qualification-parameters') ? (\r\n                            <button\r\n                                onClick={(e) => deletePeriod(qualificationPeriod.uuid, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-delai-qualification-parameters') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Délai qualification\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\r\n                                !qualificationPeriods.length ? \"\" : qualificationPeriods[qualificationPeriods.length - 1 ].borne_sup === \"+\" ? \"\" : \"store-delai-qualification-parameters\"\r\n                            }\r\n                            title={\"Délai qualification\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/qualification-period/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input\r\n                                                            id=\"myInput\"\r\n                                                            type=\"text\"\r\n                                                            onKeyUp={(e) => searchElement(e)}\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            placeholder=\"\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\" className=\"text-center\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Période\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"15%\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        qualificationPeriods.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((qualificationPeriod, index) => (\r\n                                                                    printBodyTable(qualificationPeriod, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr className=\"text-center\">\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Période</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {qualificationPeriods.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(QualificationPeriod);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\RulePage.jsx",["905"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\Participants.jsx",["906"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {loadCss, filterDataTableBySearchValue, forceRound} from \"../../../helpers/function\";\r\nimport LoadingTable from \"../../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../../config/confirmConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport EmptyTable from \"../../components/EmptyTable\";\r\nimport HeaderTablePage from \"../../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst Participants = (props) => {\r\n    const {id} = useParams();\r\n    if (!verifyPermission(props.userPermissions, \"list-discussion-contributors\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [contributor, setContributor] = useState([]);\r\n    const [responseData, setResponseData] = useState(null);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + `/discussions/${id}/staff`)\r\n                .then(response => {\r\n                    console.log(response.data, 'DONNEES');\r\n                    setLoad(false);\r\n                    setResponseData(response.data);\r\n                    setContributor(response.data.staff);\r\n                    setShowList(response.data.staff.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.staff.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(contributor.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(contributor.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(contributor.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                contributor.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                contributor.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteContributor = (contributorId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/discussions/${id}/staff/${contributorId}`)\r\n                            .then(response => {\r\n                                const newContributor = [...contributor];\r\n                                newContributor.splice(index, 1);\r\n                                setContributor(newContributor);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newContributor.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newContributor.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (user, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{user.identite.lastname + \"  \" + user.identite.firstname}</td>\r\n                <td>{user.unit.name.fr}</td>\r\n                <td>{user.identite.email ?\r\n                    user.identite.email.map((mail, index) => (\r\n                        index === user.identite.email.length - 1 ? mail : mail + \" \" + <br/> + \" \"\r\n                    )) : null\r\n                }</td>\r\n\r\n                {\r\n                    verifyPermission(props.userPermissions, \"remove-discussion-contributor\") ?\r\n                    <td style={{textAlign: 'center'}}>\r\n                        {\r\n                            user.id === responseData.created_by.id?\r\n                        \"\":\r\n                            <button\r\n                                onClick={(e) => deleteContributor(user.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Retirer du Tchat\">\r\n                                <i className=\"la la-user-times fa-2x\"/>\r\n                            </button>\r\n                        }\r\n\r\n                    </td>\r\n                    : null\r\n                }\r\n\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-discussion-contributors\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Traitement\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Tchat\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Liste des participants\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"A common UI paradigm to use with interactive tables is to present buttons that will trigger some action. See official documentation\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n\r\n                        <HeaderTablePage\r\n                            addPermission={\"add-discussion-contributor\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={`/treatment/chat/add_user/${id}`}\r\n                            title={\"Liste des participants\"}\r\n                        />\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Search:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Participants\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Staff\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Email\r\n                                                        </th>\r\n                                                        {\r\n                                                            verifyPermission(props.userPermissions, \"remove-discussion-contributor\") ?\r\n                                                                <th className=\"sorting\" tabIndex=\"0\"\r\n                                                                    aria-controls=\"kt_table_1\"\r\n                                                                    rowSpan=\"1\" colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                                    aria-label=\"Type: activate to sort column ascending\">\r\n                                                                    Action\r\n                                                                </th>\r\n                                                                :\"\"\r\n                                                        }\r\n\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        contributor.length ? (\r\n                                                            search ? (\r\n                                                                contributor.map((user, index) => (\r\n                                                                    printBodyTable(user, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((user, index) => (\r\n                                                                    printBodyTable(user, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {contributor.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Participants);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\PerformanceIndicator.jsx",["907"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ConfigRequirements.jsx",["908","909","910","911","912"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimToValidatedList.jsx",["913"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\UnitForm.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimObject.jsx",["914"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\ClaimToPointOfServices.jsx",["915"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\DashboardSummaryReport.jsx",["916"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\nconst DashboardSummaryReport = (props) => {\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const reportColor = [\r\n        {\r\n            id: 0,\r\n            rowColor: \"table-primary\",\r\n            rang:1,\r\n        },\r\n        {\r\n            id: 1,\r\n            rowColor: \"table-success\",\r\n            rang:2,\r\n        },\r\n        {\r\n            id: 2,\r\n            rowColor: \"table-bland\",\r\n            rang:3,\r\n        },\r\n        {\r\n            id: 3,\r\n            rowColor: \"table-warning\",\r\n            rang:4,\r\n        },\r\n        {\r\n            id: 4,\r\n            rowColor: \"table-danger\",\r\n            rang:5\r\n        },\r\n\r\n    ];\r\n\r\n    const [data, setData] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n            await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    if (!isCancelled) {\r\n                        let claimObjects = response.data.claimObjectsUse;\r\n                        let newData = [];\r\n                        for (const key in claimObjects) {\r\n                            let totalObjectUse = claimObjects[key];\r\n                            if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\r\n                                newData.push({canal: key, label: totalObjectUse.allInstitution})\r\n                            } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\r\n                                newData.push({canal: key, label: totalObjectUse.myInstitution})\r\n                            }\r\n                        }\r\n                        newData.sort(function (a, b) {\r\n                            return b.label - a.label;\r\n                        });\r\n                        const result = newData.filter(function (event) {\r\n                            return newData.indexOf(event) < 5\r\n                        });\r\n                        setData(result);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\r\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\r\n            <div className=\"kt-portlet\">\r\n                    <div className=\"kt-portlet__head\">\r\n                        <div className=\"kt-portlet__head-label\">\r\n                            <h3 className=\"kt-portlet__head-title\">\r\n                                Statistique des cinq (05) plus fréquents Objets de Réclamations sur les 30 derniers jours\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <table className=\"table table-striped table-bordered\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>Rang</th>\r\n                                        <th>Objets de Réclamations</th>\r\n                                        <th>Total</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n\r\n                                    {data ?\r\n                                        data.map((report, i) => (\r\n                                            reportColor.map((color, j) => (\r\n                                                i === j ?\r\n                                                    report.label!==0?\r\n                                                    <tr key={i}>\r\n                                                        <td>{color.rang}</td>\r\n\r\n                                                        <td>{report.canal}</td>\r\n\r\n                                                        <td>{report.label}</td>\r\n                                                    </tr> : null\r\n                                                    : null\r\n                                            ))\r\n                                        ))\r\n                                        : null\r\n                                    }\r\n\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n            </div>\r\n            : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DashboardSummaryReport);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimMonitoring.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsMy.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimReporting.jsx",["917","918","919","920","921"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport FileSaver from \"file-saver\";\r\nimport ApexCharts from \"apexcharts\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastErrorMessageWithParameterConfig,\r\n    toastInvalidPeriodMessageConfig,\r\n    toastValidPeriodMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {debug, formatSelectOption} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {month} from \"../../constants/date\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimReporting = props => {\r\n    document.title = \"Satis client - Reporting\";\r\n    if (!(verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, \"list-reporting-claim-my-institution\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endpoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, \"list-reporting-claim-any-institution\"))\r\n            endpoint = `${appConfig.apiDomaine}/any/reporting-claim`;\r\n        else if (verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution'))\r\n            endpoint = `${appConfig.apiDomaine}/my/reporting-claim`;\r\n    } else if(props.plan === \"HUB\")\r\n        endpoint = `${appConfig.apiDomaine}/any/reporting-claim`;\r\n    else if(props.plan === \"PRO\")\r\n        endpoint = `${appConfig.apiDomaine}/my/reporting-claim`;\r\n\r\n\r\n    const [fetchData, setFetchData] = useState(null);\r\n    const [institution, setInstitution] = useState(null);\r\n    const [startDate, setStartDate] = useState(\"\");\r\n    const [endDate, setEndDate] = useState(\"\");\r\n    const [typeFilter, setTypeFilter] = useState(\"months\");\r\n    const [startFilter, setStartFilter] = useState(false);\r\n    const [startExportation, setStartExportation] = useState(false);\r\n    const [pdfTitle, setPdfTitle] = useState(`reporting_${new Date().getFullYear()}`);\r\n    const [possibleFilter, setPossibleFilter] = useState(\r\n        {\r\n            months: true,\r\n            weeks: true,\r\n            days: true\r\n        }\r\n    );\r\n    const [stateChartOne, setStateChartOne] = useState(\"\");\r\n    const [stateChartTwo, setStateChartTwo] = useState(\"\");\r\n\r\n    var totalCollect = 0;\r\n    var totalIncomplete = 0;\r\n    var totalToAssignUnit = 0;\r\n    var totalToAssignStaff = 0;\r\n    var totalAwaitingTreatment= 0;\r\n    var totalToValidate = 0;\r\n    var totalToMeasureSatisfaction = 0;\r\n    var totalPercentage = 0;\r\n\r\n    const calculateTotal = () => {\r\n        fetchData.statistiqueObject.map(row => {\r\n            row.claim_objects.map(elRow => {\r\n                totalCollect = totalCollect + elRow.total;\r\n                totalIncomplete = totalIncomplete + elRow.incomplete;\r\n                totalToAssignUnit = totalToAssignUnit + elRow.toAssignementToUnit;\r\n                totalToAssignStaff = totalToAssignStaff + elRow.toAssignementToStaff;\r\n                totalAwaitingTreatment = totalAwaitingTreatment + elRow.awaitingTreatment;\r\n                totalToValidate = totalToValidate + elRow.toValidate;\r\n                totalToMeasureSatisfaction = totalToMeasureSatisfaction + elRow.toMeasureSatisfaction;\r\n                totalPercentage = totalPercentage + elRow.percentage\r\n            });\r\n        });\r\n        totalPercentage = parseFloat((isNaN(totalPercentage / fetchData.statistiqueObject.length) ? 0 : totalPercentage / fetchData.statistiqueObject.length).toFixed(2));\r\n    };\r\n\r\n    if (fetchData)\r\n        calculateTotal();\r\n\r\n    const applyPossibleFilter = (data) => {\r\n        const newPossibleFilter = {...possibleFilter};\r\n\r\n        newPossibleFilter.days = Object.keys(data.days.claims_received).length <= 17;\r\n        newPossibleFilter.weeks = Object.keys(data.weeks.claims_received).length <= 5;\r\n        setPossibleFilter(newPossibleFilter);\r\n    };\r\n\r\n    const getGraphOneOptions = (dataGraphOne) => {\r\n        var labels = [];\r\n        var series = [];\r\n        dataGraphOne.map(el => {\r\n            labels.push(el.name[\"fr\"]);\r\n            series.push(el.pourcentage)\r\n        });\r\n\r\n        return {\r\n            series: series,\r\n            chart: {\r\n                width: 450,\r\n                type: 'pie',\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                formatter: function (val) {\r\n                    return val + \"%\"\r\n                }\r\n            },\r\n            labels: labels,\r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                    chart: {\r\n                        width: 200\r\n                    },\r\n                    legend: {\r\n                        position: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        };\r\n    };\r\n\r\n    const getGraphTwoOptions = (dataGraphTwo, type = null) => {\r\n        var categories = [];\r\n        var newSeries = {\r\n            claims_received: [],\r\n            claims_resolved: []\r\n        };\r\n        const getDetailData = () => {\r\n            for (const property in dataGraphTwo[type ? type : typeFilter].claims_received) {\r\n                categories.push(property);\r\n                newSeries.claims_received.push(dataGraphTwo[type ? type : typeFilter].claims_received[property]);\r\n            }\r\n            for (const property in dataGraphTwo[type ? type : typeFilter].claims_resolved) {\r\n                newSeries.claims_resolved.push(dataGraphTwo[type ? type : typeFilter].claims_resolved[property]);\r\n            }\r\n        };\r\n\r\n        const formatCategoriesMouths = () => {\r\n            for (var i = 0; i < categories.length; i++)\r\n                categories[i] = `${ month[categories[i].split(\"-\")[1]] } ${ categories[i].split(\"-\")[0][2] }${ categories[i].split(\"-\")[0][3] }`;\r\n        };\r\n\r\n        const formatCategoriesDays = () => {\r\n            for (var i = 0; i < categories.length; i++) {\r\n                categories[i] = `${ categories[i].split(\"-\")[2] } ${ month[categories[i].split(\"-\")[1]] } ${ categories[i].split(\"-\")[0][2] }${ categories[i].split(\"-\")[0][3] }`;\r\n            }\r\n        };\r\n\r\n        const formatCategoriesWeeks = () => {\r\n            var start = \"\";\r\n            var end = \"\";\r\n            for (var i = 0; i < categories.length; i++) {\r\n                start = `${categories[i].replace(/\\s/g, '').split(\"-\")[2]} ${month[categories[i].replace(/\\s/g, '').split(\"-\")[1]]} ${categories[i].replace(/\\s/g, '').split(\"-\")[0][2]}${categories[i].replace(/\\s/g, '').split(\"-\")[0][3]}`;\r\n                end = `${categories[i].replace(/\\s/g, '').split(\"-\")[5]} ${month[categories[i].replace(/\\s/g, '').split(\"-\")[4]]} ${categories[i].replace(/\\s/g, '').split(\"-\")[3][2]}${categories[i].replace(/\\s/g, '').split(\"-\")[3][3]}`;\r\n                categories[i] = `${start} - ${end}`;\r\n            }\r\n        };\r\n\r\n        getDetailData();\r\n\r\n        if (type === null) {\r\n            if (typeFilter === \"months\")\r\n                formatCategoriesMouths();\r\n            else if (typeFilter === \"days\")\r\n                formatCategoriesDays();\r\n            else\r\n                formatCategoriesWeeks();\r\n        } else {\r\n            if (type === \"months\")\r\n                formatCategoriesMouths();\r\n            else if (type === \"days\")\r\n                formatCategoriesDays();\r\n            else\r\n                formatCategoriesWeeks();\r\n        }\r\n\r\n        const series = [\r\n            {\r\n                name: 'Réclamtions réçues',\r\n                data: newSeries.claims_received\r\n            },\r\n            {\r\n                name: 'Réclamations résolues',\r\n                data: newSeries.claims_resolved\r\n            }\r\n        ];\r\n\r\n        return {\r\n            series: [{\r\n                name: series[0].name,\r\n                data: series[0].data\r\n            }, {\r\n                name: series[1].name,\r\n                data: series[1].data\r\n            }],\r\n            chart: {\r\n                height: 350,\r\n                type: 'area'\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            xaxis: {\r\n                categories: categories\r\n            },\r\n            tooltip: {\r\n                x: {\r\n                    format: 'MMM \\'yyyy'\r\n                },\r\n            },\r\n        };\r\n    };\r\n\r\n    const renderChart = (dataGraphOne, dataGraphTwo) => {\r\n        const chartOne = new ApexCharts(document.getElementById(\"graphOne\"), getGraphOneOptions(dataGraphOne));\r\n        const chartTwo = new ApexCharts(document.getElementById(\"graphTwo\"), getGraphTwoOptions(dataGraphTwo));\r\n\r\n        setStateChartOne(chartOne);\r\n        setStateChartTwo(chartTwo);\r\n\r\n        chartOne.render();\r\n        chartTwo.render();\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await axios.get(endpoint)\r\n                .then(response => {\r\n                    applyPossibleFilter(response.data.statistiqueGraphePeriod);\r\n                    setFetchData(response.data);\r\n\r\n                    renderChart(response.data.statistiqueChannel, response.data.statistiqueGraphePeriod);\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"))\r\n            ;\r\n        };\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const handleTypeFilterChange = (e) => {\r\n        setTypeFilter(e.target.value);\r\n        const parent = document.getElementById(\"parentGraphTwo\");\r\n        document.getElementById(\"graphTwo\").remove();\r\n        const div = document.createElement(\"div\");\r\n        div.id = \"graphTwo\";\r\n        parent.appendChild(div);\r\n        const chartTwo = new ApexCharts(document.getElementById(\"graphTwo\"), getGraphTwoOptions(fetchData.statistiqueGraphePeriod, e.target.value));\r\n        setStateChartTwo(chartTwo);\r\n        chartTwo.render();\r\n    };\r\n\r\n    const handleStartDateChange = e => {\r\n        if (endDate && e.target.value) {\r\n            if (!(new Date(endDate) > new Date(e.target.value)))\r\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n            else\r\n                ToastBottomEnd.fire(toastValidPeriodMessageConfig);\r\n        }\r\n        setStartDate(e.target.value);\r\n    };\r\n\r\n    const handleEndDateChange = e => {\r\n        if (startDate && e.target.value) {\r\n            if (!(new Date(startDate) < new Date(e.target.value)))\r\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n            else\r\n                ToastBottomEnd.fire(toastValidPeriodMessageConfig);\r\n        }\r\n        setEndDate(e.target.value);\r\n    };\r\n\r\n    const handleInstitutionChange = selected => {\r\n        setInstitution(selected)\r\n    };\r\n\r\n    const filterRequest = () => {\r\n        const oldData = {...fetchData};\r\n        setStartFilter(true);\r\n        setTypeFilter(\"months\");\r\n        setFetchData(null);\r\n        setPossibleFilter(\r\n            {\r\n                months: true,\r\n                weeks: true,\r\n                days: true\r\n            }\r\n        );\r\n        var parameter = \"\";\r\n        if (institution && startDate && endDate)\r\n            parameter = `?date_start=${startDate}&date_end=${endDate}&institution_id=${institution.value}`;\r\n        else if (institution && !startDate && !endDate)\r\n            parameter = `?institution_id=${institution.value}`;\r\n        else  if(!institution && startDate && endDate)\r\n            parameter = `?date_start=${startDate}&date_end=${endDate}`;\r\n        if (verifyTokenExpire()) {\r\n            axios.get(`${endpoint}${parameter}`)\r\n                .then(response => {\r\n                    setPdfTitle(formatPdfTitle());\r\n                    setStartFilter(false);\r\n                    applyPossibleFilter(response.data.statistiqueGraphePeriod);\r\n                    setFetchData(response.data);\r\n\r\n                    renderChart(response.data.statistiqueChannel, response.data.statistiqueGraphePeriod);\r\n                })\r\n                .catch(error => {\r\n                    setStartFilter(false);\r\n                    setFetchData(oldData);\r\n                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error.date_end))\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const filterData = () => {\r\n        if (institution && startDate && endDate) {\r\n            if (startDate && endDate) {\r\n                if (!(new Date(startDate) <= new Date(endDate)))\r\n                    ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n                else {\r\n                    filterRequest()\r\n                }\r\n            } else {\r\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n            }\r\n        } else if (institution && !startDate && !endDate) {\r\n            filterRequest();\r\n        } else if (!institution && startDate && endDate) {\r\n            if (startDate && endDate) {\r\n                if (!(new Date(startDate) <= new Date(endDate)))\r\n                    ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n                else {\r\n                    filterRequest()\r\n                }\r\n            } else {\r\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n            }\r\n        } else {\r\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Veillez renseigner les parametres correctement\"))\r\n        }\r\n    };\r\n\r\n    const formatPdfTitle = () => {\r\n        let newStartDate = startDate;\r\n        let newEndDate = endDate;\r\n        while (newStartDate.includes(\"-\") && newEndDate.includes(\"-\")) {\r\n            newStartDate = newStartDate.replace(\"-\", \"_\");\r\n            newEndDate = newEndDate.replace(\"-\", \"_\");\r\n        }\r\n        if (institution && (newStartDate && newEndDate))\r\n            return `reporting_${institution.label}_${newStartDate}_at_${newEndDate}`;\r\n        else if(institution && !(newStartDate && newEndDate))\r\n            return `reporting_${institution.label}`;\r\n        else if(!institution && (newStartDate && newEndDate))\r\n            return `reporting_${newStartDate}_at_${newEndDate}`;\r\n        else\r\n            return `reporting_${new Date().getFullYear()}`;\r\n    };\r\n\r\n    const exportToPdf = async () => {\r\n        var uriOne = \"\";\r\n        var uriTwo = \"\";\r\n        await stateChartOne.dataURI().then(({ imgURI, blob }) => {\r\n            uriOne = imgURI;\r\n        });\r\n\r\n        await stateChartTwo.dataURI().then(({ imgURI, blob }) => {\r\n            uriTwo = imgURI;\r\n            });\r\n\r\n        if (fetchData) {\r\n            setStartExportation(true);\r\n            const sendData = {\r\n                filter: {\r\n                    institution: institution ? institution.value : \"\",\r\n                    startDate: startDate,\r\n                    endDate: endDate\r\n                },\r\n                statistiqueObject: {\r\n                    data: fetchData.statistiqueObject,\r\n                    total: {\r\n                        totalCollect: totalCollect,\r\n                        totalIncomplete: totalIncomplete,\r\n                        totalToAssignUnit: totalToAssignUnit,\r\n                        totalToAssignStaff: totalToAssignStaff,\r\n                        totalAwaitingTreatment: totalAwaitingTreatment,\r\n                        totalToValidate: totalToValidate,\r\n                        totalToMeasureSatisfaction: totalToMeasureSatisfaction,\r\n                        totalPercentage: totalPercentage,\r\n                    }\r\n                },\r\n                statistiqueQualificationPeriod: fetchData.statistiqueQualificationPeriod,\r\n                statistiqueTreatmentPeriod: fetchData.statistiqueTreatmentPeriod,\r\n                statistiqueChannel: fetchData.statistiqueChannel,\r\n                chanelGraph: {\r\n                    image: uriOne\r\n                },\r\n                evolutionClaim: {\r\n                    image: uriTwo,\r\n                    filter: typeFilter\r\n                },\r\n                headerBackground: \"#7F9CF5\",\r\n            };\r\n\r\n            if (verifyTokenExpire()) {\r\n                axios({\r\n                    method: 'post',\r\n                    url: `${appConfig.apiDomaine}/any/reporting-claim/export-pdf`,\r\n                    responseType: 'blob',\r\n                    data: {data_export: sendData}\r\n                })\r\n                    .then(({data}) => {\r\n                        setStartExportation(false);\r\n                        FileSaver.saveAs(data, `${pdfTitle}.pdf`);\r\n                    })\r\n                    .catch(({response}) => {\r\n                        setStartExportation(false);\r\n                    })\r\n                ;\r\n            }\r\n        } else {\r\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Donné indisponible pour l'exportation\"));\r\n        }\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Monitoring\r\n                            </h3>\r\n\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Reporting\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={\"Page de reporting\"}/>\r\n\r\n                    <div className=\"alert alert-light alert-elevate\" role=\"alert\">\r\n                        <div className=\"alert-icon\">\r\n                            {\r\n                                startExportation ? (\r\n                                    <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\">\r\n                                        Chargement...\r\n                                    </button>\r\n                                ) : (\r\n                                    <button className=\"btn btn-info btn-circle\" onClick={exportToPdf}>\r\n                                        <i className=\"fa fa-file-export\" style={{color: \"white\"}}/> Exportez\r\n                                    </button>\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"alert-text align-items-center\">\r\n\r\n                            <div className=\"row col-12 d-flex justify-content-center align-items-center\">\r\n                                {\r\n                                    verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                        <div className=\"form-group col-3\">\r\n                                            <label htmlFor=\"institution\">Institutions</label>\r\n                                            <Select\r\n                                                isClearable\r\n                                                value={institution}\r\n                                                placeholder={\"Choix institution\"}\r\n                                                onChange={handleInstitutionChange}\r\n                                                options={formatSelectOption(fetchData ? fetchData.institutions : [], 'name', false)}\r\n                                            />\r\n                                        </div>\r\n                                    ) : null\r\n                                }\r\n\r\n                                <div className=\"form-group col-3\">\r\n                                    <label htmlFor=\"start\">Date de début</label>\r\n                                    <input\r\n                                        id=\"start\"\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        value={startDate}\r\n                                        onChange={handleStartDateChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-3\">\r\n                                    <label htmlFor=\"end\">Date de début</label>\r\n                                    <input\r\n                                        id=\"end\"\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        value={endDate}\r\n                                        onChange={handleEndDateChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-3\">\r\n                                    {\r\n                                        !startFilter ? (\r\n                                            <button\r\n                                                className=\"btn btn-primary\"\r\n                                                style={{marginTop: \"25px\"}}\r\n                                                onClick={() => filterData()}\r\n                                            >\r\n                                                <i className=\"fa fa-filter\"/> Filtrer\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button\r\n                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                type=\"button\" disabled\r\n                                                style={{marginTop: \"25px\"}}\r\n                                            >\r\n                                                Chargement...\r\n                                            </button>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Reporting Reclamation\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div className=\"col-sm-12\">\r\n                                                <strong>Légende: <br/>R </strong>{\"<===>\"} Réclamtions\r\n                                                <table className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{ width: \"952px\" }}>\r\n                                                    <thead style={{backgroundColor: \"#7F9CF5\"}}>\r\n                                                        <tr role=\"row\">\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Catégorie de <strong>R</strong>\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Objets de <strong>R</strong>\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> collectées\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> incomplète\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à assigner à une unité\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à assigner à un agent\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à traiter\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à valider\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à mesurer satisfaction\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Pourcentage de Résolues\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            fetchData.statistiqueObject.map((row, index) => (\r\n                                                                row.claim_objects.map((elRow, indexEleRow) => (\r\n                                                                    indexEleRow === 0 ? (\r\n                                                                        <tr key={index}>\r\n                                                                            {\r\n                                                                                row.claim_objects.length === 0 ? (\r\n                                                                                    <td>{row.name[\"fr\"]}</td>\r\n                                                                                ) : (\r\n                                                                                    <td rowSpan={row.claim_objects.length}>{row.name[\"fr\"]}</td>\r\n                                                                                )\r\n                                                                            }\r\n                                                                            <td>{elRow.name[\"fr\"]}</td>\r\n                                                                            <td>{elRow.total}</td>\r\n                                                                            <td>{elRow.incomplete}</td>\r\n                                                                            <td>{elRow.toAssignementToUnit}</td>\r\n                                                                            <td>{elRow.toAssignementToStaff}</td>\r\n                                                                            <td>{elRow.awaitingTreatment}</td>\r\n                                                                            <td>{elRow.toValidate}</td>\r\n                                                                            <td>{elRow.toMeasureSatisfaction}</td>\r\n                                                                            <td>{elRow.percentage} %</td>\r\n                                                                        </tr>\r\n                                                                    ) : (\r\n                                                                        <tr key={indexEleRow}>\r\n                                                                            <td>{elRow.name[\"fr\"]}</td>\r\n                                                                            <td>{elRow.total}</td>\r\n                                                                            <td>{elRow.incomplete}</td>\r\n                                                                            <td>{elRow.toAssignementToUnit}</td>\r\n                                                                            <td>{elRow.toAssignementToStaff}</td>\r\n                                                                            <td>{elRow.awaitingTreatment}</td>\r\n                                                                            <td>{elRow.toValidate}</td>\r\n                                                                            <td>{elRow.toMeasureSatisfaction}</td>\r\n                                                                            <td>{elRow.percentage} %</td>\r\n                                                                        </tr>\r\n                                                                    )\r\n                                                                ))\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th colSpan=\"2\" className=\"text-center\">Total</th>\r\n                                                        <th>{totalCollect}</th>\r\n                                                        <th>{totalIncomplete}</th>\r\n                                                        <th>{totalToAssignUnit}</th>\r\n                                                        <th>{totalToAssignStaff}</th>\r\n                                                        <th>{totalAwaitingTreatment}</th>\r\n                                                        <th>{totalToValidate}</th>\r\n                                                        <th>{totalToMeasureSatisfaction}</th>\r\n                                                        <th>{totalPercentage} %</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Délai de qualification des réclamations\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{ width: \"952px\" }}>\r\n                                                    <thead style={{backgroundColor: \"#7F9CF5\", borderLeft: \"none\", borderRight: \"none\"}}>\r\n                                                        <tr role=\"row\">\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Délai de qualification (en jour)\r\n                                                            </th>\r\n                                                            {\r\n                                                                fetchData.statistiqueQualificationPeriod.map((el, index) => (\r\n                                                                    <th key={index} tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                        colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                        aria-label=\"Country: activate to sort column ascending\">{el.libelle}\r\n                                                                    </th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td style={{borderRight: \"none\", borderLeft: \"none\"}}>Nombre</td>\r\n                                                            {\r\n                                                                fetchData.statistiqueQualificationPeriod.map((el, index) => (\r\n                                                                    <td key={index} style={{borderRight: \"none\", borderLeft: \"none\"}}>{el.total}</td>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                        <tr>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\" style={{borderRight: \"none\", borderLeft: \"none\"}}>Taux (%)</th>\r\n                                                            {\r\n                                                                fetchData.statistiqueQualificationPeriod.map((el, index) => (\r\n                                                                    <th key={index} rowSpan=\"1\" colSpan=\"1\" style={{borderRight: \"none\", borderLeft: \"none\"}}>{el.pourcentage}</th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Délai de traitement des réclamations\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead style={{backgroundColor: \"#7F9CF5\"}}>\r\n                                                        <tr role=\"row\">\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Délai de Traitement (en jour)\r\n                                                            </th>\r\n                                                            {\r\n                                                                fetchData.statistiqueTreatmentPeriod.map((el, index) => (\r\n                                                                    <th key={index} tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                        colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                        aria-label=\"Country: activate to sort column ascending\">{el.libelle}\r\n                                                                    </th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td style={{ borderLeft: \"none\", borderRight: \"none\" }}>Nombre</td>\r\n                                                            {\r\n                                                                fetchData.statistiqueTreatmentPeriod.map((el, index) => (\r\n                                                                    <td key={index} style={{ borderLeft: \"none\", borderRight: \"none\" }}>{el.total}</td>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                        <tr>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\" style={{ borderLeft: \"none\", borderRight: \"none\" }}>Taux</th>\r\n                                                            {\r\n                                                                fetchData.statistiqueTreatmentPeriod.map((el, index) => (\r\n                                                                    <th key={index} rowSpan=\"1\" colSpan=\"1\" style={{ borderLeft: \"none\", borderRight: \"none\" }}>{el.pourcentage}</th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Utilisation de canaux\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{ width: \"952px\" }}>\r\n                                                    <thead style={{ backgroundColor: \"#7F9CF5\" }}>\r\n                                                        <tr role=\"row\">\r\n                                                            {\r\n                                                                fetchData.statistiqueChannel.map((channel, index) => (\r\n                                                                    <th\r\n                                                                        key={index}\r\n                                                                        tabIndex=\"0\"\r\n                                                                        aria-controls=\"kt_table_1\"\r\n                                                                        rowSpan=\"1\"\r\n                                                                        colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                        aria-label=\"Country: activate to sort column ascending\">\r\n                                                                        {channel.name[\"fr\"]}\r\n                                                                    </th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody/>\r\n                                                    <tfoot>\r\n                                                        <tr>\r\n                                                            {\r\n                                                                fetchData.statistiqueChannel.map((channel, index) => (\r\n                                                                    <th key={index} rowSpan=\"1\" colSpan=\"1\" style={{borderLeft: \"none\", borderRight: \"none\"}}>{channel.total_claim}</th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n\r\n                                                {\r\n                                                    fetchData ? (\r\n                                                        <div className=\"col-12 d-flex justify-content-center\">\r\n                                                            <div id=\"graphOne\" style={{position: \"relative\", zIndex: \"1\"}}/>\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Evolution des réclamations\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row d-flex justify-content-center\">\r\n                                    <div className=\"form-group col-6\">\r\n                                        <label htmlFor=\"filter\">filtre</label>\r\n                                        <select\r\n                                            id=\"filter\"\r\n                                            className=\"form-control\"\r\n                                            value={typeFilter}\r\n                                            onChange={(e) => handleTypeFilterChange(e)}\r\n                                        >\r\n                                            <option value=\"\" disabled={true}>Veillez choisir le filtre</option>\r\n                                            {\r\n                                                possibleFilter.months ? (\r\n                                                    <option value=\"months\">Mois</option>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                possibleFilter.weeks ? (\r\n                                                    <option value=\"weeks\">Semaine</option>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                possibleFilter.days ? (\r\n                                                    <option value=\"days\">Jour</option>\r\n                                                ) : null\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div id=\"parentGraphTwo\" className=\"col-sm-12\">\r\n                                                <div id=\"graphTwo\" style={{position: \"relative\", zIndex: 1}}/>\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimReporting);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\config\\confirmConfig.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\FAQsPage.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimImportPage.jsx",["922","923","924","925","926","927","928"],"import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastErrorMessageWithParameterConfig, toastSuccessMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ImportFileForm from \"../components/ImportFileForm\";\r\n\r\nconst ClaimImportPage = (props) => {\r\n    document.title = \"Satis client - Importation reclamation\";\r\n\r\n    let endpoint = \"\";\r\n    if (!(verifyPermission(props.userPermissions, 'store-claim-against-any-institution') || verifyPermission(props.userPermissions, \"store-claim-against-my-institution\") || verifyPermission(props.userPermissions, \"store-claim-without-client\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    if (verifyPermission(props.userPermissions, 'store-claim-against-any-institution'))\r\n        endpoint = `${appConfig.apiDomaine}/any/import-claim`;\r\n    else if(verifyPermission(props.userPermissions, 'store-claim-against-my-institution'))\r\n        endpoint = `${appConfig.apiDomaine}/my/import-claim`;\r\n    else if(verifyPermission(props.userPermissions, 'store-claim-without-client'))\r\n        endpoint = `${appConfig.apiDomaine}/without-client/import-claim`;\r\n\r\n    return (\r\n        <ImportFileForm\r\n            submitEndpoint={endpoint}\r\n            pageTitleLink=\"/process/claims/add\"\r\n            pageTitle=\"Enregistrement reclamation\"\r\n            panelTitle=\"Importation de reclamation au format excel\"\r\n            claimImport={true}\r\n        />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimImportPage);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\RejectLimitPage.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\StaffChannels.jsx",["929"],"import React, {useEffect, useState} from 'react';\r\nimport HeaderTablePage from \"./HeaderTablePage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {toastAddErrorMessageConfig, toastAddSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport LoadingTable from \"./LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst StaffChannels = () => {\r\n    const defaultData = {\r\n        feedback_preferred_channels: []\r\n    };\r\n\r\n    const [data, setData] = useState(defaultData);\r\n    const [listChannels, setListChannels] = useState(\"\");\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [load, setLoad] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/feedback-channels\")\r\n                .then(response => {\r\n                    const newChannel={...data};\r\n                    if (response.data.staff.feedback_preferred_channels!==null){\r\n                        newChannel.feedback_preferred_channels=response.data.staff.feedback_preferred_channels;\r\n                        setData(newChannel);\r\n                    }\r\n                    setListChannels(response.data);\r\n                    setLoad(false)\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const onChangeOption = (e, channel) => {\r\n        const newData = {...data};\r\n        console.log(e.target.checked, \"OPTION\");\r\n        if (e.target.checked === true) {\r\n            newData.feedback_preferred_channels.push(channel)\r\n        } else newData.feedback_preferred_channels = newData.feedback_preferred_channels.filter(item => item !== channel);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            axios.put(appConfig.apiDomaine + \"/feedback-channels\", data)\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    console.log(\"something is wrong\");\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Canaux\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                               className=\"kt-subheader__breadcrumbs-link\">\r\n                                Canaux du Personnel\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Les canaux du personnel\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <form className=\"kt-form\">\r\n                                {/*{console.log(data, \"DATA\")}*/}\r\n                                {\r\n                                    load ? (\r\n                                        <LoadingTable/>\r\n                                    ) : (\r\n                                    listChannels.channels ?\r\n                                        listChannels.channels.map((channel, index) => (\r\n                                            <div className=\"form-group row\" key={index}>\r\n                                                <label className=\"col col-form-label \">{channel}</label>\r\n                                                <div className=\"col\">\r\n                                                    <span className=\"kt-switch kt-switch--sm kt-switch--outline kt-switch--icon kt-switch--success \">\r\n                                                    <label>\r\n                                                        {data.feedback_preferred_channels.length ?\r\n                                                            data.feedback_preferred_channels.map((feedback, i) => (\r\n                                                                feedback === channel ?\r\n\r\n                                                                    <input\r\n                                                                        key={i}\r\n                                                                        type=\"checkbox\"\r\n                                                                        onChange={(e) => onChangeOption(e, channel)}\r\n                                                                        checked={\"checked\"}\r\n                                                                        name={channel}\r\n                                                                    />\r\n                                                                    :\r\n                                                                    <input\r\n                                                                        key={i}\r\n                                                                        type=\"checkbox\"\r\n                                                                        onChange={(e) => onChangeOption(e, channel)}\r\n                                                                        name={channel}\r\n                                                                    />\r\n                                                            ))\r\n                                                        :\r\n                                                            <input\r\n                                                                type=\"checkbox\"\r\n                                                                onChange={(e) => onChangeOption(e, channel)}\r\n                                                                name={channel}\r\n                                                            />\r\n\r\n                                                        }\r\n                                                        <span/>\r\n                                                    </label>\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        )) : null\r\n                                    )\r\n                                }\r\n                                <div className=\"kt-portlet__foot\">\r\n                                    <div className=\"kt-form__actions text-right\">\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                        className=\"btn btn-primary\">Enregistrer</button>\r\n                                            ) : (\r\n                                                <button\r\n                                                    className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                    type=\"button\" disabled>\r\n                                                    Chargement...\r\n                                                </button>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <Link to=\"/dashbord\" className=\"btn btn-secondary mx-2\">\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            ) : (\r\n                                                <Link to=\"/dashbord\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default StaffChannels;\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ClaimCategoryForm.jsx",["930"],"import React, {useState, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst ClaimCategoryForm = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-claim-category'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-claim-category'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/claim-categories/${id}`)\r\n                    .then(response => {\r\n                        const newData = {\r\n                            name: response.data.name.fr,\r\n                        };\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [id, appConfig.apiDomaine]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/claim-categories/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/claim-categories`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/claim_categories\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Catégorie de réclamation\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification de catégorie de réclamation\" : \"Ajout de catégorie de réclamation\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Catégorie <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Nom de la catégorie\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/claim_categories\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/claim_categories\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ? (\r\n            verifyPermission(props.userPermissions, 'update-claim-category') ? (\r\n                printJsx()\r\n            ) : null\r\n        ) : (\r\n            verifyPermission(props.userPermissions, 'store-claim-category') ? (\r\n                printJsx()\r\n            ) : null\r\n        )\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        language: state.language\r\n    }\r\n};\r\n\r\nexport default connect(mapDispatchToProps)(ClaimCategoryForm);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Institutions\\ImportInstitutionForm.jsx",["931","932"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport InputRequire from \"../InputRequire\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst ImportInstitutionForm = (props) => {\r\n    document.title = \"Satis institution - Importation de fichier excel\";\r\n\r\n    if (!verifyPermission(props.userPermissions, 'store-any-institution'))\r\n        window.location.href = ERROR_401;\r\n\r\n    const defaultData = {\r\n        file: \"\",\r\n    };\r\n    const defaultError = {\r\n        file: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    const onChangeFile = (e) => {\r\n        const newData = {...data};\r\n        newData.file = Object.values(e.target.files)[0];\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const formatFormData = (newData) => {\r\n        const formData = new FormData();\r\n        formData.append(\"_method\", \"post\");\r\n        for (const key in newData) {\r\n            // console.log(`${key}:`, newData[key]);\r\n            if (key === \"file\") {\r\n                formData.append(\"file\", newData.file);\r\n            } else\r\n                formData.set(key, newData[key]);\r\n        }\r\n        console.log(formData.get('file'), 'FORMDATA');\r\n        return formData;\r\n\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n\r\n        if (verifyTokenExpire()) {\r\n            if (verifyTokenExpire()) {\r\n                axios.post(`${appConfig.apiDomaine}/any/import-institutions`, formatFormData(data))\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Importation\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Importation de clients\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n\r\n                                        <div\r\n                                            className={error.file.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                   htmlFor=\"file\">Fichier <InputRequire/></label>\r\n                                            <div className=\"col-md-9 mb-3\">\r\n                                                <input\r\n                                                    id=\"file\"\r\n                                                    type=\"file\"\r\n                                                    className={error.file.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez télécharger le fichier excel\"\r\n                                                    onChange={(e) => onChangeFile(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.file.length ? (\r\n                                                        error.file.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"kt-portlet__foot text-right\">\r\n                                        <div className=\"kt-form__actions\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                            className=\"btn btn-primary\">Enregistrer</button>\r\n                                                ) : (\r\n                                                    <button\r\n                                                        className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                        type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/settings/clients\"\r\n                                                          className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/settings/clients\"\r\n                                                          className=\"btn btn-secondary mx-2\" disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        verifyPermission(props.userPermissions, 'store-any-institution') ?\r\n            printJsx()\r\n            : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ImportInstitutionForm);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\TreatmentPeriodAdd.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimAssignToStaffDetail.jsx",["933","934"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport UnfoundedModal from \"../components/UnfoundedModal\";\r\nimport TreatmentForm from \"../components/TreatmentForm\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\n\r\nconst ClaimAssignToStaffDetail = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n    const {id} = useParams();\r\n\r\n    if (!verifyPermission(props.userPermissions, \"show-claim-assignment-to-staff\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [claim, setClaim] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${appConfig.apiDomaine}/claim-assignment-staff/${id}`)\r\n                .then(response => {\r\n                    setClaim(response.data);\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"));\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"show-claim-assignment-to-staff\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/claim-assign/to-staff\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Réclamations à traitrer\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {claim?claim.reference: 'Detail'}\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                        <i className=\"flaticon-clipboard\"/>\r\n                                                    </div>\r\n                                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                            Traitement de la réclamtion\r\n                                                        </div>\r\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                            Procédez au traitement de la réclamation\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <button type=\"button\"\r\n                                                    data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                                                    className=\"btn btn-success\">\r\n                                                NON FONDÉ\r\n                                            </button>\r\n                                            {\r\n                                                claim ? (\r\n                                                    <UnfoundedModal\r\n                                                        activeTreatment={\r\n                                                            claim.active_treatment ? (\r\n                                                                claim.active_treatment\r\n                                                            ) : null\r\n                                                        }\r\n                                                        getId={`${id}`}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <UnfoundedModal\r\n                                                        getId={`${id}`}\r\n                                                    />\r\n                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        <div className=\"kt-wizard-v2__content\"\r\n                                             data-ktwizard-type=\"step-content\">\r\n                                            <div className=\"kt-heading kt-heading--md\">Traitement de la\r\n                                                réclamation\r\n                                            </div>\r\n                                            {\r\n                                                claim ? (\r\n                                                    claim.active_treatment ? (\r\n                                                        claim.active_treatment.validated_at && claim.active_treatment.invalidated_reason ? (\r\n                                                            <div className=\"kt-wizard-v2__review-item mb-4\">\r\n                                                                <div className=\"kt-wizard-v2__review-title\">\r\n                                                                    <h5><strong className=\"text-danger\">Traitement rejeté</strong></h5>\r\n                                                                </div>\r\n                                                                <div className=\"kt-wizard-v2__review-content\">\r\n                                                                    <strong>Motif</strong>: <span className=\"mx-2\">{claim.active_treatment.invalidated_reason ? claim.active_treatment.invalidated_reason : \"Pas de raison\"}</span><br/>\r\n                                                                    <hr/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        ) : null\r\n                                                    ) : null\r\n                                                ) : null\r\n                                            }\r\n                                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                                <div className=\"kt-wizard-v2__review\">\r\n                                                    <div className=\"kt-wizard-v2__review-content\">\r\n                                                        {console.log(claim ,\"claim_treatment\" )}\r\n                                                        {\r\n                                                            claim ? (\r\n                                                                <TreatmentForm\r\n                                                                    amount_disputed={claim?claim.amount_disputed:null}\r\n                                                                    activeTreatment={\r\n                                                                        claim.active_treatment ? (\r\n                                                                            claim.active_treatment\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                    getId={`${id}`}\r\n                                                                />\r\n                                                            ) : (\r\n                                                                <TreatmentForm\r\n                                                                    amount_disputed={claim?claim.amount_disputed:null}\r\n                                                                    getId={`${id}`}\r\n                                                                />\r\n                                                            )\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANTE\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimAssignToStaffDetail);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\AddChatsForm.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ProfilePage.jsx",["935","936","937","938","939","940","941"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink, Route, Switch} from \"react-router-dom\";\r\nimport PersonalInfo from \"../components/profile/PersonalInfo\";\r\nimport UpdatePassword from \"../components/profile/UpdatePassword\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst ProfilePage = ({user}) => {\r\n    const defaultData = {\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        sexe: \"\",\r\n        telephone: [],\r\n        email: [],\r\n        ville: \"\"\r\n    };\r\n\r\n    const [data, setData] = useState(defaultData);\r\n\r\n    const username = user.data.username;\r\n    const formatRole = (rules) => {\r\n        const newRules = [];\r\n        rules.map(r => newRules.push(r.name));\r\n        return newRules.join(' / ');\r\n    };\r\n\r\n    const role = formatRole(user.data.roles);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${appConfig.apiDomaine}/edit-profil`)\r\n                .then(({data}) => {\r\n                    setData({\r\n                        firstname: data.identite.firstname,\r\n                        lastname: data.identite.lastname,\r\n                        sexe: data.identite.sexe,\r\n                        telephone: data.identite.telephone,\r\n                        email: data.identite.email,\r\n                        ville: data.identite.ville ? data.identite.ville : \"\"\r\n                    });\r\n                })\r\n                .catch(({response}) => {\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const handleLastNameChange = (lastname) => {\r\n        setData({...data, lastname: lastname});\r\n    };\r\n\r\n    const handleFirstNameChange = (firstname) => {\r\n        setData({...data, firstname: firstname});\r\n    };\r\n\r\n    const handleTelephoneChange = (tags) => {\r\n        setData({...data, telephone: tags});\r\n    };\r\n\r\n    const handleEmailChange = (tags) => {\r\n        setData({...data, email: tags});\r\n    };\r\n\r\n    const handleVilleChange = (ville) => {\r\n        setData({...data, ville: ville});\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            <button className=\"kt-subheader__mobile-toggle kt-subheader__mobile-toggle--left\" id=\"kt_subheader_mobile_toggle\">\r\n                                <span/>\r\n                            </button>\r\n                            Paramètre\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                <i className=\"flaticon2-shelter\"/>\r\n                            </a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"\" style={{cursor: \"default\"}} onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                Profile\r\n                            </a>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n\r\n                <div className=\"kt-grid kt-grid--desktop kt-grid--ver kt-grid--ver-desktop kt-app\">\r\n\r\n                    <button className=\"kt-app__aside-close\" id=\"kt_user_profile_aside_close\">\r\n                        <i className=\"la la-close\"/>\r\n                    </button>\r\n\r\n                    <div className=\"kt-grid__item kt-app__toggle kt-app__aside\" id=\"kt_user_profile_aside\">\r\n                        <div className=\"kt-portlet \">\r\n                            <div className=\"kt-portlet__head  kt-portlet__head--noborder\">\r\n                                <div className=\"kt-portlet__head-label\">\r\n                                    <h3 className=\"kt-portlet__head-title\">\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"kt-portlet__body kt-portlet__body--fit-y\">\r\n                                <div className=\"kt-widget kt-widget--user-profile-1\">\r\n                                    <div className=\"kt-widget__head\">\r\n                                        <div className=\"kt-widget__media\">\r\n                                            <img src=\"/assets/media/users/default.jpg\" alt=\"image\"/>\r\n                                        </div>\r\n                                        <div className=\"kt-widget__content\">\r\n                                            <div className=\"kt-widget__section\">\r\n                                                <a href=\"#\" className=\"kt-widget__username\">\r\n                                                    {`${data.lastname} ${data.firstname}`}\r\n                                                </a>\r\n                                                {/*<span className=\"kt-widget__subtitle\">\r\n                                                    Head of Development\r\n                                                </span>*/}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"kt-widget__body\">\r\n                                        <div className=\"kt-widget__content\">\r\n                                            <div className=\"kt-widget__info\">\r\n                                                <span className=\"kt-widget__label\">Username:</span>\r\n                                                <a href=\"#\" className=\"kt-widget__data\">{username}</a>\r\n                                            </div>\r\n                                            <div className=\"kt-widget__info\">\r\n                                                <span className=\"kt-widget__label\">Téléphone:</span>\r\n                                                <a href=\"#\" className=\"kt-widget__data\">{data.telephone.join(\"/\")}</a>\r\n                                            </div>\r\n                                            <div className=\"kt-widget__info\">\r\n                                                <span className=\"kt-widget__label\">Roles:</span>\r\n                                                <span className=\"kt-widget__data\">{role}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-widget__items\">\r\n                                            <NavLink to=\"/settings/account/personal-information\" className=\"kt-widget__item\" activeClassName=\"kt-widget__item--active\">\r\n                                                <span className=\"kt-widget__section\">\r\n                                                    <span className=\"kt-widget__icon\">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0h24v24H0z\"/><path d=\"M12 11a4 4 0 110-8 4 4 0 010 8z\" fill=\"#000\" fillRule=\"nonzero\" opacity=\".3\"/><path d=\"M3 20.2c.388-4.773 4.262-7.2 8.983-7.2 4.788 0 8.722 2.293 9.015 7.2.012.195 0 .8-.751.8H3.727c-.25 0-.747-.54-.726-.8z\" fill=\"#000\" fillRule=\"nonzero\"/></g></svg>\r\n                                                    </span>\r\n                                                    <span className=\"kt-widget__desc\">\r\n                                                        Informations personnelles\r\n                                                    </span>\r\n                                                </span>\r\n                                            </NavLink>\r\n\r\n                                            <NavLink to=\"/settings/account/change-password\" className=\"kt-widget__item \" activeClassName=\"kt-widget__item--active\">\r\n                                                <span className=\"kt-widget__section\">\r\n                                                    <span className=\"kt-widget__icon\">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0h24v24H0z\"/><path d=\"M4 4l7.631-1.43a2 2 0 01.738 0L20 4v9.283a8.51 8.51 0 01-4 7.217l-3.47 2.169a1 1 0 01-1.06 0L8 20.5a8.51 8.51 0 01-4-7.217V4z\" fill=\"#000\" opacity=\".3\"/><path d=\"M12 11a2 2 0 110-4 2 2 0 010 4zM7 16.5c.216-2.983 2.368-4.5 4.99-4.5 2.66 0 4.846 1.433 5.009 4.5.006.122 0 .5-.418.5H7.404c-.14 0-.415-.338-.404-.5z\" fill=\"#000\" opacity=\".3\"/></g></svg>\r\n                                                    </span>\r\n                                                    <span className=\"kt-widget__desc\">\r\n                                                        Changer le mot de passe\r\n                                                    </span>\r\n                                                </span>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-grid__item kt-grid__item--fluid kt-app__content\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12\">\r\n                                <Route exact path=\"/settings/account\">\r\n                                    <PersonalInfo\r\n                                        data={data}\r\n                                        handleLastNameChange={handleLastNameChange}\r\n                                        handleFirstNameChange={handleFirstNameChange}\r\n                                        handleTelephoneChange={handleTelephoneChange}\r\n                                        handleEmailChange={handleEmailChange}\r\n                                        handleVilleChange={handleVilleChange}\r\n                                    />\r\n                                </Route>\r\n\r\n                                <Route exact path=\"/settings/account/personal-information\">\r\n                                    <PersonalInfo\r\n                                        data={data}\r\n                                        handleLastNameChange={handleLastNameChange}\r\n                                        handleFirstNameChange={handleFirstNameChange}\r\n                                        handleTelephoneChange={handleTelephoneChange}\r\n                                        handleEmailChange={handleEmailChange}\r\n                                        handleVilleChange={handleVilleChange}\r\n                                    />\r\n                                </Route>\r\n\r\n                                <Route exact path=\"/settings/account/change-password\">\r\n                                    <UpdatePassword/>\r\n                                </Route>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProfilePage);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Position.jsx",["942"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\TypeClient.jsx",["943","944","945"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {filterDataTableBySearchValue, forceRound, loadCss, loadScript} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst TypeClient = (props) => {\r\n    document.title = \"Satis client - Paramètre Type client\";\r\n    if (!verifyPermission(props.userPermissions, \"list-type-client\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [typeClient, setTypeClient] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/type-clients\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setTypeClient(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(typeClient.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(typeClient.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(typeClient.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                typeClient.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                typeClient.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteTypeClient = (typeClientId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/type-clients/${typeClientId}`)\r\n                            .then(response => {\r\n                                console.log(response, \"OK\");\r\n                                const newType = [...typeClient];\r\n                                newType.splice(index, 1);\r\n                                setTypeClient(newType);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newType.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newType.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (type, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{type.name.fr}</td>\r\n                <td>{type.description.fr}</td>\r\n                <td style={{textAlign:\"center\"}}>\r\n\r\n                    <Link to=\"/settings/clients/type/detail\"\r\n                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                          title=\"Détail\">\r\n                        <i className=\"la la-eye\"/>\r\n                    </Link>\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'show-type-client')?\r\n                            <Link to={`/settings/clients/type/edit/${type.id}`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            :\"\"\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-type-client') ?\r\n                            <button\r\n                                onClick={(e) => deleteTypeClient(type.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                            : null\r\n                    }\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-position\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Client\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Type Client\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"Liste des types client\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-type-client\"}\r\n                            title={\"Type Client\"}\r\n                            addText={\"Ajouter un Type Client\"}\r\n                            addLink={\"/settings/clients/type/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\" placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"200px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        typeClient.length ? (\r\n                                                            search ? (\r\n                                                                typeClient.map((type, index) => (\r\n                                                                    printBodyTable(type, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((type, index) => (\r\n                                                                    printBodyTable(type, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr></tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">\r\n                                                    {typeClient.length ?\r\n                                                        `Affichage de 1 à ${numberPerPage} sur ${typeClient.length} données`\r\n                                                        :\r\n                                                        \"Affichage de 0 page\"\r\n                                                    }\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(TypeClient);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\RelationShip.jsx",["946","947","948","949","950"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {filterDataTableBySearchValue, forceRound, loadCss, loadScript} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst RelationShip = (props) => {\r\n    document.title = \"Satis client - Paramètre Type relation client\";\r\n    if (!verifyPermission(props.userPermissions, \"list-relationship\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [relation, setRelation] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/relationships\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setRelation(response.data);\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setNumberPage(forceRound(response.data.length / NUMBER_ELEMENT_PER_PAGE));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(relation.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(relation.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(relation.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                relation.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                relation.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteTypeClient = (relationId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/relationships/${relationId}`)\r\n                            .then(response => {\r\n                                console.log(response, \"OK\");\r\n                                const newType = [...relation];\r\n                                newType.splice(index, 1);\r\n                                setRelation(newType);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newType.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newType.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (typeRelation, index) => {\r\n        return (\r\n            <tr className=\"d-flex justify-content-center align-content-center odd\" key={index} role=\"row\"\r\n                className=\"odd\">\r\n                <td>{typeRelation.name.fr}</td>\r\n                <td>{typeRelation.description.fr}</td>\r\n                <td style={{textAlign:\"center\"}}>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'show-relationship')?\r\n                            <Link to={`/settings/relationship/edit/${typeRelation.id}`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            :\"\"\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-relationship') ?\r\n                            <button\r\n                                onClick={(e) => deleteTypeClient(typeRelation.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                            : null\r\n                    }\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-position\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Relation client\r\n                                </a>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-relationship\"}\r\n                            title={\"Type de relation client\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/relationship/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\" placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"200px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        relation.length ? (\r\n                                                            search ? (\r\n                                                                relation.map((type, index) => (\r\n                                                                    printBodyTable(type, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((type, index) => (\r\n                                                                    printBodyTable(type, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr></tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">\r\n                                                    {relation.length ?\r\n                                                        `Affichage de 1 à ${numberPerPage} sur ${relation.length} données`\r\n                                                        :\r\n                                                        \"Affichage de 0 page\"\r\n                                                    }\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(RelationShip);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\SatisfactionMeasure.jsx",["951"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\HistoricClaimsTraetment.jsx",["952"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Mail.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\SeverityLevel.jsx",["953","954","955"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Institution.jsx",["956","957"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport ExportButton from \"../components/ExportButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst Institution = (props) => {\r\n    document.title = \"Satis client - Paramètre Institution\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-any-institution\")) {\r\n        window.location.href = ERROR_401;\r\n    }\r\n    const [load, setLoad] = useState(true);\r\n    const [institutions, setInstitution] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/any/institutions\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setInstitution(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newInstitutions = [...institutions];\r\n        newInstitutions = newInstitutions.filter(el => (\r\n            getLowerCaseString(el.institution_type ? el.institution_type.name : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.name).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.acronyme).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.iso_code).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newInstitutions;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(institutions.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(institutions.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(institutions.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(institutions.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(institutions.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                institutions.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                institutions.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteInstitution = (institutionId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/any/institutions/${institutionId}`)\r\n                            .then(response => {\r\n                                const newInstitution = [...institutions];\r\n                                newInstitution.splice(index, 1);\r\n                                setInstitution(newInstitution);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newInstitution.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newInstitution.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (institution, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td style={{textAlign: 'center'}}>\r\n                    {institution.logo?(\r\n                        <img id=\"Image1\" src={institution.logo} alt=\"logo\" style={{maxWidth: \"35px\", maxHeight: \"35px\", textAlign: 'center'}}/>)\r\n                        :\"\"\r\n                    }\r\n                </td>\r\n                <td>{institution.institution_type?institution.institution_type.name:\"\"}</td>\r\n                <td>{institution.name}</td>\r\n                <td>{institution.acronyme}</td>\r\n                <td>{institution.iso_code}</td>\r\n                <td style={{textAlign:\"center\"}}>\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"update-institution-message-api\") ? (\r\n                            <Link to={`/settings/institutions/${institution.id}/message-apis`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Parametrer message API\">\r\n                                <i className=\"la flaticon-multimedia-2\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"show-any-institution\") ?\r\n                            <Link to={`/settings/institution/edit/${institution.id}`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            : verifyPermission(props.userPermissions, \"update-my-institution\") ?\r\n                            <Link to={`/settings/institution/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            : null\r\n                    }\r\n\r\n                    {/*{*/}\r\n                    {/*    verifyPermission(props.userPermissions, \"destroy-any-institution\") ?*/}\r\n                    {/*        <button*/}\r\n                    {/*            onClick={(e) => deleteInstitution(institution.id, index)}*/}\r\n                    {/*            className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"*/}\r\n                    {/*            title=\"Supprimer\">*/}\r\n                    {/*            <i className=\"la la-trash\"/>*/}\r\n                    {/*        </button>*/}\r\n                    {/*        : null*/}\r\n                    {/*}*/}\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions,\"list-any-institution\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Institution\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-any-institution\"}\r\n                            title={\"Institution\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/institution/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <ExportButton pageUrl={\"/settings/importInstitutions\"} downloadLink={`${appConfig.apiDomaine}/download-excel/institutions`}/>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"40px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Logo\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Type\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Acronyme\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"80px\"}}\r\n                                                            aria-label=\"Ship Address: activate to sort column ascending\">Iso_Code\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        institutions.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((institution, index) => (\r\n                                                                    printBodyTable(institution, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr style={{textAlign:\"center\"}}>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Logo</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Type</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Acronyme</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Iso_Code</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {institutions.length} données\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Institution);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ConfigProcessingCircuit.jsx",["958","959"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n    loadCss,\r\n    forceRound,\r\n    formatSelectOption,\r\n    getLowerCaseString, debug\r\n} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/processing-circuits`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/processing-circuits`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/processing-circuits`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/without-institution/processing-circuits`,\r\n    }\r\n};\r\n\r\n\r\nconst ConfigProcessingCircuit = (props) => {\r\n    document.title = \"Satis client - Paramètre Entités de traitement\";\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'update-processing-circuit-my-institution') ||\r\n        verifyPermission(props.userPermissions, \"update-processing-circuit-any-institution\") ||\r\n        verifyPermission(props.userPermissions, \"update-processing-circuit-without-institution\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'update-processing-circuit-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'update-processing-circuit-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const defaultData = {\r\n        institution_id: []\r\n    };\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [units, setUnits] = useState([]);\r\n    const [claimObject, setClaimObject] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [data, setData] = useState(undefined);\r\n    const [institutionId, setInstitutionId] = useState(undefined);\r\n    const [error] = useState(defaultData);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [institutionData, setInstitutionData] = useState(undefined);\r\n    const [institution, setInstitution] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            if (verifyPermission(props.userPermissions, 'update-processing-circuit-any-institution')) {\r\n                axios.get(endPoint.list)\r\n                    .then(response => {\r\n                        const options = [\r\n                            response.data.institutions.length ? response.data.institutions.map((institution) => ({\r\n                                value: institution.id,\r\n                                label: institution.name\r\n                            })) : null\r\n                        ];\r\n                        setInstitutionData(options);\r\n                    });\r\n            }\r\n\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    let newObjectData = [];\r\n                    response.data.claimCategories.map((claimCategory) => (\r\n                        claimCategory.claim_objects.map((claimObject) => (\r\n                            newObjectData[claimObject.id] = claimObject.units.map(unit => (\r\n                                {value: unit.id, label: unit.name.fr})\r\n                            )\r\n                        ))\r\n                    ));\r\n\r\n                    setData(newObjectData);\r\n                    setLoad(false);\r\n                    setClaimObject(response.data.claimCategories);\r\n                    setUnits(response.data.units);\r\n                    setInstitutionId(response.data.institution_id);\r\n                    setShowList(response.data.claimCategories.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.claimCategories.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, [endPoint.list,numberPerPage, props.userPermissions]);\r\n\r\n    {/*<tr key={i} role=\"row\" className=\"odd\">\r\n        {\r\n            i === 0 ?\r\n                <td rowSpan={category.claim_objects.length}>{category.name.fr}</td>\r\n                : <td style={{display: \"none\"}}/>\r\n        }\r\n        <td>\r\n            {object.name.fr}\r\n        </td>\r\n        <td>\r\n            {units ? (\r\n                <Select\r\n                    value={data[object.id]}\r\n                    onChange={(e) => onChangeProcessing(e, object.id)}\r\n                    options={formatSelectOption(units, 'name', \"fr\")}\r\n                    isMulti\r\n                    placeholder={\"Veillez selectionez le circuit\"}\r\n                    key={object.id}\r\n                />\r\n            ) : null\r\n            }\r\n        </td>\r\n    </tr>*/}\r\n\r\n    const matchToClaimObjectOrEntity = (list, value) => {\r\n        let match = false;\r\n        list.map(el => {\r\n            match = (\r\n                match ||\r\n                getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n                (el.units ? matchToClaimObjectOrEntity(el.units, value) : false)\r\n            )\r\n        });\r\n        return match;\r\n    };\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaimObject = [...claimObject];\r\n        debug(newClaimObject, \"all\");\r\n        newClaimObject = newClaimObject.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            matchToClaimObjectOrEntity(el.claim_objects, value)\r\n        ));\r\n\r\n        return newClaimObject;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimObject.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimObject.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimObject.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimObject.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimObject.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimObject.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimObject.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const onChangeProcessing = (e, object_id) => {\r\n        let newData = {...data};\r\n        newData[object_id] = e?e.map(sel => ({value: sel.value, label: sel.label})):\"\";\r\n        setData(newData);\r\n    };\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        let claimObjects = {...data};\r\n        let values = {};\r\n\r\n        for (const claim_object_id in claimObjects) {\r\n            let processings = claimObjects[claim_object_id];\r\n\r\n            values[claim_object_id] = processings?processings.map(processing => (processing.value)):null;\r\n        }\r\n\r\n        let newEndPoint = '';\r\n        if (verifyPermission(props.userPermissions, 'update-processing-circuit-any-institution')){\r\n            newEndPoint = endPoint.list + `/${institutionId}`\r\n        } else {\r\n            newEndPoint = endPoint.list\r\n        }\r\n        // {console.log(values, 'valeur à enregistrer')}\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios.put(newEndPoint, values)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const onChangeInstitution = (selected) => {\r\n        setInstitutionId(selected.value);\r\n        setInstitution(selected);\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + `/any/processing-circuits/${selected.value}`)\r\n                .then(response => {\r\n                    setUnits(response.data.units ? response.data.units.map((unit) => (unit)) : null);\r\n                    let newObjectData = [];\r\n                    response.data.claimCategories.map((claimCategory) => (\r\n                        claimCategory.claim_objects.map((claimObject) => (\r\n                            newObjectData[claimObject.id] = claimObject.units.map(unit => (\r\n                                {value: unit.id, label: unit.name.fr})\r\n                            )\r\n                        ))\r\n                    ));\r\n                    setData(newObjectData)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const printBodyTable = (category, index) => {\r\n        return (\r\n\r\n            category.claim_objects ?\r\n                category.claim_objects.map((object, i) => (\r\n                    <tr key={i} role=\"row\" className=\"odd\">\r\n\r\n                        {\r\n                            i === 0 ?\r\n                                <td rowSpan={category.claim_objects.length}>{category.name.fr}</td>\r\n                                : <td style={{display: \"none\"}}/>\r\n                        }\r\n                        <td>\r\n                            {object.name.fr}\r\n                        </td>\r\n                        <td>\r\n                            {units ? (\r\n                                <Select\r\n                                    value={data[object.id]}\r\n                                    onChange={(e) => onChangeProcessing(e, object.id)}\r\n                                    options={formatSelectOption(units, 'name', \"fr\")}\r\n                                    isMulti\r\n                                    placeholder={\"Veillez selectionez le circuit\"}\r\n                                    key={object.id}\r\n                                />\r\n                            ) : null\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                )) : null\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Configuration Entités de traitement\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable\r\n                    information={\"Paramètre de configuration des entités de traitement\"}/>\r\n\r\n                <div className=\"kt-portlet\">\r\n                    <HeaderTablePage\r\n                        addPermission={\"\"}\r\n                        title={\"Entités de Traitement\"}\r\n                        addText={\"Ajouter une entité de traitement\"}\r\n                        addLink={\"/settings/processing-circuit\"}\r\n                    />\r\n\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\"\r\n                                                           onKeyUp={(e) => searchElement(e)}\r\n                                                           className=\"form-control form-control-sm\"\r\n                                                           placeholder=\"\"\r\n                                                           aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <br/>\r\n                                            <br/>\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, \"update-processing-circuit-any-institution\") ?\r\n                                                    <div\r\n                                                        className={error.institution_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"exampleSelect1\">Sélectionnez une Institution</label>\r\n                                                        <div className=\"col-lg-9 col-xl-6\">\r\n                                                            {\r\n                                                                institutionData ? (\r\n                                                                    <Select\r\n                                                                        placeholder={\"Veillez selectionner l'institution\"}\r\n                                                                        value={institution}\r\n                                                                        onChange={onChangeInstitution}\r\n                                                                        options={institutionData.length ? institutionData[0].map(name => name) : null}\r\n                                                                    />\r\n\r\n                                                                ) : (<select name=\"category\"\r\n                                                                             className={error.institution_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                             id=\"category\">\r\n                                                                    <option value=\"\"/>\r\n                                                                </select>)\r\n                                                            }\r\n                                                        </div>\r\n                                                        {\r\n                                                            error.institution_id.length ? (\r\n                                                                error.institution_id.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n\r\n                                                    </div>\r\n                                                    : null\r\n                                            }\r\n\r\n\r\n                                            <table\r\n                                                className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{width: \"952px\"}}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"80px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Catégorie\r\n                                                        de plainte\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Objets\r\n                                                        de plainte\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"170px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Entités\r\n                                                        de traitement\r\n                                                    </th>\r\n\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {/*{console.log(data,'data')}*/}\r\n                                                {\r\n                                                    claimObject ? (\r\n                                                        showList.length ? (\r\n                                                            showList.map((category, index) => (\r\n                                                                printBodyTable(category, index)\r\n                                                            ))\r\n                                                        ) : (\r\n                                                            <EmptyTable search={true}/>\r\n                                                        )\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    )\r\n                                                }\r\n                                                </tbody>\r\n\r\n                                            </table>\r\n                                            <div className=\"kt-portlet__foot\">\r\n                                                <div className=\"kt-form__actions text-right\">\r\n                                                    {\r\n                                                        !startRequest ? (\r\n                                                            <button type=\"submit\"\r\n                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                    className=\"btn btn-primary\">Enregistrer</button>\r\n                                                        ) : (\r\n                                                            <button\r\n                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                type=\"button\" disabled>\r\n                                                                Chargement...\r\n                                                            </button>\r\n                                                        )\r\n                                                    }\r\n                                                    {\r\n                                                        !startRequest ? (\r\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\">\r\n                                                                Quitter\r\n                                                            </Link>\r\n                                                        ) : (\r\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\"\r\n                                                                  disabled>\r\n                                                                Quitter\r\n                                                            </Link>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1\r\n                                                à {numberPerPage} sur {claimObject.length} données\r\n                                            </div>\r\n                                        </div>\r\n                                        {\r\n                                            showList.length ? (\r\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                    <Pagination\r\n                                                        numberPerPage={numberPerPage}\r\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                        activeNumberPage={activeNumberPage}\r\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                        pages={pages}\r\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                        numberPage={numberPage}\r\n                                                        onClickNextPage={e => onClickNextPage(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ConfigProcessingCircuit);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\DashboardStatistic.jsx",["960"],"import React, {useEffect, useState} from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\nconst DashboardStatistic = (props) => {\r\n    const [data, setProcessData] = useState(\"\");\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const tooltipHoverFormatter = (val, opts) => {\r\n        return val + ' : ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n    };\r\n\r\n    const defaultData = {\r\n        series: [{\r\n            name: \"Enregistrées\",\r\n            data: data ? data.series.data1 : []\r\n        },\r\n            {\r\n                name: \"Tranférées à une Unité\",\r\n                data: data ? data.series.data2 : []\r\n            },\r\n            {\r\n                name: 'Traitées',\r\n                data: data ? data.series.data3 : []\r\n            },\r\n            {\r\n                name: 'Non Fondées',\r\n                data: data ? data.series.data4 : []\r\n            },\r\n            {\r\n                name: 'Mesure Satisfaction',\r\n                data: data ? data.series.data5 : []\r\n            }\r\n        ],\r\n        options: {\r\n            chart: {\r\n                height: 350,\r\n                type: 'line',\r\n                zoom: {\r\n                    enabled: false\r\n                },\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                width: [3, 5, 3, 2, 3],\r\n                curve: 'smooth',\r\n                dashArray: [0, 3, 3, 0, 3]\r\n            },\r\n            title: {\r\n                text: 'Evolution des satisfactions par mois',\r\n                align: 'left'\r\n            },\r\n            legend: {\r\n                tooltipHoverFormatter\r\n            },\r\n            fill: {\r\n                opacity: 0.05,\r\n                type: 'gradient',\r\n                gradient: {\r\n                    shadeIntensity: 1,\r\n                    inverseColors: false,\r\n                    opacityFrom: 0.45,\r\n                    opacityTo: 0.05,\r\n                    stops: [20, 100, 100, 100]\r\n                },\r\n            },\r\n            grid: {\r\n                row: {\r\n                    colors: ['#f3f3f3', 'transparent'],\r\n                    opacity: 0.2\r\n                },\r\n            },\r\n\r\n            xaxis: {\r\n                categories: data ? data.options.xaxis.categories : [],\r\n                title: {\r\n                    text: 'Mois'\r\n                }\r\n            },\r\n\r\n        },\r\n    };\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n           await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    if (!isCancelled) {\r\n                        // console.log(response.data, \"claimerProcessEvolution\");\r\n                        let claimProcess = response.data.claimerProcessEvolution;\r\n                        let processData = [];\r\n                        for (const processus in Object.values(claimProcess)[0]) {\r\n                            processData.push(processus);\r\n                        }\r\n                        // console.log(processData,\"processData\");\r\n                        let newData = [];\r\n                        for (const key in claimProcess) {\r\n                            let totalProcess = claimProcess[key];\r\n                            if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\r\n                                newData.push({\r\n                                    month: key,\r\n                                    data0: totalProcess.registered.allInstitution,\r\n                                    data1: totalProcess.transferred_to_unit.allInstitution,\r\n                                    data2: totalProcess.treated.allInstitution,\r\n                                    data3: totalProcess.unfounded.allInstitution,\r\n                                    data4: totalProcess.measured.allInstitution\r\n                                })\r\n                            } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\r\n                                newData.push({\r\n                                    month: key,\r\n                                    data0: totalProcess.registered.myInstitution,\r\n                                    data1: totalProcess.transferred_to_unit.myInstitution,\r\n                                    data2: totalProcess.treated.myInstitution,\r\n                                    data3: totalProcess.unfounded.myInstitution,\r\n                                    data4: totalProcess.measured.myInstitution\r\n                                })\r\n                            }\r\n                        }\r\n                        let newProcess = {...defaultData};\r\n                        newProcess.options.xaxis.categories=Object.values(newData.map(label=>label.month));\r\n                        for (let i = 0; i <= processData.length - 1; i++) {\r\n                            newProcess.series[i].data = Object.values(newData).map(serie => serie['data' + i]);\r\n                        }\r\n                        // console.log(newProcess,\"WITH_MONTH\");\r\n                        setProcessData(newProcess);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\r\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\r\n            <div className=\"kt-portlet\">\r\n                <div className=\"kt-portlet__head\">\r\n                    <div className=\"kt-portlet__head-label\">\r\n                        <h3 className=\"kt-portlet__head-title\">Evolution de la satisfaction des réclamations sur les 11\r\n                            derniers mois</h3>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    load ? (\r\n                        <LoadingTable/>\r\n                    ) : (\r\n                    data ?\r\n                        <div id=\"chart\" className=\"kt-portlet__body\">\r\n                            <Chart options={data.options} series={data.series} type=\"area\" height={350}/>\r\n                        </div>\r\n                        : null\r\n                    )\r\n                }\r\n            </div>\r\n            : null\r\n    )\r\n\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DashboardStatistic);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\Chats.jsx",["961","962","963"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\APP_MACRO\\Holding\\HoldingClientForm.jsx",["964","965","966","967"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\config\\appConfig.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Error401.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\includes\\Nav.jsx",["968","969","970","971","972","973","974","975"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\includes\\Body.jsx",["976"],"import React from \"react\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport Mail from \"../pages/Mail\";\r\nimport PerformanceIndicator from \"../pages/PerformanceIndicator\";\r\nimport UnitType from \"../pages/UnitType\";\r\nimport Unit from \"../pages/Unit\";\r\nimport Position from \"../pages/Position\";\r\nimport Staff from \"../pages/Staff\";\r\nimport ClaimCategory from \"../pages/ClaimCategory\";\r\nimport ClaimObject from \"../pages/ClaimObject\";\r\nimport FAQs from \"../pages/FAQs\";\r\nimport FAQsPage from \"../pages/FAQsPage\";\r\nimport CategoryFAQs from \"../pages/CategoryFAQs\";\r\nimport Institution from \"../pages/Institution\";\r\nimport CategoryFaqsForm from \"../components/CategoryFaqsForm\";\r\nimport FaqsForm from \"../components/FaqsForm.jsx\";\r\nimport CategoryClient from \"../pages/CategoryClient\";\r\nimport TypeClient from \"../pages/TypeClient\";\r\nimport CategoryClientForm from \"../components/CategoryClientForm\";\r\nimport TypeClientForm from \"../components/TypeClientForm\";\r\nimport Clients from \"../pages/Clients\";\r\nimport ClientForm from \"../components/Clients/ClientForm\";\r\nimport SeverityLevel from \"../pages/SeverityLevel\";\r\nimport UnitTypeForm from \"../components/UnitTypeForm\";\r\nimport PerformanceIndicatorForm from \"../components/PerformanceIndicatorForm\";\r\nimport UnitForm from \"../components/UnitForm\";\r\nimport PositionForm from \"../components/PositionForm\";\r\nimport ClaimCategoryForm from \"../components/ClaimCategoryForm\";\r\nimport ClaimObjectForm from \"../components/ClaimObjectForm\";\r\nimport StaffForm from \"../components/staff/StaffForm\";\r\nimport SeverityLevelForm from \"../components/SeverityLevelForm\";\r\nimport InstitutionForm from \"../components/Institutions/InstitutionForm\";\r\nimport FilialeInstitutionForm from \"../../APP_MACRO/Filiale/FilialeInstitutionForm\";\r\nimport Currency from \"../pages/Currency\";\r\nimport CurrencyForm from \"../components/CurrencyForm\";\r\nimport Channel from \"../pages/Channel\";\r\nimport ChannelForm from \"../components/ChannelForm\";\r\nimport ClaimAdd from \"../pages/ClaimAdd\";\r\nimport ConfigRequirements from \"../pages/ConfigRequirements\";\r\nimport HoldingClientForm from \"../../APP_MACRO/Holding/HoldingClientForm\";\r\nimport RelationShip from \"../pages/RelationShip\";\r\nimport RelationShipForm from \"../components/RelationShipForm\";\r\nimport IncompleteClaims from \"../pages/IncompleteClaims\";\r\nimport IncompleteClaimsEdit from \"../components/IncompleteClaimsEdit\";\r\nimport ConfigProcessingCircuit from \"../pages/ConfigProcessingCircuit\";\r\nimport ClaimAssign from \"../pages/ClaimAssign\";\r\nimport ClaimAssignDetail from \"../pages/ClaimAssignDetail\";\r\nimport ClaimList from \"../pages/ClaimList\";\r\nimport ClaimAssignToStaff from \"../pages/ClaimAssignToStaff\";\r\nimport ClaimToValidatedList from \"../pages/ClaimToValidatedList\";\r\nimport ClaimMonitoring from \"../pages/ClaimMonitoring\";\r\nimport ClaimReporting from \"../pages/ClaimReporting\";\r\nimport Dashboards from \"../pages/Dashboards\";\r\nimport SatisfactionMeasure from \"../pages/SatisfactionMeasure\";\r\nimport ClaimsArchived from \"../pages/ClaimsArchived\";\r\nimport ConfigNotification from \"../pages/ConfigNotification\";\r\nimport Chats from \"../pages/Discussions/Chats\";\r\nimport AddChatsForm from \"../pages/Discussions/AddChatsForm\";\r\nimport AddMemberForm from \"../pages/Discussions/AddMemberForm\";\r\nimport Participants from \"../pages/Discussions/Participants\";\r\nimport RemoveChats from \"../pages/Discussions/RemoveChats\";\r\nimport StaffChannels from \"../components/StaffChannels\";\r\nimport ConfigRapportAuto from \"../pages/ConfigRapportAuto\";\r\nimport MessageApi from \"../pages/MessageApi\";\r\nimport MessageAPIForm from \"../components/MessageAPIForm\";\r\nimport InstitutionMessageApi from \"../pages/InstitutionMessageApi\";\r\nimport ConfigRapportAutoForm from \"../components/ConfigRapportAutoForm\";\r\nimport ClaimListDetail from \"../pages/ClaimListDetail\";\r\nimport ClaimAssignToStaffDetail from \"../pages/ClaimAssignToStaffDetail\";\r\nimport ClaimToValidatedListDetail from \"../pages/ClaimToValidatedListDetail\";\r\nimport SatisfactionMeasureDetail from \"../pages/SatisfactionMeasureDetail\";\r\nimport ClaimsArchivedDetail from \"../pages/ClaimsArchivedDetail\";\r\nimport User from \"../pages/User\";\r\nimport UserAdd from \"../pages/UserAdd\";\r\nimport QualificationPeriod from \"../pages/QualificationPeriod\";\r\nimport TreatmentPeriod from \"../pages/TreatmentPeriod\";\r\nimport QualificationPeriodAdd from \"../pages/QualificationPeriodAdd\";\r\nimport TreatmentPeriodAdd from \"../pages/TreatmentPeriodAdd\";\r\nimport ParametersComponent from \"../pages/ParametersComponent\";\r\n// import ParametersComponentForm from \"../components/ParametersComponentForm\";\r\nimport ParametersComponentEdit from \"../components/ParametersComponentEdit\";\r\nimport UserEdit from \"../pages/UserEdit\";\r\nimport ConfigCoefficient from \"../components/ConfigCoefficient\";\r\nimport ImportClientForm from \"../components/Clients/ImportClientForm\";\r\nimport ImportInstitutionForm from \"../components/Institutions/ImportInstitutionForm\";\r\nimport HistoricClaimsAdd from \"../pages/HistoricClaimsAdd\";\r\nimport HistoricClaimsTraetment from \"../pages/HistoricClaimsTraetment\";\r\nimport ClaimObjectImportPage from \"../pages/ClaimObjectImportPage\";\r\nimport StaffImportPage from \"../pages/StaffImportPage\";\r\nimport ClaimCategoryImportPage from \"../pages/ClaimCategoryImportPage\";\r\nimport ActivatePilotPage from \"../pages/ActivatePilotPage\";\r\nimport RulePage from \"../pages/RulePage\";\r\nimport RuleAddPage from \"../pages/RuleAddPage\";\r\nimport RuleEditPage from \"../pages/RuleEditPage\";\r\nimport ProfilePage from \"../pages/ProfilePage\";\r\nimport ClaimImportPage from \"../pages/ClaimImportPage\";\r\nimport RecurencePage from \"../pages/RecurencePage\";\r\nimport RejectLimitPage from \"../pages/RejectLimitPage\";\r\nimport PercentageMinFusion from \"../pages/PercentageMinFusion\";\r\n\r\nconst Body = () => {\r\n    return (\r\n        <Switch>\r\n            {/*<Route exact path=\"/settings/sms\">\r\n                <SMS/>\r\n            </Route>*/}\r\n            <Route exact path=\"/settings/config\">\r\n                <ParametersComponent/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/historic/claims/add\">\r\n                <HistoricClaimsAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/historic/claims/treat\">\r\n                <HistoricClaimsTraetment/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/config/edit/:id\">\r\n                <ParametersComponentEdit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/category\">\r\n                <CategoryClient/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/category/add\">\r\n                <CategoryClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/type\">\r\n                <TypeClient/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/type/add\">\r\n                <TypeClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/add\">\r\n                <FAQs/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/list\">\r\n                <FAQsPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/faq/add\">\r\n                <FaqsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/category\">\r\n                <CategoryFAQs/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/category/add\">\r\n                <CategoryFaqsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/mail\">\r\n                <Mail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution\">\r\n                <Institution/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients\">\r\n                <Clients/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/importClients\">\r\n                <ImportClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/importInstitutions\">\r\n                <ImportInstitutionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/relationship\">\r\n                <RelationShip/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/relationship/add\">\r\n                <RelationShipForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/relationship/edit/:id\">\r\n                <RelationShipForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/add\">\r\n                <ClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/any/clients/add\">\r\n                <HoldingClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/any/clients/edit/:id\">\r\n                <HoldingClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution/add\">\r\n                <InstitutionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution/edit\">\r\n                <FilialeInstitutionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution/edit/:id\">\r\n                <InstitutionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/relance\">\r\n                <ConfigCoefficient/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/category/edit/:id\">\r\n                <CategoryFaqsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/faq/edit/:editfaqid\">\r\n                <FaqsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/type/edit/:edittypeid\">\r\n                <TypeClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/category/edit/:editcategoryid\">\r\n                <CategoryClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/performance_indicator\">\r\n                <PerformanceIndicator/>\r\n            </Route>\r\n\r\n            <Route excat path=\"/settings/performance_indicator/add\">\r\n                <PerformanceIndicatorForm/>\r\n            </Route>\r\n\r\n            <Route excat path=\"/settings/performance_indicator/:id/edit\">\r\n                <PerformanceIndicatorForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit_type\">\r\n                <UnitType/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit_type/add\">\r\n                <UnitTypeForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit_type/:id/edit\">\r\n                <UnitTypeForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit\">\r\n                <Unit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit/add\">\r\n                <UnitForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit/:id/edit\">\r\n                <UnitForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions\">\r\n                <Position/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions/add\">\r\n                <PositionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions/:id/edit\">\r\n                <PositionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions\">\r\n                <Position/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions/add\">\r\n                <PositionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions/:id/edit\">\r\n                <PositionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_categories\">\r\n                <ClaimCategory/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_category/import\">\r\n                <ClaimCategoryImportPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_categories/add\">\r\n                <ClaimCategoryForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_categories/:id/edit\">\r\n                <ClaimCategoryForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_objects\">\r\n                <ClaimObject/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_objects/add\">\r\n                <ClaimObjectForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_objects/:id/edit\">\r\n                <ClaimObjectForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_objects/import\">\r\n                <ClaimObjectImportPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/staffs\">\r\n                <Staff/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/staffs/add\">\r\n                <StaffForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/staffs/:id/edit\">\r\n                <StaffForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/staffs/import\">\r\n                <StaffImportPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/severities\">\r\n                <SeverityLevel/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/severities/add\">\r\n                <SeverityLevelForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/severities/:id/edit\">\r\n                <SeverityLevelForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/currencies\">\r\n                <Currency/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/currencies/add\">\r\n                <CurrencyForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/currencies/:id/edit\">\r\n                <CurrencyForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/channels\">\r\n                <Channel/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/channels/add\">\r\n                <ChannelForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/channels/:id/edit\">\r\n                <ChannelForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claims/add\">\r\n                <ClaimAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claims/import\">\r\n                <ClaimImportPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/incomplete_claims\">\r\n                <IncompleteClaims/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/incomplete_claims/edit/:id\">\r\n                <IncompleteClaimsEdit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/requirement\">\r\n                <ConfigRequirements/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/processing-circuit\">\r\n                <ConfigProcessingCircuit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-assign\">\r\n                <ClaimAssign/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-assign/:id/detail\">\r\n                <ClaimAssignDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-assign/to-staff\">\r\n                <ClaimAssignToStaff/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-assign/to-staff/:id/detail\">\r\n                <ClaimAssignToStaffDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/unit-claims\">\r\n                <ClaimList/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-list-detail/:id/detail\">\r\n                <ClaimListDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-to-validated\">\r\n                <ClaimToValidatedList/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-to-validated/:id/detail\">\r\n                <ClaimToValidatedListDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/monitoring/claims/monitoring\">\r\n                <ClaimMonitoring/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/monitoring/claims/reporting\">\r\n                <ClaimReporting/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim_measure\">\r\n                <SatisfactionMeasure/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim_measure/:id/detail\">\r\n                <SatisfactionMeasureDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim_archived\">\r\n                <ClaimsArchived/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim_archived/:id/detail\">\r\n                <ClaimsArchivedDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/notification\">\r\n                <ConfigNotification/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/chat\">\r\n                <Chats/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/treatment/chat/add\">\r\n                <AddChatsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/treatment/chat/contributor/:id\">\r\n                <Participants/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/treatment/chat/remove_chat\">\r\n                <RemoveChats/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/treatment/chat/add_user/:id\">\r\n                <AddMemberForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/message-apis\">\r\n                <MessageApi/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/message-apis/add\">\r\n                <MessageAPIForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/message-apis/:id/edit\">\r\n                <MessageAPIForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institutions/:id/message-apis\">\r\n                <InstitutionMessageApi/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution-message-apis\">\r\n                <InstitutionMessageApi/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/dashboard\">\r\n                <Dashboards/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/feedback-channels\">\r\n                <StaffChannels/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rapport-auto\">\r\n                <ConfigRapportAuto/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rapport/add\">\r\n                <ConfigRapportAutoForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rapport/edit/:id\">\r\n                <ConfigRapportAutoForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/users\">\r\n                <User/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/users/add\">\r\n                <UserAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/users/:id/edit\">\r\n                <UserEdit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rules\">\r\n                <RulePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rules/add\">\r\n                <RuleAddPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rules/:id/edit\">\r\n                <RuleAddPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/qualification-period\">\r\n                <QualificationPeriod/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/qualification-period/add\">\r\n                <QualificationPeriodAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/treatment-period\">\r\n                <TreatmentPeriod/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/treatment-period/add\">\r\n                <TreatmentPeriodAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/activate-pilot\">\r\n                <ActivatePilotPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/account\">\r\n                <ProfilePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/account/personal-information\">\r\n                <ProfilePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/account/change-password\">\r\n                <ProfilePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/recurence\">\r\n                <RecurencePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/reject-limit\">\r\n                <RejectLimitPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/percentage-min-fusion\">\r\n                <PercentageMinFusion/>\r\n            </Route>\r\n\r\n            <Route path={\"*\"}>\r\n                <Redirect to={\"/dashboard\"}/>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Body;\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\AddMemberForm.jsx",["977"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport Select from \"react-select\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst AddMemberForm = (props) => {\r\nconst {id}=useParams();\r\n    if (!verifyPermission(props.userPermissions, 'add-discussion-contributor'))\r\n        window.location.href = ERROR_401;\r\n\r\n    const defaultData = {\r\n        staff_id: [],\r\n    };\r\n    const defaultError = {\r\n        staff_id: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [staffId, setStaffId] = useState([]);\r\n    const [staffIdData, setStaffIdData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(`${appConfig.apiDomaine}/discussions/${id}/staff/create`)\r\n                .then(response => {\r\n                    console.log(response.data, \"PARTICIPANT\")\r\n                    let newStaffs=Object.values(response.data.staff).map(staff=>(\r\n                        {value:staff.id, label:staff.identite.lastname+\" \"+staff.identite.firstname}\r\n                    ));\r\n                    setStaffIdData(newStaffs);\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const onChangeClaim = (e,selected) => {\r\n        const newData = {...data};\r\n        newData.staff_id = e?e.map(sel => sel.value):\"\";\r\n        setStaffId(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            axios.post(appConfig.apiDomaine + `/discussions/${id}/staff`, data)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    // setError(defaultError);\r\n                    // setData(defaultData);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    window.location.href=\"/chat\";\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    setError({...defaultError,...error.response.data.error});\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Traitement\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/treatment/chat\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Chat\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                \"Ajout des Participants\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n                                                                <div\r\n                                                                    className={error.staff_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"exampleSelect1\">Référence\r\n                                                                        Réclamation</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        {staffIdData ? (\r\n                                                                            <Select\r\n                                                                                value={staffId}\r\n                                                                                onChange={(e) => onChangeClaim(e)}\r\n                                                                                options={staffIdData}\r\n                                                                                isMulti\r\n                                                                            />\r\n                                                                        ) : ''\r\n                                                                        }\r\n\r\n\r\n                                                                        {\r\n                                                                            error.staff_id.length ? (\r\n                                                                                error.staff_id.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Ajouter</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/chat\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/chat\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'add-discussion-contributor') ? (\r\n            printJsx()\r\n        ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddMemberForm);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\RelationShipForm.jsx",["978"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link, useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\r\n\r\n\r\nconst RelationShipForm = (props) => {\r\n    const {id} = useParams();\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-relationship'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-relationship'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        name: \"\",\r\n        description: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.get(appConfig.apiDomaine + `/relationships/${id}`)\r\n                    .then(response => {\r\n                        console.log(response.data, 'DATA');\r\n                        const newType = {\r\n                            name: response.data.name.fr,\r\n                            description: response.data.description.fr\r\n                        };\r\n                        setData(newType);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    },[appConfig.apiDomaine, id]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(appConfig.apiDomaine + `/relationships/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(appConfig.apiDomaine + `/relationships`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(({response}) => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/relationship\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Relation client\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ?\r\n                                                    \"Modification d'un type de relation client\" : \" Ajout de relation client\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n\r\n                                                                <div\r\n                                                                    className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Relation <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"name\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Veillez entrer le nom de la relation\"\r\n                                                                            value={data.name}\r\n                                                                            onChange={(e) => onChangeName(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.name.length ? (\r\n                                                                                error.name.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <textarea\r\n                                                                            id=\"description\"\r\n                                                                            className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Veillez entrer la description\"\r\n                                                                            cols=\"30\"\r\n                                                                            rows=\"5\"\r\n                                                                            value={data.description}\r\n                                                                            onChange={(e) => onChangeDescription(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.description.length ? (\r\n                                                                                error.description.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Envoyer</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Loading...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/relationship\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/relationship\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-relationship') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-relationship') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(RelationShipForm);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\StaffImportPage.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\IncompleteClaims.jsx",["979"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, filterDataTableBySearchValue, forceRound} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/claims-incompletes`,\r\n        destroy: claimId => `${appConfig.apiDomaine}/my/claims-incompletes/${claimId}`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/claims-incompletes`,\r\n            destroy: claimId => `${appConfig.apiDomaine}/any/claims-incompletes/${claimId}`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/claims-incompletes`,\r\n            destroy: claimId => `${appConfig.apiDomaine}/my/claims-incompletes/${claimId}`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/without-client/claims-incompletes `,\r\n        destroy: claimId => `${appConfig.apiDomaine}/without-client/claims-incompletes/${claimId}`,\r\n    }\r\n};\r\n\r\nconst IncompleteClaims = (props) => {\r\n    document.title = \"Satis client - Liste plaintes incomplètes\";\r\n    if (!(verifyPermission(props.userPermissions, \"list-claim-incomplete-against-any-institution\") ||\r\n        verifyPermission(props.userPermissions, \"list-claim-incomplete-against-my-institution\") ||\r\n        verifyPermission(props.userPermissions, \"list-claim-incomplete-without-client\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [incompleteClaims, setIncompleteClaims] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-claim-incomplete-against-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-claim-incomplete-against-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    useEffect(() => {\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    console.log(response.data, 'Incomplete_Data');\r\n                    setLoad(false);\r\n                    setIncompleteClaims(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(incompleteClaims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(incompleteClaims.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(incompleteClaims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                incompleteClaims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                incompleteClaims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.claimer.lastname}&ensp;{claim.claimer.firstname}</td>\r\n                <td>{claim.institution_targeted.name}</td>\r\n                <td>{claim.claim_object.name.fr}</td>\r\n                <td>{claim.description}</td>\r\n                <td style={{textAlign: 'center'}}>\r\n                    {/*<Link to=\"/settings/clients/claim/detail\"\r\n                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                          title=\"Détail\">\r\n                        <i className=\"la la-eye\"/>\r\n                    </Link>*/}\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'show-claim-incomplete-against-any-institution') ||\r\n                        verifyPermission(props.userPermissions, 'show-claim-incomplete-against-my-institution') ||\r\n                        verifyPermission(props.userPermissions, \"show-claim-incomplete-without-client\")?\r\n                            <Link\r\n                                to={`/process/incomplete_claims/edit/${claim.id}`}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            : null\r\n                    }\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        (\r\n            verifyPermission(props.userPermissions, \"list-claim-incomplete-against-any-institution\") ||\r\n            verifyPermission(props.userPermissions, \"list-claim-incomplete-against-my-institution\") ||\r\n            verifyPermission(props.userPermissions, \"list-claim-incomplete-without-client\")\r\n        ) ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader  kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid\">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Collecte\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                        Réclamations Incomplètes\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"Liste des réclamations imcomplètes\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n\r\n                        <HeaderTablePage\r\n                            addPermission={\"\"}\r\n                            title={\"Réclamtions Imcomplètes\"}\r\n                            addText={\"Ajouter de réclamations\"}\r\n                            addLink={\"/settings/claims/add\"}\r\n                        />\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"text-left col-sm-6\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Rechercher:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"85px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Réclamant\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"85px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Institution\r\n                                                            concernée\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"85px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">\r\n                                                            Objet\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        incompleteClaims.length ? (\r\n                                                            search ? (\r\n                                                                incompleteClaims.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {incompleteClaims.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(IncompleteClaims);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Clients\\ClientForm.jsx",["980","981","982","983"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport '../staff/react-tagsinput.css'\r\nimport IdentityForm from \"../IdentityForm\";\r\nimport Select from \"react-select\";\r\nimport {formatSelectOption} from \"../../../helpers/function\";\r\nimport {connect} from \"react-redux\";\r\nimport {addIdentity} from \"../../../store/actions/IdentityAction\";\r\nimport {AUTH_TOKEN} from \"../../../constants/token\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst EditClients = (props) => {\r\n    const {id} = useParams();\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-client-from-my-institution'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-client-from-my-institution'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        account_type_id: \"\",\r\n        number: \"\",\r\n        category_client_id: \"\",\r\n\r\n\r\n    };\r\n    const defaultError = {\r\n        account_type_id: [],\r\n        number: [],\r\n        category_client_id: [],\r\n\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [identity, setIdentity] = useState(undefined);\r\n    const [accountType, setAccountTypes] = useState(undefined);\r\n    const [categoryClient, setCategoryClient] = useState(undefined);\r\n    const [type, setType] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + '/my/clients/create')\r\n                .then(response => {\r\n                    setAccountTypes(response.data.AccountTypes);\r\n                    setCategoryClient(response.data.clientCategories);\r\n                })\r\n            ;\r\n\r\n            if (id) {\r\n                axios.get(appConfig.apiDomaine + `/my/clients/${id}/edit`)\r\n                    .then(response => {\r\n                        const newClient = {\r\n                            number: response.data.client_institution.accounts[0].number,\r\n                            account_type_id: response.data.client_institution.accounts[0].account_type_id,\r\n                            category_client_id: response.data.client_institution.category_client_id,\r\n\r\n                        };\r\n                        setData(newClient);\r\n                        const newIdentity = {\r\n                            firstname: response.data.client_institution.client.identite.firstname,\r\n                            lastname: response.data.client_institution.client.identite.lastname,\r\n                            sexe: response.data.client_institution.client.identite.sexe,\r\n                            telephone: response.data.client_institution.client.identite.telephone,\r\n                            email: response.data.client_institution.client.identite.email,\r\n                            ville: response.data.client_institution.client.identite.ville === null ? \"\" : response.data.client_institution.client.identite.ville,\r\n                        };\r\n                        setIdentity(newIdentity);\r\n                        props.addIdentite(newIdentity);\r\n                        setType({\r\n                            value: response.data.client_institution.accounts[0].account_type.id,\r\n                            label: response.data.client_institution.accounts[0].account_type.name.fr\r\n                        });\r\n                        setCategory({\r\n                            value: response.data.client_institution.category_client.id,\r\n                            label: response.data.client_institution.category_client.name.fr\r\n                        });\r\n\r\n                    });\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const onChangeAccountType = (selected) => {\r\n        const newData = {...data};\r\n        newData.account_type_id = selected.value;\r\n        setType(selected);\r\n        setData(newData);\r\n    };\r\n    const onChangeAccount = (e) => {\r\n        const newData = {...data};\r\n        newData.number = e.target.value;\r\n        setData(newData);\r\n\r\n    };\r\n\r\n    const onChangeCategoryClient = (selected) => {\r\n        const newData = {...data};\r\n        newData.category_client_id = selected.value;\r\n        setCategory(selected);\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        {\r\n            console.log(...props.identite, \"props\")\r\n        }\r\n        const formData = {...props.identite, ...data};\r\n        console.log(formData, \"FORM_DATA\");\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(appConfig.apiDomaine + `/my/clients/${id}`, formData)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch((errorRequest) => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\r\n                            errorRequest.response.data.identite.lastname + \" \" + errorRequest.response.data.identite.firstname + \": \" + errorRequest.response.data.message)\r\n                        );\r\n                    })\r\n                ;\r\n            } else {\r\n                console.log(props.identite.client_id, \"CLIENT_ID\");\r\n                if (props.identite.client_id) {\r\n                    axios.post(appConfig.apiDomaine + `/my/accounts/${props.identite.client_id}/clients`, formData)\r\n                        .then(response => {\r\n                            setStartRequest(false);\r\n                            setError(defaultError);\r\n                            setData(defaultData);\r\n                            setType({});\r\n                            setCategory({});\r\n                            setIdentity({});\r\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                        })\r\n                        .catch((errorRequest) => {\r\n                            setStartRequest(false);\r\n                            setError({...defaultError, ...errorRequest.response.data.error});\r\n                            ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        })\r\n                    ;\r\n                } else {\r\n                    axios.post(appConfig.apiDomaine + `/my/clients`, formData)\r\n                        .then(response => {\r\n                            setStartRequest(false);\r\n                            setError(defaultError);\r\n                            setData(defaultData);\r\n                            setType({});\r\n                            setCategory({});\r\n                            setIdentity({});\r\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                        })\r\n                        .catch(async (errorRequest) => {\r\n\r\n                            console.log(errorRequest.response.data.identite, 'ERROR');\r\n\r\n                            if (errorRequest.response.data.identite) {\r\n                                await axios.post(appConfig.apiDomaine + `/my/identites/${errorRequest.response.data.identite.id}/client`, formData)\r\n                                    .then(response => {\r\n                                        setStartRequest(false);\r\n                                        setError(defaultError);\r\n                                        setData(defaultData);\r\n                                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                                    })\r\n                            } else if (errorRequest.response.data.client) {\r\n                                setStartRequest(false);\r\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\r\n                                    errorRequest.response.data.client.identite.lastname + \" \" + errorRequest.response.data.client.identite.firstname + \": \" + errorRequest.response.data.message)\r\n                                );\r\n                            } else {\r\n                                setStartRequest(false);\r\n                                setError({...defaultError, ...errorRequest.response.data.error});\r\n                                ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <Link to=\"/settings/clients\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                Client\r\n                            </Link>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                {\r\n                                    id ? \"Modification\" : \"Ajout\"\r\n                                }\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"kt-portlet\">\r\n                            <div className=\"kt-portlet__head\">\r\n                                <div className=\"kt-portlet__head-label\">\r\n                                    <h3 className=\"kt-portlet__head-title\">\r\n                                        {\r\n                                            id ?\r\n                                                \"Modification de Clients\" : \" Ajout de Clients\"\r\n                                        }\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n                            <form method=\"POST\" className=\"kt-form\">\r\n\r\n                                <div className=\"kt-portlet\">\r\n\r\n                                    {\r\n\r\n                                        !id ? (\r\n                                            <IdentityForm/>\r\n\r\n                                        ) : (\r\n                                            identity ?\r\n                                                <IdentityForm\r\n                                                    getIdentite={identity}\r\n                                                    getLoading={true}\r\n                                                />\r\n                                                : null\r\n                                        )\r\n                                    }\r\n\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"kt-section kt-section--first\">\r\n                                            <h5 className=\"kt-section__title kt-section__title-lg\">\r\n                                                Informations Techniques\r\n                                            </h5>\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <div className={error.account_type_id.length ? \"col validated\" : \"col\"}>\r\n                                                    <label htmlFor=\"exampleSelect1\">Type de Compte</label>\r\n                                                    {accountType ? (\r\n                                                        <Select\r\n                                                            value={type}\r\n                                                            onChange={onChangeAccountType}\r\n                                                            placeholder={\"Veillez selectionner le type de compte\"}\r\n                                                            options={formatSelectOption(accountType, 'name', 'fr')}\r\n                                                        />\r\n                                                    ) : (<select name=\"typeClient\"\r\n                                                                 className={error.account_type_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                 id=\"typeClient\">\r\n                                                        <option value=\"\"/>\r\n                                                    </select>)\r\n                                                    }\r\n\r\n                                                    {\r\n                                                        error.account_type_id.length ? (\r\n                                                            error.account_type_id.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                                <div\r\n                                                    className={error.category_client_id.length ? \"col validated\" : \"col\"}>\r\n                                                    <label htmlFor=\"exampleSelect1\">Catégorie Client</label>\r\n\r\n                                                    {categoryClient ? (\r\n                                                        <Select\r\n                                                            value={category}\r\n                                                            onChange={onChangeCategoryClient}\r\n                                                            placeholder={\"Veillez selectionner la catégorie client\"}\r\n                                                            options={formatSelectOption(categoryClient, 'name', 'fr')}\r\n                                                        />\r\n                                                    ) : (<select name=\"category\"\r\n                                                                 className={error.category_client_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                 id=\"category\">\r\n                                                        <option value=\"\"/>\r\n                                                    </select>)\r\n                                                    }\r\n\r\n                                                    {\r\n                                                        error.category_client_id.length ? (\r\n                                                            error.category_client_id.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row\">\r\n\r\n                                                <div className={error.number.length ? \"col validated\" : \"col\"}>\r\n                                                    <label htmlFor=\"number\">Numero de Compte</label>\r\n                                                    <input\r\n                                                        id=\"number\"\r\n                                                        type=\"text\"\r\n                                                        className={error.number.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le numero de compte\"\r\n                                                        value={data.number}\r\n                                                        onChange={(e) => onChangeAccount(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.number.length ? (\r\n                                                            error.number.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"kt-portlet__foot\">\r\n                                    <div className=\"kt-form__actions text-right\">\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                        className=\"btn btn-primary\">Envoyer</button>\r\n                                            ) : (\r\n                                                <button\r\n                                                    className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                    type=\"button\" disabled>\r\n                                                    Loading...\r\n                                                </button>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\">\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            ) : (\r\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\"\r\n                                                      disabled>\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        identite: state.identity,\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {addIdentite: addIdentity})(EditClients);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimAssignToStaff.jsx",["984"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {\r\n    forceRound,\r\n    formatDateToTimeStampte,\r\n    getLowerCaseString,\r\n    loadCss\r\n} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimAssignToStaff = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-claim-assignment-to-staff\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claims, setClaims] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            axios.get(`${appConfig.apiDomaine}/claim-assignment-staff`)\r\n                .then(response => {\r\n                    console.log(response.data, \"DATA\");\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setClaims(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaims = [...claims];\r\n        newClaims = newClaims.filter(el => (\r\n            getLowerCaseString(`${el.reference} ${ el.isInvalidTreatment ? \"(R)\" : \"\"}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(`${el.claimer.lastname} ${el.claimer.firstname}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(formatDateToTimeStampte(el.created_at)).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.claim_object.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(`${el.active_treatment.responsible_staff ? el.active_treatment.responsible_staff.identite.lastname : \"\"} ${ el.active_treatment.responsible_staff ? el.active_treatment.responsible_staff.identite.firstname : \"\" }`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.institution_targeted.name).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newClaims;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claims.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claims.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claims.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.reference} {claim.isInvalidTreatment ? (<span className=\"kt-badge kt-badge--danger kt-badge--md\">R</span>) : null}</td>\r\n                <td>{`${claim.claimer.lastname} ${claim.claimer.firstname}`}</td>\r\n                <td>{formatDateToTimeStampte(claim.created_at)}</td>\r\n                <td>{claim.claim_object.name[\"fr\"]}</td>\r\n                <td>{`${claim.active_treatment.responsible_staff?claim.active_treatment.responsible_staff.identite.lastname:\"\"} ${claim.active_treatment.responsible_staff?claim.active_treatment.responsible_staff.identite.firstname:\"\"}`}</td>\r\n                <td>{claim.institution_targeted.name}</td>\r\n                {/*<td>{claim.unit_targeted_id ? claim.unit_targeted.name.fr : \"-\"}</td>*/}\r\n                <td>\r\n                    <a href={`/process/claim-assign/to-staff/${claim.id}/detail`}\r\n                       className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                       title=\"Détail\">\r\n                        <i className=\"la la-eye\"/>\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-claim-assignment-to-staff') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Réclamations à traiter\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={(\r\n                        <div>\r\n                            Liste des réclamations qui vous sont assignés\r\n                            <br/>\r\n                            <span className=\"kt-badge kt-badge--danger kt-badge--md\">R</span> représente les traitements réjetés\r\n                        </div>\r\n                    )}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Réclamations à traiter\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Référence\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Date de réception\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Objet\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Agent\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Institution concernée\r\n                                                        </th>\r\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"*/}\r\n                                                        {/*    rowSpan=\"1\"*/}\r\n                                                        {/*    colSpan=\"1\" style={{width: \"70.25px\"}}*/}\r\n                                                        {/*    aria-label=\"Country: activate to sort column ascending\">Unité*/}\r\n                                                        {/*</th>*/}\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"40.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claims.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                        <tr>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Date de réception</th>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Objet</th>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Agent</th>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Institution concernée</th>\r\n                                                            {/*<th rowSpan=\"1\" colSpan=\"1\">Unité</th>*/}\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                        </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {claims.length} données\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                <Pagination\r\n                                                    numberPerPage={numberPerPage}\r\n                                                    onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                    activeNumberPage={activeNumberPage}\r\n                                                    onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                    pages={pages}\r\n                                                    onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                    numberPage={numberPage}\r\n                                                    onClickNextPage={e => onClickNextPage(e)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimAssignToStaff);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Unit.jsx",["985","986","987","988"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/units`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/my/units/${unitId}`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/units`,\r\n            destroy: unitId => `${appConfig.apiDomaine}/any/units/${unitId}`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/units`,\r\n            destroy: unitId => `${appConfig.apiDomaine}/my/units/${unitId}`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/without-link/units`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/without-link/units/${unitId}`,\r\n    }\r\n};\r\n\r\nconst Unit = (props) => {\r\n    if (!(verifyPermission(props.userPermissions, 'list-any-unit') || verifyPermission(props.userPermissions, 'list-my-unit') || verifyPermission(props.userPermissions, 'list-without-link-unit')))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-any-unit'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-my-unit'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n    const [load, setLoad] = useState(true);\r\n    const [units, setUnits] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setUnits(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [endPoint.list, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    {/*<tr key={index} role=\"row\" className=\"odd\">\r\n        {\r\n            verifyPermission(props.userPermissions, 'list-any-unit') ? (\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{unit.institution ? unit.institution.name : null}</td>\r\n            ) : : null\r\n        }\r\n    </tr>*/}\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newUnits = [...units];\r\n        newUnits = newUnits.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.unit_type.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.lead ? el.lead.identite ? el.lead.identite.lastname+\" \"+el.lead.identite.firstname : \"Pas d'identite\" : \"Pas de responsable\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(verifyPermission(props.userPermissions, \"list-any-unit\") ? el.institution ? el.institution.name : \"\" : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newUnits;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(units.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(units.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(units.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(units.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(units.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                units.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                units.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteUnit = (unitId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(endPoint.destroy(unitId))\r\n                            .then(response => {\r\n                                const newUnits = [...units];\r\n                                newUnits.splice(index, 1);\r\n                                setUnits(newUnits);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newUnits.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newUnits.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (unit, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{unit.name[\"fr\"]}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{unit.unit_type.name[\"fr\"]}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>\r\n                    {\r\n                        unit.lead ?\r\n                            unit.lead.identite ? unit.lead.identite.lastname+\" \"+unit.lead.identite.firstname : \"Pas d'identité\"\r\n                            : \"Pas de responsable\"\r\n                    }\r\n                </td>\r\n                {\r\n                    verifyPermission(props.userPermissions, 'list-any-unit') ? (\r\n                        <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{unit.institution ? unit.institution.name : null}</td>\r\n                    ) : null\r\n                }\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-any-unit') || verifyPermission(props.userPermissions, 'update-my-unit') || verifyPermission(props.userPermissions, 'update-without-link-unit') ? (\r\n                            <Link to={`/settings/unit/${unit.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-any-unit') || verifyPermission(props.userPermissions, 'destroy-my-unit') || verifyPermission(props.userPermissions, 'destroy-without-link-unit') ? (\r\n                            <button\r\n                                onClick={(e) => deleteUnit(unit.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-any-unit') || verifyPermission(props.userPermissions, 'list-my-unit') || verifyPermission(props.userPermissions, 'list-without-link-unit') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Unité\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={\"Liste des services, agences, etc...\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={['store-any-unit', 'store-my-unit', 'store-without-link-unit']}\r\n                            title={\"Unité\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/unit/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\"><label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom Unité\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Type Unité\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Responsable\r\n                                                        </th>\r\n                                                        {\r\n                                                            verifyPermission(props.userPermissions, 'list-any-unit') ? (\r\n                                                                <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                    colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                                    aria-label=\"Country: activate to sort column ascending\">Institution\r\n                                                                </th>\r\n                                                            ) : <th style={{display: \"none\"}}/>\r\n                                                        }\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        units.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((unit, index) => (\r\n                                                                    printBodyTable(unit, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom Unité</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Type Unité</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Responsable</th>\r\n                                                        {\r\n                                                            verifyPermission(props.userPermissions, 'list-any-unit') ? (\r\n                                                                <th rowSpan=\"1\" colSpan=\"1\">Institution</th>\r\n                                                            ) : <th style={{display: \"none\"}}/>\r\n                                                        }\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {units.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Unit);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimToValidatedListDetail.jsx",["989","990","991","992"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, loadScript, validatedClaimRule} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport ReasonModal from \"../components/ReasonModal\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastErrorMessageWithParameterConfig} from \"../../config/toastConfig\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\n\r\nconst ClaimToValidatedListDetail = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n    const {id} = useParams();\r\n    const validation = validatedClaimRule(id);\r\n\r\n    if (!((verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-my-institution') ||\r\n        verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-any-institution')) && props.activePilot))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [claim, setClaim] = useState(null);\r\n    const [showReason, setShowReason] = useState(false);\r\n    const [reasonTitle, setReasonTitle] = useState(\"\");\r\n    const [reasonLabel, setReasonLabel] = useState(\"\");\r\n    const [action, setAction] = useState(\"\");\r\n    const [startRequest, setStartRequest] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let endpoint = \"\";\r\n            if (verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-my-institution'))\r\n                endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-my-institution/${id}`;\r\n            else if (verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-any-institution'))\r\n                endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-any-institution/${id}`;\r\n\r\n            await axios.get(endpoint)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    setClaim(response.data);\r\n                })\r\n                .catch(({response}) => {\r\n                    setStartRequest(false);\r\n                    if (response.data && response.data.code === 409)\r\n                        ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(response.data.error));\r\n                    else\r\n                        console.log(\"Something is wrong\")\r\n                });\r\n        }\r\n        if (verifyTokenExpire()) {\r\n            fetchData();\r\n        }\r\n    }, [id]);\r\n\r\n    const showReasonInput = async (type) => {\r\n        if (type === \"validateReject\") {\r\n            await setReasonTitle('Motif de rejet');\r\n            await setReasonLabel('Le motif');\r\n        } else if (type === \"validateSolution\") {\r\n            await setReasonTitle('Solution à communiquer au client');\r\n            await setReasonLabel('Solution');\r\n        }\r\n        await setAction(type);\r\n        await setShowReason(true);\r\n        document.getElementById(\"reason-modal\").click();\r\n    };\r\n\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-claim-awaiting-validation-my-institution\") ||\r\n        verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-any-institution') && props.activePilot) ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/claim-to-validated\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Réclamations à valider\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Détail réclamation\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, validation[props.plan].permission) ? (\r\n                                                    <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                        <div className=\"kt-wizard-v2__nav-body\">\r\n                                                            <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                                <i className=\"flaticon-list\"/>\r\n                                                            </div>\r\n                                                            <div className=\"kt-wizard-v2__nav-label\">\r\n                                                                <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                                    Validation du traitement\r\n                                                                </div>\r\n                                                                <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                                    Valider du traitement de l'agent\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        {\r\n                                            verifyPermission(props.userPermissions, validation[props.plan].permission) ? (\r\n                                                <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\">\r\n                                                    <div className=\"kt-heading kt-heading--md\">\r\n                                                        Validation du traitement\r\n                                                    </div>\r\n                                                    <div className=\"kt-form__section kt-form__section--first\">\r\n                                                        <div className=\"kt-wizard-v2__review\">\r\n                                                            {\r\n                                                                !startRequest ? (\r\n                                                                    claim ? (\r\n                                                                        <div className=\"kt-wizard-v2__review-item\">\r\n                                                                            {\r\n                                                                                claim.active_treatment.solved_at !== null ? (\r\n                                                                                    <>\r\n                                                                                        <div className=\"kt-wizard-v2__review-item\">\r\n                                                                                            <div className=\"kt-wizard-v2__review-title\">\r\n                                                                                                <h5><strong>Traitement</strong></h5>\r\n                                                                                            </div>\r\n                                                                                            <div className=\"kt-wizard-v2__review-content\">\r\n                                                                                                <strong>Statut</strong>: <span className=\"mx-2\">Traité</span><br/>\r\n                                                                                                <strong>Montant retourné</strong>: <span className=\"mx-2\">{claim.active_treatment.amount_returned ? claim.active_treatment.amount_returned : \"Pas de montant\"}</span><br/>\r\n                                                                                                <strong>Solution</strong>: <span className=\"mx-2\">{claim.active_treatment.solution ? claim.active_treatment.solution : \"Pas de solution\"}</span><br/>\r\n                                                                                                <strong>Commentaires</strong>: <span className=\"mx-2\">{claim.active_treatment.comments ? claim.active_treatment.comments : \"Pas de commentaire\"}</span><br/>\r\n                                                                                                <strong>Mésures préventives</strong>: <span className=\"mx-2\">{claim.active_treatment.preventive_measures ? claim.active_treatment.preventive_measures : \"Pas de mésures préventives\"}</span><br/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"kt-widget__action\">\r\n                                                                                            {\r\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-my-institution\") ||\r\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-any-institution\") ? (\r\n                                                                                                    <button\r\n                                                                                                        type=\"button\"\r\n                                                                                                        className=\"btn btn-label-danger btn-sm btn-upper\"\r\n                                                                                                        onClick={() => showReasonInput(\"validateReject\")}>\r\n                                                                                                        Rejeter\r\n                                                                                                    </button>\r\n                                                                                                ) : null\r\n                                                                                            }\r\n\r\n                                                                                            &nbsp;\r\n                                                                                            {\r\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-my-institution\") ||\r\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-any-institution\") ? (\r\n                                                                                                    <button\r\n                                                                                                        type=\"button\"\r\n                                                                                                        className=\"btn btn-brand btn-sm btn-upper\"\r\n                                                                                                        onClick={() => showReasonInput(\"validateSolution\")}>\r\n                                                                                                        Valider\r\n                                                                                                    </button>\r\n                                                                                                ) : null\r\n                                                                                            }\r\n\r\n                                                                                        </div>\r\n                                                                                    </>\r\n                                                                                ) : null\r\n                                                                            }\r\n\r\n                                                                            {\r\n                                                                                claim.active_treatment.declared_unfounded_at !== null ? (\r\n                                                                                    <>\r\n                                                                                        <div className=\"kt-wizard-v2__review-item\">\r\n                                                                                            <div className=\"kt-wizard-v2__review-title\">\r\n                                                                                                <h5><strong>Traitement</strong></h5>\r\n                                                                                            </div>\r\n                                                                                            <div className=\"kt-wizard-v2__review-content\">\r\n                                                                                                <strong>Statut</strong>: <span className=\"mx-2\">Non fondé</span>\r\n                                                                                                <br/>\r\n                                                                                                <strong>Motif</strong>: <span className=\"mx-2\">{claim.active_treatment.unfounded_reason ? claim.active_treatment.unfounded_reason : \"Pas de motif\"}</span>\r\n                                                                                                <br/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div className=\"kt-widget__action\">\r\n                                                                                            <button type=\"button\" className=\"btn btn-label-danger btn-sm btn-upper\" onClick={() => showReasonInput(\"validateReject\")}>\r\n                                                                                                Rejeter\r\n                                                                                            </button>\r\n                                                                                            &nbsp;\r\n                                                                                            <button type=\"button\" className=\"btn btn-brand btn-sm btn-upper\" onClick={() => showReasonInput(\"validateSolution\")}>\r\n                                                                                                Valider\r\n                                                                                            </button>\r\n                                                                                        </div>\r\n                                                                                    </>\r\n                                                                                ) : null\r\n                                                                            }\r\n                                                                            <button id={\"reason-modal\"}\r\n                                                                                    style={{display: \"none\"}} type=\"button\"\r\n                                                                                    className=\"btn btn-bold btn-label-brand btn-sm\"\r\n                                                                                    data-toggle=\"modal\"\r\n                                                                                    data-target=\"#kt_modal_4_2\"/>\r\n                                                                        </div>\r\n                                                                    ) : null\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANTE\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                    {\r\n                                        showReason ? (\r\n                                            <ReasonModal\r\n                                                plan={props.plan}\r\n                                                id={id}\r\n                                                action={action}\r\n                                                reasonTitle={reasonTitle}\r\n                                                reasonLabel={reasonLabel}\r\n                                                onClose={() => setShowReason(false)}\r\n                                            />\r\n                                        ) : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n        activePilot: state.user.user.staff.is_active_pilot\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimToValidatedListDetail);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\GraphChannel.jsx",["993"],"import React, {useEffect, useState} from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst GraphChannel = (props) => {\r\n\r\n    const [channelData, setChannelData] = useState(\"\");\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const defaultData = {\r\n\r\n        series: [{\r\n            name: 'Total',\r\n            data: channelData ? channelData.series.data : []\r\n        }],\r\n        options: {\r\n            chart: {\r\n                height: 350,\r\n                type: 'bar',\r\n                events: {\r\n                    click: function (chart, w, e) {\r\n                    }\r\n                }\r\n            },\r\n            // colors: \"#f3f3f8\",\r\n            plotOptions: {\r\n                bar: {\r\n                    columnWidth: '45%',\r\n                    distributed: true\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            xaxis: {\r\n                categories: channelData ? channelData.options.xaxis.categories : [],\r\n                labels: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n           await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    // console.log(response.data, \"CANAL_STAT\")\r\n                    if (!isCancelled) {\r\n                        let channels = [];\r\n                        for (const channel in response.data.channelsUse) {\r\n                            channels.push(channel);\r\n                        }\r\n                        let newChannels = {...defaultData};\r\n                        newChannels.options.xaxis.categories = channels;\r\n                        if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\r\n                            newChannels.series[0].data = Object.values(response.data.channelsUse).map(serie => serie.allInstitution)\r\n                        } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\r\n                            newChannels.series[0].data = Object.values(response.data.channelsUse).map(serie => serie.myInstitution)\r\n                        }\r\n                        setChannelData(newChannels);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\r\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\r\n            <div className=\"kt-portlet\">\r\n                <div className=\"kt-portlet__head\">\r\n                    <div className=\"kt-portlet__head-label\">\r\n                        <h3 className=\"kt-portlet__head-title\">Total des Réclamations reçues par Canal sur les 30 derniers jours</h3>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    load ? (\r\n                        <LoadingTable/>\r\n                    ) : (\r\n                        channelData ?\r\n                            <div id=\"chart\" className=\"kt-portlet__body\">\r\n                                <Chart options={channelData.options} series={channelData.series} type=\"bar\"\r\n                                       height={350}/>\r\n                            </div>\r\n                            : null\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(GraphChannel);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ReasonModal.jsx",["994"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DoubleButtonDetail.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimObjectImportPage.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ConfigNotification.jsx",["995"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {notificationConfig} from \"../../constants/notification\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastEditErrorMessageConfig,\r\n    toastSuccessMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ConfigNotification = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"update-notifications\"))\r\n        window.location.href = ERROR_401;\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState({\r\n        \"notifications.acknowledgment-of-receipt\": [],\r\n        \"notifications.register-a-claim\": [],\r\n        \"notifications.complete-a-claim\": [],\r\n        \"notifications.transferred-to-targeted-institution\": [],\r\n        \"notifications.transferred-to-unit\": [],\r\n        \"notifications.assigned-to-staff\": [],\r\n        \"notifications.reject-a-claim\": [],\r\n        \"notifications.treat-a-claim\": [],\r\n        \"notifications.invalidate-a-treatment\": [],\r\n        \"notifications.validate-a-treatment\": [],\r\n        \"notifications.communicate-the-solution\": [],\r\n        \"notifications.communicate-the-solution-unfounded\": [],\r\n        \"notifications.add-contributor-to-discussion\": [],\r\n        \"notifications.post-discussion-message\": [],\r\n        \"notifications.reminder-before-deadline\": [],\r\n        \"notifications.reminder-after-deadline\": [],\r\n        \"notifications.recurrence-alert\": [],\r\n    });\r\n    const [load, setLoad] = useState(true);\r\n    const [startUpdate, setStartUpdate] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${appConfig.apiDomaine}/notifications/edit`)\r\n                .then(({data}) => {\r\n                    console.log(\"data:\", data);\r\n                    setData(data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"something is wrong\")\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine]);\r\n\r\n    const handleTextChange = (e, index) => {\r\n        const newData = [...data];\r\n        newData[index].text = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const formatUpdateData = () => {\r\n        const updateData = {};\r\n        for (const key in data)\r\n            updateData[data[key].event] = data[key].text;\r\n        return updateData;\r\n    };\r\n\r\n    const updateConfig = () => {\r\n        setStartUpdate(true);\r\n        const updateData = {\r\n            \"notifications\": formatUpdateData(),\r\n        };\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios.put(`${appConfig.apiDomaine}/notifications`, updateData)\r\n                .then(({data}) => {\r\n                    setStartUpdate(false);\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Succès de la modification\"));\r\n                })\r\n                .catch(({response}) => {\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    setError({...error, ...response.data.error});\r\n                    setStartUpdate(false);\r\n                    console.log(\"error\", response.data.error)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"update-notifications\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Notification\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Configuration notification\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div>\r\n                                            <strong>\r\n                                                Légende: <br/> <br/>\r\n                                            </strong>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-6\">{\"{claim_reference}\"} {\"<===>\"} Référence de la reclamation</div>\r\n                                                <div className=\"col-6\">{\"{claim_object}\"} {\"<===>\"} Objet de la reclamtion</div>\r\n                                                <br/> <br/>\r\n                                                <div className=\"col-6\">{\"{claim_status}\"} {\"<===>\"} Status de la réclamaion</div>\r\n                                                <div className=\"col-6\">{\"{responsible_staff}\"} {\"<===>\"} Staff en charge du traitement</div>\r\n                                                <br/> <br/>\r\n                                                <div className=\"col-6\">{\"{solution_communicated}\"} {\"<===>\"} Solution à communiquer</div>\r\n                                                <div className=\"col-6\">{\"{created_by}\"} {\"<===>\"} Celui qui à enregister la réclamation</div>\r\n                                                <br/> <br/>\r\n                                                <div className=\"col-6\">{\"{discussion_name}\"} {\"<===>\"} Nom de la discussion</div>\r\n                                                <div className=\"col-6\">{\"{posted_by}\"} {\"<===>\"} Celui qui à poster la réclamation</div>\r\n                                            </div>\r\n                                            <br/><br/>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            {\r\n                                                data.map((el, index) => (\r\n                                                    <div key={index} className={error[`notifications.${el.event}`].length ? \"col-6 form-group validated\" : \"col-6 form-group\"}>\r\n                                                        <label htmlFor={el.event}>{notificationConfig[el.event]} <InputRequire/></label>\r\n                                                        <textarea\r\n                                                            id={el.event}\r\n                                                            cols=\"30\"\r\n                                                            rows=\"3\"\r\n                                                            className={ error[`notifications.${el.event}`].length ? \"form-control is-invalid\" :  \"form-control\"}\r\n                                                            value={el.text}\r\n                                                            onChange={e => handleTextChange(e, index)}\r\n                                                        />\r\n\r\n                                                        {\r\n                                                            error[`notifications.${el.event}`].length ? (\r\n                                                                error[`notifications.${el.event}`].map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n\r\n                                            <div className=\"col-12 form-group text-center\">\r\n                                                {\r\n                                                    !startUpdate ? (\r\n                                                        <button onClick={updateConfig} className=\"btn btn-primary\">Modifier</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ConfigNotification);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\RemoveChats.jsx",["996"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {loadCss, filterDataTableBySearchValue, forceRound} from \"../../../helpers/function\";\r\nimport LoadingTable from \"../../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../../config/confirmConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport EmptyTable from \"../../components/EmptyTable\";\r\nimport ExportButton from \"../../components/ExportButton\";\r\nimport HeaderTablePage from \"../../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst RemoveChats = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"destroy-discussion\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [chats, setChats] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + `/discussions`)\r\n                .then(response => {\r\n                    console.log(response.data, 'REMOVE');\r\n                    setLoad(false);\r\n                    setChats(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    },[]);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(chats.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(chats.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(chats.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                chats.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                chats.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteContributor = (chatsId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/discussions/${chatsId}`)\r\n                            .then(response => {\r\n                                const newChats = [...chats];\r\n                                newChats.splice(index, 1);\r\n                                setChats(newChats);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newChats.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newChats.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (chat, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{chat.name}</td>\r\n                <td>{chat.claim.reference}</td>\r\n\r\n                <td style={{textAlign:'center'}}>\r\n\r\n                    {verifyPermission(props.userPermissions, \"destroy-discussion\") ?\r\n                        <button\r\n                            onClick={(e) => deleteContributor(chat.id, index)}\r\n                            className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                            title=\"Supprimer le Tchat\">\r\n                            <i className=\"la la-trash fa-2x\"/>\r\n                        </button>\r\n                        : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-my-discussions\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Traitement\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Chat\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Suppression\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"A common UI paradigm to use with interactive tables is to present buttons that will trigger some action. See official documentation\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n\r\n                        <HeaderTablePage\r\n                            title={\"Suppression de Discussion\"}\r\n                        />\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Search:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <ExportButton/>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom du Chat\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Référence réclamation\r\n                                                        </th>\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        chats.length ? (\r\n                                                            search ? (\r\n                                                                chats.map((chat, index) => (\r\n                                                                    printBodyTable(chat, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((chat, index) => (\r\n                                                                    printBodyTable(chat, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {chats.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RemoveChats);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\IncompleteClaimsEdit.jsx",["997","998","999"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport Select from \"react-select\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {\r\n    debug,\r\n    filterChannel,\r\n    formatSelectOption,\r\n    formatToTime,\r\n    formatToTimeStampUpdate\r\n} from \"../../helpers/function\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {RESPONSE_CHANNEL} from \"../../constants/channel\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastEditErrorMessageConfig, toastErrorMessageWithParameterConfig, toastSuccessMessageWithParameterConfig,\r\n} from \"../../config/toastConfig\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport InfirmationTable from \"./InfirmationTable\";\r\nimport WithoutCode from \"./WithoutCode\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        edit: id => `${appConfig.apiDomaine}/my/claims-incompletes/${id}/edit`,\r\n        update: id => `${appConfig.apiDomaine}/my/claims-incompletes/${id}`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            edit: id => `${appConfig.apiDomaine}/any/claims-incompletes/${id}/edit`,\r\n            update: id => `${appConfig.apiDomaine}/any/claims-incompletes/${id}`,\r\n        },\r\n        filial: {\r\n            edit: id => `${appConfig.apiDomaine}/my/claims-incompletes/${id}/edit`,\r\n            update: id => `${appConfig.apiDomaine}/my/claims-incompletes/${id}`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        edit: id => `${appConfig.apiDomaine}/without-client/claims-incompletes/${id}/edit`,\r\n        update: id => `${appConfig.apiDomaine}/without-client/claims-incompletes/${id}`,\r\n    }\r\n};\r\n\r\nconst IncompleteClaimsEdit = props => {\r\n    document.title = \"Satis client - Complétion plaintes incomplètes\";\r\n    const {id} = useParams();\r\n    if (!(verifyPermission(props.userPermissions, 'update-claim-incomplete-against-any-institution') ||\r\n        verifyPermission(props.userPermissions, \"update-claim-incomplete-against-my-institution\") ||\r\n        verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'update-claim-incomplete-against-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'update-claim-incomplete-against-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const defaultData = {\r\n        firstname: null,\r\n        lastname: null,\r\n        sexe: null,\r\n        telephone: [],\r\n        email: [],\r\n        ville: null,\r\n        unit_targeted_id: null,\r\n        institution_targeted_id: null,\r\n        account_targeted_id: null,\r\n        claim_object_id: null,\r\n        request_channel_slug: null,\r\n        response_channel_slug: null,\r\n        claimer_expectation: null,\r\n        description: null,\r\n        amount_currency_slug: null,\r\n        amount_disputed: null,\r\n        claimer_id: null,\r\n        relationship_id: null,\r\n        event_occured_at: null,\r\n        is_revival: 0,\r\n        file: []\r\n    };\r\n    const defaultError = {\r\n        firstname: [],\r\n        lastname: [],\r\n        sexe: [],\r\n        telephone: [],\r\n        email: [],\r\n        ville: [],\r\n        unit_targeted_id: [],\r\n        institution_targeted_id: [],\r\n        account_targeted_id: [],\r\n        claim_object_id: [],\r\n        request_channel_slug: [],\r\n        response_channel_slug: [],\r\n        claimer_expectation: [],\r\n        description: [],\r\n        amount_currency_slug: [],\r\n        amount_disputed: [],\r\n        claimer_id: [],\r\n        relationship_id: [],\r\n        event_occured_at: [],\r\n        is_revival: [],\r\n        file: []\r\n    };\r\n\r\n    const option1 = 1;\r\n    const option2 = 0;\r\n\r\n    const [claimObject, setClaimObject] = useState({});\r\n    const [claimObjects, setClaimObjects] = useState([]);\r\n    const [claimCategory, setClaimCategory] = useState({});\r\n    const [claimCategories, setClaimCategories] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [account, setAccount] = useState([]);\r\n    const [units, setUnits] = useState([]);\r\n    const [unit, setUnit] = useState({});\r\n    const [responseChannels, setResponseChannels] = useState([]);\r\n    const [channels, setChannels] = useState([]);\r\n    const [relationships, setRelationships] = useState([]);\r\n    const [relationship, setRelationship] = useState({});\r\n    const [responseChannel, setResponseChannel] = useState({});\r\n    const [receptionChannel, setReceptionChannel] = useState({});\r\n    const [currency, setCurrency] = useState({});\r\n    const [currencies, setCurrencies] = useState([]);\r\n    const [disabledInput, setDisabledInput] = useState(false);\r\n    const [institution, setInstitution] = useState({});\r\n    const [institutions, setInstitutions] = useState([]);\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [isRequire, setIsRequire] = useState(null);\r\n\r\n    const currentDate = new Date();\r\n    currentDate.setHours(currentDate.getHours() + 1);\r\n    const maxDate = (currentDate.toISOString()).substr(0, (currentDate.toISOString()).length - 1);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(endPoint.edit(`${id}`))\r\n                .then(response => {\r\n                    console.log(response.data, \"GET_DATA\");\r\n                    const newIncompleteClaim = {\r\n\r\n                        claimer_id: response.data.claim.claimer_id,\r\n                        firstname: response.data.claim.claimer.firstname,\r\n                        lastname: response.data.claim.claimer.lastname,\r\n                        sexe: response.data.claim.claimer.sexe,\r\n                        telephone: response.data.claim.claimer.telephone,\r\n                        email: response.data.claim.claimer.email,\r\n                        ville: response.data.claim.claimer.ville === null ? \"\" : response.data.claim.claimer.ville,\r\n                        unit_targeted_id: response.data.claim.unit_targeted_id,\r\n                        relationship_id: response.data.claim.relationship_id,\r\n                        account_targeted_id: response.data.claim.account_targeted_id,\r\n                        institution_targeted_id: response.data.claim.institution_targeted_id,\r\n                        claim_object_id: response.data.claim.claim_object_id,\r\n                        request_channel_slug: response.data.claim.request_channel_slug,\r\n                        response_channel_slug: response.data.claim.response_channel_slug,\r\n                        claimer_expectation: response.data.claim.claimer_expectation === null ? \"\" : response.data.claim.claimer_expectation,\r\n                        description: response.data.claim.description,\r\n                        amount_currency_slug: response.data.claim.amount_currency_slug ? response.data.claim.amount_currency_slug : \"\",\r\n                        amount_disputed: response.data.claim.amount_disputed ? response.data.claim.amount_disputed : \"\",\r\n                        event_occured_at: formatToTime(response.data.claim.event_occured_at),\r\n                        is_revival: response.data.claim.is_revival,\r\n                        // file: response.data.claim.files ? response.data.claim.files.map(file => file.title) : null\r\n                    };\r\n                    setData(newIncompleteClaim);\r\n                    setIsRequire(response.data.requirements);\r\n                    if (verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\"))\r\n                        setRelationships(formatSelectOption(response.data.relationships, \"name\", \"fr\"));\r\n\r\n                    if (verifyPermission(props.userPermissions, \"update-claim-incomplete-against-any-institution\") ||\r\n                        verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\"))\r\n                        setInstitutions(formatSelectOption(response.data.institutions, \"name\", false));\r\n\r\n                    setClaimCategories(formatSelectOption(response.data.claimCategories, \"name\", \"fr\"));\r\n                    setCurrencies(formatSelectOption(response.data.currencies, \"name\", \"fr\", \"slug\"));\r\n                    setChannels(formatSelectOption(response.data.channels, \"name\", \"fr\", \"slug\"));\r\n                    setResponseChannels(formatSelectOption(filterChannel(response.data.channels, RESPONSE_CHANNEL), \"name\", \"fr\", \"slug\"))\r\n\r\n                    if (response.data.claim.request_channel !== null) {\r\n                        setReceptionChannel({\r\n                            value: response.data.claim.request_channel.id,\r\n                            label: response.data.claim.request_channel.name.fr\r\n                        });\r\n                    }\r\n                    if (response.data.claim.response_channel !== null) {\r\n                        setResponseChannel({\r\n                            value: response.data.claim.response_channel.id,\r\n                            label: response.data.claim.response_channel.name.fr\r\n                        });\r\n                    }\r\n                    if (response.data.claim.claim_object !== null) {\r\n                        setClaimObject({\r\n                            value: response.data.claim.claim_object.id,\r\n                            label: response.data.claim.claim_object.name.fr\r\n                        });\r\n                    }\r\n                    if (response.data.claim.claim_object.claim_category !== null) {\r\n                        setClaimCategory({\r\n                            value: response.data.claim.claim_object.claim_category.id,\r\n                            label: response.data.claim.claim_object.claim_category.name.fr\r\n                        });\r\n                    }\r\n                    if (response.data.claim.institution_targeted !== null) {\r\n                        setInstitution({\r\n                            value: response.data.claim.institution_targeted.id,\r\n                            label: response.data.claim.institution_targeted.name\r\n                        });\r\n                    }\r\n                    if (response.data.claim.relationship !== null) {\r\n                        setRelationship({\r\n                            value: response.data.claim.relationship.id,\r\n                            label: response.data.claim.relationship.name.fr\r\n                        });\r\n                    }\r\n                    if (response.data.claim.amount_currency !== null) {\r\n                        setCurrency({\r\n                            value: response.data.claim.amount_currency.id,\r\n                            label: response.data.claim.amount_currency.name.fr\r\n                        });\r\n                    }\r\n                    if (response.data.claim.account_targeted !== null) {\r\n                        setAccount({\r\n                            value: response.data.claim.account_targeted.id,\r\n                            label: response.data.claim.account_targeted.number\r\n                        });\r\n                    }\r\n                    if (response.data.claim.unit_targeted !== null) {\r\n                        setUnit({\r\n                            value: response.data.claim.unit_targeted.id,\r\n                            label: response.data.claim.unit_targeted.name.fr\r\n                        });\r\n                    }\r\n                })\r\n        }\r\n\r\n        if (verifyTokenExpire()) {\r\n            fetchData();\r\n        }\r\n    }, [endPoint, props.userPermissions, id]);\r\n\r\n    const onChangeRelationShip = selected => {\r\n        const newData = {...data};\r\n        if (selected) {\r\n            setRelationship(selected);\r\n            newData.relationship_id = selected.value;\r\n        } else {\r\n            setRelationship(null);\r\n            newData.relationship_id = \"\";\r\n        }\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeFirstName = (e) => {\r\n        const newData = {...data};\r\n        newData.firstname = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeLastName = (e) => {\r\n        const newData = {...data};\r\n        newData.lastname = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeSexe = (e) => {\r\n        const newData = {...data};\r\n        newData.sexe = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeVille = (e) => {\r\n        const newData = {...data};\r\n        newData.ville = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeTelephone = (tel) => {\r\n        const newData = {...data};\r\n        newData.telephone = tel;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeEmail = (mail) => {\r\n        const newData = {...data};\r\n        newData.email = mail;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeUnit = selected => {\r\n        setUnit(selected);\r\n        const newData = {...data};\r\n        if (selected.value !== \"other\")\r\n            newData.unit_targeted_id = selected.value;\r\n        else\r\n            newData.unit_targeted_id = \"\";\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeAccount = selected => {\r\n        setAccount(selected);\r\n        const newData = {...data};\r\n        newData.account_targeted_id = selected.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeClaimObject = selected => {\r\n        setClaimObject(selected);\r\n        const newData = {...data};\r\n        newData.claim_object_id = selected.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeReceptionChannel = selected => {\r\n        setReceptionChannel(selected);\r\n        const newData = {...data};\r\n        newData.request_channel_slug = selected.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeResponseChannel = selected => {\r\n        setResponseChannel(selected);\r\n        const newData = {...data};\r\n        newData.response_channel_slug = selected.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeClaimCategory = selected => {\r\n        setClaimCategory(selected);\r\n        if (verifyTokenExpire()) {\r\n            axios.get(`${appConfig.apiDomaine}/claim-categories/${selected.value}/claim-objects`)\r\n                .then(response => {\r\n                    setClaimObject({});\r\n                    setClaimObjects(formatSelectOption(response.data.claimObjects, \"name\", \"fr\"));\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"))\r\n            ;\r\n        }\r\n    };\r\n\r\n    const onChangeClaimerExpectation = e => {\r\n        const newData = {...data};\r\n        newData.claimer_expectation = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = e => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeAmountDisputed = e => {\r\n        const newData = {...data};\r\n        newData.amount_disputed = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeAmountCurrency = selected => {\r\n        setCurrency(selected);\r\n        const newData = {...data};\r\n        newData.amount_currency_slug = selected.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeEventOccuredAt = e => {\r\n        const newData = {...data};\r\n        if (new Date(e.target.value) >= new Date()) {\r\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Date invalide\"));\r\n            newData.event_occured_at = \"\";\r\n        } else\r\n            newData.event_occured_at = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handleOptionChange = (e) => {\r\n        const newData = {...data};\r\n        newData.is_revival = parseInt(e.target.value);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeFile = (e) => {\r\n        const newData = {...data};\r\n        newData.file = Object.values(e.target.files);\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const formatFormData = (newData) => {\r\n        const formData = new FormData();\r\n        formData.append(\"_method\", \"put\");\r\n        for (const key in newData) {\r\n            // console.log(`${key}:`, newData[key]);\r\n            if (key === \"file\") {\r\n                for (let i = 0; i < (newData.file).length; i++)\r\n                    formData.append(\"file[]\", (newData[key])[i], ((newData[key])[i]).name);\r\n            } else if (key === \"telephone\") {\r\n                for (let i = 0; i < (newData.telephone).length; i++)\r\n                    formData.append(\"telephone[]\", (newData[key])[i]);\r\n            } else if (key === \"email\") {\r\n                for (let i = 0; i < (newData.email).length; i++)\r\n                    formData.append(\"email[]\", (newData[key])[i]);\r\n            } else\r\n                formData.set(key, newData[key]);\r\n        }\r\n        return formData;\r\n\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        const newData = {...data};\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        newData.event_occured_at = formatToTimeStampUpdate(data.event_occured_at);\r\n\r\n        // if (!newData.file.length)\r\n        //     delete newData.file;\r\n        if (!newData.response_channel_slug)\r\n            delete newData.response_channel_slug;\r\n        if (!newData.unit_targeted_id)\r\n            delete newData.unit_targeted_id;\r\n        if (!newData.account_targeted_id)\r\n            delete newData.account_targeted_id;\r\n        if (!verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\"))\r\n            delete newData.relationship_id;\r\n\r\n        console.log('Coucou', 'COUCOU')\r\n        debug(endPoint.update(`${id}`), \"endpoint\");\r\n        for (var value of formatFormData(newData).values()) {\r\n            debug(value, \"value\");\r\n        }\r\n        if (verifyTokenExpire()) {\r\n            axios.post(endPoint.update(`${id}`), formatFormData(newData))\r\n                .then((response) => {\r\n                    console.log(response.data, \"response\");\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Succès de la complétion\"));\r\n                    window.location.href = \"/process/incomplete_claims\"\r\n                })\r\n                .catch((error) => {\r\n                    setStartRequest(false);\r\n                    setError({...defaultError, ...error.response.data.error});\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    return (\r\n       ( verifyPermission(props.userPermissions, 'update-claim-incomplete-against-any-institution')\r\n        || verifyPermission(props.userPermissions, \"update-claim-incomplete-against-my-institution\") ||\r\n        verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\")) && isRequire? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Collecte\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Réclamations Incomplètes\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                        Complétion\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"Formulaire d'enregistrement d'une réclamation. Utilisez ce formulaire pour completer les réclamations imcomplètes de vos clients.\"}\r\n                    />\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Complétion de réclamation\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        {\r\n                                            verifyPermission(props.userPermissions, 'update-claim-incomplete-against-any-institution') ||\r\n                                            verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\") ? (\r\n                                                <div\r\n                                                    className={error.institution_targeted_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                           htmlFor=\"institution\">Institution\r\n                                                        concernée <InputRequire/></label>\r\n                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                        <Select\r\n                                                            classNamePrefix=\"select\"\r\n                                                            className=\"basic-single\"\r\n                                                            isDisabled={!disabledInput}\r\n                                                            placeholder={\"Veillez selectioner l'institution\"}\r\n                                                            value={institution}\r\n                                                            options={institutions}\r\n                                                        />\r\n                                                        {\r\n                                                            error.institution_targeted_id.length ? (\r\n                                                                error.institution_targeted_id.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                        {\r\n                                            verifyPermission(props.userPermissions, \"update-claim-incomplete-against-any-institution\") ||\r\n                                            verifyPermission(props.userPermissions, \"update-claim-incomplete-against-my-institution\") ? (\r\n                                                <div className=\"kt-section kt-section--first\">\r\n                                                    <div className=\"kt-section__body\">\r\n                                                        <h3 className=\"kt-section__title kt-section__title-lg\">\r\n                                                            Client:</h3>\r\n\r\n                                                        <div className=\"form-group row\">\r\n                                                            <div\r\n                                                                className={error.lastname.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"lastname\">Nom <InputRequire/></label>\r\n                                                                <input\r\n                                                                    disabled={!disabledInput}\r\n                                                                    id=\"lastname\"\r\n                                                                    type=\"text\"\r\n                                                                    className={error.lastname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    placeholder=\"Veillez entrer le nom de famille\"\r\n                                                                    value={data.lastname}\r\n                                                                    onChange={(e) => onChangeLastName(e)}\r\n                                                                />\r\n                                                                {\r\n                                                                    error.lastname.length ? (\r\n                                                                        error.lastname.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n\r\n                                                            <div\r\n                                                                className={error.firstname.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"firstname\">Prénom\r\n                                                                    (s) <InputRequire/></label>\r\n                                                                <input\r\n                                                                    disabled={!disabledInput}\r\n                                                                    id=\"firstname\"\r\n                                                                    type=\"text\"\r\n                                                                    className={error.firstname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    placeholder=\"Veillez entrer le prénom\"\r\n                                                                    value={data.firstname}\r\n                                                                    onChange={(e) => onChangeFirstName(e)}\r\n                                                                />\r\n                                                                {\r\n                                                                    error.firstname.length ? (\r\n                                                                        error.firstname.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row\">\r\n                                                            <div\r\n                                                                className={error.firstname.length ? \"form-group col validated\" : \"form-group col\"}>\r\n                                                                <label htmlFor=\"sexe\">Sexe <InputRequire/></label>\r\n                                                                <select\r\n                                                                    disabled={!disabledInput}\r\n                                                                    id=\"sexe\"\r\n                                                                    className={error.sexe.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    value={data.sexe}\r\n                                                                    onChange={(e) => onChangeSexe(e)}\r\n                                                                >\r\n                                                                    <option value=\"\" disabled={true}>Veillez choisir le\r\n                                                                        Sexe\r\n                                                                    </option>\r\n                                                                    <option value=\"F\">Féminin</option>\r\n                                                                    <option value=\"M\">Masculin</option>\r\n                                                                    <option value=\"A\">Autres</option>\r\n                                                                </select>\r\n                                                                {\r\n                                                                    error.sexe.length ? (\r\n                                                                        error.sexe.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                            <div\r\n                                                                className={error.ville.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"ville\">Ville </label>\r\n                                                                <input\r\n                                                                    disabled={!disabledInput}\r\n                                                                    id=\"ville\"\r\n                                                                    type=\"text\"\r\n                                                                    className={error.ville.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    placeholder=\"Veillez entrer votre ville\"\r\n                                                                    value={data.ville}\r\n                                                                    onChange={(e) => onChangeVille(e)}\r\n                                                                />\r\n                                                                {\r\n                                                                    error.ville.length ? (\r\n                                                                        error.ville.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row\">\r\n                                                            <div\r\n                                                                className={error.telephone.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"telephone\"> Téléphone(s)<WithoutCode/>\r\n                                                                    <InputRequire/></label>\r\n                                                                <TagsInput disabled={!disabledInput}\r\n                                                                           value={data.telephone}\r\n                                                                           onChange={onChangeTelephone}\r\n                                                                           inputProps={{\r\n                                                                               className: 'react-tagsinput-input',\r\n                                                                               placeholder: 'Numéro(s)'\r\n                                                                           }}\r\n                                                                />\r\n                                                                {\r\n                                                                    error.telephone.length ? (\r\n                                                                        error.telephone.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n\r\n                                                            <div\r\n                                                                className={error.email.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"email\">Email(s) <InputRequire/></label>\r\n                                                                <TagsInput disabled={!disabledInput} value={data.email}\r\n                                                                           onChange={onChangeEmail} inputProps={{\r\n                                                                    className: 'react-tagsinput-input',\r\n                                                                    placeholder: 'Email(s)'\r\n                                                                }}/>\r\n                                                                {\r\n                                                                    error.email.length ? (\r\n                                                                        error.email.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n\r\n                                        <div\r\n                                            className=\"kt-separator kt-separator--border-dashed kt-separator--space-lg\"/>\r\n\r\n                                        <div className=\"kt-section\">\r\n                                            <div className=\"kt-section__body\">\r\n                                                <h3 className=\"kt-section__title kt-section__title-lg\"> Réclamation:</h3>\r\n                                                {\r\n                                                    !verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\") ?\r\n                                                        (\r\n                                                            <div className=\"form-group row\">\r\n                                                                <div\r\n                                                                    className={error.unit_targeted_id.length ? \"col validated\" : \"col\"}>\r\n                                                                    <label htmlFor=\"unit\">Unité concernée {isRequire.unit_targeted_id?<InputRequire/>:\"\"}</label>\r\n                                                                    <Select\r\n                                                                        classNamePrefix=\"select\"\r\n                                                                        className=\"basic-single\"\r\n                                                                        placeholder={\"Veillez selectioner l'unité\"}\r\n                                                                        value={unit}\r\n                                                                        onChange={onChangeUnit}\r\n                                                                        options={units}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        error.unit_targeted_id.length ? (\r\n                                                                            error.unit_targeted_id.map((error, index) => (\r\n                                                                                <div key={index}\r\n                                                                                     className=\"invalid-feedback\">\r\n                                                                                    {error}\r\n                                                                                </div>\r\n                                                                            ))\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className={error.account_targeted_id.length ? \"col validated\" : \"col\"}>\r\n                                                                    <label htmlFor=\"account\">Numéro de compte\r\n                                                                        concerné {isRequire.account_targeted_id?<InputRequire/>:\"\"}</label>\r\n                                                                    <Select\r\n                                                                        classNamePrefix=\"select\"\r\n                                                                        className=\"basic-single\"\r\n                                                                        placeholder={\"Veillez selectioner le numéro\"}\r\n                                                                        value={account}\r\n                                                                        onChange={onChangeAccount}\r\n                                                                        options={accounts}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        error.account_targeted_id.length ? (\r\n                                                                            error.account_targeted_id.map((error, index) => (\r\n                                                                                <div key={index}\r\n                                                                                     className=\"invalid-feedback\">\r\n                                                                                    {error}\r\n                                                                                </div>\r\n                                                                            ))\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                        : null\r\n                                                }\r\n\r\n                                                <div className=\"form-group row\">\r\n                                                    <div\r\n                                                        className={error.request_channel_slug.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"receptionChannel\">Canal de\r\n                                                            réception <InputRequire/></label>\r\n                                                        <Select\r\n                                                            classNamePrefix=\"select\"\r\n                                                            className=\"basic-single\"\r\n                                                            placeholder={\"Veillez selectioner le canal de réception\"}\r\n                                                            value={receptionChannel}\r\n                                                            onChange={onChangeReceptionChannel}\r\n                                                            options={channels}\r\n                                                        />\r\n                                                        {\r\n                                                            error.request_channel_slug.length ? (\r\n                                                                error.request_channel_slug.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n\r\n                                                    <div\r\n                                                        className={error.response_channel_slug.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"responseChannel\">Canal de\r\n                                                            réponse <InputRequire/></label>\r\n                                                        <Select\r\n                                                            classNamePrefix=\"select\"\r\n                                                            className=\"basic-single\"\r\n                                                            placeholder={\"Veillez selectioner le canal de réponse\"}\r\n                                                            value={responseChannel}\r\n                                                            onChange={onChangeResponseChannel}\r\n                                                            options={responseChannels}\r\n                                                        />\r\n                                                        {\r\n                                                            error.response_channel_slug.length ? (\r\n                                                                error.response_channel_slug.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group row\">\r\n                                                    <div className={\"col\"}>\r\n                                                        <label htmlFor=\"claimCtegory\">Catégorie de réclamation</label>\r\n                                                        <Select\r\n                                                            classNamePrefix=\"select\"\r\n                                                            className=\"basic-single\"\r\n                                                            placeholder={\"Veillez selectioner la catégorie de réclamation\"}\r\n                                                            value={claimCategory}\r\n                                                            onChange={onChangeClaimCategory}\r\n                                                            options={claimCategories}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                    <div\r\n                                                        className={error.claim_object_id.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"claimObject\">Objet de\r\n                                                            réclamation <InputRequire/></label>\r\n                                                        <Select\r\n                                                            classNamePrefix=\"select\"\r\n                                                            className=\"basic-single\"\r\n                                                            placeholder={\"Veillez selectioner l'objet de réclamation\"}\r\n                                                            value={claimObject}\r\n                                                            onChange={onChangeClaimObject}\r\n                                                            options={claimObjects}\r\n                                                        />\r\n                                                        {\r\n                                                            error.claim_object_id.length ? (\r\n                                                                error.claim_object_id.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group row\">\r\n                                                    <div\r\n                                                        className={error.amount_disputed.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"amount_claim\">Montant réclamé {isRequire.amount_disputed?<InputRequire/>:\"\"}</label>\r\n                                                        <input\r\n                                                            type={\"number\"}\r\n                                                            min=\"0\"\r\n                                                            id=\"amount_claim\"\r\n                                                            className={error.amount_disputed.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            placeholder=\"Veillez entrer le Montant réclamé\"\r\n                                                            value={data.amount_disputed}\r\n                                                            onChange={(e) => onChangeAmountDisputed(e)}\r\n                                                        />\r\n                                                        {\r\n                                                            error.amount_disputed.length ? (\r\n                                                                error.amount_disputed.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n\r\n                                                    <div\r\n                                                        className={error.amount_currency_slug.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"currency\">Devise du montant réclamé {isRequire.amount_currency_slug?<InputRequire/>:\"\"}</label>\r\n                                                        <Select\r\n                                                            classNamePrefix=\"select\"\r\n                                                            className=\"basic-single\"\r\n                                                            placeholder={\"Veillez selectioner la devise du montant réclamé\"}\r\n                                                            value={currency}\r\n                                                            onChange={onChangeAmountCurrency}\r\n                                                            options={currencies}\r\n                                                        />\r\n                                                        {\r\n                                                            error.amount_currency_slug.length ? (\r\n                                                                error.amount_currency_slug.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group row\">\r\n\r\n                                                    <div\r\n                                                        className={error.event_occured_at.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"date\">Date de\r\n                                                            l'évènement <InputRequire/></label>\r\n                                                        <input\r\n                                                            type={\"datetime-local\"}\r\n                                                            id=\"date\"\r\n                                                            className={error.event_occured_at.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            placeholder=\"Veillez entrer la date de l'evernement\"\r\n                                                            value={data.event_occured_at}\r\n                                                            max={maxDate}\r\n                                                            onChange={(e) => onChangeEventOccuredAt(e)}\r\n                                                        />\r\n                                                        {\r\n                                                            error.event_occured_at.length ? (\r\n                                                                error.event_occured_at.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                    {\r\n                                                        verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\") ? (\r\n                                                            <div\r\n                                                                className={error.relationship_id.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"relationship\">Relation du reclamant avec\r\n                                                                    l'institution {isRequire.relationship_id?<InputRequire/>:\"\"}</label>\r\n                                                                <Select\r\n                                                                    isClearable\r\n                                                                    value={relationship}\r\n                                                                    placeholder={\"Veillez selectioner la relation du reclamant avec l'institution\"}\r\n                                                                    onChange={onChangeRelationShip}\r\n                                                                    options={relationships}\r\n                                                                />\r\n                                                                {\r\n                                                                    error.relationship_id.length ? (\r\n                                                                        error.relationship_id.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                        ) : null\r\n                                                    }\r\n\r\n                                                    <div className=\"col\">\r\n                                                        <label htmlFor=\"file\">Pièces jointes  {isRequire.file?<InputRequire/>:\"\"}</label>\r\n                                                        <input\r\n                                                            onChange={onChangeFile}\r\n                                                            type=\"file\"\r\n                                                            className={error.file.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            id=\"customFile\"\r\n                                                            multiple={true}\r\n                                                        />\r\n                                                        {\r\n                                                            error.file.length ? (\r\n                                                                error.file.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group row\">\r\n                                                    <div className={error.description.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"description\">Description {isRequire.description?<InputRequire/>:\"\"}</label>\r\n                                                        <textarea\r\n                                                            rows=\"7\"\r\n                                                            id=\"description\"\r\n                                                            className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            placeholder=\"Veillez entrer la description\"\r\n                                                            value={data.description}\r\n                                                            onChange={(e) => onChangeDescription(e)}\r\n                                                        />\r\n                                                        {\r\n                                                            error.description.length ? (\r\n                                                                error.description.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n\r\n                                                    <div\r\n                                                        className={error.claimer_expectation.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"claimer_expectation\">Attente {isRequire.claimer_expectation?<InputRequire/>:\"\"} </label>\r\n                                                        <textarea\r\n                                                            rows=\"7\"\r\n                                                            id=\"claimer_expectation\"\r\n                                                            className={error.claimer_expectation.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            placeholder=\"Veillez entrer l'attente du réclamant\"\r\n                                                            value={data.claimer_expectation}\r\n                                                            onChange={(e) => onChangeClaimerExpectation(e)}\r\n                                                        />\r\n                                                        {\r\n                                                            error.claimer_expectation.length ? (\r\n                                                                error.claimer_expectation.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            className=\"kt-separator kt-separator--border-dashed kt-separator--space-lg\"/>\r\n                                        <div className=\"kt-section\">\r\n                                            <div className=\"kt-section__body\">\r\n                                                <h3 className=\"kt-section__title kt-section__title-lg\">Relance: <InputRequire/>\r\n                                                </h3>\r\n\r\n                                                <div className=\"form-group row\">\r\n                                                    <label className=\"col-3 col-form-label\">Est-ce une relance ?</label>\r\n                                                    <div className=\"col-9\">\r\n                                                        <div className=\"kt-radio-inline\">\r\n                                                            <label className=\"kt-radio\">\r\n                                                                <input type=\"radio\" value={option1}\r\n                                                                       onChange={handleOptionChange}\r\n                                                                       checked={option1 === data.is_revival}/> Oui<span/>\r\n                                                            </label>\r\n                                                            <label className=\"kt-radio\">\r\n                                                                <input type=\"radio\" value={option2}\r\n                                                                       onChange={handleOptionChange}\r\n                                                                       checked={option2 === data.is_revival}/> Non<span/>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"kt-portlet__foot\">\r\n                                        <div className=\"kt-form__actions\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                            className=\"btn btn-primary\">Modifier</button>\r\n                                                ) : (\r\n                                                    <button\r\n                                                        className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                        type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/process/incomplete_claims\"\r\n                                                          className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/process/incomplete_claims\"\r\n                                                          className=\"btn btn-secondary mx-2\"\r\n                                                          disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(IncompleteClaimsEdit);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\ClaimToInstitution.jsx",["1000","1001"],"import React, {useEffect, useState} from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\n\r\nconst ClaimToInstitution = (props) => {\r\n    const [load, setLoad] = useState(true);\r\n    const [institutionData, setInstitutionData] = useState(\"\");\r\n\r\n    const defaultData = {\r\n        series: institutionData?institutionData.series:[],\r\n        options: {\r\n            chart: {\r\n                width: 380,\r\n                type: 'pie',\r\n            },\r\n            labels: institutionData?institutionData.options.labels:[],\r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                    chart: {\r\n                        width: 200\r\n                    },\r\n                    legend: {\r\n                        position: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n            await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    if (!isCancelled) {\r\n                        // console.log(response.data, \"ProcessEvolution\");\r\n                        let institutionTarget = response.data.institutionsTargeted;\r\n                        let institutionData = [];\r\n                        for (const processus in institutionTarget) {\r\n                            institutionData.push(processus);\r\n                        }\r\n                        // console.log(institutionData,\"institutionData\");\r\n                        let newData = {...defaultData};\r\n                        newData.options.labels = institutionData;\r\n                        newData.series = Object.values(institutionTarget).map(serie => serie.allInstitution);\r\n                        // console.log(newData,\"newData\");\r\n                        setInstitutionData(newData);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n\r\n                <div>\r\n                    <div className=\"kt-portlet__head\">\r\n                        <div className=\"kt-portlet__head-label\">\r\n                            <h3 className=\"kt-portlet__head-title\">Satisfaction des institutions qui reçoivent plus de\r\n                                réclamations sur les 30 derniers jours</h3>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div id=\"chart\" className=\"d-flex justify-content-center\" style={{position: \"relative\"}}>\r\n                                <Chart options={institutionData.options} series={institutionData.series} type=\"pie\"\r\n                                       width={380}/>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimToInstitution);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Institutions\\InstitutionForm.jsx",["1002"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig, toastEditSuccessMessageConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport Select from \"react-select\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport InputRequire from \"../InputRequire\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\n\r\nconst InstitutionForm = (props) => {\r\n    const {id} = useParams();\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-any-institution'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-any-institution'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        institution_type_id: \"\",\r\n        name: \"\",\r\n        acronyme: \"\",\r\n        iso_code: \"\",\r\n        logo: \"/assets/media/users/Icon.png\",\r\n        default_currency_slug:\"\"\r\n    };\r\n    const defaultError = {\r\n        institution_type_id: [],\r\n        name: [],\r\n        acronyme: [],\r\n        iso_code: [],\r\n        logo: \"/assets/media/users/Icon.png\",\r\n        default_currency_slug:[]\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [logo, setLogo] = useState(undefined);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [defaultCurrency, setDefaultCurrency] = useState(null);\r\n    const [defaultCurrencyData, setDefaultCurrencyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            if (verifyPermission(props.userPermissions, 'store-any-institution')) {\r\n                axios.get(appConfig.apiDomaine + '/any/institutions/create')\r\n                    .then(response => {\r\n                        console.log(response.data, \"DEVISE\")\r\n                        setDefaultCurrencyData(response.data.currencies.length ?\r\n                            response.data.currencies.map((currencie) => ({\r\n                                value: currencie.slug,\r\n                                label: currencie.name.fr\r\n                            })) : null\r\n                        )\r\n                        // setDefaultCurrencyData(options);\r\n                    })\r\n                ;\r\n            }\r\n\r\n            if (id) {\r\n                axios.get(appConfig.apiDomaine + `/any/institutions/${id}`)\r\n                    .then(response => {\r\n                        console.log(response, \"GET_INSTITUTION\");\r\n                        const newInstitution = {\r\n                            default_currency_slug: (response.data.default_currency_slug !== null) ? (response.data.default_currency_slug) : '',\r\n                            name: response.data.name,\r\n                            acronyme: response.data.acronyme,\r\n                            iso_code: response.data.iso_code,\r\n                            logo: response.data.logo,\r\n                        };\r\n                        setData(newInstitution);\r\n                        if (response.data.default_currency_slug !== null) {\r\n                            setDefaultCurrency({\r\n                                value: response.data.default_currency.slug,\r\n                                label: response.data.default_currency.name.fr\r\n                            });\r\n                        }\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeCurrencies = (selected) => {\r\n        const newData = {...data};\r\n        newData.default_currency_slug = selected.value;\r\n        setDefaultCurrency(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeAcronyme = (e) => {\r\n        const newData = {...data};\r\n        newData.acronyme = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeIsoCode = (e) => {\r\n        const newData = {...data};\r\n        newData.iso_code = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeFile = (e) => {\r\n        const newData = {...data};\r\n        newData.logo = e.target.files[0];\r\n        setData(newData);\r\n        setLogo(newData);\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            var image = document.getElementById('Image1');\r\n            console.log(image, 'image');\r\n            image.src = e.target.result;\r\n        };\r\n        reader.readAsDataURL(newData.logo);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        if (logo) {\r\n            formData.append('logo', data.logo);\r\n        }\r\n        formData.set('name', data.name);\r\n        formData.set('default_currency_slug', data.default_currency_slug);\r\n        formData.set('acronyme', data.acronyme);\r\n        formData.set('iso_code', data.iso_code);\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                formData.append(\"_method\", \"put\");\r\n                axios.post(appConfig.apiDomaine + `/any/institutions/${id}`, formData)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(appConfig.apiDomaine + `/any/institutions`, formData)\r\n                    .then(response => {\r\n                        setError(defaultError);\r\n                        setStartRequest(false);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setError({defaultError, ...error.response.data.error});\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/institution\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Institution\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ?\r\n                                                    \"Modification d'une institution\" : \"Ajout d'une institution\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n                                                                <div className=\"form-group row\">\r\n                                                                    <label\r\n                                                                        className=\"col-xl-3 col-lg-3 col-form-label\">Logo</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <div className=\"kt-avatar kt-avatar--outline\"\r\n                                                                             id=\"kt_user_add_avatar\">\r\n                                                                            <div className=\"kt-avatar__holder\"\r\n                                                                                 style={{textAlign: 'center'}}>\r\n                                                                                {\r\n                                                                                    data.logo?(\r\n                                                                                        <img\r\n                                                                                            id=\"Image1\"\r\n                                                                                            src={data.logo}\r\n                                                                                            alt=\"logo\"\r\n                                                                                            style={{\r\n                                                                                                maxWidth: \"115px\",\r\n                                                                                                maxHeight: \"115px\",\r\n                                                                                                textAlign: 'center'\r\n                                                                                            }}\r\n                                                                                        />\r\n                                                                                )\r\n                                                                                :(\r\n                                                                                            <img\r\n                                                                                                id=\"Image1\"\r\n                                                                                                src={\"/assets/media/users/Icon.png\"}\r\n                                                                                                alt=\"logo\"\r\n                                                                                                style={{\r\n                                                                                                    maxWidth: \"115px\",\r\n                                                                                                    maxHeight: \"115px\",\r\n                                                                                                    textAlign: 'center'\r\n                                                                                                }}\r\n                                                                                            />\r\n                                                                                        )}\r\n\r\n\r\n                                                                            </div>\r\n                                                                            <label className=\"kt-avatar__upload\"\r\n                                                                                   id=\"files\"\r\n                                                                                   data-toggle=\"kt-tooltip\"\r\n                                                                                   title=\"Change avatar\">\r\n                                                                                <i className=\"fa fa-pen\"/>\r\n                                                                                <input type=\"file\"\r\n                                                                                       id=\"file\"\r\n                                                                                       name=\"kt_user_add_user_avatar\"\r\n                                                                                       onChange={(e) => onChangeFile(e)}\r\n                                                                                />\r\n                                                                            </label>\r\n                                                                            <span className=\"kt-avatar__cancel\"\r\n                                                                                  data-toggle=\"kt-tooltip\"\r\n                                                                                  title=\"Cancel avatar\">\r\n                                                                            <i className=\"fa fa-times\"/>\r\n                                                                        </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                {console.log(defaultCurrencyData,\"defaultCurrencyData\")}\r\n                                                                {defaultCurrencyData ? (\r\n                                                                    <div\r\n                                                                        className={error.default_currency_slug.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                        <label\r\n                                                                            className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                            htmlFor=\"exampleSelect1\">Devise</label>\r\n                                                                        <div className=\"col-lg-9 col-xl-6\">\r\n\r\n                                                                            <Select\r\n                                                                                value={defaultCurrency}\r\n                                                                                onChange={onChangeCurrencies}\r\n                                                                                options={defaultCurrencyData.length ? defaultCurrencyData.map(name => name) : ''}\r\n                                                                            />\r\n                                                                            {\r\n                                                                                error.default_currency_slug.length ? (\r\n                                                                                    error.default_currency_slug.map((error, index) => (\r\n                                                                                        <div key={index}\r\n                                                                                             className=\"invalid-feedback\">\r\n                                                                                            {error}\r\n                                                                                        </div>\r\n                                                                                    ))\r\n                                                                                ) : null\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                ) : ''\r\n                                                                }\r\n                                                                <div\r\n                                                                    className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"name\">Nom <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"name\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Ex:  Satis\"\r\n                                                                            value={data.name}\r\n                                                                            onChange={(e) => onChangeName(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.name.length ? (\r\n                                                                                error.name.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.acronyme.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"Acronyme\">Acronyme <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"Acronyme\"\r\n                                                                            className={error.acronyme.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Ex:  Satis Acronyme\"\r\n                                                                            type=\"text\"\r\n                                                                            value={data.acronyme}\r\n                                                                            onChange={(e) => onChangeAcronyme(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.acronyme.length ? (\r\n                                                                                error.acronyme.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.iso_code.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"value\">Code Iso <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"value\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.iso_code.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Ex: 0000-Satis\"\r\n                                                                            value={data.iso_code}\r\n                                                                            onChange={(e) => onChangeIsoCode(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.iso_code.length ? (\r\n                                                                                error.iso_code.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Enregistrer</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/institution\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/institution\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-any-institution') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-any-institution') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(InstitutionForm);\r\n","C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\index.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\AppContainer.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\reducers\\planReducer.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\serviceWorker.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\reducers\\authReducer.js",["1003"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\reducers\\IdentityReducer.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\reducers\\treatmentReducer.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\reducers\\languageReducer.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\routeApp.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\actions\\authActions.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\token.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\actions\\planAction.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\NatureAppChoice.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\actions\\languageAction.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\actions\\treatmentAction.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\store\\actions\\IdentityAction.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\helpers\\permission.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\userClient.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\channel.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\layouts\\App.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Toast.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\config\\toastConfig.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Loader.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\includes\\Footer.jsx",["1004"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\includes\\HeaderMobile.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\middleware\\verifyToken.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\MessageAPIForm.jsx",["1005"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\SatisfactionMeasureDetail.jsx",["1006","1007"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\RecurencePage.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ConfigRapportAuto.jsx",["1008"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\TreatmentPeriod.jsx",["1009"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\APP_MACRO\\Filiale\\FilialeInstitutionForm.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\config\\errorPage.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\dataTable.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\currencyContry.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\constants\\date.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\InputRequire.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\MessageList.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\LoadingTable.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\AttachmentsButton.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\PeriodForm.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\EmptyTable.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ExportButton.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\InfirmationTable.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Pagination.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\TreatmentButtonDetail.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\AttachmentsButtonDetail.jsx",["1010"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\profile\\UpdatePassword.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\UnfoundedModal.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\profile\\PersonalInfo.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\DetailModal.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\helpers\\unit.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\helpers\\institution.js",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\WithoutCode.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\staff\\ConfirmSaveForm.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Clients\\ConfirmClientSaveForm.jsx",["1011","1012","1013","1014","1015","1016"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ClaimButton.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ClaimButtonDetail.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ClientButton.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ColToTreat.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ColToAssignStaff.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DoubleButton.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ColToAssignUnit.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ColToComplete.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ColToMeasure.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\FusionClaim.jsx",["1017","1018"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ColToValidate.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ClientButtonDetail.jsx",["1019","1020"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\IdentityForm.jsx",["1021","1022"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\Discussions\\Message.js",["1023","1024","1025","1026"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\ReasonSatisfaction.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\DashboardForm\\DashboardStatClaim.jsx",["1027"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\TreatmentForm.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\EmptyNotification.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ClaimCategoryImportPage.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\ActivatePilotPage.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\ClaimDetails.jsx",["1028","1029","1030","1031","1032"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\pages\\RuleAddPage.jsx",["1033","1034"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\Clients\\ImportClientForm.jsx",["1035","1036"],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\FormInformation.jsx",[],"C:\\laragon\\www\\React Js\\Reecriture\\satis-client\\src\\views\\components\\kanban\\KanbanElementDetail.jsx",[],{"ruleId":"1037","severity":1,"message":"1038","line":48,"column":22,"nodeType":"1039","messageId":"1040","endLine":48,"endColumn":29},{"ruleId":"1037","severity":1,"message":"1041","line":80,"column":27,"nodeType":"1039","messageId":"1040","endLine":80,"endColumn":31},{"ruleId":"1042","severity":1,"message":"1043","line":119,"column":49,"nodeType":"1044","endLine":119,"endColumn":128},{"ruleId":"1037","severity":1,"message":"1045","line":7,"column":21,"nodeType":"1039","messageId":"1040","endLine":7,"endColumn":34},{"ruleId":"1046","severity":1,"message":"1047","line":16,"column":25,"nodeType":"1044","endLine":16,"endColumn":77},{"ruleId":"1046","severity":1,"message":"1047","line":34,"column":33,"nodeType":"1044","endLine":35,"endColumn":72},{"ruleId":"1046","severity":1,"message":"1047","line":45,"column":45,"nodeType":"1044","endLine":45,"endColumn":119},{"ruleId":"1046","severity":1,"message":"1047","line":82,"column":33,"nodeType":"1044","endLine":82,"endColumn":143},{"ruleId":"1046","severity":1,"message":"1047","line":92,"column":45,"nodeType":"1044","endLine":92,"endColumn":119},{"ruleId":"1046","severity":1,"message":"1047","line":281,"column":37,"nodeType":"1044","endLine":281,"endColumn":147},{"ruleId":"1046","severity":1,"message":"1047","line":290,"column":49,"nodeType":"1044","endLine":290,"endColumn":123},{"ruleId":"1048","replacedBy":"1049"},{"ruleId":"1050","replacedBy":"1051"},{"ruleId":"1052","severity":1,"message":"1053","line":60,"column":7,"nodeType":"1054","endLine":60,"endColumn":9,"suggestions":"1055"},{"ruleId":"1052","severity":1,"message":"1056","line":66,"column":8,"nodeType":"1054","endLine":66,"endColumn":34,"suggestions":"1057"},{"ruleId":"1058","severity":1,"message":"1059","line":83,"column":33,"nodeType":"1044","endLine":83,"endColumn":88},{"ruleId":"1058","severity":1,"message":"1059","line":86,"column":33,"nodeType":"1044","endLine":86,"endColumn":121},{"ruleId":"1052","severity":1,"message":"1056","line":92,"column":8,"nodeType":"1054","endLine":92,"endColumn":34,"suggestions":"1060"},{"ruleId":"1052","severity":1,"message":"1061","line":77,"column":8,"nodeType":"1054","endLine":77,"endColumn":10,"suggestions":"1062"},{"ruleId":"1058","severity":1,"message":"1059","line":110,"column":33,"nodeType":"1044","endLine":110,"endColumn":88},{"ruleId":"1052","severity":1,"message":"1063","line":53,"column":7,"nodeType":"1054","endLine":53,"endColumn":9,"suggestions":"1064"},{"ruleId":"1052","severity":1,"message":"1065","line":78,"column":8,"nodeType":"1054","endLine":78,"endColumn":42,"suggestions":"1066"},{"ruleId":"1052","severity":1,"message":"1067","line":68,"column":8,"nodeType":"1054","endLine":68,"endColumn":10,"suggestions":"1068"},{"ruleId":"1058","severity":1,"message":"1059","line":134,"column":33,"nodeType":"1044","endLine":134,"endColumn":88},{"ruleId":"1058","severity":1,"message":"1059","line":141,"column":33,"nodeType":"1044","endLine":141,"endColumn":121},{"ruleId":"1052","severity":1,"message":"1069","line":94,"column":8,"nodeType":"1054","endLine":94,"endColumn":10,"suggestions":"1070"},{"ruleId":"1037","severity":1,"message":"1071","line":14,"column":9,"nodeType":"1039","messageId":"1040","endLine":14,"endColumn":18},{"ruleId":"1052","severity":1,"message":"1061","line":107,"column":8,"nodeType":"1054","endLine":107,"endColumn":10,"suggestions":"1072"},{"ruleId":"1052","severity":1,"message":"1073","line":59,"column":8,"nodeType":"1054","endLine":59,"endColumn":55,"suggestions":"1074"},{"ruleId":"1052","severity":1,"message":"1075","line":88,"column":8,"nodeType":"1054","endLine":88,"endColumn":48,"suggestions":"1076"},{"ruleId":"1077","severity":1,"message":"1078","line":92,"column":36,"nodeType":"1079","messageId":"1080","endLine":92,"endColumn":38},{"ruleId":"1052","severity":1,"message":"1073","line":56,"column":8,"nodeType":"1054","endLine":56,"endColumn":55,"suggestions":"1081"},{"ruleId":"1052","severity":1,"message":"1063","line":57,"column":8,"nodeType":"1054","endLine":57,"endColumn":10,"suggestions":"1082"},{"ruleId":"1037","severity":1,"message":"1083","line":130,"column":11,"nodeType":"1039","messageId":"1040","endLine":130,"endColumn":21},{"ruleId":"1058","severity":1,"message":"1059","line":207,"column":37,"nodeType":"1044","endLine":207,"endColumn":92},{"ruleId":"1058","severity":1,"message":"1059","line":209,"column":37,"nodeType":"1044","endLine":209,"endColumn":125},{"ruleId":"1058","severity":1,"message":"1059","line":214,"column":41,"nodeType":"1044","endLine":214,"endColumn":96},{"ruleId":"1058","severity":1,"message":"1059","line":216,"column":41,"nodeType":"1044","endLine":216,"endColumn":129},{"ruleId":"1052","severity":1,"message":"1063","line":55,"column":7,"nodeType":"1054","endLine":55,"endColumn":9,"suggestions":"1084"},{"ruleId":"1037","severity":1,"message":"1085","line":3,"column":9,"nodeType":"1039","messageId":"1040","endLine":3,"endColumn":13},{"ruleId":"1052","severity":1,"message":"1073","line":56,"column":8,"nodeType":"1054","endLine":56,"endColumn":55,"suggestions":"1086"},{"ruleId":"1052","severity":1,"message":"1087","line":82,"column":8,"nodeType":"1054","endLine":82,"endColumn":10,"suggestions":"1088"},{"ruleId":"1077","severity":1,"message":"1078","line":86,"column":31,"nodeType":"1079","messageId":"1080","endLine":86,"endColumn":33},{"ruleId":"1089","severity":1,"message":"1090","line":233,"column":121,"nodeType":"1091","messageId":"1092","endLine":233,"endColumn":122},{"ruleId":"1089","severity":1,"message":"1090","line":233,"column":128,"nodeType":"1091","messageId":"1092","endLine":233,"endColumn":129},{"ruleId":"1089","severity":1,"message":"1090","line":244,"column":115,"nodeType":"1091","messageId":"1092","endLine":244,"endColumn":116},{"ruleId":"1089","severity":1,"message":"1090","line":244,"column":122,"nodeType":"1091","messageId":"1092","endLine":244,"endColumn":123},{"ruleId":"1058","severity":1,"message":"1059","line":295,"column":29,"nodeType":"1044","endLine":295,"endColumn":84},{"ruleId":"1058","severity":1,"message":"1059","line":298,"column":29,"nodeType":"1044","endLine":298,"endColumn":117},{"ruleId":"1052","severity":1,"message":"1087","line":80,"column":8,"nodeType":"1054","endLine":80,"endColumn":10,"suggestions":"1093"},{"ruleId":"1058","severity":1,"message":"1059","line":208,"column":33,"nodeType":"1044","endLine":208,"endColumn":88},{"ruleId":"1058","severity":1,"message":"1059","line":150,"column":33,"nodeType":"1044","endLine":150,"endColumn":88},{"ruleId":"1052","severity":1,"message":"1094","line":66,"column":8,"nodeType":"1054","endLine":66,"endColumn":67,"suggestions":"1095"},{"ruleId":"1077","severity":1,"message":"1078","line":200,"column":21,"nodeType":"1079","messageId":"1080","endLine":200,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1063","line":49,"column":8,"nodeType":"1054","endLine":49,"endColumn":10,"suggestions":"1096"},{"ruleId":"1037","severity":1,"message":"1071","line":3,"column":9,"nodeType":"1039","messageId":"1040","endLine":3,"endColumn":18},{"ruleId":"1037","severity":1,"message":"1097","line":18,"column":35,"nodeType":"1039","messageId":"1040","endLine":18,"endColumn":71},{"ruleId":"1037","severity":1,"message":"1098","line":68,"column":19,"nodeType":"1039","messageId":"1040","endLine":68,"endColumn":27},{"ruleId":"1052","severity":1,"message":"1099","line":105,"column":8,"nodeType":"1054","endLine":105,"endColumn":10,"suggestions":"1100"},{"ruleId":"1058","severity":1,"message":"1059","line":185,"column":33,"nodeType":"1044","endLine":185,"endColumn":88},{"ruleId":"1052","severity":1,"message":"1094","line":86,"column":8,"nodeType":"1054","endLine":86,"endColumn":42,"suggestions":"1101"},{"ruleId":"1037","severity":1,"message":"1102","line":2,"column":8,"nodeType":"1039","messageId":"1040","endLine":2,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1069","line":56,"column":8,"nodeType":"1054","endLine":56,"endColumn":10,"suggestions":"1103"},{"ruleId":"1058","severity":1,"message":"1059","line":110,"column":33,"nodeType":"1044","endLine":110,"endColumn":88},{"ruleId":"1058","severity":1,"message":"1059","line":117,"column":33,"nodeType":"1044","endLine":117,"endColumn":121},{"ruleId":"1052","severity":1,"message":"1104","line":56,"column":7,"nodeType":"1054","endLine":56,"endColumn":9,"suggestions":"1105"},{"ruleId":"1052","severity":1,"message":"1106","line":79,"column":8,"nodeType":"1054","endLine":79,"endColumn":34,"suggestions":"1107"},{"ruleId":"1077","severity":1,"message":"1078","line":51,"column":26,"nodeType":"1079","messageId":"1080","endLine":51,"endColumn":28},{"ruleId":"1052","severity":1,"message":"1108","line":104,"column":8,"nodeType":"1054","endLine":104,"endColumn":10,"suggestions":"1109"},{"ruleId":"1052","severity":1,"message":"1056","line":70,"column":8,"nodeType":"1054","endLine":70,"endColumn":34,"suggestions":"1110"},{"ruleId":"1077","severity":1,"message":"1078","line":32,"column":26,"nodeType":"1079","messageId":"1080","endLine":32,"endColumn":28},{"ruleId":"1052","severity":1,"message":"1108","line":61,"column":8,"nodeType":"1054","endLine":61,"endColumn":10,"suggestions":"1111"},{"ruleId":"1089","severity":1,"message":"1090","line":239,"column":103,"nodeType":"1091","messageId":"1092","endLine":239,"endColumn":104},{"ruleId":"1052","severity":1,"message":"1063","line":56,"column":8,"nodeType":"1054","endLine":56,"endColumn":10,"suggestions":"1112"},{"ruleId":"1037","severity":1,"message":"1113","line":128,"column":11,"nodeType":"1039","messageId":"1040","endLine":128,"endColumn":29},{"ruleId":"1058","severity":1,"message":"1059","line":203,"column":29,"nodeType":"1044","endLine":203,"endColumn":84},{"ruleId":"1058","severity":1,"message":"1059","line":205,"column":29,"nodeType":"1044","endLine":205,"endColumn":117},{"ruleId":"1058","severity":1,"message":"1059","line":210,"column":33,"nodeType":"1044","endLine":210,"endColumn":88},{"ruleId":"1058","severity":1,"message":"1059","line":212,"column":33,"nodeType":"1044","endLine":212,"endColumn":121},{"ruleId":"1052","severity":1,"message":"1073","line":56,"column":8,"nodeType":"1054","endLine":56,"endColumn":55,"suggestions":"1114"},{"ruleId":"1052","severity":1,"message":"1115","line":48,"column":8,"nodeType":"1054","endLine":48,"endColumn":10,"suggestions":"1116"},{"ruleId":"1052","severity":1,"message":"1073","line":55,"column":8,"nodeType":"1054","endLine":55,"endColumn":55,"suggestions":"1117"},{"ruleId":"1052","severity":1,"message":"1073","line":53,"column":8,"nodeType":"1054","endLine":53,"endColumn":55,"suggestions":"1118"},{"ruleId":"1052","severity":1,"message":"1094","line":63,"column":8,"nodeType":"1054","endLine":63,"endColumn":55,"suggestions":"1119"},{"ruleId":"1052","severity":1,"message":"1120","line":58,"column":8,"nodeType":"1054","endLine":58,"endColumn":10,"suggestions":"1121"},{"ruleId":"1052","severity":1,"message":"1073","line":52,"column":8,"nodeType":"1054","endLine":52,"endColumn":55,"suggestions":"1122"},{"ruleId":"1052","severity":1,"message":"1063","line":70,"column":8,"nodeType":"1054","endLine":70,"endColumn":10,"suggestions":"1123"},{"ruleId":"1077","severity":1,"message":"1078","line":74,"column":28,"nodeType":"1079","messageId":"1080","endLine":74,"endColumn":30},{"ruleId":"1077","severity":1,"message":"1078","line":85,"column":24,"nodeType":"1079","messageId":"1080","endLine":85,"endColumn":26},{"ruleId":"1058","severity":1,"message":"1059","line":251,"column":33,"nodeType":"1044","endLine":251,"endColumn":88},{"ruleId":"1058","severity":1,"message":"1059","line":254,"column":33,"nodeType":"1044","endLine":255,"endColumn":79},{"ruleId":"1052","severity":1,"message":"1124","line":54,"column":8,"nodeType":"1054","endLine":54,"endColumn":10,"suggestions":"1125"},{"ruleId":"1052","severity":1,"message":"1073","line":53,"column":8,"nodeType":"1054","endLine":53,"endColumn":55,"suggestions":"1126"},{"ruleId":"1052","severity":1,"message":"1127","line":68,"column":8,"nodeType":"1054","endLine":68,"endColumn":10,"suggestions":"1128"},{"ruleId":"1052","severity":1,"message":"1129","line":83,"column":8,"nodeType":"1054","endLine":83,"endColumn":10,"suggestions":"1130"},{"ruleId":"1037","severity":1,"message":"1131","line":19,"column":9,"nodeType":"1039","messageId":"1040","endLine":19,"endColumn":14},{"ruleId":"1077","severity":1,"message":"1078","line":71,"column":45,"nodeType":"1079","messageId":"1080","endLine":71,"endColumn":47},{"ruleId":"1077","severity":1,"message":"1078","line":72,"column":41,"nodeType":"1079","messageId":"1080","endLine":72,"endColumn":43},{"ruleId":"1077","severity":1,"message":"1078","line":100,"column":29,"nodeType":"1079","messageId":"1080","endLine":100,"endColumn":31},{"ruleId":"1052","severity":1,"message":"1132","line":253,"column":8,"nodeType":"1054","endLine":253,"endColumn":10,"suggestions":"1133"},{"ruleId":"1037","severity":1,"message":"1134","line":1,"column":16,"nodeType":"1039","messageId":"1040","endLine":1,"endColumn":24},{"ruleId":"1037","severity":1,"message":"1135","line":3,"column":8,"nodeType":"1039","messageId":"1040","endLine":3,"endColumn":13},{"ruleId":"1037","severity":1,"message":"1136","line":4,"column":9,"nodeType":"1039","messageId":"1040","endLine":4,"endColumn":23},{"ruleId":"1037","severity":1,"message":"1097","line":6,"column":5,"nodeType":"1039","messageId":"1040","endLine":6,"endColumn":41},{"ruleId":"1037","severity":1,"message":"1137","line":6,"column":43,"nodeType":"1039","messageId":"1040","endLine":6,"endColumn":81},{"ruleId":"1037","severity":1,"message":"1138","line":11,"column":8,"nodeType":"1039","messageId":"1040","endLine":11,"endColumn":20},{"ruleId":"1037","severity":1,"message":"1085","line":12,"column":9,"nodeType":"1039","messageId":"1040","endLine":12,"endColumn":13},{"ruleId":"1052","severity":1,"message":"1139","line":39,"column":8,"nodeType":"1054","endLine":39,"endColumn":10,"suggestions":"1140"},{"ruleId":"1052","severity":1,"message":"1056","line":59,"column":8,"nodeType":"1054","endLine":59,"endColumn":34,"suggestions":"1141"},{"ruleId":"1058","severity":1,"message":"1059","line":92,"column":33,"nodeType":"1044","endLine":92,"endColumn":88},{"ruleId":"1058","severity":1,"message":"1059","line":95,"column":33,"nodeType":"1044","endLine":95,"endColumn":121},{"ruleId":"1052","severity":1,"message":"1069","line":49,"column":8,"nodeType":"1054","endLine":49,"endColumn":10,"suggestions":"1142"},{"ruleId":"1058","severity":1,"message":"1059","line":80,"column":33,"nodeType":"1044","endLine":80,"endColumn":88},{"ruleId":"1037","severity":1,"message":"1143","line":3,"column":25,"nodeType":"1039","messageId":"1040","endLine":3,"endColumn":31},{"ruleId":"1058","severity":1,"message":"1059","line":88,"column":29,"nodeType":"1044","endLine":88,"endColumn":84},{"ruleId":"1058","severity":1,"message":"1059","line":92,"column":29,"nodeType":"1044","endLine":92,"endColumn":145},{"ruleId":"1144","severity":1,"message":"1145","line":119,"column":45,"nodeType":"1044","endLine":119,"endColumn":101},{"ruleId":"1058","severity":1,"message":"1059","line":123,"column":49,"nodeType":"1044","endLine":123,"endColumn":93},{"ruleId":"1058","severity":1,"message":"1059","line":136,"column":49,"nodeType":"1044","endLine":136,"endColumn":89},{"ruleId":"1058","severity":1,"message":"1059","line":140,"column":49,"nodeType":"1044","endLine":140,"endColumn":89},{"ruleId":"1052","severity":1,"message":"1073","line":55,"column":8,"nodeType":"1054","endLine":55,"endColumn":55,"suggestions":"1146"},{"ruleId":"1037","severity":1,"message":"1147","line":6,"column":60,"nodeType":"1039","messageId":"1040","endLine":6,"endColumn":70},{"ruleId":"1052","severity":1,"message":"1063","line":54,"column":8,"nodeType":"1054","endLine":54,"endColumn":10,"suggestions":"1148"},{"ruleId":"1058","severity":1,"message":"1059","line":216,"column":33,"nodeType":"1044","endLine":216,"endColumn":121},{"ruleId":"1037","severity":1,"message":"1147","line":6,"column":60,"nodeType":"1039","messageId":"1040","endLine":6,"endColumn":70},{"ruleId":"1052","severity":1,"message":"1073","line":54,"column":8,"nodeType":"1054","endLine":54,"endColumn":55,"suggestions":"1149"},{"ruleId":"1150","severity":1,"message":"1151","line":166,"column":17,"nodeType":"1152","endLine":166,"endColumn":32},{"ruleId":"1058","severity":1,"message":"1059","line":207,"column":33,"nodeType":"1044","endLine":207,"endColumn":88},{"ruleId":"1058","severity":1,"message":"1059","line":210,"column":33,"nodeType":"1044","endLine":210,"endColumn":121},{"ruleId":"1052","severity":1,"message":"1087","line":76,"column":8,"nodeType":"1054","endLine":76,"endColumn":10,"suggestions":"1153"},{"ruleId":"1052","severity":1,"message":"1063","line":49,"column":8,"nodeType":"1054","endLine":49,"endColumn":10,"suggestions":"1154"},{"ruleId":"1052","severity":1,"message":"1075","line":74,"column":8,"nodeType":"1054","endLine":74,"endColumn":48,"suggestions":"1155"},{"ruleId":"1058","severity":1,"message":"1059","line":244,"column":33,"nodeType":"1044","endLine":244,"endColumn":88},{"ruleId":"1058","severity":1,"message":"1059","line":246,"column":33,"nodeType":"1044","endLine":246,"endColumn":146},{"ruleId":"1052","severity":1,"message":"1063","line":55,"column":8,"nodeType":"1054","endLine":55,"endColumn":10,"suggestions":"1156"},{"ruleId":"1037","severity":1,"message":"1157","line":129,"column":11,"nodeType":"1039","messageId":"1040","endLine":129,"endColumn":28},{"ruleId":"1158","severity":1,"message":"1159","line":129,"column":5,"nodeType":"1160","messageId":"1161","endLine":151,"endColumn":13},{"ruleId":"1077","severity":1,"message":"1078","line":155,"column":21,"nodeType":"1079","messageId":"1080","endLine":155,"endColumn":23},{"ruleId":"1052","severity":1,"message":"1162","line":149,"column":8,"nodeType":"1054","endLine":149,"endColumn":10,"suggestions":"1163"},{"ruleId":"1037","severity":1,"message":"1164","line":46,"column":12,"nodeType":"1039","messageId":"1040","endLine":46,"endColumn":18},{"ruleId":"1052","severity":1,"message":"1165","line":76,"column":9,"nodeType":"1166","endLine":76,"endColumn":42},{"ruleId":"1046","severity":1,"message":"1167","line":302,"column":89,"nodeType":"1044","endLine":306,"endColumn":124},{"ruleId":"1037","severity":1,"message":"1168","line":115,"column":12,"nodeType":"1039","messageId":"1040","endLine":115,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1099","line":177,"column":8,"nodeType":"1054","endLine":177,"endColumn":10,"suggestions":"1169"},{"ruleId":"1058","severity":1,"message":"1059","line":383,"column":29,"nodeType":"1044","endLine":383,"endColumn":84},{"ruleId":"1058","severity":1,"message":"1059","line":390,"column":29,"nodeType":"1044","endLine":390,"endColumn":117},{"ruleId":"1052","severity":1,"message":"1170","line":34,"column":8,"nodeType":"1054","endLine":34,"endColumn":27,"suggestions":"1171"},{"ruleId":"1052","severity":1,"message":"1172","line":41,"column":8,"nodeType":"1054","endLine":41,"endColumn":30,"suggestions":"1173"},{"ruleId":"1052","severity":1,"message":"1174","line":59,"column":8,"nodeType":"1054","endLine":59,"endColumn":10,"suggestions":"1175"},{"ruleId":"1052","severity":1,"message":"1176","line":75,"column":8,"nodeType":"1054","endLine":75,"endColumn":29,"suggestions":"1177"},{"ruleId":"1052","severity":1,"message":"1178","line":80,"column":8,"nodeType":"1054","endLine":80,"endColumn":30,"suggestions":"1179"},{"ruleId":"1052","severity":1,"message":"1178","line":85,"column":8,"nodeType":"1054","endLine":85,"endColumn":26,"suggestions":"1180"},{"ruleId":"1052","severity":1,"message":"1181","line":87,"column":33,"nodeType":"1039","endLine":87,"endColumn":44},{"ruleId":"1052","severity":1,"message":"1181","line":111,"column":36,"nodeType":"1039","endLine":111,"endColumn":47},{"ruleId":"1037","severity":1,"message":"1182","line":98,"column":8,"nodeType":"1039","messageId":"1040","endLine":98,"endColumn":20},{"ruleId":"1052","severity":1,"message":"1069","line":54,"column":8,"nodeType":"1054","endLine":54,"endColumn":10,"suggestions":"1183"},{"ruleId":"1052","severity":1,"message":"1056","line":57,"column":7,"nodeType":"1054","endLine":57,"endColumn":33,"suggestions":"1184"},{"ruleId":"1052","severity":1,"message":"1087","line":86,"column":8,"nodeType":"1054","endLine":86,"endColumn":10,"suggestions":"1185"},{"ruleId":"1052","severity":1,"message":"1186","line":99,"column":8,"nodeType":"1054","endLine":99,"endColumn":10,"suggestions":"1187"},{"ruleId":"1158","severity":1,"message":"1159","line":125,"column":9,"nodeType":"1160","messageId":"1161","endLine":127,"endColumn":10},{"ruleId":"1058","severity":1,"message":"1059","line":214,"column":29,"nodeType":"1044","endLine":214,"endColumn":84},{"ruleId":"1058","severity":1,"message":"1059","line":221,"column":29,"nodeType":"1044","endLine":221,"endColumn":117},{"ruleId":"1052","severity":1,"message":"1115","line":57,"column":8,"nodeType":"1054","endLine":57,"endColumn":10,"suggestions":"1188"},{"ruleId":"1052","severity":1,"message":"1075","line":87,"column":8,"nodeType":"1054","endLine":87,"endColumn":48,"suggestions":"1189"},{"ruleId":"1158","severity":1,"message":"1159","line":89,"column":5,"nodeType":"1160","messageId":"1161","endLine":95,"endColumn":13},{"ruleId":"1058","severity":1,"message":"1059","line":269,"column":33,"nodeType":"1044","endLine":269,"endColumn":88},{"ruleId":"1058","severity":1,"message":"1059","line":271,"column":33,"nodeType":"1044","endLine":271,"endColumn":146},{"ruleId":"1052","severity":1,"message":"1129","line":70,"column":8,"nodeType":"1054","endLine":70,"endColumn":12,"suggestions":"1190"},{"ruleId":"1191","severity":1,"message":"1192","line":86,"column":99,"nodeType":"1193","messageId":"1194","endLine":86,"endColumn":101},{"ruleId":"1191","severity":1,"message":"1192","line":87,"column":99,"nodeType":"1193","messageId":"1194","endLine":87,"endColumn":101},{"ruleId":"1058","severity":1,"message":"1059","line":115,"column":33,"nodeType":"1044","endLine":115,"endColumn":88},{"ruleId":"1052","severity":1,"message":"1162","line":93,"column":8,"nodeType":"1054","endLine":93,"endColumn":10,"suggestions":"1195"},{"ruleId":"1037","severity":1,"message":"1097","line":7,"column":5,"nodeType":"1039","messageId":"1040","endLine":7,"endColumn":41},{"ruleId":"1052","severity":1,"message":"1056","line":63,"column":8,"nodeType":"1054","endLine":63,"endColumn":30,"suggestions":"1196"},{"ruleId":"1052","severity":1,"message":"1063","line":53,"column":7,"nodeType":"1054","endLine":53,"endColumn":9,"suggestions":"1197"},{"ruleId":"1037","severity":1,"message":"1198","line":127,"column":22,"nodeType":"1039","messageId":"1040","endLine":127,"endColumn":33},{"ruleId":"1037","severity":1,"message":"1199","line":129,"column":19,"nodeType":"1039","messageId":"1040","endLine":129,"endColumn":27},{"ruleId":"1037","severity":1,"message":"1200","line":139,"column":27,"nodeType":"1039","messageId":"1040","endLine":139,"endColumn":43},{"ruleId":"1037","severity":1,"message":"1201","line":4,"column":9,"nodeType":"1039","messageId":"1040","endLine":4,"endColumn":25},{"ruleId":"1052","severity":1,"message":"1127","line":70,"column":8,"nodeType":"1054","endLine":70,"endColumn":10,"suggestions":"1202"},{"ruleId":"1052","severity":1,"message":"1203","line":94,"column":8,"nodeType":"1054","endLine":94,"endColumn":10,"suggestions":"1204"},{"ruleId":"1205","severity":1,"message":"1206","line":9,"column":1,"nodeType":"1207","endLine":28,"endColumn":2},{"ruleId":"1208","severity":1,"message":"1209","line":9,"column":106,"nodeType":"1152","endLine":9,"endColumn":121},{"ruleId":"1052","severity":1,"message":"1056","line":87,"column":8,"nodeType":"1054","endLine":87,"endColumn":34,"suggestions":"1210"},{"ruleId":"1052","severity":1,"message":"1211","line":79,"column":8,"nodeType":"1054","endLine":79,"endColumn":10,"suggestions":"1212"},{"ruleId":"1058","severity":1,"message":"1059","line":112,"column":33,"nodeType":"1044","endLine":112,"endColumn":88},{"ruleId":"1052","severity":1,"message":"1087","line":80,"column":7,"nodeType":"1054","endLine":80,"endColumn":9,"suggestions":"1213"},{"ruleId":"1052","severity":1,"message":"1073","line":54,"column":8,"nodeType":"1054","endLine":54,"endColumn":55,"suggestions":"1214"},{"ruleId":"1208","severity":1,"message":"1209","line":22,"column":64,"nodeType":"1152","endLine":22,"endColumn":81},{"ruleId":"1037","severity":1,"message":"1215","line":6,"column":5,"nodeType":"1039","messageId":"1040","endLine":6,"endColumn":31},{"ruleId":"1037","severity":1,"message":"1216","line":11,"column":9,"nodeType":"1039","messageId":"1040","endLine":11,"endColumn":27},{"ruleId":"1037","severity":1,"message":"1217","line":46,"column":12,"nodeType":"1039","messageId":"1040","endLine":46,"endColumn":19},{"ruleId":"1037","severity":1,"message":"1218","line":46,"column":21,"nodeType":"1039","messageId":"1040","endLine":46,"endColumn":31},{"ruleId":"1037","severity":1,"message":"1219","line":53,"column":12,"nodeType":"1039","messageId":"1040","endLine":53,"endColumn":18},{"ruleId":"1037","severity":1,"message":"1220","line":53,"column":20,"nodeType":"1039","messageId":"1040","endLine":53,"endColumn":29},{"ruleId":"1037","severity":1,"message":"1137","line":8,"column":5,"nodeType":"1039","messageId":"1040","endLine":8,"endColumn":43},{"ruleId":"1037","severity":1,"message":"1131","line":10,"column":9,"nodeType":"1039","messageId":"1040","endLine":10,"endColumn":14},{"ruleId":"1144","severity":1,"message":"1145","line":15,"column":37,"nodeType":"1044","endLine":16,"endColumn":55},{"ruleId":"1058","severity":1,"message":"1059","line":25,"column":49,"nodeType":"1044","endLine":26,"endColumn":84},{"ruleId":"1037","severity":1,"message":"1168","line":68,"column":12,"nodeType":"1039","messageId":"1040","endLine":68,"endColumn":24},{"ruleId":"1052","severity":1,"message":"1221","line":93,"column":8,"nodeType":"1054","endLine":93,"endColumn":10,"suggestions":"1222"},{"ruleId":"1144","severity":1,"message":"1145","line":58,"column":80,"nodeType":"1044","endLine":60,"endColumn":42},{"ruleId":"1089","severity":1,"message":"1090","line":104,"column":52,"nodeType":"1091","messageId":"1092","endLine":104,"endColumn":53},{"ruleId":"1058","severity":1,"message":"1059","line":136,"column":33,"nodeType":"1044","endLine":136,"endColumn":101},{"ruleId":"1058","severity":1,"message":"1059","line":145,"column":33,"nodeType":"1044","endLine":145,"endColumn":86},{"ruleId":"1052","severity":1,"message":"1223","line":20,"column":11,"nodeType":"1224","endLine":74,"endColumn":6},{"ruleId":"1037","severity":1,"message":"1225","line":52,"column":11,"nodeType":"1039","messageId":"1040","endLine":52,"endColumn":26},{"ruleId":"1037","severity":1,"message":"1226","line":62,"column":11,"nodeType":"1039","messageId":"1040","endLine":62,"endColumn":22},{"ruleId":"1144","severity":1,"message":"1145","line":146,"column":53,"nodeType":"1044","endLine":147,"endColumn":71},{"ruleId":"1058","severity":1,"message":"1059","line":156,"column":65,"nodeType":"1044","endLine":157,"endColumn":100},{"ruleId":"1208","severity":1,"message":"1209","line":310,"column":80,"nodeType":"1152","endLine":310,"endColumn":97},{"ruleId":"1052","severity":1,"message":"1139","line":110,"column":8,"nodeType":"1054","endLine":110,"endColumn":35,"suggestions":"1227"},{"ruleId":"1228","severity":1,"message":"1229","line":373,"column":21,"nodeType":"1039","messageId":"1230","endLine":373,"endColumn":29},{"ruleId":"1058","severity":1,"message":"1059","line":137,"column":33,"nodeType":"1044","endLine":137,"endColumn":88},{"ruleId":"1058","severity":1,"message":"1059","line":140,"column":33,"nodeType":"1044","endLine":140,"endColumn":121},"no-unused-vars","'mounted' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'seeHistorique' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","no-native-reassign",["1231"],"no-negated-in-lhs",["1232"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'editcategoryid'. Either include it or remove the dependency array.","ArrayExpression",["1233"],"React Hook useEffect has an unnecessary dependency: 'appConfig.apiDomaine'. Either exclude it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1234"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["1235"],"React Hook useEffect has missing dependencies: 'endPoint.list' and 'id'. Either include them or remove the dependency array.",["1236"],"React Hook useEffect has a missing dependency: 'numberPerPage'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1237"],"React Hook useEffect has missing dependencies: 'defaultData', 'id', and 'props.userPermissions'. Either include them or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1238"],"React Hook useEffect has a missing dependency: 'editfaqid'. Either include it or remove the dependency array.",["1239"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1240"],"'ERROR_401' is defined but never used.",["1241"],"React Hook useEffect has unnecessary dependencies: 'NUMBER_ELEMENT_PER_PAGE' and 'appConfig.apiDomaine'. Either exclude them or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1242"],"React Hook useEffect has an unnecessary dependency: 'NUMBER_ELEMENT_PER_PAGE'. Either exclude it or remove the dependency array. Outer scope values like 'NUMBER_ELEMENT_PER_PAGE' aren't valid dependencies because mutating them doesn't re-render the component.",["1243"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["1244"],["1245"],"'deleteFaqs' is assigned a value but never used.",["1246"],"'Link' is defined but never used.",["1247"],"React Hook useEffect has missing dependencies: 'endPoint.list' and 'numberPerPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1248"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["1249"],"React Hook useEffect has a missing dependency: 'props.userPermissions'. Either include it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1250"],["1251"],"'toastErrorMessageWithParameterConfig' is defined but never used.","'setError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'endPoint', 'id', and 'props.userPermissions'. Either include them or remove the dependency array.",["1252"],["1253"],"'InfirmationTable' is defined but never used.",["1254"],"React Hook useEffect has a missing dependency: 'edittypeid'. Either include it or remove the dependency array.",["1255"],"React Hook useEffect has a missing dependency: 'filterCurrency'. Either include it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1256"],"React Hook useEffect has missing dependencies: 'id' and 'initialState'. Either include them or remove the dependency array.",["1257"],["1258"],["1259"],["1260"],"'deleteCategoryFaqs' is assigned a value but never used.",["1261"],"React Hook useEffect has a missing dependency: 'numberPerPage'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberPage' needs the current value of 'numberPerPage'.",["1262"],["1263"],["1264"],["1265"],"React Hook useEffect has missing dependencies: 'id' and 'numberPerPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1266"],["1267"],["1268"],"React Hook useEffect has missing dependencies: 'numberPerPage' and 'props.plan'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberPage' needs the current value of 'numberPerPage'.",["1269"],["1270"],"React Hook useEffect has a missing dependency: 'defaultData'. Either include it or remove the dependency array.",["1271"],"React Hook useEffect has a missing dependency: 'props.userPermissions'. Either include it or remove the dependency array.",["1272"],"'debug' is defined but never used.","React Hook useEffect has missing dependencies: 'applyPossibleFilter', 'endpoint', and 'renderChart'. Either include them or remove the dependency array.",["1273"],"'useState' is defined but never used.","'axios' is defined but never used.","'ToastBottomEnd' is defined but never used.","'toastSuccessMessageWithParameterConfig' is defined but never used.","'InputRequire' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["1274"],["1275"],["1276"],"'Switch' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["1277"],"'loadScript' is defined but never used.",["1278"],["1279"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["1280"],["1281"],["1282"],["1283"],"'deleteInstitution' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'defaultData' and 'props.userPermissions'. Either include them or remove the dependency array.",["1284"],"'search' is assigned a value but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'disableInput' is assigned a value but never used.",["1285"],"React Hook useCallback has an unnecessary dependency: 'EventNotification'. Either exclude it or remove the dependency array. Outer scope values like 'EventNotification' aren't valid dependencies because mutating them doesn't re-render the component.",["1286"],"React Hook useCallback has an unnecessary dependency: 'RelaunchNotification'. Either exclude it or remove the dependency array. Outer scope values like 'RelaunchNotification' aren't valid dependencies because mutating them doesn't re-render the component.",["1287"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["1288"],"React Hook useEffect has missing dependencies: 'fetchData' and 'props.user'. Either include them or remove the dependency array.",["1289"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["1290"],["1291"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'RuleEditPage' is defined but never used.",["1292"],["1293"],["1294"],"React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1295"],["1296"],["1297"],["1298"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator",["1299"],["1300"],["1301"],"'setAccounts' is assigned a value but never used.","'setUnits' is assigned a value but never used.","'setDisabledInput' is assigned a value but never used.","'verifyPermission' is defined but never used.",["1302"],"React Hook useEffect has missing dependencies: 'id' and 'props.userPermissions'. Either include them or remove the dependency array.",["1303"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["1304"],"React Hook useEffect has missing dependencies: 'endPoint.edit' and 'id'. Either include them or remove the dependency array.",["1305"],["1306"],["1307"],"'toastAddErrorMessageConfig' is defined but never used.","'formatInstitutions' is defined but never used.","'clients' is assigned a value but never used.","'setClients' is assigned a value but never used.","'client' is assigned a value but never used.","'setClient' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'endPoint.list' and 'props.userPermissions'. Either include them or remove the dependency array.",["1308"],"The 'defaultData' object makes the dependencies of useEffect Hook (at line 130) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'defaultData' in its own useMemo() Hook.","VariableDeclarator","'onClickPrevious' is assigned a value but never used.","'onClickNext' is assigned a value but never used.",["1309"],"no-redeclare","'endpoint' is already defined.","redeclared","no-global-assign","no-unsafe-negation",{"desc":"1310","fix":"1311"},{"desc":"1312","fix":"1313"},{"desc":"1312","fix":"1314"},{"desc":"1315","fix":"1316"},{"desc":"1317","fix":"1318"},{"desc":"1319","fix":"1320"},{"desc":"1321","fix":"1322"},{"desc":"1312","fix":"1323"},{"desc":"1315","fix":"1324"},{"desc":"1325","fix":"1326"},{"desc":"1327","fix":"1328"},{"desc":"1325","fix":"1329"},{"desc":"1317","fix":"1330"},{"desc":"1317","fix":"1331"},{"desc":"1325","fix":"1332"},{"desc":"1333","fix":"1334"},{"desc":"1333","fix":"1335"},{"desc":"1336","fix":"1337"},{"desc":"1317","fix":"1338"},{"desc":"1339","fix":"1340"},{"desc":"1336","fix":"1341"},{"desc":"1312","fix":"1342"},{"desc":"1343","fix":"1344"},{"desc":"1345","fix":"1346"},{"desc":"1347","fix":"1348"},{"desc":"1312","fix":"1349"},{"desc":"1347","fix":"1350"},{"desc":"1317","fix":"1351"},{"desc":"1325","fix":"1352"},{"desc":"1317","fix":"1353"},{"desc":"1325","fix":"1354"},{"desc":"1325","fix":"1355"},{"desc":"1356","fix":"1357"},{"desc":"1358","fix":"1359"},{"desc":"1325","fix":"1360"},{"desc":"1317","fix":"1361"},{"desc":"1362","fix":"1363"},{"desc":"1325","fix":"1364"},{"desc":"1365","fix":"1366"},{"desc":"1356","fix":"1367"},{"desc":"1368","fix":"1369"},{"desc":"1370","fix":"1371"},{"desc":"1312","fix":"1372"},{"desc":"1312","fix":"1373"},{"desc":"1325","fix":"1374"},{"desc":"1317","fix":"1375"},{"desc":"1325","fix":"1376"},{"desc":"1333","fix":"1377"},{"desc":"1317","fix":"1378"},{"desc":"1327","fix":"1379"},{"desc":"1317","fix":"1380"},{"desc":"1381","fix":"1382"},{"desc":"1339","fix":"1383"},{"desc":"1325","fix":"1384"},{"desc":"1325","fix":"1385"},{"desc":"1386","fix":"1387"},{"desc":"1388","fix":"1389"},{"desc":"1390","fix":"1391"},{"desc":"1390","fix":"1392"},{"desc":"1312","fix":"1393"},{"desc":"1312","fix":"1394"},{"desc":"1333","fix":"1395"},{"desc":"1396","fix":"1397"},{"desc":"1317","fix":"1398"},{"desc":"1327","fix":"1399"},{"desc":"1400","fix":"1401"},{"desc":"1381","fix":"1402"},{"desc":"1325","fix":"1403"},{"desc":"1317","fix":"1404"},{"desc":"1365","fix":"1405"},{"desc":"1400","fix":"1406"},{"desc":"1312","fix":"1407"},{"desc":"1408","fix":"1409"},{"desc":"1333","fix":"1410"},{"desc":"1325","fix":"1411"},{"desc":"1412","fix":"1413"},{"desc":"1414","fix":"1415"},"Update the dependencies array to be: [editcategoryid]",{"range":"1416","text":"1417"},"Update the dependencies array to be: [id]",{"range":"1418","text":"1419"},{"range":"1420","text":"1419"},"Update the dependencies array to be: [endPoint.list, id]",{"range":"1421","text":"1422"},"Update the dependencies array to be: [numberPerPage]",{"range":"1423","text":"1424"},"Update the dependencies array to be: [props.plan, props.userPermissions, id, defaultData]",{"range":"1425","text":"1426"},"Update the dependencies array to be: [editfaqid]",{"range":"1427","text":"1428"},{"range":"1429","text":"1419"},{"range":"1430","text":"1422"},"Update the dependencies array to be: []",{"range":"1431","text":"1432"},"Update the dependencies array to be: [endPoint.list]",{"range":"1433","text":"1434"},{"range":"1435","text":"1432"},{"range":"1436","text":"1424"},{"range":"1437","text":"1424"},{"range":"1438","text":"1432"},"Update the dependencies array to be: [endPoint.list, numberPerPage]",{"range":"1439","text":"1440"},{"range":"1441","text":"1440"},"Update the dependencies array to be: [props.plan, props.userPermissions]",{"range":"1442","text":"1443"},{"range":"1444","text":"1424"},"Update the dependencies array to be: [endPoint, id, props.userPermissions]",{"range":"1445","text":"1446"},{"range":"1447","text":"1443"},{"range":"1448","text":"1419"},"Update the dependencies array to be: [edittypeid]",{"range":"1449","text":"1450"},"Update the dependencies array to be: [filterCurrency, id]",{"range":"1451","text":"1452"},"Update the dependencies array to be: [id, initialState]",{"range":"1453","text":"1454"},{"range":"1455","text":"1419"},{"range":"1456","text":"1454"},{"range":"1457","text":"1424"},{"range":"1458","text":"1432"},{"range":"1459","text":"1424"},{"range":"1460","text":"1432"},{"range":"1461","text":"1432"},"Update the dependencies array to be: [props.userPermissions]",{"range":"1462","text":"1463"},"Update the dependencies array to be: [id, numberPerPage]",{"range":"1464","text":"1465"},{"range":"1466","text":"1432"},{"range":"1467","text":"1424"},"Update the dependencies array to be: [numberPerPage, props.plan]",{"range":"1468","text":"1469"},{"range":"1470","text":"1432"},"Update the dependencies array to be: [defaultData]",{"range":"1471","text":"1472"},{"range":"1473","text":"1463"},"Update the dependencies array to be: [applyPossibleFilter, endpoint, renderChart]",{"range":"1474","text":"1475"},"Update the dependencies array to be: [data]",{"range":"1476","text":"1477"},{"range":"1478","text":"1419"},{"range":"1479","text":"1419"},{"range":"1480","text":"1432"},{"range":"1481","text":"1424"},{"range":"1482","text":"1432"},{"range":"1483","text":"1440"},{"range":"1484","text":"1424"},{"range":"1485","text":"1434"},{"range":"1486","text":"1424"},"Update the dependencies array to be: [defaultData, props.userPermissions]",{"range":"1487","text":"1488"},{"range":"1489","text":"1446"},{"range":"1490","text":"1432"},{"range":"1491","text":"1432"},"Update the dependencies array to be: [fetchData]",{"range":"1492","text":"1493"},"Update the dependencies array to be: [fetchData, props.user, props.user.identite]",{"range":"1494","text":"1495"},"Update the dependencies array to be: [props]",{"range":"1496","text":"1497"},{"range":"1498","text":"1497"},{"range":"1499","text":"1419"},{"range":"1500","text":"1419"},{"range":"1501","text":"1440"},"Update the dependencies array to be: [id, props]",{"range":"1502","text":"1503"},{"range":"1504","text":"1424"},{"range":"1505","text":"1434"},"Update the dependencies array to be: [id, props.userPermissions]",{"range":"1506","text":"1507"},{"range":"1508","text":"1488"},{"range":"1509","text":"1432"},{"range":"1510","text":"1424"},{"range":"1511","text":"1472"},{"range":"1512","text":"1507"},{"range":"1513","text":"1419"},"Update the dependencies array to be: [endPoint.edit, id]",{"range":"1514","text":"1515"},{"range":"1516","text":"1440"},{"range":"1517","text":"1432"},"Update the dependencies array to be: [endPoint.list, props.userPermissions]",{"range":"1518","text":"1519"},"Update the dependencies array to be: [data, id, props.userPermissions]",{"range":"1520","text":"1521"},[1978,1980],"[editcategoryid]",[2186,2212],"[id]",[3262,3288],[2899,2901],"[endPoint.list, id]",[2171,2173],"[numberPerPage]",[3269,3303],"[props.plan, props.userPermissions, id, defaultData]",[2480,2482],"[editfaqid]",[4247,4249],[4222,4224],[2545,2592],"[]",[3781,3821],"[endPoint.list]",[2457,2504],[2415,2417],[2467,2469],[2479,2526],[3664,3666],"[endPoint.list, numberPerPage]",[3055,3057],[3064,3123],"[props.plan, props.userPermissions]",[2117,2119],[4362,4364],"[endPoint, id, props.userPermissions]",[3630,3664],[1787,1789],[1944,1946],"[edittypeid]",[2809,2835],"[filterCurrency, id]",[4244,4246],"[id, initialState]",[2520,2546],[2171,2173],[2479,2481],[2442,2489],[2142,2144],[2404,2451],[2407,2454],[2883,2930],"[props.userPermissions]",[2667,2669],"[id, numberPerPage]",[2345,2392],[3038,3040],[2631,2633],"[numberPerPage, props.plan]",[2370,2417],[2318,2320],"[defaultData]",[2759,2761],[9891,9893],"[applyPossibleFilter, endpoint, renderChart]",[1566,1568],"[data]",[1958,1984],[1971,1973],[2490,2537],[2442,2444],[2494,2541],[3136,3138],[2116,2118],[2961,3001],[2452,2454],[5886,5888],"[defaultData, props.userPermissions]",[8536,8538],[1662,1681],[1899,1921],[2505,2507],"[fetchData]",[3293,3314],"[fetchData, props.user, props.user.identite]",[3449,3471],"[props]",[3594,3612],[1969,1971],[1961,1987],[3736,3738],[4372,4374],"[id, props]",[2301,2303],[3711,3751],[3300,3304],"[id, props.userPermissions]",[3246,3248],[2690,2712],[2467,2469],[2568,2570],[3862,3864],[3228,3254],[3012,3014],"[endPoint.edit, id]",[3372,3374],[2385,2432],[3210,3212],"[endPoint.list, props.userPermissions]",[5705,5732],"[data, id, props.userPermissions]"]