<<<<<<< HEAD
[{"/var/vhosts/satis-pro/client/satis-client/src/index.js":"1","/var/vhosts/satis-pro/client/satis-client/src/serviceWorker.js":"2","/var/vhosts/satis-pro/client/satis-client/src/AppContainer.js":"3","/var/vhosts/satis-pro/client/satis-client/src/store/reducers/languageReducer.js":"4","/var/vhosts/satis-pro/client/satis-client/src/store/reducers/authReducer.js":"5","/var/vhosts/satis-pro/client/satis-client/src/store/reducers/treatmentReducer.js":"6","/var/vhosts/satis-pro/client/satis-client/src/store/reducers/IdentityReducer.js":"7","/var/vhosts/satis-pro/client/satis-client/src/store/reducers/planReducer.js":"8","/var/vhosts/satis-pro/client/satis-client/src/NatureAppChoice.js":"9","/var/vhosts/satis-pro/client/satis-client/src/routeApp.js":"10","/var/vhosts/satis-pro/client/satis-client/src/store/actions/planAction.js":"11","/var/vhosts/satis-pro/client/satis-client/src/config/appConfig.js":"12","/var/vhosts/satis-pro/client/satis-client/src/constants/token.js":"13","/var/vhosts/satis-pro/client/satis-client/src/store/actions/languageAction.js":"14","/var/vhosts/satis-pro/client/satis-client/src/store/actions/authActions.js":"15","/var/vhosts/satis-pro/client/satis-client/src/store/actions/treatmentAction.js":"16","/var/vhosts/satis-pro/client/satis-client/src/store/actions/IdentityAction.js":"17","/var/vhosts/satis-pro/client/satis-client/src/helpers/function.js":"18","/var/vhosts/satis-pro/client/satis-client/src/views/components/Loader.jsx":"19","/var/vhosts/satis-pro/client/satis-client/src/modules/login/views/Pages/LoginPage.jsx":"20","/var/vhosts/satis-pro/client/satis-client/src/views/components/ConfirmationAlert.js":"21","/var/vhosts/satis-pro/client/satis-client/src/config/confirmConfig.js":"22","/var/vhosts/satis-pro/client/satis-client/src/constants/channel.js":"23","/var/vhosts/satis-pro/client/satis-client/src/helpers/permission.js":"24","/var/vhosts/satis-pro/client/satis-client/src/constants/userClient.js":"25","/var/vhosts/satis-pro/client/satis-client/src/views/layouts/App.jsx":"26","/var/vhosts/satis-pro/client/satis-client/src/views/components/Toast.js":"27","/var/vhosts/satis-pro/client/satis-client/src/config/toastConfig.js":"28","/var/vhosts/satis-pro/client/satis-client/src/views/includes/HeaderMobile.jsx":"29","/var/vhosts/satis-pro/client/satis-client/src/views/includes/Footer.jsx":"30","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Error401.jsx":"31","/var/vhosts/satis-pro/client/satis-client/src/views/includes/Body.jsx":"32","/var/vhosts/satis-pro/client/satis-client/src/views/includes/Nav.jsx":"33","/var/vhosts/satis-pro/client/satis-client/src/views/includes/Aside.jsx":"34","/var/vhosts/satis-pro/client/satis-client/src/views/components/FaqsForm.jsx":"35","/var/vhosts/satis-pro/client/satis-client/src/middleware/verifyToken.js":"36","/var/vhosts/satis-pro/client/satis-client/src/constants/notification.js":"37","/var/vhosts/satis-pro/client/satis-client/src/views/pages/FAQsPage.jsx":"38","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Dashboards.jsx":"39","/var/vhosts/satis-pro/client/satis-client/src/views/pages/PercentageMinFusion.jsx":"40","/var/vhosts/satis-pro/client/satis-client/src/views/pages/RejectLimitPage.jsx":"41","/var/vhosts/satis-pro/client/satis-client/src/views/components/CategoryFaqsForm.jsx":"42","/var/vhosts/satis-pro/client/satis-client/src/views/components/CategoryClientForm.jsx":"43","/var/vhosts/satis-pro/client/satis-client/src/views/components/TypeClientForm.jsx":"44","/var/vhosts/satis-pro/client/satis-client/src/views/components/PositionForm.jsx":"45","/var/vhosts/satis-pro/client/satis-client/src/views/components/ClaimCategoryForm.jsx":"46","/var/vhosts/satis-pro/client/satis-client/src/views/components/SeverityLevelForm.jsx":"47","/var/vhosts/satis-pro/client/satis-client/src/views/components/CurrencyForm.jsx":"48","/var/vhosts/satis-pro/client/satis-client/src/views/components/ChannelForm.jsx":"49","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ConfigNotification.jsx":"50","/var/vhosts/satis-pro/client/satis-client/src/views/components/StaffChannels.jsx":"51","/var/vhosts/satis-pro/client/satis-client/src/views/components/MessageAPIForm.jsx":"52","/var/vhosts/satis-pro/client/satis-client/src/views/pages/InstitutionMessageApi.jsx":"53","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimAssignToStaffDetail.jsx":"54","/var/vhosts/satis-pro/client/satis-client/src/views/pages/RecurencePage.jsx":"55","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Mail.jsx":"56","/var/vhosts/satis-pro/client/satis-client/src/views/pages/PerformanceIndicator.jsx":"57","/var/vhosts/satis-pro/client/satis-client/src/views/pages/UnitType.jsx":"58","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Unit.jsx":"59","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Position.jsx":"60","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Staff.jsx":"61","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimCategory.jsx":"62","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimObject.jsx":"63","/var/vhosts/satis-pro/client/satis-client/src/views/pages/FAQs.jsx":"64","/var/vhosts/satis-pro/client/satis-client/src/views/pages/CategoryFAQs.jsx":"65","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Institution.jsx":"66","/var/vhosts/satis-pro/client/satis-client/src/views/pages/CategoryClient.jsx":"67","/var/vhosts/satis-pro/client/satis-client/src/views/pages/TypeClient.jsx":"68","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Clients.jsx":"69","/var/vhosts/satis-pro/client/satis-client/src/views/pages/SeverityLevel.jsx":"70","/var/vhosts/satis-pro/client/satis-client/src/views/components/UnitTypeForm.jsx":"71","/var/vhosts/satis-pro/client/satis-client/src/views/components/PerformanceIndicatorForm.jsx":"72","/var/vhosts/satis-pro/client/satis-client/src/views/components/UnitForm.jsx":"73","/var/vhosts/satis-pro/client/satis-client/src/views/components/ClaimObjectForm.jsx":"74","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Currency.jsx":"75","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Channel.jsx":"76","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ConfigRequirements.jsx":"77","/var/vhosts/satis-pro/client/satis-client/src/views/components/RelationShipForm.jsx":"78","/var/vhosts/satis-pro/client/satis-client/src/views/pages/RelationShip.jsx":"79","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimAssign.jsx":"80","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimList.jsx":"81","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimAssignToStaff.jsx":"82","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimToValidatedList.jsx":"83","/var/vhosts/satis-pro/client/satis-client/src/views/pages/SatisfactionMeasure.jsx":"84","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimsArchived.jsx":"85","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/AddChatsForm.jsx":"86","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/AddMemberForm.jsx":"87","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ConfigRapportAuto.jsx":"88","/var/vhosts/satis-pro/client/satis-client/src/views/pages/MessageApi.jsx":"89","/var/vhosts/satis-pro/client/satis-client/src/views/components/ConfigRapportAutoForm.jsx":"90","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimListDetail.jsx":"91","/var/vhosts/satis-pro/client/satis-client/src/views/components/EmptyNotification.jsx":"92","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimImportPage.jsx":"93","/var/vhosts/satis-pro/client/satis-client/src/views/components/Clients/ClientForm.jsx":"94","/var/vhosts/satis-pro/client/satis-client/src/views/pages/IncompleteClaims.jsx":"95","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ConfigProcessingCircuit.jsx":"96","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimAssignDetail.jsx":"97","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimMonitoring.jsx":"98","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/Participants.jsx":"99","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/RemoveChats.jsx":"100","/var/vhosts/satis-pro/client/satis-client/src/views/components/Institutions/InstitutionForm.jsx":"101","/var/vhosts/satis-pro/client/satis-client/src/APP_MACRO/Filiale/FilialeInstitutionForm.jsx":"102","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ProfilePage.jsx":"103","/var/vhosts/satis-pro/client/satis-client/src/views/components/staff/StaffForm.jsx":"104","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/Chats.jsx":"105","/var/vhosts/satis-pro/client/satis-client/src/views/pages/RuleEditPage.jsx":"106","/var/vhosts/satis-pro/client/satis-client/src/views/pages/RuleAddPage.jsx":"107","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimReporting.jsx":"108","/var/vhosts/satis-pro/client/satis-client/src/views/pages/RulePage.jsx":"109","/var/vhosts/satis-pro/client/satis-client/src/APP_MACRO/Holding/HoldingClientForm.jsx":"110","/var/vhosts/satis-pro/client/satis-client/src/config/errorPage.js":"111","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimAdd.jsx":"112","/var/vhosts/satis-pro/client/satis-client/src/views/components/IncompleteClaimsEdit.jsx":"113","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ActivatePilotPage.jsx":"114","/var/vhosts/satis-pro/client/satis-client/src/views/components/FaqListe.jsx":"115","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimCategoryImportPage.jsx":"116","/var/vhosts/satis-pro/client/satis-client/src/views/pages/StaffImportPage.jsx":"117","/var/vhosts/satis-pro/client/satis-client/src/constants/dataTable.js":"118","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimObjectImportPage.jsx":"119","/var/vhosts/satis-pro/client/satis-client/src/views/pages/HistoricClaimsTraetment.jsx":"120","/var/vhosts/satis-pro/client/satis-client/src/views/components/Institutions/ImportInstitutionForm.jsx":"121","/var/vhosts/satis-pro/client/satis-client/src/views/components/Clients/ImportClientForm.jsx":"122","/var/vhosts/satis-pro/client/satis-client/src/views/pages/HistoricClaimsAdd.jsx":"123","/var/vhosts/satis-pro/client/satis-client/src/constants/date.js":"124","/var/vhosts/satis-pro/client/satis-client/src/views/components/InputRequire.jsx":"125","/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/ClaimToPointOfServices.jsx":"126","/var/vhosts/satis-pro/client/satis-client/src/views/components/LoadingTable.jsx":"127","/var/vhosts/satis-pro/client/satis-client/src/views/components/AttachmentsButton.jsx":"128","/var/vhosts/satis-pro/client/satis-client/src/views/components/ClaimButton.jsx":"129","/var/vhosts/satis-pro/client/satis-client/src/views/components/ExportButton.jsx":"130","/var/vhosts/satis-pro/client/satis-client/src/views/components/Pagination.jsx":"131","/var/vhosts/satis-pro/client/satis-client/src/views/components/InfirmationTable.jsx":"132","/var/vhosts/satis-pro/client/satis-client/src/views/components/AttachmentsButtonDetail.jsx":"133","/var/vhosts/satis-pro/client/satis-client/src/views/components/ClaimButtonDetail.jsx":"134","/var/vhosts/satis-pro/client/satis-client/src/views/components/ImportFileForm.jsx":"135","/var/vhosts/satis-pro/client/satis-client/src/views/components/HeaderTablePage.jsx":"136","/var/vhosts/satis-pro/client/satis-client/src/views/components/UnfoundedModal.jsx":"137","/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/DetailModal.jsx":"138","/var/vhosts/satis-pro/client/satis-client/src/views/components/WithoutCode.jsx":"139","/var/vhosts/satis-pro/client/satis-client/src/views/components/profile/UpdatePassword.jsx":"140","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/MessageList.js":"141","/var/vhosts/satis-pro/client/satis-client/src/helpers/institution.js":"142","/var/vhosts/satis-pro/client/satis-client/src/helpers/unit.js":"143","/var/vhosts/satis-pro/client/satis-client/src/views/components/Clients/ConfirmClientSaveForm.jsx":"144","/var/vhosts/satis-pro/client/satis-client/src/views/components/EmptyTable.jsx":"145","/var/vhosts/satis-pro/client/satis-client/src/views/components/staff/ConfirmSaveForm.jsx":"146","/var/vhosts/satis-pro/client/satis-client/src/views/components/profile/PersonalInfo.jsx":"147","/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ColToMeasure.jsx":"148","/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ColToValidate.jsx":"149","/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ColToTreat.jsx":"150","/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ColToAssignStaff.jsx":"151","/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ColToAssignUnit.jsx":"152","/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ColToComplete.jsx":"153","/var/vhosts/satis-pro/client/satis-client/src/views/components/DoubleButtonDetail.jsx":"154","/var/vhosts/satis-pro/client/satis-client/src/views/components/ClientButtonDetail.jsx":"155","/var/vhosts/satis-pro/client/satis-client/src/views/components/DoubleButton.jsx":"156","/var/vhosts/satis-pro/client/satis-client/src/views/components/ClientButton.jsx":"157","/var/vhosts/satis-pro/client/satis-client/src/constants/currencyContry.js":"158","/var/vhosts/satis-pro/client/satis-client/src/views/components/ReasonModal.jsx":"159","/var/vhosts/satis-pro/client/satis-client/src/views/components/FusionClaim.jsx":"160","/var/vhosts/satis-pro/client/satis-client/src/views/components/Modal/ConfirmClaimAddModal.jsx":"161","/var/vhosts/satis-pro/client/satis-client/src/views/components/IdentityForm.jsx":"162","/var/vhosts/satis-pro/client/satis-client/src/views/components/TreatmentForm.jsx":"163","/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/Message.js":"164","/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/ClaimToInstitution.jsx":"165","/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/GraphChannel.jsx":"166","/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/DashboardStatistic.jsx":"167","/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/DashboardStatClaim.jsx":"168","/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/DashboardSummaryReport.jsx":"169","/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/DashboardClaimsActivity.jsx":"170","/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/DashboardClaimsUnit.jsx":"171","/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/DashboardClaimsMy.jsx":"172","/var/vhosts/satis-pro/client/satis-client/src/APP_MACRO/Holding/DashboardClaimsAll.jsx":"173","/var/vhosts/satis-pro/client/satis-client/src/views/components/ConfigCoefficient.jsx":"174","/var/vhosts/satis-pro/client/satis-client/src/views/pages/UserEdit.jsx":"175","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ParametersComponent.jsx":"176","/var/vhosts/satis-pro/client/satis-client/src/views/pages/TreatmentPeriodAdd.jsx":"177","/var/vhosts/satis-pro/client/satis-client/src/views/pages/QualificationPeriodAdd.jsx":"178","/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ClaimDetails.jsx":"179","/var/vhosts/satis-pro/client/satis-client/src/views/components/ParametersComponentEdit.jsx":"180","/var/vhosts/satis-pro/client/satis-client/src/views/pages/TreatmentPeriod.jsx":"181","/var/vhosts/satis-pro/client/satis-client/src/views/pages/QualificationPeriod.jsx":"182","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimsArchivedDetail.jsx":"183","/var/vhosts/satis-pro/client/satis-client/src/views/pages/UserAdd.jsx":"184","/var/vhosts/satis-pro/client/satis-client/src/views/pages/SatisfactionMeasureDetail.jsx":"185","/var/vhosts/satis-pro/client/satis-client/src/views/pages/User.jsx":"186","/var/vhosts/satis-pro/client/satis-client/src/views/components/FormInformation.jsx":"187","/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimToValidatedListDetail.jsx":"188","/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/KanbanElementDetail.jsx":"189","/var/vhosts/satis-pro/client/satis-client/src/views/components/PeriodForm.jsx":"190","/var/vhosts/satis-pro/client/satis-client/src/views/components/ReasonSatisfaction.jsx":"191","/var/vhosts/satis-pro/client/satis-client/src/views/components/TreatmentButtonDetail.jsx":"192"},{"size":1011,"mtime":1606924266933,"results":"193","hashOfConfig":"194"},{"size":5085,"mtime":1606924029865,"results":"195","hashOfConfig":"194"},{"size":2176,"mtime":1606924266933,"results":"196","hashOfConfig":"194"},{"size":668,"mtime":1606924266933,"results":"197","hashOfConfig":"194"},{"size":858,"mtime":1606924266933,"results":"198","hashOfConfig":"194"},{"size":641,"mtime":1606924266933,"results":"199","hashOfConfig":"194"},{"size":852,"mtime":1606924266933,"results":"200","hashOfConfig":"194"},{"size":566,"mtime":1606924266933,"results":"201","hashOfConfig":"194"},{"size":6709,"mtime":1606924266933,"results":"202","hashOfConfig":"194"},{"size":1010,"mtime":1606924266933,"results":"203","hashOfConfig":"194"},{"size":250,"mtime":1606924266933,"results":"204","hashOfConfig":"194"},{"size":688,"mtime":1606926767578,"results":"205","hashOfConfig":"194"},{"size":69,"mtime":1606924266933,"results":"206","hashOfConfig":"194"},{"size":158,"mtime":1606924266933,"results":"207","hashOfConfig":"194"},{"size":232,"mtime":1606924266933,"results":"208","hashOfConfig":"194"},{"size":135,"mtime":1606924266933,"results":"209","hashOfConfig":"194"},{"size":131,"mtime":1606924266933,"results":"210","hashOfConfig":"194"},{"size":18338,"mtime":1606924266933,"results":"211","hashOfConfig":"194"},{"size":351,"mtime":1606924266941,"results":"212","hashOfConfig":"194"},{"size":13231,"mtime":1606924266933,"results":"213","hashOfConfig":"194"},{"size":331,"mtime":1606924266937,"results":"214","hashOfConfig":"194"},{"size":2384,"mtime":1606924266933,"results":"215","hashOfConfig":"194"},{"size":888,"mtime":1606924266933,"results":"216","hashOfConfig":"194"},{"size":217,"mtime":1606924266933,"results":"217","hashOfConfig":"194"},{"size":688,"mtime":1606924266933,"results":"218","hashOfConfig":"194"},{"size":2375,"mtime":1606924266945,"results":"219","hashOfConfig":"194"},{"size":635,"mtime":1606924266941,"results":"220","hashOfConfig":"194"},{"size":5901,"mtime":1606924266933,"results":"221","hashOfConfig":"194"},{"size":813,"mtime":1606924266945,"results":"222","hashOfConfig":"194"},{"size":580,"mtime":1606924266945,"results":"223","hashOfConfig":"194"},{"size":1274,"mtime":1606924266953,"results":"224","hashOfConfig":"194"},{"size":19968,"mtime":1606924266945,"results":"225","hashOfConfig":"194"},{"size":27792,"mtime":1606924266945,"results":"226","hashOfConfig":"194"},{"size":61338,"mtime":1606924266945,"results":"227","hashOfConfig":"194"},{"size":18717,"mtime":1606924266941,"results":"228","hashOfConfig":"194"},{"size":243,"mtime":1606924266933,"results":"229","hashOfConfig":"194"},{"size":2466,"mtime":1606924266933,"results":"230","hashOfConfig":"194"},{"size":1891,"mtime":1606924266953,"results":"231","hashOfConfig":"194"},{"size":4667,"mtime":1606924266953,"results":"232","hashOfConfig":"194"},{"size":8156,"mtime":1606924266953,"results":"233","hashOfConfig":"194"},{"size":8169,"mtime":1606924266953,"results":"234","hashOfConfig":"194"},{"size":10056,"mtime":1606924266937,"results":"235","hashOfConfig":"194"},{"size":15241,"mtime":1606924266937,"results":"236","hashOfConfig":"194"},{"size":15480,"mtime":1606924266941,"results":"237","hashOfConfig":"194"},{"size":10576,"mtime":1606924266941,"results":"238","hashOfConfig":"194"},{"size":10693,"mtime":1606924266937,"results":"239","hashOfConfig":"194"},{"size":16177,"mtime":1606924266941,"results":"240","hashOfConfig":"194"},{"size":14848,"mtime":1606924266937,"results":"241","hashOfConfig":"194"},{"size":10816,"mtime":1606924266937,"results":"242","hashOfConfig":"194"},{"size":10837,"mtime":1606924266949,"results":"243","hashOfConfig":"194"},{"size":9530,"mtime":1606924266941,"results":"244","hashOfConfig":"194"},{"size":14024,"mtime":1606924266941,"results":"245","hashOfConfig":"194"},{"size":14324,"mtime":1606924266953,"results":"246","hashOfConfig":"194"},{"size":14244,"mtime":1606924266949,"results":"247","hashOfConfig":"194"},{"size":10129,"mtime":1606924266953,"results":"248","hashOfConfig":"194"},{"size":20458,"mtime":1606924266953,"results":"249","hashOfConfig":"194"},{"size":18487,"mtime":1606924266953,"results":"250","hashOfConfig":"194"},{"size":18901,"mtime":1606924266957,"results":"251","hashOfConfig":"194"},{"size":21631,"mtime":1606924266957,"results":"252","hashOfConfig":"194"},{"size":16401,"mtime":1606924266953,"results":"253","hashOfConfig":"194"},{"size":23989,"mtime":1606924266957,"results":"254","hashOfConfig":"194"},{"size":17266,"mtime":1606924266949,"results":"255","hashOfConfig":"194"},{"size":20725,"mtime":1606924266949,"results":"256","hashOfConfig":"194"},{"size":17780,"mtime":1606924266953,"results":"257","hashOfConfig":"194"},{"size":16508,"mtime":1606924266945,"results":"258","hashOfConfig":"194"},{"size":21611,"mtime":1606924266953,"results":"259","hashOfConfig":"194"},{"size":18872,"mtime":1606924266945,"results":"260","hashOfConfig":"194"},{"size":18073,"mtime":1606924266957,"results":"261","hashOfConfig":"194"},{"size":22565,"mtime":1606924266949,"results":"262","hashOfConfig":"194"},{"size":19158,"mtime":1606924266957,"results":"263","hashOfConfig":"194"},{"size":16408,"mtime":1606924266941,"results":"264","hashOfConfig":"194"},{"size":16980,"mtime":1606924266941,"results":"265","hashOfConfig":"194"},{"size":23425,"mtime":1606924266941,"results":"266","hashOfConfig":"194"},{"size":20118,"mtime":1606924266937,"results":"267","hashOfConfig":"194"},{"size":17252,"mtime":1606924266949,"results":"268","hashOfConfig":"194"},{"size":17595,"mtime":1606924266945,"results":"269","hashOfConfig":"194"},{"size":19569,"mtime":1606924266949,"results":"270","hashOfConfig":"194"},{"size":15723,"mtime":1606924266941,"results":"271","hashOfConfig":"194"},{"size":17173,"mtime":1606924266953,"results":"272","hashOfConfig":"194"},{"size":19022,"mtime":1606924266945,"results":"273","hashOfConfig":"194"},{"size":17666,"mtime":1606924266949,"results":"274","hashOfConfig":"194"},{"size":19350,"mtime":1606924266949,"results":"275","hashOfConfig":"194"},{"size":18457,"mtime":1606924266949,"results":"276","hashOfConfig":"194"},{"size":16977,"mtime":1606924266953,"results":"277","hashOfConfig":"194"},{"size":17613,"mtime":1606924266949,"results":"278","hashOfConfig":"194"},{"size":14645,"mtime":1606924266953,"results":"279","hashOfConfig":"194"},{"size":12310,"mtime":1606924266953,"results":"280","hashOfConfig":"194"},{"size":20391,"mtime":1606924266949,"results":"281","hashOfConfig":"194"},{"size":17643,"mtime":1606924266953,"results":"282","hashOfConfig":"194"},{"size":19746,"mtime":1606924266937,"results":"283","hashOfConfig":"194"},{"size":18768,"mtime":1606924266949,"results":"284","hashOfConfig":"194"},{"size":532,"mtime":1606924266937,"results":"285","hashOfConfig":"194"},{"size":1930,"mtime":1606924266949,"results":"286","hashOfConfig":"194"},{"size":20935,"mtime":1606924266937,"results":"287","hashOfConfig":"194"},{"size":18585,"mtime":1606924266953,"results":"288","hashOfConfig":"194"},{"size":26980,"mtime":1606924266949,"results":"289","hashOfConfig":"194"},{"size":25679,"mtime":1606924266949,"results":"290","hashOfConfig":"194"},{"size":28606,"mtime":1606924266949,"results":"291","hashOfConfig":"194"},{"size":19126,"mtime":1606924266953,"results":"292","hashOfConfig":"194"},{"size":17275,"mtime":1606924266953,"results":"293","hashOfConfig":"194"},{"size":29285,"mtime":1606924266941,"results":"294","hashOfConfig":"194"},{"size":20808,"mtime":1606924266933,"results":"295","hashOfConfig":"194"},{"size":11795,"mtime":1606924266953,"results":"296","hashOfConfig":"194"},{"size":40594,"mtime":1606924266945,"results":"297","hashOfConfig":"194"},{"size":38913,"mtime":1606924266953,"results":"298","hashOfConfig":"194"},{"size":16402,"mtime":1606924266953,"results":"299","hashOfConfig":"194"},{"size":23515,"mtime":1606924266953,"results":"300","hashOfConfig":"194"},{"size":50133,"mtime":1606924266949,"results":"301","hashOfConfig":"194"},{"size":17639,"mtime":1606924266953,"results":"302","hashOfConfig":"194"},{"size":46207,"mtime":1606924266933,"results":"303","hashOfConfig":"194"},{"size":152,"mtime":1606924266933,"results":"304","hashOfConfig":"194"},{"size":75958,"mtime":1606924266945,"results":"305","hashOfConfig":"194"},{"size":69004,"mtime":1606924266941,"results":"306","hashOfConfig":"194"},{"size":8859,"mtime":1606924266945,"results":"307","hashOfConfig":"194"},{"size":3983,"mtime":1606924266941,"results":"308","hashOfConfig":"194"},{"size":1135,"mtime":1606924266949,"results":"309","hashOfConfig":"194"},{"size":14596,"mtime":1606924266957,"results":"310","hashOfConfig":"194"},{"size":43,"mtime":1606924266933,"results":"311","hashOfConfig":"194"},{"size":1112,"mtime":1606924266949,"results":"312","hashOfConfig":"194"},{"size":16318,"mtime":1606924266953,"results":"313","hashOfConfig":"194"},{"size":9041,"mtime":1606924266941,"results":"314","hashOfConfig":"194"},{"size":16137,"mtime":1606924266937,"results":"315","hashOfConfig":"194"},{"size":16887,"mtime":1606924266953,"results":"316","hashOfConfig":"194"},{"size":232,"mtime":1606924266933,"results":"317","hashOfConfig":"194"},{"size":188,"mtime":1606924266941,"results":"318","hashOfConfig":"194"},{"size":3462,"mtime":1606924266937,"results":"319","hashOfConfig":"194"},{"size":1993,"mtime":1606924266941,"results":"320","hashOfConfig":"194"},{"size":1121,"mtime":1606924266937,"results":"321","hashOfConfig":"194"},{"size":772,"mtime":1606924266937,"results":"322","hashOfConfig":"194"},{"size":1590,"mtime":1606924266937,"results":"323","hashOfConfig":"194"},{"size":2505,"mtime":1606924266941,"results":"324","hashOfConfig":"194"},{"size":706,"mtime":1606924266941,"results":"325","hashOfConfig":"194"},{"size":1993,"mtime":1606924266937,"results":"326","hashOfConfig":"194"},{"size":6482,"mtime":1606924266937,"results":"327","hashOfConfig":"194"},{"size":10794,"mtime":1606924266941,"results":"328","hashOfConfig":"194"},{"size":1890,"mtime":1606924266941,"results":"329","hashOfConfig":"194"},{"size":8313,"mtime":1606924266941,"results":"330","hashOfConfig":"194"},{"size":1581,"mtime":1606924266945,"results":"331","hashOfConfig":"194"},{"size":201,"mtime":1606924266941,"results":"332","hashOfConfig":"194"},{"size":7537,"mtime":1606924266945,"results":"333","hashOfConfig":"194"},{"size":2793,"mtime":1606924266953,"results":"334","hashOfConfig":"194"},{"size":277,"mtime":1606924266933,"results":"335","hashOfConfig":"194"},{"size":271,"mtime":1606924266933,"results":"336","hashOfConfig":"194"},{"size":24357,"mtime":1606924266937,"results":"337","hashOfConfig":"194"},{"size":432,"mtime":1606924266937,"results":"338","hashOfConfig":"194"},{"size":22395,"mtime":1606924266945,"results":"339","hashOfConfig":"194"},{"size":11255,"mtime":1606924266945,"results":"340","hashOfConfig":"194"},{"size":3048,"mtime":1606924266945,"results":"341","hashOfConfig":"194"},{"size":3883,"mtime":1606924266945,"results":"342","hashOfConfig":"194"},{"size":3877,"mtime":1606924266945,"results":"343","hashOfConfig":"194"},{"size":3601,"mtime":1606924266945,"results":"344","hashOfConfig":"194"},{"size":3401,"mtime":1606924266945,"results":"345","hashOfConfig":"194"},{"size":3050,"mtime":1606924266945,"results":"346","hashOfConfig":"194"},{"size":7860,"mtime":1606924266937,"results":"347","hashOfConfig":"194"},{"size":5859,"mtime":1606924266937,"results":"348","hashOfConfig":"194"},{"size":1092,"mtime":1606924266937,"results":"349","hashOfConfig":"194"},{"size":811,"mtime":1606924266937,"results":"350","hashOfConfig":"194"},{"size":3892,"mtime":1606924266933,"results":"351","hashOfConfig":"194"},{"size":5989,"mtime":1606924266941,"results":"352","hashOfConfig":"194"},{"size":9373,"mtime":1606924266941,"results":"353","hashOfConfig":"194"},{"size":56016,"mtime":1606924266941,"results":"354","hashOfConfig":"194"},{"size":17940,"mtime":1606924266941,"results":"355","hashOfConfig":"194"},{"size":10155,"mtime":1606924266941,"results":"356","hashOfConfig":"194"},{"size":6047,"mtime":1606924266953,"results":"357","hashOfConfig":"194"},{"size":3602,"mtime":1606924266937,"results":"358","hashOfConfig":"194"},{"size":4411,"mtime":1606924266937,"results":"359","hashOfConfig":"194"},{"size":6961,"mtime":1606924266937,"results":"360","hashOfConfig":"194"},{"size":6367,"mtime":1606924266937,"results":"361","hashOfConfig":"194"},{"size":5318,"mtime":1606924266937,"results":"362","hashOfConfig":"194"},{"size":22973,"mtime":1606924266937,"results":"363","hashOfConfig":"194"},{"size":22879,"mtime":1606924266937,"results":"364","hashOfConfig":"194"},{"size":23064,"mtime":1606924266937,"results":"365","hashOfConfig":"194"},{"size":23166,"mtime":1606924266933,"results":"366","hashOfConfig":"194"},{"size":8404,"mtime":1606924266937,"results":"367","hashOfConfig":"194"},{"size":14878,"mtime":1606924266957,"results":"368","hashOfConfig":"194"},{"size":14801,"mtime":1606924266953,"results":"369","hashOfConfig":"194"},{"size":10539,"mtime":1606924266957,"results":"370","hashOfConfig":"194"},{"size":10570,"mtime":1606924266953,"results":"371","hashOfConfig":"194"},{"size":21660,"mtime":1606924266945,"results":"372","hashOfConfig":"194"},{"size":16966,"mtime":1606924266941,"results":"373","hashOfConfig":"194"},{"size":17263,"mtime":1606924266957,"results":"374","hashOfConfig":"194"},{"size":17468,"mtime":1606924266953,"results":"375","hashOfConfig":"194"},{"size":9827,"mtime":1606924266949,"results":"376","hashOfConfig":"194"},{"size":25195,"mtime":1606924266957,"results":"377","hashOfConfig":"194"},{"size":12307,"mtime":1606924266957,"results":"378","hashOfConfig":"194"},{"size":21220,"mtime":1606924266957,"results":"379","hashOfConfig":"194"},{"size":852,"mtime":1606924266941,"results":"380","hashOfConfig":"194"},{"size":23035,"mtime":1606924266949,"results":"381","hashOfConfig":"194"},{"size":1801,"mtime":1606924266945,"results":"382","hashOfConfig":"194"},{"size":2580,"mtime":1606924266941,"results":"383","hashOfConfig":"194"},{"size":5371,"mtime":1606924266941,"results":"384","hashOfConfig":"194"},{"size":8527,"mtime":1606924266941,"results":"385","hashOfConfig":"194"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wbwabs",{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"450","messages":"451","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"452","messages":"453","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"454","messages":"455","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"484","messages":"485","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"486","messages":"487","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"488","messages":"489","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"490","messages":"491","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"508","messages":"509","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"516","messages":"517","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"522","messages":"523","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"524","messages":"525","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"526","messages":"527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"534","messages":"535","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"536","messages":"537","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"538","messages":"539","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"542","messages":"543","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"548","messages":"549","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"550","messages":"551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"552","messages":"553","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"554","messages":"555","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"560","messages":"561","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"562","messages":"563","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"564","messages":"565","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"566","messages":"567","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"572","messages":"573","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"574","messages":"575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"576","messages":"577","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"578","messages":"579","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"590","messages":"591","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"600","messages":"601","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"602","messages":"603","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"604","messages":"605","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"610","messages":"611","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"626","messages":"627","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"628","messages":"629","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"630","messages":"631","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"636","messages":"637","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"672","messages":"673","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"694","messages":"695","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"702","messages":"703","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"704","messages":"705","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"708","messages":"709","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"712","messages":"713","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"714","messages":"715","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"716","messages":"717","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"718","messages":"719","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"720","messages":"721","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"722","messages":"723","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"726","messages":"727","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"732","messages":"733","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"734","messages":"735","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"736","messages":"737","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"742","messages":"743","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"744","messages":"745","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"746","messages":"747","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"748","messages":"749","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"750","messages":"751","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"752","messages":"753","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"754","messages":"755","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"756","messages":"757","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"760","messages":"761","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/vhosts/satis-pro/client/satis-client/src/index.js",[],"/var/vhosts/satis-pro/client/satis-client/src/serviceWorker.js",[],"/var/vhosts/satis-pro/client/satis-client/src/AppContainer.js",[],"/var/vhosts/satis-pro/client/satis-client/src/store/reducers/languageReducer.js",[],"/var/vhosts/satis-pro/client/satis-client/src/store/reducers/authReducer.js",["770"],"/var/vhosts/satis-pro/client/satis-client/src/store/reducers/treatmentReducer.js",[],"/var/vhosts/satis-pro/client/satis-client/src/store/reducers/IdentityReducer.js",[],"/var/vhosts/satis-pro/client/satis-client/src/store/reducers/planReducer.js",[],"/var/vhosts/satis-pro/client/satis-client/src/NatureAppChoice.js",[],"/var/vhosts/satis-pro/client/satis-client/src/routeApp.js",[],"/var/vhosts/satis-pro/client/satis-client/src/store/actions/planAction.js",[],"/var/vhosts/satis-pro/client/satis-client/src/config/appConfig.js",[],"/var/vhosts/satis-pro/client/satis-client/src/constants/token.js",[],"/var/vhosts/satis-pro/client/satis-client/src/store/actions/languageAction.js",[],"/var/vhosts/satis-pro/client/satis-client/src/store/actions/authActions.js",[],"/var/vhosts/satis-pro/client/satis-client/src/store/actions/treatmentAction.js",[],"/var/vhosts/satis-pro/client/satis-client/src/store/actions/IdentityAction.js",[],"/var/vhosts/satis-pro/client/satis-client/src/helpers/function.js",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/Loader.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/modules/login/views/Pages/LoginPage.jsx",["771","772","773"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ConfirmationAlert.js",[],"/var/vhosts/satis-pro/client/satis-client/src/config/confirmConfig.js",[],"/var/vhosts/satis-pro/client/satis-client/src/constants/channel.js",[],"/var/vhosts/satis-pro/client/satis-client/src/helpers/permission.js",[],"/var/vhosts/satis-pro/client/satis-client/src/constants/userClient.js",[],"/var/vhosts/satis-pro/client/satis-client/src/views/layouts/App.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/Toast.js",[],"/var/vhosts/satis-pro/client/satis-client/src/config/toastConfig.js",[],"/var/vhosts/satis-pro/client/satis-client/src/views/includes/HeaderMobile.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/includes/Footer.jsx",["774"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Error401.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/includes/Body.jsx",["775"],"/var/vhosts/satis-pro/client/satis-client/src/views/includes/Nav.jsx",["776","777","778","779","780","781","782","783"],"/var/vhosts/satis-pro/client/satis-client/src/views/includes/Aside.jsx",["784","785","786","787","788","789","790","791"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/FaqsForm.jsx",["792","793","794"],"/var/vhosts/satis-pro/client/satis-client/src/middleware/verifyToken.js",[],"/var/vhosts/satis-pro/client/satis-client/src/constants/notification.js",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/FAQsPage.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Dashboards.jsx",["795"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/PercentageMinFusion.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/RejectLimitPage.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/CategoryFaqsForm.jsx",["796","797","798"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/CategoryClientForm.jsx",["799"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/TypeClientForm.jsx",["800"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/PositionForm.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ClaimCategoryForm.jsx",["801"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/SeverityLevelForm.jsx",["802"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/CurrencyForm.jsx",["803"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ChannelForm.jsx",["804"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ConfigNotification.jsx",["805"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/StaffChannels.jsx",["806"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/MessageAPIForm.jsx",["807"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/InstitutionMessageApi.jsx",["808","809"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimAssignToStaffDetail.jsx",["810","811"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/RecurencePage.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Mail.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/PerformanceIndicator.jsx",["812"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/UnitType.jsx",["813"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Unit.jsx",["814","815","816","817"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Position.jsx",["818"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Staff.jsx",["819","820"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimCategory.jsx",["821"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimObject.jsx",["822"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/FAQs.jsx",["823","824","825","826","827","828"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/CategoryFAQs.jsx",["829","830","831","832","833","834"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Institution.jsx",["835","836"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/CategoryClient.jsx",["837"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/TypeClient.jsx",["838","839","840"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Clients.jsx",["841","842","843","844","845","846","847","848"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/SeverityLevel.jsx",["849","850","851"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/UnitTypeForm.jsx",["852"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/PerformanceIndicatorForm.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/UnitForm.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ClaimObjectForm.jsx",["853"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Currency.jsx",["854","855"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Channel.jsx",["856"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ConfigRequirements.jsx",["857","858","859","860","861"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/RelationShipForm.jsx",["862"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/RelationShip.jsx",["863","864","865","866","867"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimAssign.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimList.jsx",["868"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimAssignToStaff.jsx",["869"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimToValidatedList.jsx",["870"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/SatisfactionMeasure.jsx",["871"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimsArchived.jsx",["872","873"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/AddChatsForm.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/AddMemberForm.jsx",["874"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ConfigRapportAuto.jsx",["875"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/MessageApi.jsx",["876"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ConfigRapportAutoForm.jsx",["877","878"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimListDetail.jsx",["879"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/EmptyNotification.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimImportPage.jsx",["880","881","882","883","884","885","886"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/Clients/ClientForm.jsx",["887","888","889","890"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/IncompleteClaims.jsx",["891"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ConfigProcessingCircuit.jsx",["892","893"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimAssignDetail.jsx",["894","895","896","897"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimMonitoring.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/Participants.jsx",["898"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/RemoveChats.jsx",["899"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/Institutions/InstitutionForm.jsx",["900"],"/var/vhosts/satis-pro/client/satis-client/src/APP_MACRO/Filiale/FilialeInstitutionForm.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ProfilePage.jsx",["901","902","903","904","905","906","907"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/staff/StaffForm.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/Chats.jsx",["908","909","910"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/RuleEditPage.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/RuleAddPage.jsx",["911","912"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimReporting.jsx",["913","914","915","916","917"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/RulePage.jsx",["918"],"/var/vhosts/satis-pro/client/satis-client/src/APP_MACRO/Holding/HoldingClientForm.jsx",["919","920","921","922"],"/var/vhosts/satis-pro/client/satis-client/src/config/errorPage.js",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimAdd.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/IncompleteClaimsEdit.jsx",["923","924","925"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ActivatePilotPage.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/FaqListe.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimCategoryImportPage.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/StaffImportPage.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/constants/dataTable.js",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimObjectImportPage.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/HistoricClaimsTraetment.jsx",["926"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/Institutions/ImportInstitutionForm.jsx",["927","928"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/Clients/ImportClientForm.jsx",["929","930"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/HistoricClaimsAdd.jsx",["931"],"/var/vhosts/satis-pro/client/satis-client/src/constants/date.js",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/InputRequire.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/ClaimToPointOfServices.jsx",["932"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/LoadingTable.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/AttachmentsButton.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ClaimButton.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ExportButton.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/Pagination.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/InfirmationTable.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/AttachmentsButtonDetail.jsx",["933"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ClaimButtonDetail.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ImportFileForm.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/HeaderTablePage.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/UnfoundedModal.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/DetailModal.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/WithoutCode.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/profile/UpdatePassword.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/MessageList.js",[],"/var/vhosts/satis-pro/client/satis-client/src/helpers/institution.js",[],"/var/vhosts/satis-pro/client/satis-client/src/helpers/unit.js",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/Clients/ConfirmClientSaveForm.jsx",["934","935","936","937","938","939"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/EmptyTable.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/staff/ConfirmSaveForm.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/profile/PersonalInfo.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ColToMeasure.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ColToValidate.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ColToTreat.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ColToAssignStaff.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ColToAssignUnit.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ColToComplete.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/DoubleButtonDetail.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ClientButtonDetail.jsx",["940","941"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/DoubleButton.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ClientButton.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/constants/currencyContry.js",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ReasonModal.jsx",["942"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/FusionClaim.jsx",["943","944"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/Modal/ConfirmClaimAddModal.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/IdentityForm.jsx",["945","946"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/TreatmentForm.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/Discussions/Message.js",["947","948","949","950"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/ClaimToInstitution.jsx",["951","952"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/GraphChannel.jsx",["953"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/DashboardStatistic.jsx",["954"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/DashboardStatClaim.jsx",["955"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/DashboardSummaryReport.jsx",["956"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/DashboardClaimsActivity.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/DashboardClaimsUnit.jsx",["957"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/DashboardForm/DashboardClaimsMy.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/APP_MACRO/Holding/DashboardClaimsAll.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ConfigCoefficient.jsx",["958","959"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/UserEdit.jsx",["960"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ParametersComponent.jsx",["961"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/TreatmentPeriodAdd.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/QualificationPeriodAdd.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/ClaimDetails.jsx",["962","963","964","965","966"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ParametersComponentEdit.jsx",["967","968","969"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/TreatmentPeriod.jsx",["970"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/QualificationPeriod.jsx",["971"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimsArchivedDetail.jsx",["972","973"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/UserAdd.jsx",["974"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/SatisfactionMeasureDetail.jsx",["975","976"],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/User.jsx",["977","978"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/FormInformation.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/pages/ClaimToValidatedListDetail.jsx",["979","980","981","982"],"/var/vhosts/satis-pro/client/satis-client/src/views/components/kanban/KanbanElementDetail.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/PeriodForm.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/ReasonSatisfaction.jsx",[],"/var/vhosts/satis-pro/client/satis-client/src/views/components/TreatmentButtonDetail.jsx",[],{"ruleId":"983","severity":1,"message":"984","line":9,"column":1,"nodeType":"985","endLine":28,"endColumn":2},{"ruleId":"986","severity":1,"message":"987","line":48,"column":22,"nodeType":"988","messageId":"989","endLine":48,"endColumn":29},{"ruleId":"986","severity":1,"message":"990","line":80,"column":27,"nodeType":"988","messageId":"989","endLine":80,"endColumn":31},{"ruleId":"991","severity":1,"message":"992","line":119,"column":49,"nodeType":"993","endLine":119,"endColumn":128},{"ruleId":"994","severity":1,"message":"995","line":9,"column":106,"nodeType":"996","endLine":9,"endColumn":121},{"ruleId":"986","severity":1,"message":"997","line":98,"column":8,"nodeType":"988","messageId":"989","endLine":98,"endColumn":20},{"ruleId":"998","severity":1,"message":"999","line":34,"column":8,"nodeType":"1000","endLine":34,"endColumn":27,"suggestions":"1001"},{"ruleId":"998","severity":1,"message":"1002","line":41,"column":8,"nodeType":"1000","endLine":41,"endColumn":30,"suggestions":"1003"},{"ruleId":"998","severity":1,"message":"1004","line":59,"column":8,"nodeType":"1000","endLine":59,"endColumn":10,"suggestions":"1005"},{"ruleId":"998","severity":1,"message":"1006","line":75,"column":8,"nodeType":"1000","endLine":75,"endColumn":29,"suggestions":"1007"},{"ruleId":"998","severity":1,"message":"1008","line":80,"column":8,"nodeType":"1000","endLine":80,"endColumn":30,"suggestions":"1009"},{"ruleId":"998","severity":1,"message":"1008","line":85,"column":8,"nodeType":"1000","endLine":85,"endColumn":26,"suggestions":"1010"},{"ruleId":"998","severity":1,"message":"1011","line":87,"column":33,"nodeType":"988","endLine":87,"endColumn":44},{"ruleId":"998","severity":1,"message":"1011","line":111,"column":36,"nodeType":"988","endLine":111,"endColumn":47},{"ruleId":"986","severity":1,"message":"1012","line":7,"column":21,"nodeType":"988","messageId":"989","endLine":7,"endColumn":34},{"ruleId":"1013","severity":1,"message":"1014","line":16,"column":25,"nodeType":"993","endLine":16,"endColumn":77},{"ruleId":"1013","severity":1,"message":"1014","line":34,"column":33,"nodeType":"993","endLine":35,"endColumn":72},{"ruleId":"1013","severity":1,"message":"1014","line":45,"column":45,"nodeType":"993","endLine":45,"endColumn":119},{"ruleId":"1013","severity":1,"message":"1014","line":82,"column":33,"nodeType":"993","endLine":82,"endColumn":143},{"ruleId":"1013","severity":1,"message":"1014","line":92,"column":45,"nodeType":"993","endLine":92,"endColumn":119},{"ruleId":"1013","severity":1,"message":"1014","line":281,"column":37,"nodeType":"993","endLine":281,"endColumn":147},{"ruleId":"1013","severity":1,"message":"1014","line":290,"column":49,"nodeType":"993","endLine":290,"endColumn":123},{"ruleId":"998","severity":1,"message":"1015","line":68,"column":8,"nodeType":"1000","endLine":68,"endColumn":10,"suggestions":"1016"},{"ruleId":"1017","severity":1,"message":"1018","line":134,"column":33,"nodeType":"993","endLine":134,"endColumn":88},{"ruleId":"1017","severity":1,"message":"1018","line":141,"column":33,"nodeType":"993","endLine":141,"endColumn":121},{"ruleId":"986","severity":1,"message":"1019","line":2,"column":8,"nodeType":"988","messageId":"989","endLine":2,"endColumn":24},{"ruleId":"998","severity":1,"message":"1020","line":56,"column":8,"nodeType":"1000","endLine":56,"endColumn":10,"suggestions":"1021"},{"ruleId":"1017","severity":1,"message":"1018","line":110,"column":33,"nodeType":"993","endLine":110,"endColumn":88},{"ruleId":"1017","severity":1,"message":"1018","line":117,"column":33,"nodeType":"993","endLine":117,"endColumn":121},{"ruleId":"998","severity":1,"message":"1022","line":60,"column":7,"nodeType":"1000","endLine":60,"endColumn":9,"suggestions":"1023"},{"ruleId":"998","severity":1,"message":"1024","line":56,"column":7,"nodeType":"1000","endLine":56,"endColumn":9,"suggestions":"1025"},{"ruleId":"998","severity":1,"message":"1026","line":59,"column":8,"nodeType":"1000","endLine":59,"endColumn":34,"suggestions":"1027"},{"ruleId":"998","severity":1,"message":"1026","line":92,"column":8,"nodeType":"1000","endLine":92,"endColumn":34,"suggestions":"1028"},{"ruleId":"998","severity":1,"message":"1029","line":79,"column":8,"nodeType":"1000","endLine":79,"endColumn":34,"suggestions":"1030"},{"ruleId":"998","severity":1,"message":"1026","line":66,"column":8,"nodeType":"1000","endLine":66,"endColumn":34,"suggestions":"1031"},{"ruleId":"998","severity":1,"message":"1026","line":63,"column":8,"nodeType":"1000","endLine":63,"endColumn":30,"suggestions":"1032"},{"ruleId":"998","severity":1,"message":"1033","line":39,"column":8,"nodeType":"1000","endLine":39,"endColumn":10,"suggestions":"1034"},{"ruleId":"998","severity":1,"message":"1026","line":87,"column":8,"nodeType":"1000","endLine":87,"endColumn":34,"suggestions":"1035"},{"ruleId":"1036","severity":1,"message":"1037","line":51,"column":26,"nodeType":"1038","messageId":"1039","endLine":51,"endColumn":28},{"ruleId":"998","severity":1,"message":"1040","line":104,"column":8,"nodeType":"1000","endLine":104,"endColumn":10,"suggestions":"1041"},{"ruleId":"998","severity":1,"message":"1020","line":49,"column":8,"nodeType":"1000","endLine":49,"endColumn":10,"suggestions":"1042"},{"ruleId":"1017","severity":1,"message":"1018","line":80,"column":33,"nodeType":"993","endLine":80,"endColumn":88},{"ruleId":"998","severity":1,"message":"1043","line":52,"column":8,"nodeType":"1000","endLine":52,"endColumn":55,"suggestions":"1044"},{"ruleId":"998","severity":1,"message":"1043","line":59,"column":8,"nodeType":"1000","endLine":59,"endColumn":55,"suggestions":"1045"},{"ruleId":"998","severity":1,"message":"1046","line":87,"column":8,"nodeType":"1000","endLine":87,"endColumn":48,"suggestions":"1047"},{"ruleId":"1048","severity":1,"message":"1049","line":89,"column":5,"nodeType":"1050","messageId":"1051","endLine":95,"endColumn":13},{"ruleId":"1017","severity":1,"message":"1018","line":269,"column":33,"nodeType":"993","endLine":269,"endColumn":88},{"ruleId":"1017","severity":1,"message":"1018","line":271,"column":33,"nodeType":"993","endLine":271,"endColumn":146},{"ruleId":"998","severity":1,"message":"1043","line":55,"column":8,"nodeType":"1000","endLine":55,"endColumn":55,"suggestions":"1052"},{"ruleId":"998","severity":1,"message":"1046","line":88,"column":8,"nodeType":"1000","endLine":88,"endColumn":48,"suggestions":"1053"},{"ruleId":"1036","severity":1,"message":"1037","line":92,"column":36,"nodeType":"1038","messageId":"1039","endLine":92,"endColumn":38},{"ruleId":"998","severity":1,"message":"1043","line":56,"column":8,"nodeType":"1000","endLine":56,"endColumn":55,"suggestions":"1054"},{"ruleId":"998","severity":1,"message":"1043","line":53,"column":8,"nodeType":"1000","endLine":53,"endColumn":55,"suggestions":"1055"},{"ruleId":"998","severity":1,"message":"1056","line":57,"column":8,"nodeType":"1000","endLine":57,"endColumn":10,"suggestions":"1057"},{"ruleId":"986","severity":1,"message":"1058","line":130,"column":11,"nodeType":"988","messageId":"989","endLine":130,"endColumn":21},{"ruleId":"1017","severity":1,"message":"1018","line":207,"column":37,"nodeType":"993","endLine":207,"endColumn":92},{"ruleId":"1017","severity":1,"message":"1018","line":209,"column":37,"nodeType":"993","endLine":209,"endColumn":125},{"ruleId":"1017","severity":1,"message":"1018","line":214,"column":41,"nodeType":"993","endLine":214,"endColumn":96},{"ruleId":"1017","severity":1,"message":"1018","line":216,"column":41,"nodeType":"993","endLine":216,"endColumn":129},{"ruleId":"998","severity":1,"message":"1056","line":56,"column":8,"nodeType":"1000","endLine":56,"endColumn":10,"suggestions":"1059"},{"ruleId":"986","severity":1,"message":"1060","line":128,"column":11,"nodeType":"988","messageId":"989","endLine":128,"endColumn":29},{"ruleId":"1017","severity":1,"message":"1018","line":203,"column":29,"nodeType":"993","endLine":203,"endColumn":84},{"ruleId":"1017","severity":1,"message":"1018","line":205,"column":29,"nodeType":"993","endLine":205,"endColumn":117},{"ruleId":"1017","severity":1,"message":"1018","line":210,"column":33,"nodeType":"993","endLine":210,"endColumn":88},{"ruleId":"1017","severity":1,"message":"1018","line":212,"column":33,"nodeType":"993","endLine":212,"endColumn":121},{"ruleId":"998","severity":1,"message":"1056","line":55,"column":8,"nodeType":"1000","endLine":55,"endColumn":10,"suggestions":"1061"},{"ruleId":"986","severity":1,"message":"1062","line":129,"column":11,"nodeType":"988","messageId":"989","endLine":129,"endColumn":28},{"ruleId":"998","severity":1,"message":"1056","line":55,"column":7,"nodeType":"1000","endLine":55,"endColumn":9,"suggestions":"1063"},{"ruleId":"986","severity":1,"message":"1064","line":6,"column":60,"nodeType":"988","messageId":"989","endLine":6,"endColumn":70},{"ruleId":"998","severity":1,"message":"1056","line":54,"column":8,"nodeType":"1000","endLine":54,"endColumn":10,"suggestions":"1065"},{"ruleId":"1017","severity":1,"message":"1018","line":216,"column":33,"nodeType":"993","endLine":216,"endColumn":121},{"ruleId":"998","severity":1,"message":"1066","line":82,"column":8,"nodeType":"1000","endLine":82,"endColumn":10,"suggestions":"1067"},{"ruleId":"1036","severity":1,"message":"1037","line":86,"column":31,"nodeType":"1038","messageId":"1039","endLine":86,"endColumn":33},{"ruleId":"1068","severity":1,"message":"1069","line":233,"column":121,"nodeType":"1070","messageId":"1071","endLine":233,"endColumn":122},{"ruleId":"1068","severity":1,"message":"1069","line":233,"column":128,"nodeType":"1070","messageId":"1071","endLine":233,"endColumn":129},{"ruleId":"1068","severity":1,"message":"1069","line":244,"column":115,"nodeType":"1070","messageId":"1071","endLine":244,"endColumn":116},{"ruleId":"1068","severity":1,"message":"1069","line":244,"column":122,"nodeType":"1070","messageId":"1071","endLine":244,"endColumn":123},{"ruleId":"1017","severity":1,"message":"1018","line":295,"column":29,"nodeType":"993","endLine":295,"endColumn":84},{"ruleId":"1017","severity":1,"message":"1018","line":298,"column":29,"nodeType":"993","endLine":298,"endColumn":117},{"ruleId":"998","severity":1,"message":"1046","line":74,"column":8,"nodeType":"1000","endLine":74,"endColumn":48,"suggestions":"1072"},{"ruleId":"1017","severity":1,"message":"1018","line":244,"column":33,"nodeType":"993","endLine":244,"endColumn":88},{"ruleId":"1017","severity":1,"message":"1018","line":246,"column":33,"nodeType":"993","endLine":246,"endColumn":146},{"ruleId":"998","severity":1,"message":"1026","line":70,"column":8,"nodeType":"1000","endLine":70,"endColumn":34,"suggestions":"1073"},{"ruleId":"998","severity":1,"message":"1020","line":94,"column":8,"nodeType":"1000","endLine":94,"endColumn":10,"suggestions":"1074"},{"ruleId":"986","severity":1,"message":"1075","line":3,"column":9,"nodeType":"988","messageId":"989","endLine":3,"endColumn":13},{"ruleId":"998","severity":1,"message":"1043","line":56,"column":8,"nodeType":"1000","endLine":56,"endColumn":55,"suggestions":"1076"},{"ruleId":"998","severity":1,"message":"1043","line":56,"column":8,"nodeType":"1000","endLine":56,"endColumn":55,"suggestions":"1077"},{"ruleId":"998","severity":1,"message":"1056","line":70,"column":8,"nodeType":"1000","endLine":70,"endColumn":10,"suggestions":"1078"},{"ruleId":"1036","severity":1,"message":"1037","line":74,"column":28,"nodeType":"1038","messageId":"1039","endLine":74,"endColumn":30},{"ruleId":"1036","severity":1,"message":"1037","line":85,"column":24,"nodeType":"1038","messageId":"1039","endLine":85,"endColumn":26},{"ruleId":"1017","severity":1,"message":"1018","line":251,"column":33,"nodeType":"993","endLine":251,"endColumn":88},{"ruleId":"1017","severity":1,"message":"1018","line":254,"column":33,"nodeType":"993","endLine":255,"endColumn":79},{"ruleId":"998","severity":1,"message":"1026","line":57,"column":7,"nodeType":"1000","endLine":57,"endColumn":33,"suggestions":"1079"},{"ruleId":"986","severity":1,"message":"1064","line":6,"column":60,"nodeType":"988","messageId":"989","endLine":6,"endColumn":70},{"ruleId":"998","severity":1,"message":"1043","line":54,"column":8,"nodeType":"1000","endLine":54,"endColumn":55,"suggestions":"1080"},{"ruleId":"1081","severity":1,"message":"1082","line":166,"column":17,"nodeType":"996","endLine":166,"endColumn":32},{"ruleId":"1017","severity":1,"message":"1018","line":207,"column":33,"nodeType":"993","endLine":207,"endColumn":88},{"ruleId":"1017","severity":1,"message":"1018","line":210,"column":33,"nodeType":"993","endLine":210,"endColumn":121},{"ruleId":"998","severity":1,"message":"1083","line":48,"column":8,"nodeType":"1000","endLine":48,"endColumn":10,"suggestions":"1084"},{"ruleId":"998","severity":1,"message":"1083","line":57,"column":8,"nodeType":"1000","endLine":57,"endColumn":10,"suggestions":"1085"},{"ruleId":"998","severity":1,"message":"1086","line":54,"column":8,"nodeType":"1000","endLine":54,"endColumn":10,"suggestions":"1087"},{"ruleId":"998","severity":1,"message":"1066","line":76,"column":8,"nodeType":"1000","endLine":76,"endColumn":10,"suggestions":"1088"},{"ruleId":"998","severity":1,"message":"1066","line":80,"column":8,"nodeType":"1000","endLine":80,"endColumn":10,"suggestions":"1089"},{"ruleId":"1017","severity":1,"message":"1018","line":208,"column":33,"nodeType":"993","endLine":208,"endColumn":88},{"ruleId":"998","severity":1,"message":"1020","line":54,"column":8,"nodeType":"1000","endLine":54,"endColumn":10,"suggestions":"1090"},{"ruleId":"998","severity":1,"message":"1066","line":80,"column":7,"nodeType":"1000","endLine":80,"endColumn":9,"suggestions":"1091"},{"ruleId":"998","severity":1,"message":"1043","line":55,"column":8,"nodeType":"1000","endLine":55,"endColumn":55,"suggestions":"1092"},{"ruleId":"986","severity":1,"message":"1093","line":14,"column":9,"nodeType":"988","messageId":"989","endLine":14,"endColumn":18},{"ruleId":"998","severity":1,"message":"1094","line":107,"column":8,"nodeType":"1000","endLine":107,"endColumn":10,"suggestions":"1095"},{"ruleId":"1017","severity":1,"message":"1018","line":150,"column":33,"nodeType":"993","endLine":150,"endColumn":88},{"ruleId":"986","severity":1,"message":"1096","line":1,"column":16,"nodeType":"988","messageId":"989","endLine":1,"endColumn":24},{"ruleId":"986","severity":1,"message":"1097","line":3,"column":8,"nodeType":"988","messageId":"989","endLine":3,"endColumn":13},{"ruleId":"986","severity":1,"message":"1098","line":4,"column":9,"nodeType":"988","messageId":"989","endLine":4,"endColumn":23},{"ruleId":"986","severity":1,"message":"1099","line":6,"column":5,"nodeType":"988","messageId":"989","endLine":6,"endColumn":41},{"ruleId":"986","severity":1,"message":"1100","line":6,"column":43,"nodeType":"988","messageId":"989","endLine":6,"endColumn":81},{"ruleId":"986","severity":1,"message":"1101","line":11,"column":8,"nodeType":"988","messageId":"989","endLine":11,"endColumn":20},{"ruleId":"986","severity":1,"message":"1075","line":12,"column":9,"nodeType":"988","messageId":"989","endLine":12,"endColumn":13},{"ruleId":"998","severity":1,"message":"1102","line":99,"column":8,"nodeType":"1000","endLine":99,"endColumn":10,"suggestions":"1103"},{"ruleId":"1048","severity":1,"message":"1049","line":125,"column":9,"nodeType":"1050","messageId":"1051","endLine":127,"endColumn":10},{"ruleId":"1017","severity":1,"message":"1018","line":214,"column":29,"nodeType":"993","endLine":214,"endColumn":84},{"ruleId":"1017","severity":1,"message":"1018","line":221,"column":29,"nodeType":"993","endLine":221,"endColumn":117},{"ruleId":"998","severity":1,"message":"1066","line":86,"column":8,"nodeType":"1000","endLine":86,"endColumn":10,"suggestions":"1104"},{"ruleId":"1048","severity":1,"message":"1049","line":129,"column":5,"nodeType":"1050","messageId":"1051","endLine":151,"endColumn":13},{"ruleId":"1036","severity":1,"message":"1037","line":155,"column":21,"nodeType":"1038","messageId":"1039","endLine":155,"endColumn":23},{"ruleId":"986","severity":1,"message":"1099","line":18,"column":35,"nodeType":"988","messageId":"989","endLine":18,"endColumn":71},{"ruleId":"986","severity":1,"message":"1105","line":68,"column":19,"nodeType":"988","messageId":"989","endLine":68,"endColumn":27},{"ruleId":"998","severity":1,"message":"1106","line":105,"column":8,"nodeType":"1000","endLine":105,"endColumn":10,"suggestions":"1107"},{"ruleId":"1017","severity":1,"message":"1018","line":185,"column":33,"nodeType":"993","endLine":185,"endColumn":88},{"ruleId":"998","severity":1,"message":"1108","line":58,"column":8,"nodeType":"1000","endLine":58,"endColumn":10,"suggestions":"1109"},{"ruleId":"998","severity":1,"message":"1056","line":53,"column":7,"nodeType":"1000","endLine":53,"endColumn":9,"suggestions":"1110"},{"ruleId":"998","severity":1,"message":"1111","line":94,"column":8,"nodeType":"1000","endLine":94,"endColumn":10,"suggestions":"1112"},{"ruleId":"986","severity":1,"message":"1113","line":3,"column":25,"nodeType":"988","messageId":"989","endLine":3,"endColumn":31},{"ruleId":"1017","severity":1,"message":"1018","line":88,"column":29,"nodeType":"993","endLine":88,"endColumn":84},{"ruleId":"1017","severity":1,"message":"1018","line":92,"column":29,"nodeType":"993","endLine":92,"endColumn":145},{"ruleId":"1114","severity":1,"message":"1115","line":119,"column":45,"nodeType":"993","endLine":119,"endColumn":101},{"ruleId":"1017","severity":1,"message":"1018","line":123,"column":49,"nodeType":"993","endLine":123,"endColumn":93},{"ruleId":"1017","severity":1,"message":"1018","line":136,"column":49,"nodeType":"993","endLine":136,"endColumn":89},{"ruleId":"1017","severity":1,"message":"1018","line":140,"column":49,"nodeType":"993","endLine":140,"endColumn":89},{"ruleId":"986","severity":1,"message":"1116","line":46,"column":12,"nodeType":"988","messageId":"989","endLine":46,"endColumn":18},{"ruleId":"998","severity":1,"message":"1117","line":76,"column":9,"nodeType":"1118","endLine":76,"endColumn":42},{"ruleId":"1013","severity":1,"message":"1119","line":302,"column":89,"nodeType":"993","endLine":306,"endColumn":124},{"ruleId":"998","severity":1,"message":"1033","line":110,"column":8,"nodeType":"1000","endLine":110,"endColumn":35,"suggestions":"1120"},{"ruleId":"1121","severity":1,"message":"1122","line":373,"column":21,"nodeType":"988","messageId":"1123","endLine":373,"endColumn":29},{"ruleId":"986","severity":1,"message":"1124","line":19,"column":9,"nodeType":"988","messageId":"989","endLine":19,"endColumn":14},{"ruleId":"1036","severity":1,"message":"1037","line":71,"column":45,"nodeType":"1038","messageId":"1039","endLine":71,"endColumn":47},{"ruleId":"1036","severity":1,"message":"1037","line":72,"column":41,"nodeType":"1038","messageId":"1039","endLine":72,"endColumn":43},{"ruleId":"1036","severity":1,"message":"1037","line":100,"column":29,"nodeType":"1038","messageId":"1039","endLine":100,"endColumn":31},{"ruleId":"998","severity":1,"message":"1125","line":253,"column":8,"nodeType":"1000","endLine":253,"endColumn":10,"suggestions":"1126"},{"ruleId":"998","severity":1,"message":"1127","line":63,"column":8,"nodeType":"1000","endLine":63,"endColumn":55,"suggestions":"1128"},{"ruleId":"986","severity":1,"message":"1129","line":115,"column":12,"nodeType":"988","messageId":"989","endLine":115,"endColumn":24},{"ruleId":"998","severity":1,"message":"1106","line":177,"column":8,"nodeType":"1000","endLine":177,"endColumn":10,"suggestions":"1130"},{"ruleId":"1017","severity":1,"message":"1018","line":383,"column":29,"nodeType":"993","endLine":383,"endColumn":84},{"ruleId":"1017","severity":1,"message":"1018","line":390,"column":29,"nodeType":"993","endLine":390,"endColumn":117},{"ruleId":"986","severity":1,"message":"1131","line":127,"column":22,"nodeType":"988","messageId":"989","endLine":127,"endColumn":33},{"ruleId":"986","severity":1,"message":"1132","line":129,"column":19,"nodeType":"988","messageId":"989","endLine":129,"endColumn":27},{"ruleId":"986","severity":1,"message":"1133","line":139,"column":27,"nodeType":"988","messageId":"989","endLine":139,"endColumn":43},{"ruleId":"998","severity":1,"message":"1056","line":49,"column":8,"nodeType":"1000","endLine":49,"endColumn":10,"suggestions":"1134"},{"ruleId":"1017","severity":1,"message":"1018","line":92,"column":33,"nodeType":"993","endLine":92,"endColumn":88},{"ruleId":"1017","severity":1,"message":"1018","line":95,"column":33,"nodeType":"993","endLine":95,"endColumn":121},{"ruleId":"1017","severity":1,"message":"1018","line":137,"column":33,"nodeType":"993","endLine":137,"endColumn":88},{"ruleId":"1017","severity":1,"message":"1018","line":140,"column":33,"nodeType":"993","endLine":140,"endColumn":121},{"ruleId":"998","severity":1,"message":"1056","line":49,"column":8,"nodeType":"1000","endLine":49,"endColumn":10,"suggestions":"1135"},{"ruleId":"998","severity":1,"message":"1136","line":68,"column":8,"nodeType":"1000","endLine":68,"endColumn":10,"suggestions":"1137"},{"ruleId":"994","severity":1,"message":"995","line":22,"column":64,"nodeType":"996","endLine":22,"endColumn":81},{"ruleId":"986","severity":1,"message":"1138","line":6,"column":5,"nodeType":"988","messageId":"989","endLine":6,"endColumn":31},{"ruleId":"986","severity":1,"message":"1139","line":11,"column":9,"nodeType":"988","messageId":"989","endLine":11,"endColumn":27},{"ruleId":"986","severity":1,"message":"1140","line":46,"column":12,"nodeType":"988","messageId":"989","endLine":46,"endColumn":19},{"ruleId":"986","severity":1,"message":"1141","line":46,"column":21,"nodeType":"988","messageId":"989","endLine":46,"endColumn":31},{"ruleId":"986","severity":1,"message":"1142","line":53,"column":12,"nodeType":"988","messageId":"989","endLine":53,"endColumn":18},{"ruleId":"986","severity":1,"message":"1143","line":53,"column":20,"nodeType":"988","messageId":"989","endLine":53,"endColumn":29},{"ruleId":"1114","severity":1,"message":"1115","line":15,"column":37,"nodeType":"993","endLine":16,"endColumn":55},{"ruleId":"1017","severity":1,"message":"1018","line":25,"column":49,"nodeType":"993","endLine":26,"endColumn":84},{"ruleId":"986","severity":1,"message":"1099","line":7,"column":5,"nodeType":"988","messageId":"989","endLine":7,"endColumn":41},{"ruleId":"986","severity":1,"message":"1100","line":8,"column":5,"nodeType":"988","messageId":"989","endLine":8,"endColumn":43},{"ruleId":"986","severity":1,"message":"1124","line":10,"column":9,"nodeType":"988","messageId":"989","endLine":10,"endColumn":14},{"ruleId":"986","severity":1,"message":"1129","line":68,"column":12,"nodeType":"988","messageId":"989","endLine":68,"endColumn":24},{"ruleId":"998","severity":1,"message":"1144","line":93,"column":8,"nodeType":"1000","endLine":93,"endColumn":10,"suggestions":"1145"},{"ruleId":"1114","severity":1,"message":"1115","line":58,"column":80,"nodeType":"993","endLine":60,"endColumn":42},{"ruleId":"1068","severity":1,"message":"1069","line":104,"column":52,"nodeType":"1070","messageId":"1071","endLine":104,"endColumn":53},{"ruleId":"1017","severity":1,"message":"1018","line":136,"column":33,"nodeType":"993","endLine":136,"endColumn":101},{"ruleId":"1017","severity":1,"message":"1018","line":145,"column":33,"nodeType":"993","endLine":145,"endColumn":86},{"ruleId":"986","severity":1,"message":"1146","line":4,"column":9,"nodeType":"988","messageId":"989","endLine":4,"endColumn":25},{"ruleId":"998","severity":1,"message":"1136","line":70,"column":8,"nodeType":"1000","endLine":70,"endColumn":10,"suggestions":"1147"},{"ruleId":"998","severity":1,"message":"1148","line":93,"column":8,"nodeType":"1000","endLine":93,"endColumn":10,"suggestions":"1149"},{"ruleId":"998","severity":1,"message":"1148","line":149,"column":8,"nodeType":"1000","endLine":149,"endColumn":10,"suggestions":"1150"},{"ruleId":"998","severity":1,"message":"1151","line":20,"column":11,"nodeType":"1152","endLine":74,"endColumn":6},{"ruleId":"998","severity":1,"message":"1153","line":83,"column":8,"nodeType":"1000","endLine":83,"endColumn":10,"suggestions":"1154"},{"ruleId":"986","severity":1,"message":"1093","line":3,"column":9,"nodeType":"988","messageId":"989","endLine":3,"endColumn":18},{"ruleId":"1017","severity":1,"message":"1018","line":82,"column":33,"nodeType":"993","endLine":82,"endColumn":88},{"ruleId":"1017","severity":1,"message":"1018","line":85,"column":33,"nodeType":"993","endLine":85,"endColumn":121},{"ruleId":"998","severity":1,"message":"1155","line":78,"column":8,"nodeType":"1000","endLine":78,"endColumn":42,"suggestions":"1156"},{"ruleId":"998","severity":1,"message":"1056","line":53,"column":7,"nodeType":"1000","endLine":53,"endColumn":9,"suggestions":"1157"},{"ruleId":"986","severity":1,"message":"1158","line":52,"column":11,"nodeType":"988","messageId":"989","endLine":52,"endColumn":26},{"ruleId":"986","severity":1,"message":"1159","line":62,"column":11,"nodeType":"988","messageId":"989","endLine":62,"endColumn":22},{"ruleId":"1114","severity":1,"message":"1115","line":146,"column":53,"nodeType":"993","endLine":147,"endColumn":71},{"ruleId":"1017","severity":1,"message":"1018","line":156,"column":65,"nodeType":"993","endLine":157,"endColumn":100},{"ruleId":"994","severity":1,"message":"995","line":310,"column":80,"nodeType":"996","endLine":310,"endColumn":97},{"ruleId":"1036","severity":1,"message":"1037","line":32,"column":26,"nodeType":"1038","messageId":"1039","endLine":32,"endColumn":28},{"ruleId":"998","severity":1,"message":"1040","line":61,"column":8,"nodeType":"1000","endLine":61,"endColumn":10,"suggestions":"1160"},{"ruleId":"1068","severity":1,"message":"1069","line":239,"column":103,"nodeType":"1070","messageId":"1071","endLine":239,"endColumn":104},{"ruleId":"998","severity":1,"message":"1043","line":54,"column":8,"nodeType":"1000","endLine":54,"endColumn":55,"suggestions":"1161"},{"ruleId":"998","severity":1,"message":"1043","line":53,"column":8,"nodeType":"1000","endLine":53,"endColumn":55,"suggestions":"1162"},{"ruleId":"998","severity":1,"message":"1094","line":77,"column":8,"nodeType":"1000","endLine":77,"endColumn":10,"suggestions":"1163"},{"ruleId":"1017","severity":1,"message":"1018","line":110,"column":33,"nodeType":"993","endLine":110,"endColumn":88},{"ruleId":"998","severity":1,"message":"1127","line":86,"column":8,"nodeType":"1000","endLine":86,"endColumn":42,"suggestions":"1164"},{"ruleId":"998","severity":1,"message":"1165","line":79,"column":8,"nodeType":"1000","endLine":79,"endColumn":10,"suggestions":"1166"},{"ruleId":"1017","severity":1,"message":"1018","line":112,"column":33,"nodeType":"993","endLine":112,"endColumn":88},{"ruleId":"998","severity":1,"message":"1127","line":66,"column":8,"nodeType":"1000","endLine":66,"endColumn":67,"suggestions":"1167"},{"ruleId":"1036","severity":1,"message":"1037","line":200,"column":21,"nodeType":"1038","messageId":"1039","endLine":200,"endColumn":23},{"ruleId":"998","severity":1,"message":"1153","line":70,"column":8,"nodeType":"1000","endLine":70,"endColumn":12,"suggestions":"1168"},{"ruleId":"1169","severity":1,"message":"1170","line":86,"column":99,"nodeType":"1171","messageId":"1172","endLine":86,"endColumn":101},{"ruleId":"1169","severity":1,"message":"1170","line":87,"column":99,"nodeType":"1171","messageId":"1172","endLine":87,"endColumn":101},{"ruleId":"1017","severity":1,"message":"1018","line":115,"column":33,"nodeType":"993","endLine":115,"endColumn":88},"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'mounted' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'RuleEditPage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'EventNotification'. Either exclude it or remove the dependency array. Outer scope values like 'EventNotification' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["1173"],"React Hook useCallback has an unnecessary dependency: 'RelaunchNotification'. Either exclude it or remove the dependency array. Outer scope values like 'RelaunchNotification' aren't valid dependencies because mutating them doesn't re-render the component.",["1174"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["1175"],"React Hook useEffect has missing dependencies: 'fetchData' and 'props.user'. Either include them or remove the dependency array.",["1176"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["1177"],["1178"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'seeHistorique' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","React Hook useEffect has a missing dependency: 'editfaqid'. Either include it or remove the dependency array.",["1179"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'InfirmationTable' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1180"],"React Hook useEffect has a missing dependency: 'editcategoryid'. Either include it or remove the dependency array.",["1181"],"React Hook useEffect has a missing dependency: 'edittypeid'. Either include it or remove the dependency array.",["1182"],"React Hook useEffect has an unnecessary dependency: 'appConfig.apiDomaine'. Either exclude it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1183"],["1184"],"React Hook useEffect has a missing dependency: 'filterCurrency'. Either include it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1185"],["1186"],["1187"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["1188"],["1189"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'id' and 'initialState'. Either include them or remove the dependency array.",["1190"],["1191"],"React Hook useEffect has unnecessary dependencies: 'NUMBER_ELEMENT_PER_PAGE' and 'appConfig.apiDomaine'. Either exclude them or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1192"],["1193"],"React Hook useEffect has an unnecessary dependency: 'NUMBER_ELEMENT_PER_PAGE'. Either exclude it or remove the dependency array. Outer scope values like 'NUMBER_ELEMENT_PER_PAGE' aren't valid dependencies because mutating them doesn't re-render the component.",["1194"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["1195"],["1196"],["1197"],["1198"],"React Hook useEffect has a missing dependency: 'numberPerPage'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1199"],"'deleteFaqs' is assigned a value but never used.",["1200"],"'deleteCategoryFaqs' is assigned a value but never used.",["1201"],"'deleteInstitution' is assigned a value but never used.",["1202"],"'loadScript' is defined but never used.",["1203"],"React Hook useEffect has missing dependencies: 'endPoint.list' and 'numberPerPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1204"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["1205"],["1206"],["1207"],"'Link' is defined but never used.",["1208"],["1209"],["1210"],["1211"],["1212"],"react/jsx-no-duplicate-props","No duplicate props allowed","React Hook useEffect has a missing dependency: 'numberPerPage'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberPage' needs the current value of 'numberPerPage'.",["1213"],["1214"],"React Hook useEffect has missing dependencies: 'numberPerPage' and 'props.plan'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberPage' needs the current value of 'numberPerPage'.",["1215"],["1216"],["1217"],["1218"],["1219"],["1220"],"'ERROR_401' is defined but never used.","React Hook useEffect has missing dependencies: 'endPoint.list' and 'id'. Either include them or remove the dependency array.",["1221"],"'useState' is defined but never used.","'axios' is defined but never used.","'ToastBottomEnd' is defined but never used.","'toastErrorMessageWithParameterConfig' is defined but never used.","'toastSuccessMessageWithParameterConfig' is defined but never used.","'InputRequire' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1222"],["1223"],"'setError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'endPoint', 'id', and 'props.userPermissions'. Either include them or remove the dependency array.",["1224"],"React Hook useEffect has missing dependencies: 'id' and 'numberPerPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1225"],["1226"],"React Hook useEffect has missing dependencies: 'id' and 'props.userPermissions'. Either include them or remove the dependency array.",["1227"],"'Switch' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'search' is assigned a value but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.",["1228"],"no-redeclare","'endpoint' is already defined.","redeclared","'debug' is defined but never used.","React Hook useEffect has missing dependencies: 'applyPossibleFilter', 'endpoint', and 'renderChart'. Either include them or remove the dependency array.",["1229"],"React Hook useEffect has a missing dependency: 'props.userPermissions'. Either include it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1230"],"'disableInput' is assigned a value but never used.",["1231"],"'setAccounts' is assigned a value but never used.","'setUnits' is assigned a value but never used.","'setDisabledInput' is assigned a value but never used.",["1232"],["1233"],"React Hook useEffect has a missing dependency: 'defaultData'. Either include it or remove the dependency array.",["1234"],"'toastAddErrorMessageConfig' is defined but never used.","'formatInstitutions' is defined but never used.","'clients' is assigned a value but never used.","'setClients' is assigned a value but never used.","'client' is assigned a value but never used.","'setClient' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'endPoint.list' and 'props.userPermissions'. Either include them or remove the dependency array.",["1235"],"'verifyPermission' is defined but never used.",["1236"],"React Hook useEffect has missing dependencies: 'defaultData' and 'props.userPermissions'. Either include them or remove the dependency array.",["1237"],["1238"],"The 'defaultData' object makes the dependencies of useEffect Hook (at line 130) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'defaultData' in its own useMemo() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'props.userPermissions'. Either include it or remove the dependency array.",["1239"],"React Hook useEffect has missing dependencies: 'defaultData', 'id', and 'props.userPermissions'. Either include them or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1240"],["1241"],"'onClickPrevious' is assigned a value but never used.","'onClickNext' is assigned a value but never used.",["1242"],["1243"],["1244"],["1245"],["1246"],"React Hook useEffect has missing dependencies: 'endPoint.edit' and 'id'. Either include them or remove the dependency array.",["1247"],["1248"],["1249"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator",{"desc":"1250","fix":"1251"},{"desc":"1250","fix":"1252"},{"desc":"1253","fix":"1254"},{"desc":"1255","fix":"1256"},{"desc":"1257","fix":"1258"},{"desc":"1257","fix":"1259"},{"desc":"1260","fix":"1261"},{"desc":"1262","fix":"1263"},{"desc":"1264","fix":"1265"},{"desc":"1266","fix":"1267"},{"desc":"1262","fix":"1268"},{"desc":"1262","fix":"1269"},{"desc":"1270","fix":"1271"},{"desc":"1262","fix":"1272"},{"desc":"1250","fix":"1273"},{"desc":"1274","fix":"1275"},{"desc":"1262","fix":"1276"},{"desc":"1277","fix":"1278"},{"desc":"1262","fix":"1279"},{"desc":"1250","fix":"1280"},{"desc":"1250","fix":"1281"},{"desc":"1282","fix":"1283"},{"desc":"1250","fix":"1284"},{"desc":"1282","fix":"1285"},{"desc":"1250","fix":"1286"},{"desc":"1250","fix":"1287"},{"desc":"1288","fix":"1289"},{"desc":"1288","fix":"1290"},{"desc":"1288","fix":"1291"},{"desc":"1288","fix":"1292"},{"desc":"1288","fix":"1293"},{"desc":"1294","fix":"1295"},{"desc":"1282","fix":"1296"},{"desc":"1262","fix":"1297"},{"desc":"1262","fix":"1298"},{"desc":"1250","fix":"1299"},{"desc":"1250","fix":"1300"},{"desc":"1288","fix":"1301"},{"desc":"1262","fix":"1302"},{"desc":"1250","fix":"1303"},{"desc":"1288","fix":"1304"},{"desc":"1288","fix":"1305"},{"desc":"1306","fix":"1307"},{"desc":"1294","fix":"1308"},{"desc":"1294","fix":"1309"},{"desc":"1262","fix":"1310"},{"desc":"1294","fix":"1311"},{"desc":"1250","fix":"1312"},{"desc":"1313","fix":"1314"},{"desc":"1315","fix":"1316"},{"desc":"1294","fix":"1317"},{"desc":"1318","fix":"1319"},{"desc":"1320","fix":"1321"},{"desc":"1288","fix":"1322"},{"desc":"1323","fix":"1324"},{"desc":"1325","fix":"1326"},{"desc":"1327","fix":"1328"},{"desc":"1329","fix":"1330"},{"desc":"1318","fix":"1331"},{"desc":"1288","fix":"1332"},{"desc":"1288","fix":"1333"},{"desc":"1334","fix":"1335"},{"desc":"1336","fix":"1337"},{"desc":"1334","fix":"1338"},{"desc":"1339","fix":"1340"},{"desc":"1339","fix":"1341"},{"desc":"1329","fix":"1342"},{"desc":"1343","fix":"1344"},{"desc":"1288","fix":"1345"},{"desc":"1277","fix":"1346"},{"desc":"1250","fix":"1347"},{"desc":"1250","fix":"1348"},{"desc":"1313","fix":"1349"},{"desc":"1350","fix":"1351"},{"desc":"1352","fix":"1353"},{"desc":"1350","fix":"1354"},{"desc":"1323","fix":"1355"},"Update the dependencies array to be: []",{"range":"1356","text":"1357"},{"range":"1358","text":"1357"},"Update the dependencies array to be: [fetchData]",{"range":"1359","text":"1360"},"Update the dependencies array to be: [fetchData, props.user, props.user.identite]",{"range":"1361","text":"1362"},"Update the dependencies array to be: [props]",{"range":"1363","text":"1364"},{"range":"1365","text":"1364"},"Update the dependencies array to be: [editfaqid]",{"range":"1366","text":"1367"},"Update the dependencies array to be: [id]",{"range":"1368","text":"1369"},"Update the dependencies array to be: [editcategoryid]",{"range":"1370","text":"1371"},"Update the dependencies array to be: [edittypeid]",{"range":"1372","text":"1373"},{"range":"1374","text":"1369"},{"range":"1375","text":"1369"},"Update the dependencies array to be: [filterCurrency, id]",{"range":"1376","text":"1377"},{"range":"1378","text":"1369"},{"range":"1379","text":"1357"},"Update the dependencies array to be: [data]",{"range":"1380","text":"1381"},{"range":"1382","text":"1369"},"Update the dependencies array to be: [id, initialState]",{"range":"1383","text":"1384"},{"range":"1385","text":"1369"},{"range":"1386","text":"1357"},{"range":"1387","text":"1357"},"Update the dependencies array to be: [endPoint.list]",{"range":"1388","text":"1389"},{"range":"1390","text":"1357"},{"range":"1391","text":"1389"},{"range":"1392","text":"1357"},{"range":"1393","text":"1357"},"Update the dependencies array to be: [numberPerPage]",{"range":"1394","text":"1395"},{"range":"1396","text":"1395"},{"range":"1397","text":"1395"},{"range":"1398","text":"1395"},{"range":"1399","text":"1395"},"Update the dependencies array to be: [endPoint.list, numberPerPage]",{"range":"1400","text":"1401"},{"range":"1402","text":"1389"},{"range":"1403","text":"1369"},{"range":"1404","text":"1369"},{"range":"1405","text":"1357"},{"range":"1406","text":"1357"},{"range":"1407","text":"1395"},{"range":"1408","text":"1369"},{"range":"1409","text":"1357"},{"range":"1410","text":"1395"},{"range":"1411","text":"1395"},"Update the dependencies array to be: [numberPerPage, props.plan]",{"range":"1412","text":"1413"},{"range":"1414","text":"1401"},{"range":"1415","text":"1401"},{"range":"1416","text":"1369"},{"range":"1417","text":"1401"},{"range":"1418","text":"1357"},"Update the dependencies array to be: [endPoint.list, id]",{"range":"1419","text":"1420"},"Update the dependencies array to be: [id, props]",{"range":"1421","text":"1422"},{"range":"1423","text":"1401"},"Update the dependencies array to be: [endPoint, id, props.userPermissions]",{"range":"1424","text":"1425"},"Update the dependencies array to be: [id, numberPerPage]",{"range":"1426","text":"1427"},{"range":"1428","text":"1395"},"Update the dependencies array to be: [id, props.userPermissions]",{"range":"1429","text":"1430"},"Update the dependencies array to be: [data, id, props.userPermissions]",{"range":"1431","text":"1432"},"Update the dependencies array to be: [applyPossibleFilter, endpoint, renderChart]",{"range":"1433","text":"1434"},"Update the dependencies array to be: [props.userPermissions]",{"range":"1435","text":"1436"},{"range":"1437","text":"1425"},{"range":"1438","text":"1395"},{"range":"1439","text":"1395"},"Update the dependencies array to be: [defaultData]",{"range":"1440","text":"1441"},"Update the dependencies array to be: [endPoint.list, props.userPermissions]",{"range":"1442","text":"1443"},{"range":"1444","text":"1441"},"Update the dependencies array to be: [defaultData, props.userPermissions]",{"range":"1445","text":"1446"},{"range":"1447","text":"1446"},{"range":"1448","text":"1436"},"Update the dependencies array to be: [props.plan, props.userPermissions, id, defaultData]",{"range":"1449","text":"1450"},{"range":"1451","text":"1395"},{"range":"1452","text":"1384"},{"range":"1453","text":"1357"},{"range":"1454","text":"1357"},{"range":"1455","text":"1420"},"Update the dependencies array to be: [props.plan, props.userPermissions]",{"range":"1456","text":"1457"},"Update the dependencies array to be: [endPoint.edit, id]",{"range":"1458","text":"1459"},{"range":"1460","text":"1457"},{"range":"1461","text":"1430"},[1629,1648],"[]",[1859,1881],[2447,2449],"[fetchData]",[3219,3240],"[fetchData, props.user, props.user.identite]",[3370,3392],"[props]",[3510,3528],[2413,2415],"[editfaqid]",[1732,1734],"[id]",[1919,1921],"[editcategoryid]",[1889,1891],"[edittypeid]",[1900,1926],[3171,3197],[2731,2757],"[filterCurrency, id]",[2121,2147],[2628,2650],[1528,1530],"[data]",[3142,3168],[4141,4143],"[id, initialState]",[1923,1925],[2294,2341],[2487,2534],[3625,3665],"[endPoint.list]",[2436,2483],[3694,3734],[2402,2449],[2318,2365],[2359,2361],"[numberPerPage]",[2424,2426],[2398,2400],[2413,2415],[2389,2391],[3583,3585],"[endPoint.list, numberPerPage]",[2888,2928],[2451,2477],[4154,4156],[2424,2471],[2387,2434],[2969,2971],[1905,1931],[2441,2488],[2095,2097],[2245,2247],[2578,2580],"[numberPerPage, props.plan]",[3061,3063],[2976,2978],[1916,1918],[3293,3295],[2350,2397],[4116,4118],"[endPoint.list, id]",[4274,4276],"[id, props]",[3651,3653],[4258,4260],"[endPoint, id, props.userPermissions]",[2610,2612],"[id, numberPerPage]",[2415,2417],[3769,3771],"[id, props.userPermissions]",[5596,5623],"[data, id, props.userPermissions]",[9639,9641],"[applyPossibleFilter, endpoint, renderChart]",[2821,2868],"[props.userPermissions]",[8360,8362],[2068,2070],[2069,2071],[2251,2253],"[defaultData]",[3118,3120],"[endPoint.list, props.userPermissions]",[2499,2501],[3154,3156],"[defaultData, props.userPermissions]",[5738,5740],[2677,2679],[3192,3226],"[props.plan, props.userPermissions, id, defaultData]",[2119,2121],[2111,2113],[2332,2379],[2355,2402],[2823,2825],[3545,3579],"[props.plan, props.userPermissions]",[2934,2936],"[endPoint.edit, id]",[2999,3058],[3231,3235]]
=======
[{"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\index.js":"1","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\serviceWorker.js":"2","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\AppContainer.js":"3","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\languageReducer.js":"4","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\authReducer.js":"5","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\IdentityReducer.js":"6","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\planReducer.js":"7","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\treatmentReducer.js":"8","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\NatureAppChoice.js":"9","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\routeApp.js":"10","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\planAction.js":"11","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\appConfig.js":"12","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\token.js":"13","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\authActions.js":"14","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\languageAction.js":"15","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\treatmentAction.js":"16","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\IdentityAction.js":"17","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\function.js":"18","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\confirmConfig.js":"19","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\modules\\login\\views\\Pages\\LoginPage.jsx":"20","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ConfirmationAlert.js":"21","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\channel.js":"22","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\userClient.js":"23","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\permission.js":"24","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\layouts\\App.jsx":"25","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Toast.js":"26","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\toastConfig.js":"27","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Loader.jsx":"28","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Footer.jsx":"29","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Nav.jsx":"30","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\HeaderMobile.jsx":"31","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Body.jsx":"32","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Aside.jsx":"33","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Error401.jsx":"34","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FaqsForm.jsx":"35","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\notification.js":"36","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\middleware\\verifyToken.js":"37","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\EmptyNotification.jsx":"38","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\PerformanceIndicator.jsx":"39","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\UnitType.jsx":"40","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Staff.jsx":"41","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Mail.jsx":"42","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Position.jsx":"43","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Unit.jsx":"44","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\FAQsPage.jsx":"45","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimObject.jsx":"46","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimCategory.jsx":"47","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\CategoryFAQs.jsx":"48","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Institution.jsx":"49","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CategoryFaqsForm.jsx":"50","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\CategoryClient.jsx":"51","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\FAQs.jsx":"52","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CategoryClientForm.jsx":"53","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\TypeClient.jsx":"54","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Clients.jsx":"55","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\TypeClientForm.jsx":"56","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\UnitTypeForm.jsx":"57","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\PositionForm.jsx":"58","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\UnitForm.jsx":"59","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimObjectForm.jsx":"60","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimCategoryForm.jsx":"61","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\SeverityLevelForm.jsx":"62","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\PerformanceIndicatorForm.jsx":"63","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\SeverityLevel.jsx":"64","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Channel.jsx":"65","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Currency.jsx":"66","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ChannelForm.jsx":"67","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CurrencyForm.jsx":"68","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAdd.jsx":"69","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\IncompleteClaims.jsx":"70","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RelationShip.jsx":"71","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigRequirements.jsx":"72","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigProcessingCircuit.jsx":"73","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\RelationShipForm.jsx":"74","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\IncompleteClaimsEdit.jsx":"75","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssign.jsx":"76","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimList.jsx":"77","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimToValidatedList.jsx":"78","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssignDetail.jsx":"79","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssignToStaff.jsx":"80","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReporting.jsx":"81","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimMonitoring.jsx":"82","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Dashboards.jsx":"83","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigNotification.jsx":"84","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\StaffChannels.jsx":"85","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\MessageApi.jsx":"86","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\PercentageMinFusion.jsx":"87","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\SatisfactionMeasure.jsx":"88","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RecurencePage.jsx":"89","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigRapportAuto.jsx":"90","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RejectLimitPage.jsx":"91","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ProfilePage.jsx":"92","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RuleAddPage.jsx":"93","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimImportPage.jsx":"94","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RuleEditPage.jsx":"95","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\StaffImportPage.jsx":"96","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\HistoricClaimsAdd.jsx":"97","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimCategoryImportPage.jsx":"98","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ActivatePilotPage.jsx":"99","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimsArchived.jsx":"100","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\UserEdit.jsx":"101","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ConfigCoefficient.jsx":"102","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RulePage.jsx":"103","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimObjectImportPage.jsx":"104","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ParametersComponentEdit.jsx":"105","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\HistoricClaimsTraetment.jsx":"106","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Clients\\ImportClientForm.jsx":"107","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Clients\\ClientForm.jsx":"108","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Institutions\\InstitutionForm.jsx":"109","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\staff\\StaffForm.jsx":"110","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\Chats.jsx":"111","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\RemoveChats.jsx":"112","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\Participants.jsx":"113","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\AddChatsForm.jsx":"114","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\AddMemberForm.jsx":"115","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Institutions\\ImportInstitutionForm.jsx":"116","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ParametersComponent.jsx":"117","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\TreatmentPeriodAdd.jsx":"118","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\QualificationPeriodAdd.jsx":"119","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\APP_MACRO\\Holding\\HoldingClientForm.jsx":"120","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\APP_MACRO\\Filiale\\FilialeInstitutionForm.jsx":"121","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\TreatmentPeriod.jsx":"122","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\errorPage.js":"123","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FaqListe.jsx":"124","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\dataTable.js":"125","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\date.js":"126","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ExportButton.jsx":"127","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\InputRequire.jsx":"128","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\InfirmationTable.jsx":"129","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\WithoutCode.jsx":"130","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Pagination.jsx":"131","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\UnfoundedModal.jsx":"132","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\LoadingTable.jsx":"133","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ImportFileForm.jsx":"134","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\DetailModal.jsx":"135","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\ClaimToPointOfServices.jsx":"136","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\profile\\UpdatePassword.jsx":"137","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\HeaderTablePage.jsx":"138","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\PeriodForm.jsx":"139","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\EmptyTable.jsx":"140","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Clients\\ConfirmClientSaveForm.jsx":"141","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\MessageList.js":"142","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\unit.js":"143","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\institution.js":"144","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\currencyContry.js":"145","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\IdentityForm.jsx":"146","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\staff\\ConfirmSaveForm.jsx":"147","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardStatClaim.jsx":"148","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\ClaimToInstitution.jsx":"149","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsActivity.jsx":"150","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardSummaryReport.jsx":"151","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\profile\\PersonalInfo.jsx":"152","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\APP_MACRO\\Holding\\DashboardClaimsAll.jsx":"153","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToAssignStaff.jsx":"154","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToMeasure.jsx":"155","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToTreat.jsx":"156","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToAssignUnit.jsx":"157","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToValidate.jsx":"158","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardStatistic.jsx":"159","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToComplete.jsx":"160","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsMy.jsx":"161","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DoubleButtonDetail.jsx":"162","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\AttachmentsButtonDetail.jsx":"163","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsUnit.jsx":"164","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\GraphChannel.jsx":"165","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimButtonDetail.jsx":"166","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClientButtonDetail.jsx":"167","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FusionClaim.jsx":"168","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\AttachmentsButton.jsx":"169","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\User.jsx":"170","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\UserAdd.jsx":"171","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClientButton.jsx":"172","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimToValidatedListDetail.jsx":"173","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DoubleButton.jsx":"174","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimButton.jsx":"175","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimsArchivedDetail.jsx":"176","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\QualificationPeriod.jsx":"177","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\SatisfactionMeasureDetail.jsx":"178","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssignToStaffDetail.jsx":"179","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ConfigRapportAutoForm.jsx":"180","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\MessageAPIForm.jsx":"181","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimListDetail.jsx":"182","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\InstitutionMessageApi.jsx":"183","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Modal\\ConfirmClaimAddModal.jsx":"184","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ClaimDetails.jsx":"185","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\Message.js":"186","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FormInformation.jsx":"187","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\KanbanElementDetail.jsx":"188","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ReasonSatisfaction.jsx":"189","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\TreatmentForm.jsx":"190","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ReasonModal.jsx":"191","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\TreatmentButtonDetail.jsx":"192"},{"size":1042,"mtime":1606902896895,"results":"193","hashOfConfig":"194"},{"size":5226,"mtime":1606902846696,"results":"195","hashOfConfig":"194"},{"size":2258,"mtime":1606919801164,"results":"196","hashOfConfig":"194"},{"size":693,"mtime":1606902897214,"results":"197","hashOfConfig":"194"},{"size":886,"mtime":1606902897194,"results":"198","hashOfConfig":"194"},{"size":885,"mtime":1606902897193,"results":"199","hashOfConfig":"194"},{"size":590,"mtime":1606902897234,"results":"200","hashOfConfig":"194"},{"size":664,"mtime":1606902897236,"results":"201","hashOfConfig":"194"},{"size":6833,"mtime":1606919610542,"results":"202","hashOfConfig":"194"},{"size":1054,"mtime":1606902897079,"results":"203","hashOfConfig":"194"},{"size":260,"mtime":1606902897190,"results":"204","hashOfConfig":"194"},{"size":704,"mtime":1608713710597,"results":"205","hashOfConfig":"194"},{"size":70,"mtime":1606902896728,"results":"206","hashOfConfig":"194"},{"size":242,"mtime":1606902897172,"results":"207","hashOfConfig":"194"},{"size":163,"mtime":1606902897173,"results":"208","hashOfConfig":"194"},{"size":140,"mtime":1606902897191,"results":"209","hashOfConfig":"194"},{"size":136,"mtime":1606902897156,"results":"210","hashOfConfig":"194"},{"size":18780,"mtime":1606902896767,"results":"211","hashOfConfig":"194"},{"size":2461,"mtime":1606902896623,"results":"212","hashOfConfig":"194"},{"size":13472,"mtime":1606902897047,"results":"213","hashOfConfig":"194"},{"size":341,"mtime":1606902897550,"results":"214","hashOfConfig":"194"},{"size":912,"mtime":1606902896631,"results":"215","hashOfConfig":"194"},{"size":711,"mtime":1606902896743,"results":"216","hashOfConfig":"194"},{"size":224,"mtime":1606902896801,"results":"217","hashOfConfig":"194"},{"size":2438,"mtime":1606902898493,"results":"218","hashOfConfig":"194"},{"size":651,"mtime":1606902898176,"results":"219","hashOfConfig":"194"},{"size":6078,"mtime":1606902896628,"results":"220","hashOfConfig":"194"},{"size":362,"mtime":1606902897993,"results":"221","hashOfConfig":"194"},{"size":597,"mtime":1606902898469,"results":"222","hashOfConfig":"194"},{"size":28258,"mtime":1606902898491,"results":"223","hashOfConfig":"194"},{"size":832,"mtime":1606902898471,"results":"224","hashOfConfig":"194"},{"size":20570,"mtime":1608657367196,"results":"225","hashOfConfig":"194"},{"size":62087,"mtime":1606902898465,"results":"226","hashOfConfig":"194"},{"size":1300,"mtime":1606902898817,"results":"227","hashOfConfig":"194"},{"size":19033,"mtime":1606902897893,"results":"228","hashOfConfig":"194"},{"size":2524,"mtime":1606902896680,"results":"229","hashOfConfig":"194"},{"size":254,"mtime":1606902896950,"results":"230","hashOfConfig":"194"},{"size":548,"mtime":1606902897872,"results":"231","hashOfConfig":"194"},{"size":18834,"mtime":1606902898870,"results":"232","hashOfConfig":"194"},{"size":19259,"mtime":1606902899012,"results":"233","hashOfConfig":"194"},{"size":24432,"mtime":1606902898977,"results":"234","hashOfConfig":"194"},{"size":20823,"mtime":1606902898855,"results":"235","hashOfConfig":"194"},{"size":16732,"mtime":1606902898871,"results":"236","hashOfConfig":"194"},{"size":22041,"mtime":1606902899011,"results":"237","hashOfConfig":"194"},{"size":1939,"mtime":1606902898820,"results":"238","hashOfConfig":"194"},{"size":21100,"mtime":1606902898655,"results":"239","hashOfConfig":"194"},{"size":17607,"mtime":1606902898592,"results":"240","hashOfConfig":"194"},{"size":16842,"mtime":1606902898546,"results":"241","hashOfConfig":"194"},{"size":22012,"mtime":1606902898851,"results":"242","hashOfConfig":"194"},{"size":10275,"mtime":1606902897334,"results":"243","hashOfConfig":"194"},{"size":19241,"mtime":1606902898543,"results":"244","hashOfConfig":"194"},{"size":18123,"mtime":1606902898819,"results":"245","hashOfConfig":"194"},{"size":15519,"mtime":1606902897303,"results":"246","hashOfConfig":"194"},{"size":18431,"mtime":1606902899009,"results":"247","hashOfConfig":"194"},{"size":23019,"mtime":1606902898704,"results":"248","hashOfConfig":"194"},{"size":15755,"mtime":1606902898210,"results":"249","hashOfConfig":"194"},{"size":16714,"mtime":1606902898247,"results":"250","hashOfConfig":"194"},{"size":10799,"mtime":1606902898165,"results":"251","hashOfConfig":"194"},{"size":23853,"mtime":1606902898245,"results":"252","hashOfConfig":"194"},{"size":20492,"mtime":1606902897520,"results":"253","hashOfConfig":"194"},{"size":10916,"mtime":1606902897493,"results":"254","hashOfConfig":"194"},{"size":16498,"mtime":1606902898174,"results":"255","hashOfConfig":"194"},{"size":17299,"mtime":1606902898147,"results":"256","hashOfConfig":"194"},{"size":19529,"mtime":1606902898976,"results":"257","hashOfConfig":"194"},{"size":17941,"mtime":1606902898547,"results":"258","hashOfConfig":"194"},{"size":17592,"mtime":1606902898724,"results":"259","hashOfConfig":"194"},{"size":11044,"mtime":1606902897437,"results":"260","hashOfConfig":"194"},{"size":15143,"mtime":1606902897581,"results":"261","hashOfConfig":"194"},{"size":77226,"mtime":1606902898569,"results":"262","hashOfConfig":"194"},{"size":18946,"mtime":1606902898840,"results":"263","hashOfConfig":"194"},{"size":17513,"mtime":1606902898918,"results":"264","hashOfConfig":"194"},{"size":19979,"mtime":1606902898723,"results":"265","hashOfConfig":"194"},{"size":27538,"mtime":1606902898722,"results":"266","hashOfConfig":"194"},{"size":15997,"mtime":1606902898171,"results":"267","hashOfConfig":"194"},{"size":70101,"mtime":1606902897965,"results":"268","hashOfConfig":"194"},{"size":19357,"mtime":1606902898571,"results":"269","hashOfConfig":"194"},{"size":17975,"mtime":1606902898595,"results":"270","hashOfConfig":"194"},{"size":18776,"mtime":1606902898691,"results":"271","hashOfConfig":"194"},{"size":26120,"mtime":1606902898576,"results":"272","hashOfConfig":"194"},{"size":19695,"mtime":1606902898578,"results":"273","hashOfConfig":"194"},{"size":51031,"mtime":1606902898669,"results":"274","hashOfConfig":"194"},{"size":29157,"mtime":1606902898654,"results":"275","hashOfConfig":"194"},{"size":4779,"mtime":1606902898724,"results":"276","hashOfConfig":"194"},{"size":11045,"mtime":1606902898721,"results":"277","hashOfConfig":"194"},{"size":9717,"mtime":1606902898175,"results":"278","hashOfConfig":"194"},{"size":17989,"mtime":1606902898856,"results":"279","hashOfConfig":"194"},{"size":8321,"mtime":1606902898868,"results":"280","hashOfConfig":"194"},{"size":17317,"mtime":1606902898950,"results":"281","hashOfConfig":"194"},{"size":10326,"mtime":1606902898905,"results":"282","hashOfConfig":"194"},{"size":20794,"mtime":1606902898722,"results":"283","hashOfConfig":"194"},{"size":8334,"mtime":1606902898906,"results":"284","hashOfConfig":"194"},{"size":12014,"mtime":1606902898872,"results":"285","hashOfConfig":"194"},{"size":23932,"mtime":1606902898920,"results":"286","hashOfConfig":"194"},{"size":1976,"mtime":1606902898594,"results":"287","hashOfConfig":"194"},{"size":16726,"mtime":1606902898943,"results":"288","hashOfConfig":"194"},{"size":14853,"mtime":1606902898979,"results":"289","hashOfConfig":"194"},{"size":17201,"mtime":1606902898837,"results":"290","hashOfConfig":"194"},{"size":1166,"mtime":1606902898593,"results":"291","hashOfConfig":"194"},{"size":9044,"mtime":1608713710602,"results":"292","hashOfConfig":"194"},{"size":17969,"mtime":1606902898702,"results":"293","hashOfConfig":"194"},{"size":15160,"mtime":1606902899026,"results":"294","hashOfConfig":"194"},{"size":8764,"mtime":1608713878214,"results":"295","hashOfConfig":"194"},{"size":17986,"mtime":1606902898946,"results":"296","hashOfConfig":"194"},{"size":1143,"mtime":1606902898669,"results":"297","hashOfConfig":"194"},{"size":17275,"mtime":1606902898116,"results":"298","hashOfConfig":"194"},{"size":16626,"mtime":1606902898839,"results":"299","hashOfConfig":"194"},{"size":16456,"mtime":1606902897524,"results":"300","hashOfConfig":"194"},{"size":21331,"mtime":1606902897523,"results":"301","hashOfConfig":"194"},{"size":29740,"mtime":1606902897992,"results":"302","hashOfConfig":"194"},{"size":41304,"mtime":1606902898422,"results":"303","hashOfConfig":"194"},{"size":39419,"mtime":1608712578896,"results":"304","hashOfConfig":"194"},{"size":17556,"mtime":1608712751145,"results":"305","hashOfConfig":"194"},{"size":19495,"mtime":1606902898813,"results":"306","hashOfConfig":"194"},{"size":14904,"mtime":1606902898725,"results":"307","hashOfConfig":"194"},{"size":12452,"mtime":1608657456854,"results":"308","hashOfConfig":"194"},{"size":9236,"mtime":1606902897981,"results":"309","hashOfConfig":"194"},{"size":15092,"mtime":1606902898857,"results":"310","hashOfConfig":"194"},{"size":10765,"mtime":1606902899008,"results":"311","hashOfConfig":"194"},{"size":10795,"mtime":1606902898903,"results":"312","hashOfConfig":"194"},{"size":47008,"mtime":1606902895313,"results":"313","hashOfConfig":"194"},{"size":21147,"mtime":1606902894851,"results":"314","hashOfConfig":"194"},{"size":17601,"mtime":1606902898983,"results":"315","hashOfConfig":"194"},{"size":158,"mtime":1606902896626,"results":"316","hashOfConfig":"194"},{"size":4067,"mtime":1606902897892,"results":"317","hashOfConfig":"194"},{"size":44,"mtime":1606902896674,"results":"318","hashOfConfig":"194"},{"size":246,"mtime":1606902896676,"results":"319","hashOfConfig":"194"},{"size":1622,"mtime":1606902897874,"results":"320","hashOfConfig":"194"},{"size":199,"mtime":1606902897979,"results":"321","hashOfConfig":"194"},{"size":727,"mtime":1606902897967,"results":"322","hashOfConfig":"194"},{"size":212,"mtime":1606902898249,"results":"323","hashOfConfig":"194"},{"size":2550,"mtime":1606902898079,"results":"324","hashOfConfig":"194"},{"size":8489,"mtime":1606902898212,"results":"325","hashOfConfig":"194"},{"size":2040,"mtime":1606902898007,"results":"326","hashOfConfig":"194"},{"size":10989,"mtime":1606902897963,"results":"327","hashOfConfig":"194"},{"size":1616,"mtime":1606902898388,"results":"328","hashOfConfig":"194"},{"size":3566,"mtime":1606902897648,"results":"329","hashOfConfig":"194"},{"size":7696,"mtime":1606902898415,"results":"330","hashOfConfig":"194"},{"size":1945,"mtime":1606902897960,"results":"331","hashOfConfig":"194"},{"size":2642,"mtime":1606902898148,"results":"332","hashOfConfig":"194"},{"size":449,"mtime":1606902897873,"results":"333","hashOfConfig":"194"},{"size":24805,"mtime":1606902897523,"results":"334","hashOfConfig":"194"},{"size":2875,"mtime":1606902898777,"results":"335","hashOfConfig":"194"},{"size":277,"mtime":1606902896836,"results":"336","hashOfConfig":"194"},{"size":283,"mtime":1606902896780,"results":"337","hashOfConfig":"194"},{"size":4116,"mtime":1606902896672,"results":"338","hashOfConfig":"194"},{"size":18338,"mtime":1606902897962,"results":"339","hashOfConfig":"194"},{"size":22812,"mtime":1606902898419,"results":"340","hashOfConfig":"194"},{"size":6533,"mtime":1606902897742,"results":"341","hashOfConfig":"194"},{"size":3701,"mtime":1606902897614,"results":"342","hashOfConfig":"194"},{"size":23372,"mtime":1606902897672,"results":"343","hashOfConfig":"194"},{"size":5462,"mtime":1606902897744,"results":"344","hashOfConfig":"194"},{"size":11455,"mtime":1606902898402,"results":"345","hashOfConfig":"194"},{"size":23562,"mtime":1606902895290,"results":"346","hashOfConfig":"194"},{"size":3696,"mtime":1606902898343,"results":"347","hashOfConfig":"194"},{"size":3129,"mtime":1606902898382,"results":"348","hashOfConfig":"194"},{"size":3982,"mtime":1606902898385,"results":"349","hashOfConfig":"194"},{"size":3490,"mtime":1606902898345,"results":"350","hashOfConfig":"194"},{"size":3988,"mtime":1606902898387,"results":"351","hashOfConfig":"194"},{"size":7145,"mtime":1606902897743,"results":"352","hashOfConfig":"194"},{"size":3131,"mtime":1606902898346,"results":"353","hashOfConfig":"194"},{"size":23460,"mtime":1606902897694,"results":"354","hashOfConfig":"194"},{"size":7975,"mtime":1606902897871,"results":"355","hashOfConfig":"194"},{"size":2036,"mtime":1606902897281,"results":"356","hashOfConfig":"194"},{"size":23277,"mtime":1606902897740,"results":"357","hashOfConfig":"194"},{"size":4538,"mtime":1606902897803,"results":"358","hashOfConfig":"194"},{"size":6586,"mtime":1606902897492,"results":"359","hashOfConfig":"194"},{"size":5946,"mtime":1606902897522,"results":"360","hashOfConfig":"194"},{"size":9524,"mtime":1606902897917,"results":"361","hashOfConfig":"194"},{"size":1150,"mtime":1606902897255,"results":"362","hashOfConfig":"194"},{"size":21784,"mtime":1608048718351,"results":"363","hashOfConfig":"194"},{"size":25657,"mtime":1606902899015,"results":"364","hashOfConfig":"194"},{"size":835,"mtime":1606902897521,"results":"365","hashOfConfig":"194"},{"size":23354,"mtime":1606902898692,"results":"366","hashOfConfig":"194"},{"size":1121,"mtime":1606902897870,"results":"367","hashOfConfig":"194"},{"size":795,"mtime":1606902897446,"results":"368","hashOfConfig":"194"},{"size":10025,"mtime":1606902898703,"results":"369","hashOfConfig":"194"},{"size":17806,"mtime":1606902898874,"results":"370","hashOfConfig":"194"},{"size":12542,"mtime":1606902898974,"results":"371","hashOfConfig":"194"},{"size":14486,"mtime":1606902898590,"results":"372","hashOfConfig":"194"},{"size":20100,"mtime":1606902897549,"results":"373","hashOfConfig":"194"},{"size":14305,"mtime":1606902898009,"results":"374","hashOfConfig":"194"},{"size":19097,"mtime":1606902898653,"results":"375","hashOfConfig":"194"},{"size":14613,"mtime":1606902898853,"results":"376","hashOfConfig":"194"},{"size":56947,"mtime":1606902898056,"results":"377","hashOfConfig":"194"},{"size":21995,"mtime":1606902898297,"results":"378","hashOfConfig":"194"},{"size":6202,"mtime":1606902898775,"results":"379","hashOfConfig":"194"},{"size":877,"mtime":1606902897914,"results":"380","hashOfConfig":"194"},{"size":1833,"mtime":1606902898399,"results":"381","hashOfConfig":"194"},{"size":5514,"mtime":1606902898170,"results":"382","hashOfConfig":"194"},{"size":10374,"mtime":1606902898208,"results":"383","hashOfConfig":"194"},{"size":6105,"mtime":1606902898168,"results":"384","hashOfConfig":"194"},{"size":8681,"mtime":1606902898207,"results":"385","hashOfConfig":"194"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},"2nkzro",{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"388"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"388"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"388"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"388"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"388"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"388"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"388"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"388"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"388"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"388"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"388"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"388"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"388"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"388"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"388"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"388"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"388"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"388"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"388"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"388"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"388"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"388"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"388"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"388"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"388"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"388"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"388"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"388"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"388"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"388"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"388"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"388"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"388"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"388"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"388"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"388"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"388"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"388"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"388"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"388"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"388"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"388"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"388"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"388"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"388"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"388"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"388"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"388"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"388"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"388"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"388"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"388"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"388"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"388"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"388"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"646","messages":"647","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"388"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"388"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"388"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"388"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"388"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"388"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"670","messages":"671","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"672","messages":"673","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"388"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"388"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"388"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"388"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"388"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"388"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"388"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"388"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"388"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"753","usedDeprecatedRules":"388"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"388"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"388"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"388"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787","usedDeprecatedRules":"388"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"790","usedDeprecatedRules":"388"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"793","usedDeprecatedRules":"388"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798","usedDeprecatedRules":"388"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"801","usedDeprecatedRules":"388"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806","usedDeprecatedRules":"388"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809","usedDeprecatedRules":"388"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"814","usedDeprecatedRules":"388"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"388"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"388"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"827","usedDeprecatedRules":"388"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"830","usedDeprecatedRules":"388"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"833","usedDeprecatedRules":"388"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"388"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"388"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"388"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"847","usedDeprecatedRules":"388"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"850","usedDeprecatedRules":"388"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"388"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\index.js",[],["864","865"],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\serviceWorker.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\AppContainer.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\languageReducer.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\authReducer.js",["866"],"import {LOGOUT_USER, UPDATE_USER} from \"../actions/authActions\";\r\nimport {logout} from \"../../helpers/function\";\r\n\r\nconst initialState = {\r\n    user: {},\r\n    token: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    let newState = {};\r\n    switch (action.type) {\r\n        case LOGOUT_USER:\r\n            logout();\r\n            break;\r\n        case UPDATE_USER:\r\n            newState = {\r\n                user: JSON.parse(localStorage.getItem('userData')),\r\n                staff: localStorage.getItem('staffData'),\r\n                isLogin: localStorage.getItem('isLogin'),\r\n                token: localStorage.getItem('token'),\r\n                refresh_token: localStorage.getItem('refresh_token'),\r\n                expire_in: localStorage.getItem('expire_in')\r\n            };\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\IdentityReducer.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\planReducer.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\treatmentReducer.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\NatureAppChoice.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\routeApp.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\planAction.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\appConfig.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\token.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\authActions.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\languageAction.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\treatmentAction.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\IdentityAction.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\function.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\confirmConfig.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\modules\\login\\views\\Pages\\LoginPage.jsx",["867","868","869"],"import React, {useEffect, useState} from \"react\";\r\nimport {loadCss, loadScript} from \"../../../../helpers/function\";\r\nimport appConfig from \"../../../../config/appConfig\";\r\nimport axios from \"axios\";\r\nimport {connect} from 'react-redux';\r\nimport {ToastBottomEnd} from \"../../../../views/components/Toast\";\r\nimport {\r\n    toastConnectErrorMessageConfig,\r\n    toastConnectSuccessMessageConfig\r\n} from \"../../../../config/toastConfig\";\r\nimport {listConnectData} from \"../../../../constants/userClient\";\r\nimport Loader from \"../../../../views/components/Loader\";\r\nloadCss(\"/assets/css/pages/login/login-1.css\");\r\nloadScript(\"/assets/js/pages/custom/login/login-1.js\");\r\n\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const defaultError = {\r\n        username: [],\r\n        password: [],\r\n        // grant_type:[],\r\n        // client_id: [],\r\n        // client_secret:[]\r\n    };\r\n    const [load, setLoad] = useState(true);\r\n    const [username, setUserName] = useState(\"\");\r\n    const [data, setData] = useState(null);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        async function fetchData() {\r\n            await axios.get(appConfig.apiDomaine + \"/components/retrieve-by-name/connection\")\r\n                .then(response => {\r\n                    setData(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        fetchData();\r\n        return () => mounted = false;\r\n    }, []);\r\n\r\n    const onChangeUserName = (e) => {\r\n        setUserName(e.target.value)\r\n    };\r\n    const onChangePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    };\r\n    const onClickConnectButton = async (e) => {\r\n        e.preventDefault(e);\r\n        setStartRequest(true);\r\n        const formData = {\r\n            grant_type: listConnectData[props.plan].grant_type,\r\n            client_id: listConnectData[props.plan].client_id,\r\n            client_secret: listConnectData[props.plan].client_secret,\r\n            username: username,\r\n            password: password\r\n        };\r\n        await axios.post(appConfig.apiDomaine + `/oauth/token`, formData)\r\n            .then(response => {\r\n                const token = response.data.access_token;\r\n                const refresh_token = response.data.refresh_token;\r\n                const expire_in = response.data.expires_in;\r\n                axios.get(appConfig.apiDomaine + `/login`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                    }\r\n                }).then(response => {\r\n                    setError(defaultError);\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastConnectSuccessMessageConfig);\r\n                    const user = response.data;\r\n                    localStorage.setItem(\"userData\", JSON.stringify(response.data));\r\n                    localStorage.setItem(\"staffData\", response.data.staff.identite_id);\r\n                    localStorage.setItem('token', token);\r\n                    localStorage.setItem('expire_in', expire_in);\r\n                    var date = new Date();\r\n                    date.setSeconds(date.getSeconds() + expire_in - 180);\r\n                    localStorage.setItem('date_expire', date);\r\n                    localStorage.setItem('refresh_token', refresh_token);\r\n                    window.location.href = \"/dashboard\";\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                setStartRequest(false);\r\n                ToastBottomEnd.fire(toastConnectErrorMessageConfig);\r\n            })\r\n        ;\r\n    };\r\n    return (\r\n        load ? (\r\n            <Loader/>\r\n        ) : (\r\n            <div className=\"kt-grid kt-grid--ver kt-grid--root kt-page\">\r\n                <div className=\"kt-grid kt-grid--hor kt-grid--root  kt-login kt-login--v1\" id=\"kt_login\">\r\n                    <div\r\n                        className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--desktop kt-grid--ver-desktop kt-grid--hor-tablet-and-mobile\">\r\n\r\n                        <div className=\"kt-grid kt-grid--ver kt-grid--root kt-page\">\r\n                            <div className=\"kt-grid kt-grid--hor kt-grid--root  kt-login kt-login--v1\"\r\n                                 id=\"kt_login\">\r\n                                <div\r\n                                    className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--desktop kt-grid--ver-desktop kt-grid--hor-tablet-and-mobile\">\r\n\r\n                                    <div\r\n                                        className=\"kt-grid__item kt-grid__item--order-tablet-and-mobile-2 kt-grid kt-grid--hor kt-login__aside\"\r\n                                        style={{backgroundImage: `url(${data ? appConfig.apiDomaine + data.params.fr.background.value.url : \" \"})`}}>\r\n                                        <div className=\"kt-grid__item\">\r\n                                            <span className=\"kt-login__logo\">\r\n                                                <img src={data ? appConfig.apiDomaine + data.params.fr.logo.value.url : null}/>\r\n                                                <span style={{\r\n                                                    color: \"white\",\r\n                                                    fontSize: \"1.5em\",\r\n                                                    paddingLeft: \"5px\"\r\n                                                }}>\r\n                                                {data ? data.params.fr.version.value : props.plan + appConfig.version}\r\n                                            </span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--ver\">\r\n                                            <div className=\"kt-grid__item kt-grid__item--middle\">\r\n                                                <h3 className=\"kt-login__title\"> {data ? data.params.fr.header.value + \" \" + data.params.fr.version.value : null}</h3>\r\n                                                <h4 className=\"kt-login__subtitle\"> {data ? data.params.fr.description.value + \" \" : null}</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-grid__item\">\r\n                                            <div className=\"kt-login__info\">\r\n                                                <div className=\"kt-login__copyright\">\r\n                                                    &copy {appConfig.appFullName(props.plan)}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div\r\n                                        className=\"kt-grid__item kt-grid__item--fluid kt-grid__item--order-tablet-and-mobile-1  kt-login__wrapper\">\r\n                                        <div className=\"kt-login__body\">\r\n\r\n\r\n                                            <div className=\"kt-login__form\">\r\n                                                <div className=\"kt-login__title\" style={{marginTop: '175px'}}>\r\n                                                    <h3> {data ? data.params.fr.title.value : \"\"}</h3>\r\n                                                </div>\r\n\r\n                                                <form className=\"kt-form\" id=\"kt_login__form\"\r\n                                                      style={{marginBottom: '142px'}}>\r\n                                                    <div\r\n                                                        className={error.username.length ? \"form-group row validated\" : \"form-group row\"}>\r\n\r\n                                                        <input\r\n                                                            className={error.username.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            type=\"email\"\r\n                                                            placeholder=\"Votre Email\"\r\n                                                            name=\"username\"\r\n                                                            onChange={(e) => onChangeUserName(e)}\r\n                                                            value={username}\r\n                                                        />\r\n\r\n                                                        {\r\n                                                            error.username.length ? (\r\n                                                                error.username.map((error, index) => (\r\n                                                                    <div key={index}\r\n                                                                         className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                    <div\r\n                                                        className={error.password.length ? \"form-group row validated\" : \"form-group row\"}>\r\n\r\n                                                        <input\r\n                                                            className={error.password.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            type=\"password\"\r\n                                                            placeholder=\"Votre Mot de Passe\"\r\n                                                            name=\"password\"\r\n                                                            onChange={(e) => onChangePassword(e)}\r\n                                                            value={password}\r\n                                                        />\r\n                                                        {\r\n                                                            error.password.length ? (\r\n                                                                error.password.map((error, index) => (\r\n                                                                    <div key={index}\r\n                                                                         className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n\r\n                                                    <div className=\"kt-login__actions\">\r\n                                                        {\r\n                                                            !startRequest ? (\r\n                                                                <button type=\"submit\"\r\n                                                                        id=\"kt_login_signin_submit\"\r\n                                                                        className=\"btn btn-primary btn-elevate kt-login__btn-primary\"\r\n                                                                        onClick={onClickConnectButton}> Se\r\n                                                                    connecter</button>\r\n                                                            ) : (\r\n                                                                <button\r\n                                                                    className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                    type=\"button\" disabled>\r\n                                                                    Chargement...\r\n                                                                </button>\r\n                                                            )\r\n                                                        }\r\n\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LoginPage);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ConfirmationAlert.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\channel.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\userClient.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\permission.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\layouts\\App.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Toast.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\toastConfig.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Loader.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Footer.jsx",["870"],"import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"kt-footer kt-grid__item\" id=\"kt_footer\">\r\n            <div className=\"kt-container  kt-container--fluid \">\r\n                <div className=\"kt-footer__wrapper\">\r\n                    <div className=\"kt-footer__copyright\">\r\n                        {new Date().getFullYear()}&nbsp;&copy;&nbsp;<a href=\"http://www.dmdconsult.com/\" target=\"_blank\" className=\"kt-link\">SATIS SARL</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Nav.jsx",["871","872","873","874","875","876","877","878"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/fr';\r\nimport * as LanguageAction from \"../../store/actions/languageAction\";\r\nimport * as authActions from \"../../store/actions/authActions\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {EventNotification, EventNotificationPath, RelaunchNotification} from \"../../constants/notification\";\r\nimport EmptyNotification from \"../components/EmptyNotification\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastSuccessMessageWithParameterConfig} from \"../../config/toastConfig\";\r\nimport {debug} from \"../../helpers/function\";\r\nimport Loader from \"../components/Loader\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst Nav = (props) => {\r\n    const [eventNotification, setEventNotification] = useState([]);\r\n    const [relaunchNotification, setRelaunchNotification] = useState([]);\r\n    const [startRead, setStartRead] = useState(false);\r\n\r\n    const filterEventNotification = useCallback((notification) => {\r\n        let notificationList;\r\n        notificationList =  notification.filter(\r\n            n => EventNotification.includes(n.type.substr(39, n.type.length))\r\n        );\r\n        localStorage.setItem(\"eventNotification\", JSON.stringify(notificationList));\r\n        return notificationList;\r\n    }, [EventNotification]);\r\n\r\n    const filterRelaunchNotification = useCallback((notification) => {\r\n        return notification.filter(\r\n            n => RelaunchNotification.includes(n.type.substr(39, n.type.length))\r\n\r\n        );\r\n    }, [RelaunchNotification]);\r\n\r\n    const fetchData = async () => {\r\n        if (verifyTokenExpire()) {\r\n            await axios.get(`${appConfig.apiDomaine}/unread-notifications`)\r\n                .then(response => {\r\n                    setEventNotification(filterEventNotification(response.data));\r\n                    setRelaunchNotification(filterRelaunchNotification(response.data));\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (props.user) {\r\n            window.Echo.private(`Satis2020.ServicePackage.Models.Identite.${props.user.identite_id}`)\r\n                .notification((notification) => {\r\n                    if (notification.type.substr(39, notification.type.length) === \"PostDiscussionMessage\") {\r\n                        debug(notification, \"notification\");\r\n                        if (window.location.pathname !== \"chat#messageList\")\r\n                            ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(notification.text.length > 40 ? notification.text.substr(0, 40)+\"...\" : notification.text));\r\n                    } else {\r\n                        fetchData();\r\n                    }\r\n                })\r\n            ;\r\n        }\r\n    }, [props.user.identite]);\r\n\r\n    const onClickLanguage = useCallback((e, lang) => {\r\n        e.preventDefault();\r\n        props.changeLanguage(lang);\r\n    }, [props.changeLanguage]);\r\n\r\n    const onClickLogoutLink = useCallback((e) => {\r\n        e.preventDefault();\r\n        props.logoutUser();\r\n    }, [props.logoutUser]);\r\n\r\n    const getNotificationLink = useCallback((type, data) => {\r\n        return type !== \"RegisterAClaim\"\r\n            ? EventNotificationPath[type](data.claim.id)\r\n            : EventNotificationPath[type][data.claim.status](data.claim.id);\r\n    });\r\n\r\n    const readAllNotification = async (readNotification, path) => {\r\n        if (verifyTokenExpire()) {\r\n            await axios.put(`${appConfig.apiDomaine}/unread-notifications`, readNotification)\r\n                .then(({data}) => {\r\n                    debug(data, \"data\");\r\n                    setStartRead(false);\r\n                    if (data.canReload) {\r\n                        window.location.href = path;\r\n                    } else {\r\n                        setEventNotification(filterEventNotification(data.unreadNotifications));\r\n                        setRelaunchNotification(filterRelaunchNotification(data.unreadNotifications));\r\n                    }\r\n                })\r\n                .catch(({response}) => {console.log(\"Something is wrong\")})\r\n            ;\r\n        }\r\n    };\r\n\r\n    const showDetailNotification = useCallback((e, path, idNotification, relaunchNotification = false, notification = null) => {\r\n        e.preventDefault();\r\n        if (!startRead) {\r\n            setStartRead(true);\r\n            const readNotification = {\r\n                \"notifications\": [\r\n                    idNotification\r\n                ]\r\n            };\r\n\r\n            if (!relaunchNotification) {\r\n                readAllNotification(readNotification, path);\r\n            } else {\r\n                if (!path) {\r\n                    readAllNotification(readNotification, path);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    const notificationCount = eventNotification.length + relaunchNotification.length;\r\n\r\n    return (\r\n        <div id=\"kt_header\" className=\"kt-header kt-grid__item  kt-header--fixed \" data-ktheader-minimize=\"on\"\r\n             style={{position: \"sticky\", top: 0, zIndex: 2}}>\r\n            <div className=\"kt-container  kt-container--fluid \">\r\n                <div className=\"kt-header__brand \" id=\"kt_header_brand\">\r\n                    <div className=\"kt-header__brand-logo\">\r\n                        <a href=\"index.html\">\r\n                            <img alt=\"Logo\" src=\"/assets/images/satisLogo.png\" width={\"100\"} height={\"34\"}/>\r\n                            <span className=\"mx-2 text-white font-weight-bolder\">{props.plan}</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-header__topbar\">\r\n                    <div className=\"kt-header__topbar-item dropdown\">\r\n                        <div className=\"kt-header__topbar-wrapper\" data-toggle=\"dropdown\" data-offset=\"10px,0px\">\r\n                            <span className=\"kt-header__topbar-icon\">\r\n                                <i className=\"flaticon2-bell-alarm-symbol\"/>\r\n                                {\r\n                                    notificationCount > 0 ? (\r\n                                        <div className=\"kt-badge kt-badge__pics\">\r\n                                    <span\r\n                                        className=\"kt-badge__pic  kt-badge__pic--last\"\r\n                                        style={{\r\n                                            backgroundColor: \"#FEB2B2\",\r\n                                            color: \"#C53030\",\r\n                                            width: \"25px\",\r\n                                            height: \"25px\",\r\n                                            position: \"relative\",\r\n                                            bottom: \"10px\",\r\n                                            left: \"5px\"\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            (notificationCount) > 9 ? \"+9\" : notificationCount\r\n                                        }\r\n                                    </span>\r\n                                        </div>\r\n                                    ) : null\r\n                                }\r\n                            </span>\r\n                            <span className=\"kt-hidden kt-badge kt-badge--danger\"/>\r\n                        </div>\r\n                        <div\r\n                            className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-xl\">\r\n                            <form>\r\n                                <div className=\"kt-head kt-head--skin-light kt-head--fit-x kt-head--fit-b\">\r\n                                    <h3 className=\"kt-head__title\">\r\n                                        Notifications\r\n                                        &nbsp;\r\n                                        <span\r\n                                            className=\"btn btn-label-primary btn-sm btn-bold btn-font-md\">{notificationCount} nouveau</span>\r\n                                    </h3>\r\n                                    <ul className=\"nav nav-tabs nav-tabs-line nav-tabs-bold nav-tabs-line-3x nav-tabs-line-brand  kt-notification-item-padding-x\"\r\n                                        role=\"tablist\">\r\n                                        <li className=\"nav-item\">\r\n                                            <a className=\"nav-link active show\" data-toggle=\"tab\"\r\n                                               href=\"#topbar_notifications_notifications\" role=\"tab\"\r\n                                               aria-selected=\"true\">Alertes</a>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <a className=\"nav-link\" data-toggle=\"tab\"\r\n                                               href=\"#topbar_notifications_events\" role=\"tab\"\r\n                                               aria-selected=\"false\">Relances</a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div className=\"tab-content\">\r\n                                    <div className=\"tab-pane active show\" id=\"topbar_notifications_notifications\"\r\n                                         role=\"tabpanel\">\r\n                                        {\r\n                                            eventNotification.length ? (\r\n                                                <div className=\"kt-notification kt-margin-t-10 kt-margin-b-10 kt-scroll\"\r\n                                                     data-scroll=\"true\" data-height=\"300\" data-mobile-height=\"200\"\r\n                                                     style={eventNotification.length >= 4 ? {\r\n                                                         height: \"380px\",\r\n                                                         overflowY: \"auto\"\r\n                                                     } : {}}>\r\n                                                    {\r\n                                                        eventNotification.map((n, index) => (\r\n                                                            <a\r\n                                                                href={getNotificationLink(n.type.substr(39, n.type.length), n.data)}\r\n                                                                key={index}\r\n                                                                className=\"kt-notification__item\"\r\n                                                                onClick={e => showDetailNotification(e, getNotificationLink(n.type.substr(39, n.type.length), n.data), n.id, false, n)}\r\n                                                            >\r\n                                                                <div className=\"kt-notification__item-icon\">\r\n                                                                    <i className=\"flaticon2-line-chart kt-font-success\"/>\r\n                                                                </div>\r\n                                                                <div className=\"kt-notification__item-details\">\r\n                                                                    <div className=\"kt-notification__item-title\"\r\n                                                                         style={{textOverflow: \"ellipsis\"}}>\r\n                                                                        {n.data.text.length >= 87 ? n.data.text.substring(0, 88) + \"...\" : n.data.text.substring(0, 86)}\r\n                                                                    </div>\r\n                                                                    <div className=\"kt-notification__item-time\">\r\n                                                                        {moment(new Date(n.created_at)).fromNow()}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                {\r\n                                                                    startRead ? (\r\n                                                                        <Loader/>\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </a>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>\r\n                                            ) : (\r\n                                                <EmptyNotification/>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"tab-pane\" id=\"topbar_notifications_events\" role=\"tabpanel\">\r\n                                        {\r\n                                            relaunchNotification.length ? (\r\n                                                <div className=\"kt-notification kt-margin-t-10 kt-margin-b-10 kt-scroll\"\r\n                                                     data-scroll=\"true\" data-height=\"300\" data-mobile-height=\"200\"\r\n                                                     style={relaunchNotification.length >= 4 ? {\r\n                                                         height: \"380px\",\r\n                                                         overflowY: \"auto\"\r\n                                                     } : {}}>\r\n                                                    {\r\n                                                        relaunchNotification.map(((n, index) => (\r\n                                                            <a\r\n                                                                key={index}\r\n                                                                href={`/read-notification-${index}`}\r\n                                                                onClick={e => showDetailNotification(e, ``, n.id, true)}\r\n                                                                className=\"kt-notification__item\"\r\n                                                            >\r\n                                                                <div className=\"kt-notification__item-icon\">\r\n                                                                    <i className=\"flaticon2-line-chart kt-font-success\"/>\r\n                                                                </div>\r\n                                                                <div className=\"kt-notification__item-details\">\r\n                                                                    <div className=\"kt-notification__item-title\"\r\n                                                                         style={{textOverflow: \"ellipsis\"}}>\r\n                                                                        {n.data.text.length >= 87 ? n.data.text.substring(0, 85) + \"...\" : n.data.text.substring(0, 86)}\r\n                                                                    </div>\r\n                                                                    <div className=\"kt-notification__item-time\">\r\n                                                                        {moment(new Date(n.created_at)).fromNow()}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                {\r\n                                                                    startRead ? (\r\n                                                                        <Loader/>\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </a>\r\n                                                        )))\r\n                                                    }\r\n                                                </div>\r\n                                            ) : (\r\n                                                <EmptyNotification/>\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-header__topbar-item kt-header__topbar-item--langs\">\r\n                        <div className=\"kt-header__topbar-wrapper\" data-toggle=\"dropdown\" data-offset=\"10px,0px\">\r\n                        <span className=\"kt-header__topbar-icon\">\r\n                            <img className=\"\" src={props.language.countryLanguageImage[props.language.languageSelected]}\r\n                                 alt=\"\"/>\r\n                        </span>\r\n                        </div>\r\n                        <div className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-anim\">\r\n                            <ul className=\"kt-nav kt-margin-t-10 kt-margin-b-10\">\r\n                                <li className=\"kt-nav__item kt-nav__item--active\">\r\n                                    <a href=\"#link\" onClick={(e) => onClickLanguage(e, \"en\")} className=\"kt-nav__link\">\r\n                                        <span className=\"kt-nav__link-icon\">\r\n                                            <img src=\"/assets/media/flags/226-united-states.svg\" alt=\"\"/></span>\r\n                                        <span className=\"kt-nav__link-text\">English</span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"kt-nav__item\">\r\n                                    <a href=\"#link\" onClick={(e) => onClickLanguage(e, \"sp\")} className=\"kt-nav__link\">\r\n                                        <span className=\"kt-nav__link-icon\">\r\n                                            <img src=\"/assets/media/flags/128-spain.svg\" alt=\"\"/>\r\n                                        </span>\r\n                                        <span className=\"kt-nav__link-text\">Spanish</span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"kt-nav__item\">\r\n                                    <a href=\"#link\" onClick={(e) => onClickLanguage(e, \"gm\")} className=\"kt-nav__link\">\r\n                                        <span className=\"kt-nav__link-icon\">\r\n                                            <img src=\"/assets/media/flags/162-germany.svg\" alt=\"\"/>\r\n                                        </span>\r\n                                        <span className=\"kt-nav__link-text\">German</span>\r\n                                    </a>\r\n                                </li>\r\n\r\n                                <li className=\"kt-nav__item\">\r\n                                    <a href=\"#link\" onClick={(e) => onClickLanguage(e, \"fr\")} className=\"kt-nav__link\">\r\n                                        <span className=\"kt-nav__link-icon\">\r\n                                            <img src=\"/personal/img/france.svg\" alt=\"\"/>\r\n                                        </span>\r\n                                        <span className=\"kt-nav__link-text\">Francais</span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-header__topbar-item kt-header__topbar-item--user\">\r\n                        <div className=\"kt-header__topbar-wrapper\" data-toggle=\"dropdown\" data-offset=\"10px,0px\">\r\n                            <span className=\"kt-header__topbar-welcome kt-visible-desktop\">Salut,</span>\r\n                            <span className=\"kt-header__topbar-username kt-visible-desktop\">\r\n                                {props.user.firstName}\r\n                            </span>\r\n                            <img alt=\"Pic\" src=\"/assets/media/users/default.jpg\"/>\r\n                            <span className=\"kt-header__topbar-icon kt-bg-brand kt-hidden\"><b>S</b></span>\r\n                        </div>\r\n                        <div\r\n                            className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-xl\">\r\n                            <div className=\"kt-user-card kt-user-card--skin-light kt-notification-item-padding-x\">\r\n                                <div className=\"kt-user-card__avatar\">\r\n                                    <img className=\"kt-hidden-\" alt=\"Pic\" src=\"/assets/media/users/default.jpg\"/>\r\n                                    <span\r\n                                        className=\"kt-badge kt-badge--username kt-badge--unified-success kt-badge--lg kt-badge--rounded kt-badge--bold kt-hidden\">S</span>\r\n                                </div>\r\n                                <div className=\"kt-user-card__name\">\r\n                                    {props.user.lastName + \" \" + props.user.firstName}\r\n                                </div>\r\n                                {/*<div className=\"kt-user-card__badge\">*/}\r\n                                {/*    <span*/}\r\n                                {/*        className=\"btn btn-label-primary btn-sm btn-bold btn-font-md\">23 messages</span>*/}\r\n                                {/*</div>*/}\r\n                            </div>\r\n\r\n                            <div className=\"kt-notification\">\r\n                                {/*    <a href=\"custom/apps/user/profile-1/personal-information.html\" className=\"kt-notification__item\">*/}\r\n                                {/*        <div className=\"kt-notification__item-icon\">*/}\r\n                                {/*            <i className=\"flaticon2-calendar-3 kt-font-success\"></i>*/}\r\n                                {/*        </div>*/}\r\n                                {/*        <div className=\"kt-notification__item-details\">*/}\r\n                                {/*            <div className=\"kt-notification__item-title kt-font-bold\">*/}\r\n                                {/*                My Profile*/}\r\n                                {/*            </div>*/}\r\n                                {/*            <div className=\"kt-notification__item-time\">*/}\r\n                                {/*                Account settings and more*/}\r\n                                {/*            </div>*/}\r\n                                {/*        </div>*/}\r\n                                {/*    </a>*/}\r\n\r\n                                {\r\n                                    verifyPermission(props.userPermissions, 'list-my-discussions') ||\r\n                                    verifyPermission(props.userPermissions, 'contribute-discussion') ? (\r\n                                            <Link to={\"/chat\"} className=\"kt-notification__item\">\r\n                                                <div className=\"kt-notification__item-icon\">\r\n                                                    <i className=\"flaticon2-mail kt-font-warning\"></i>\r\n                                                </div>\r\n                                                <div className=\"kt-notification__item-details\">\r\n                                                    <div className=\"kt-notification__item-title kt-font-bold\">\r\n                                                        Mes Disccussions\r\n                                                    </div>\r\n                                                    <div className=\"kt-notification__item-time\">\r\n                                                        Acceder à la liste\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        )\r\n                                        : null\r\n                                }\r\n\r\n                                {/*<Link to={\"/feedback-channels\"} className=\"kt-notification__item\">*/}\r\n                                {/*    <div className=\"kt-notification__item-icon\">*/}\r\n                                {/*        <i className=\"flaticon2-hourglass kt-font-brand\"></i>*/}\r\n                                {/*    </div>*/}\r\n                                {/*    <div className=\"kt-notification__item-details\">*/}\r\n                                {/*        <div className=\"kt-notification__item-title kt-font-bold\">*/}\r\n                                {/*            Mes Canaux*/}\r\n                                {/*        </div>*/}\r\n                                {/*        <div className=\"kt-notification__item-time\">*/}\r\n                                {/*           Les canaux du personnel*/}\r\n                                {/*        </div>*/}\r\n                                {/*    </div>*/}\r\n                                {/*</Link>*/}\r\n                                <NavLink to={\"/settings/account\"}\r\n                                   className=\"kt-notification__item\">\r\n                                    <div className=\"kt-notification__item-icon\">\r\n                                        <i className=\"flaticon2-calendar-3 kt-font-success\"></i>\r\n                                    </div>\r\n                                    <div className=\"kt-notification__item-details\">\r\n                                        <div className=\"kt-notification__item-title kt-font-bold\">\r\n                                            Mon profile\r\n                                        </div>\r\n                                        <div className=\"kt-notification__item-time\">\r\n                                            Paramètres de compte et plus\r\n                                        </div>\r\n                                    </div>\r\n                                </NavLink>\r\n                                <div className=\"kt-notification__custom kt-space-between\">\r\n                                    <a href=\"/logout\" onClick={onClickLogoutLink} target=\"_blank\"\r\n                                       className=\"btn btn-label btn-label-brand btn-sm btn-bold\">Déconnexion</a>\r\n                                    {/*<a href=\"custom/user/login-v2.html\" target=\"_blank\"*/}\r\n                                    {/*   className=\"btn btn-clean btn-sm btn-bold\">Upgrade Plan</a>*/}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        language: state.language,\r\n        plan: state.plan.plan,\r\n        user: {\r\n            lastName: state.user.user.data.identite.lastname,\r\n            firstName: state.user.user.data.identite.firstname,\r\n            identite_id: state.user.user.data.identite.id\r\n        }\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeLanguage: (language) => {\r\n            dispatch(LanguageAction.changeLanguage(language))\r\n        },\r\n        logoutUser: () => dispatch(authActions.logoutUser()),\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\HeaderMobile.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Body.jsx",["879"],"import React from \"react\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport Mail from \"../pages/Mail\";\r\nimport PerformanceIndicator from \"../pages/PerformanceIndicator\";\r\nimport UnitType from \"../pages/UnitType\";\r\nimport Unit from \"../pages/Unit\";\r\nimport Position from \"../pages/Position\";\r\nimport Staff from \"../pages/Staff\";\r\nimport ClaimCategory from \"../pages/ClaimCategory\";\r\nimport ClaimObject from \"../pages/ClaimObject\";\r\nimport FAQs from \"../pages/FAQs\";\r\nimport FAQsPage from \"../pages/FAQsPage\";\r\nimport CategoryFAQs from \"../pages/CategoryFAQs\";\r\nimport Institution from \"../pages/Institution\";\r\nimport CategoryFaqsForm from \"../components/CategoryFaqsForm\";\r\nimport FaqsForm from \"../components/FaqsForm.jsx\";\r\nimport CategoryClient from \"../pages/CategoryClient\";\r\nimport TypeClient from \"../pages/TypeClient\";\r\nimport CategoryClientForm from \"../components/CategoryClientForm\";\r\nimport TypeClientForm from \"../components/TypeClientForm\";\r\nimport Clients from \"../pages/Clients\";\r\nimport ClientForm from \"../components/Clients/ClientForm\";\r\nimport SeverityLevel from \"../pages/SeverityLevel\";\r\nimport UnitTypeForm from \"../components/UnitTypeForm\";\r\nimport PerformanceIndicatorForm from \"../components/PerformanceIndicatorForm\";\r\nimport UnitForm from \"../components/UnitForm\";\r\nimport PositionForm from \"../components/PositionForm\";\r\nimport ClaimCategoryForm from \"../components/ClaimCategoryForm\";\r\nimport ClaimObjectForm from \"../components/ClaimObjectForm\";\r\nimport StaffForm from \"../components/staff/StaffForm\";\r\nimport SeverityLevelForm from \"../components/SeverityLevelForm\";\r\nimport InstitutionForm from \"../components/Institutions/InstitutionForm\";\r\nimport FilialeInstitutionForm from \"../../APP_MACRO/Filiale/FilialeInstitutionForm\";\r\nimport Currency from \"../pages/Currency\";\r\nimport CurrencyForm from \"../components/CurrencyForm\";\r\nimport Channel from \"../pages/Channel\";\r\nimport ChannelForm from \"../components/ChannelForm\";\r\nimport ClaimAdd from \"../pages/ClaimAdd\";\r\nimport ConfigRequirements from \"../pages/ConfigRequirements\";\r\nimport HoldingClientForm from \"../../APP_MACRO/Holding/HoldingClientForm\";\r\nimport RelationShip from \"../pages/RelationShip\";\r\nimport RelationShipForm from \"../components/RelationShipForm\";\r\nimport IncompleteClaims from \"../pages/IncompleteClaims\";\r\nimport IncompleteClaimsEdit from \"../components/IncompleteClaimsEdit\";\r\nimport ConfigProcessingCircuit from \"../pages/ConfigProcessingCircuit\";\r\nimport ClaimAssign from \"../pages/ClaimAssign\";\r\nimport ClaimAssignDetail from \"../pages/ClaimAssignDetail\";\r\nimport ClaimList from \"../pages/ClaimList\";\r\nimport ClaimAssignToStaff from \"../pages/ClaimAssignToStaff\";\r\nimport ClaimToValidatedList from \"../pages/ClaimToValidatedList\";\r\nimport ClaimMonitoring from \"../pages/ClaimMonitoring\";\r\nimport ClaimReporting from \"../pages/ClaimReporting\";\r\nimport Dashboards from \"../pages/Dashboards\";\r\nimport SatisfactionMeasure from \"../pages/SatisfactionMeasure\";\r\nimport ClaimsArchived from \"../pages/ClaimsArchived\";\r\nimport ConfigNotification from \"../pages/ConfigNotification\";\r\nimport Chats from \"../pages/Discussions/Chats\";\r\nimport AddChatsForm from \"../pages/Discussions/AddChatsForm\";\r\nimport AddMemberForm from \"../pages/Discussions/AddMemberForm\";\r\nimport Participants from \"../pages/Discussions/Participants\";\r\nimport RemoveChats from \"../pages/Discussions/RemoveChats\";\r\nimport StaffChannels from \"../components/StaffChannels\";\r\nimport ConfigRapportAuto from \"../pages/ConfigRapportAuto\";\r\nimport MessageApi from \"../pages/MessageApi\";\r\nimport MessageAPIForm from \"../components/MessageAPIForm\";\r\nimport InstitutionMessageApi from \"../pages/InstitutionMessageApi\";\r\nimport ConfigRapportAutoForm from \"../components/ConfigRapportAutoForm\";\r\nimport ClaimListDetail from \"../pages/ClaimListDetail\";\r\nimport ClaimAssignToStaffDetail from \"../pages/ClaimAssignToStaffDetail\";\r\nimport ClaimToValidatedListDetail from \"../pages/ClaimToValidatedListDetail\";\r\nimport SatisfactionMeasureDetail from \"../pages/SatisfactionMeasureDetail\";\r\nimport ClaimsArchivedDetail from \"../pages/ClaimsArchivedDetail\";\r\nimport User from \"../pages/User\";\r\nimport UserAdd from \"../pages/UserAdd\";\r\nimport QualificationPeriod from \"../pages/QualificationPeriod\";\r\nimport TreatmentPeriod from \"../pages/TreatmentPeriod\";\r\nimport QualificationPeriodAdd from \"../pages/QualificationPeriodAdd\";\r\nimport TreatmentPeriodAdd from \"../pages/TreatmentPeriodAdd\";\r\nimport ParametersComponent from \"../pages/ParametersComponent\";\r\n// import ParametersComponentForm from \"../components/ParametersComponentForm\";\r\nimport ParametersComponentEdit from \"../components/ParametersComponentEdit\";\r\nimport UserEdit from \"../pages/UserEdit\";\r\nimport ConfigCoefficient from \"../components/ConfigCoefficient\";\r\nimport ImportClientForm from \"../components/Clients/ImportClientForm\";\r\nimport ImportInstitutionForm from \"../components/Institutions/ImportInstitutionForm\";\r\nimport HistoricClaimsAdd from \"../pages/HistoricClaimsAdd\";\r\nimport HistoricClaimsTraetment from \"../pages/HistoricClaimsTraetment\";\r\nimport ClaimObjectImportPage from \"../pages/ClaimObjectImportPage\";\r\nimport StaffImportPage from \"../pages/StaffImportPage\";\r\nimport ClaimCategoryImportPage from \"../pages/ClaimCategoryImportPage\";\r\nimport ActivatePilotPage from \"../pages/ActivatePilotPage\";\r\nimport RulePage from \"../pages/RulePage\";\r\nimport RuleAddPage from \"../pages/RuleAddPage\";\r\nimport RuleEditPage from \"../pages/RuleEditPage\";\r\nimport ProfilePage from \"../pages/ProfilePage\";\r\nimport ClaimImportPage from \"../pages/ClaimImportPage\";\r\nimport RecurencePage from \"../pages/RecurencePage\";\r\nimport RejectLimitPage from \"../pages/RejectLimitPage\";\r\nimport PercentageMinFusion from \"../pages/PercentageMinFusion\";\r\n\r\nconst Body = () => {\r\n    return (\r\n        <Switch>\r\n            {/*<Route exact path=\"/settings/sms\">\r\n                <SMS/>\r\n            </Route>*/}\r\n            <Route exact path=\"/settings/config\">\r\n                <ParametersComponent/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/historic/claims/add\">\r\n                <HistoricClaimsAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/historic/claims/treat\">\r\n                <HistoricClaimsTraetment/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/config/edit/:id\">\r\n                <ParametersComponentEdit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/category\">\r\n                <CategoryClient/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/category/add\">\r\n                <CategoryClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/type\">\r\n                <TypeClient/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/type/add\">\r\n                <TypeClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/add\">\r\n                <FAQs/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/list\">\r\n                <FAQsPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/faq/add\">\r\n                <FaqsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/category\">\r\n                <CategoryFAQs/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/category/add\">\r\n                <CategoryFaqsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/mail\">\r\n                <Mail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution\">\r\n                <Institution/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients\">\r\n                <Clients/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/importClients\">\r\n                <ImportClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/importInstitutions\">\r\n                <ImportInstitutionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/relationship\">\r\n                <RelationShip/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/relationship/add\">\r\n                <RelationShipForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/relationship/edit/:id\">\r\n                <RelationShipForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/add\">\r\n                <ClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/any/clients/add\">\r\n                <HoldingClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/any/clients/edit/:id\">\r\n                <HoldingClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution/add\">\r\n                <InstitutionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution/edit\">\r\n                <FilialeInstitutionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution/edit/:id\">\r\n                <InstitutionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/relance\">\r\n                <ConfigCoefficient/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/category/edit/:id\">\r\n                <CategoryFaqsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/faq/edit/:editfaqid\">\r\n                <FaqsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/type/edit/:edittypeid\">\r\n                <TypeClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/category/edit/:editcategoryid\">\r\n                <CategoryClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/performance_indicator\">\r\n                <PerformanceIndicator/>\r\n            </Route>\r\n\r\n            <Route excat path=\"/settings/performance_indicator/add\">\r\n                <PerformanceIndicatorForm/>\r\n            </Route>\r\n\r\n            <Route excat path=\"/settings/performance_indicator/:id/edit\">\r\n                <PerformanceIndicatorForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit_type\">\r\n                <UnitType/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit_type/add\">\r\n                <UnitTypeForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit_type/:id/edit\">\r\n                <UnitTypeForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit\">\r\n                <Unit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit/add\">\r\n                <UnitForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit/:id/edit\">\r\n                <UnitForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions\">\r\n                <Position/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions/add\">\r\n                <PositionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions/:id/edit\">\r\n                <PositionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions\">\r\n                <Position/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions/add\">\r\n                <PositionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions/:id/edit\">\r\n                <PositionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_categories\">\r\n                <ClaimCategory/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_category/import\">\r\n                <ClaimCategoryImportPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_categories/add\">\r\n                <ClaimCategoryForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_categories/:id/edit\">\r\n                <ClaimCategoryForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_objects\">\r\n                <ClaimObject/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_objects/add\">\r\n                <ClaimObjectForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_objects/:id/edit\">\r\n                <ClaimObjectForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_objects/import\">\r\n                <ClaimObjectImportPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/staffs\">\r\n                <Staff/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/staffs/add\">\r\n                <StaffForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/staffs/:id/edit\">\r\n                <StaffForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/staffs/import\">\r\n                <StaffImportPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/severities\">\r\n                <SeverityLevel/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/severities/add\">\r\n                <SeverityLevelForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/severities/:id/edit\">\r\n                <SeverityLevelForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/currencies\">\r\n                <Currency/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/currencies/add\">\r\n                <CurrencyForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/currencies/:id/edit\">\r\n                <CurrencyForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/channels\">\r\n                <Channel/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/channels/add\">\r\n                <ChannelForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/channels/:id/edit\">\r\n                <ChannelForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claims/add\">\r\n                <ClaimAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claims/import\">\r\n                <ClaimImportPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/incomplete_claims\">\r\n                <IncompleteClaims/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/incomplete_claims/edit/:id\">\r\n                <IncompleteClaimsEdit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/requirement\">\r\n                <ConfigRequirements/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/processing-circuit\">\r\n                <ConfigProcessingCircuit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-assign\">\r\n                <ClaimAssign/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-assign/:id/detail\">\r\n                <ClaimAssignDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-assign/to-staff\">\r\n                <ClaimAssignToStaff/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-assign/to-staff/:id/detail\">\r\n                <ClaimAssignToStaffDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/unit-claims\">\r\n                <ClaimList/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-list-detail/:id/detail\">\r\n                <ClaimListDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-to-validated\">\r\n                <ClaimToValidatedList/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-to-validated/:id/detail\">\r\n                <ClaimToValidatedListDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/monitoring/claims/monitoring\">\r\n                <ClaimMonitoring/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/monitoring/claims/reporting\">\r\n                <ClaimReporting/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim_measure\">\r\n                <SatisfactionMeasure/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim_measure/:id/detail\">\r\n                <SatisfactionMeasureDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim_archived\">\r\n                <ClaimsArchived/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim_archived/:id/detail\">\r\n                <ClaimsArchivedDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/notification\">\r\n                <ConfigNotification/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/chat\">\r\n                <Chats/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/treatment/chat/add\">\r\n                <AddChatsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/treatment/chat/contributor/:id\">\r\n                <Participants/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/treatment/chat/remove_chat\">\r\n                <RemoveChats/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/treatment/chat/add_user/:id\">\r\n                <AddMemberForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/message-apis\">\r\n                <MessageApi/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/message-apis/add\">\r\n                <MessageAPIForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/message-apis/:id/edit\">\r\n                <MessageAPIForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institutions/:id/message-apis\">\r\n                <InstitutionMessageApi/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution-message-apis\">\r\n                <InstitutionMessageApi/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/dashboard\">\r\n                <Dashboards/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/feedback-channels\">\r\n                <StaffChannels/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rapport-auto\">\r\n                <ConfigRapportAuto/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rapport/add\">\r\n                <ConfigRapportAutoForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rapport/edit/:id\">\r\n                <ConfigRapportAutoForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/users\">\r\n                <User/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/users/add\">\r\n                <UserAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/users/:id/edit\">\r\n                <UserEdit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rules\">\r\n                <RulePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rules/add\">\r\n                <RuleAddPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rules/:id/edit\">\r\n                <RuleAddPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/qualification-period\">\r\n                <QualificationPeriod/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/qualification-period/add\">\r\n                <QualificationPeriodAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/treatment-period\">\r\n                <TreatmentPeriod/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/treatment-period/add\">\r\n                <TreatmentPeriodAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/activate-pilot\">\r\n                <ActivatePilotPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/account\">\r\n                <ProfilePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/account/personal-information\">\r\n                <ProfilePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/account/change-password\">\r\n                <ProfilePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/recurence\">\r\n                <RecurencePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/reject-limit\">\r\n                <RejectLimitPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/percentage-min-fusion\">\r\n                <PercentageMinFusion/>\r\n            </Route>\r\n\r\n            <Route path={\"*\"}>\r\n                <Redirect to={\"/dashboard\"}/>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Body;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Aside.jsx",["880","881","882","883","884","885","886","887"],"import React from \"react\";\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {seeCollect, seeHistorique, seeMonitoring, seeParameters, seeTreatment} from \"../../helpers/function\";\r\n\r\nconst Aside = (props) => {\r\n    return (\r\n        <div className=\"kt-aside  kt-aside--fixed  kt-grid__item kt-grid kt-grid--desktop kt-grid--hor-desktop\"\r\n             id=\"kt_aside\">\r\n            <div className=\"kt-aside-menu-wrapper kt-grid__item kt-grid__item--fluid\" id=\"kt_aside_menu_wrapper\">\r\n                <div id=\"kt_aside_menu\" className=\"kt-aside-menu \" data-ktmenu-vertical=\"1\" data-ktmenu-scroll=\"1\">\r\n                    <ul className=\"kt-menu__nav \">\r\n                        <li className=\"kt-menu__item \" aria-haspopup=\"true\">\r\n                            <NavLink exact to=\"/dashboard\" className=\"kt-menu__link\" activeClassName=\"kt-menu__item--active\">\r\n                                <i className=\"kt-menu__link-icon flaticon2-architecture-and-city\"/>\r\n                                <span className=\"kt-menu__link-text\">Tableau de bord</span>\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                        {\r\n                            seeCollect(props.userPermissions) || seeTreatment(props.userPermissions) ? (\r\n                                <li className=\"kt-menu__section \">\r\n                                    <h4 className=\"kt-menu__section-text\">Processus</h4>\r\n                                    <i className=\"kt-menu__section-icon flaticon-more-v2\"/>\r\n                                </li>\r\n                            ) : null\r\n                        }\r\n\r\n                        {\r\n                            !seeCollect(props.userPermissions) ? null : (\r\n                                <li className=\"kt-menu__item  kt-menu__item--submenu\" aria-haspopup=\"true\"\r\n                                    data-ktmenu-submenu-toggle=\"hover\">\r\n                                    <a href=\"#collecte\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-menu__link kt-menu__toggle\">\r\n                                        <i className=\"kt-menu__link-icon flaticon2-telegram-logo\"/>\r\n                                        <span className=\"kt-menu__link-text\">Collecte</span>\r\n                                        <i className=\"kt-menu__ver-arrow la la-angle-right\"/>\r\n                                    </a>\r\n                                    <div className=\"kt-menu__submenu \">\r\n                                        <span className=\"kt-menu__arrow\"/>\r\n                                        <ul className=\"kt-menu__subnav\">\r\n                                            <li className=\"kt-menu__item  kt-menu__item--parent\" aria-haspopup=\"true\">\r\n                                                <span className=\"kt-menu__link\">\r\n                                                    <span className=\"kt-menu__link-text\">Collecte</span>\r\n                                                </span>\r\n                                            </li>\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'store-claim-against-any-institution') || verifyPermission(props.userPermissions, \"store-claim-against-my-institution\") || verifyPermission(props.userPermissions, \"store-claim-without-client\") ? (\r\n                                                    <NavLink exact to=\"/process/claims/add\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Enregistrer réclamation</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'list-claim-incomplete-against-any-institution') ||\r\n                                                verifyPermission(props.userPermissions, \"list-claim-incomplete-against-my-institution\")||\r\n                                                verifyPermission(props.userPermissions, \"list-claim-incomplete-without-client\")? (\r\n                                                    <NavLink exact to=\"/process/incomplete_claims\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Réclamation incomplète</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                        </ul>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            !seeTreatment(props.userPermissions) ? null : (\r\n                                <li className=\"kt-menu__item  kt-menu__item--submenu\" aria-haspopup=\"true\" data-ktmenu-submenu-toggle=\"hover\">\r\n                                    <a href=\"#treatement\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-menu__link kt-menu__toggle\">\r\n                                        <i className=\"kt-menu__link-icon flaticon-network\"/>\r\n                                        <span className=\"kt-menu__link-text\">Traitement</span>\r\n                                        <i className=\"kt-menu__ver-arrow la la-angle-right\"/>\r\n                                    </a>\r\n                                    <div className=\"kt-menu__submenu \">\r\n                                        <span className=\"kt-menu__arrow\"/>\r\n                                        <ul className=\"kt-menu__subnav\">\r\n                                            <li className=\"kt-menu__item  kt-menu__item--parent\" aria-haspopup=\"true\">\r\n                                                <span className=\"kt-menu__link\">\r\n                                                    <span className=\"kt-menu__link-text\">Traitement</span>\r\n                                                </span>\r\n                                            </li>\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, \"show-claim-awaiting-assignment\") && props.activePilot ? (\r\n                                                    <NavLink exact to=\"/process/claim-assign\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Réclamations à tranférer</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'list-claim-awaiting-treatment') ? (\r\n                                                    <NavLink exact to=\"/process/unit-claims\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Liste des réclamations</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions,\"list-claim-assignment-to-staff\") ? (\r\n                                                    <NavLink exact to=\"/process/claim-assign/to-staff\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Réclamations à traiter</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            {\r\n                                                (verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-my-institution') || verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-any-institution')) && props.activePilot ? (\r\n                                                    <NavLink exact to=\"/process/claim-to-validated\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Réclamations à valider</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'list-satisfaction-measured-any-claim')||\r\n                                                verifyPermission(props.userPermissions, 'list-satisfaction-measured-my-claim')?(\r\n                                                    <NavLink exact to=\"/process/claim_measure\" className=\"kt-menu__item \"\r\n                                                             activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Mesure Satisfaction</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'list-any-claim-archived')||\r\n                                                verifyPermission(props.userPermissions, 'list-my-claim-archived')?(\r\n                                                    <NavLink exact to=\"/process/claim_archived\" className=\"kt-menu__item \"\r\n                                                             activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Archivage</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'list-my-discussions')||\r\n                                                verifyPermission(props.userPermissions, 'contribute-discussion')?(\r\n                                                    <NavLink exact to=\"/chat\" className=\"kt-menu__item \"\r\n                                                             activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Discussions</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n\r\n\r\n\r\n                                        </ul>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            !seeMonitoring(props.userPermissions) ? null : (\r\n                                <>\r\n                                    <li className=\"kt-menu__section \">\r\n                                        <h4 className=\"kt-menu__section-text\">Monitoring</h4>\r\n                                        <i className=\"kt-menu__section-icon flaticon-more-v2\"/>\r\n                                    </li>\r\n\r\n                                    {\r\n                                        verifyPermission(props.userPermissions, 'list-monitoring-claim-any-institution') || verifyPermission(props.userPermissions, 'list-monitoring-claim-my-institution') ? (\r\n                                            <NavLink exact to=\"/monitoring/claims/monitoring\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                <li className=\"kt-menu__link \">\r\n                                                    <i className=\"kt-menu__link-icon flaticon2-heart-rate-monitor\"/>\r\n                                                    <span className=\"kt-menu__link-text\">Suivi des réclamations</span>\r\n                                                </li>\r\n                                            </NavLink>\r\n                                        ) : null\r\n                                    }\r\n\r\n                                    {\r\n                                        verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\r\n                                            <NavLink exact to=\"/monitoring/claims/reporting\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                <li className=\"kt-menu__link \">\r\n                                                    <i className=\"kt-menu__link-icon flaticon2-heart-rate-monitor\"/>\r\n                                                    <span className=\"kt-menu__link-text\">Reporting</span>\r\n                                                </li>\r\n                                            </NavLink>\r\n                                        ) : null\r\n                                    }\r\n                                </>\r\n                            )\r\n                        }\r\n\r\n                        {/*{*/}\r\n                        {/*    !seeHistorique(props.userPermissions) ? null : (*/}\r\n                        {/*        <>*/}\r\n                        {/*            <li className=\"kt-menu__section \">*/}\r\n                        {/*                <h4 className=\"kt-menu__section-text\">Historiques</h4>*/}\r\n                        {/*                <i className=\"kt-menu__section-icon flaticon-more-v2\"/>*/}\r\n                        {/*            </li>*/}\r\n                        {/*            <li className=\"kt-menu__item  kt-menu__item--submenu\" aria-haspopup=\"true\"*/}\r\n                        {/*                data-ktmenu-submenu-toggle=\"hover\">*/}\r\n                        {/*                <a href=\"#historique\" onClick={e => e.preventDefault()}*/}\r\n                        {/*                   className=\"kt-menu__link kt-menu__toggle\">*/}\r\n                        {/*                    <i className=\"kt-menu__link-icon flaticon2-telegram-logo\"/>*/}\r\n                        {/*                    <span className=\"kt-menu__link-text\">Historiques</span>*/}\r\n                        {/*                    <i className=\"kt-menu__ver-arrow la la-angle-right\"/>*/}\r\n                        {/*                </a>*/}\r\n                        {/*                <div className=\"kt-menu__submenu \">*/}\r\n                        {/*                    <span className=\"kt-menu__arrow\"/>*/}\r\n                        {/*                    <ul className=\"kt-menu__subnav\">*/}\r\n                        {/*                        <li className=\"kt-menu__item  kt-menu__item--parent\" aria-haspopup=\"true\">*/}\r\n                        {/*                        <span className=\"kt-menu__link\">*/}\r\n                        {/*                            <span className=\"kt-menu__link-text\">Historiques</span>*/}\r\n                        {/*                        </span>*/}\r\n                        {/*                        </li>*/}\r\n\r\n                        {/*                        {*/}\r\n                        {/*                            verifyPermission(props.userPermissions, 'history-list-create-claim')? (*/}\r\n                        {/*                                <NavLink exact to=\"/historic/claims/add\" className=\"kt-menu__item \"*/}\r\n                        {/*                                         activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">*/}\r\n                        {/*                                    <li className=\"kt-menu__link \">*/}\r\n                        {/*                                        <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>*/}\r\n                        {/*                                        <span className=\"kt-menu__link-text\">Réclamations créées</span>*/}\r\n                        {/*                                    </li>*/}\r\n                        {/*                                </NavLink>*/}\r\n                        {/*                            ) : null*/}\r\n                        {/*                        }*/}\r\n                        {/*                        {*/}\r\n                        {/*                            verifyPermission(props.userPermissions, \"history-list-treat-claim\")? (*/}\r\n                        {/*                                <NavLink exact to=\"/historic/claims/treat\" className=\"kt-menu__item \"*/}\r\n                        {/*                                         activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">*/}\r\n                        {/*                                    <li className=\"kt-menu__link \">*/}\r\n                        {/*                                        <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>*/}\r\n                        {/*                                        <span className=\"kt-menu__link-text\">Réclamations traitées</span>*/}\r\n                        {/*                                    </li>*/}\r\n                        {/*                                </NavLink>*/}\r\n                        {/*                            ) : null*/}\r\n                        {/*                        }*/}\r\n\r\n                        {/*                    </ul>*/}\r\n                        {/*                </div>*/}\r\n                        {/*            </li>*/}\r\n                        {/*        </>*/}\r\n                        {/*    )*/}\r\n                        {/*}*/}\r\n\r\n\r\n                        {\r\n                            !seeParameters(props.userPermissions) ? null : (\r\n                                <>\r\n                                    <li className=\"kt-menu__section \">\r\n                                        <h4 className=\"kt-menu__section-text\">Paramètres</h4>\r\n                                        <i className=\"kt-menu__section-icon flaticon-more-v2\"/>\r\n                                    </li>\r\n                                    <li className=\"kt-menu__item  kt-menu__item--submenu\" aria-haspopup=\"true\" data-ktmenu-submenu-toggle=\"hover\">\r\n                                        <a href=\"#parameter\" onClick={e => e.preventDefault()}\r\n                                           className=\"kt-menu__link kt-menu__toggle\">\r\n                                            <i className=\"kt-menu__link-icon flaticon-settings\"/>\r\n                                            <span className=\"kt-menu__link-text\">Paramètres</span>\r\n                                            <i className=\"kt-menu__ver-arrow la la-angle-right\"/>\r\n                                        </a>\r\n                                        <div className=\"kt-menu__submenu \"><span className=\"kt-menu__arrow\"/>\r\n                                            <ul className=\"kt-menu__subnav\">\r\n                                                <li className=\"kt-menu__item  kt-menu__item--parent\" aria-haspopup=\"true\">\r\n                                                    <span className=\"kt-menu__link\">\r\n                                                        <span className=\"kt-menu__link-text\">Paramètres</span>\r\n                                                    </span>\r\n                                                </li>\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-components-parameters\")?(\r\n                                                        <NavLink exact to=\"/settings/config\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Configuration</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ):null\r\n\r\n                                                }\r\n\r\n                                                {/*{\r\n                                                    verifyPermission(props.userPermissions, \"update-sms-parameters\") ? (\r\n                                                        <NavLink exact to=\"/settings/sms\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">SMS</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }*/}\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'update-mail-parameters') ? (\r\n                                                        <NavLink exact to=\"/settings/mail\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Envoie de mail</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-any-institution\") ?\r\n                                                        <NavLink to=\"/settings/institution\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Institution</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                        : null\r\n                                                }\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-my-institution\") ?\r\n                                                        <NavLink to=\"/settings/institution/edit\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">My Institution</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                        : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-claim-object-requirement\") ?\r\n                                                        <NavLink to=\"/settings/requirement\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\"> Exigences</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                        : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'update-processing-circuit-my-institution') ||\r\n                                                    verifyPermission(props.userPermissions, \"update-processing-circuit-any-institution\") ||\r\n                                                    verifyPermission(props.userPermissions, \"update-processing-circuit-without-institution\")?\r\n                                                        (\r\n                                                            <NavLink to=\"/settings/processing-circuit\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                                <li className=\"kt-menu__link \">\r\n                                                                    <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                    <span className=\"kt-menu__link-text\"> Entités de Traitement</span>\r\n                                                                </li>\r\n                                                            </NavLink>\r\n                                                        ): null\r\n\r\n                                                }\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"config-reporting-claim-any-institution\")||\r\n                                                    verifyPermission(props.userPermissions, \"config-reporting-claim-my-institution\")?\r\n                                                        <NavLink to=\"/settings/rapport-auto\" className=\"kt-menu__item \"\r\n                                                             activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\"> Rapport Automatique</span>\r\n                                                        </li>\r\n                                                    </NavLink>:null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-relance-parameters\")?(\r\n                                                        <NavLink to=\"/settings/relance\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Configuration de Relance</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ): null\r\n                                                }\r\n\r\n                                                        {/*<NavLink to=\"/settings/faqs/list\" className=\"kt-menu__item \"*/}\r\n                                                        {/*         activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">*/}\r\n                                                        {/*    <li className=\"kt-menu__link \">*/}\r\n                                                        {/*        <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>*/}\r\n                                                        {/*        <span className=\"kt-menu__link-text\">FAQs</span>*/}\r\n                                                        {/*    </li>*/}\r\n                                                        {/*</NavLink>*/}\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-faq\")?\r\n                                                        <NavLink exact to=\"/settings/faqs/add\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Editer FAQs</span>\r\n                                                            </li>\r\n                                                        </NavLink> :null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-faq-category\")?\r\n                                                    <NavLink exact to=\"/settings/faqs/category\" className=\"kt-menu__item \"\r\n                                                             activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Catégorie FAQs</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                :null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-any-institution-type-role') || verifyPermission(props.userPermissions, 'list-my-institution-type-role') ? (\r\n                                                        <NavLink exact to=\"/settings/rules\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Role</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-user-my-institution\") || verifyPermission(props.userPermissions, \"list-user-any-institution\") ? (\r\n                                                        <NavLink exact to=\"/settings/users\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Utilisateur</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-client-from-any-institution\") || verifyPermission(props.userPermissions, \"list-client-from-my-institution\") ? (\r\n                                                        <NavLink exact to=\"/settings/clients\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Clients</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-relationship\") ?\r\n                                                        <NavLink exact to=\"/settings/relationship\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Type de relation client</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                        : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'update-category-client') ?\r\n                                                        <NavLink to=\"/settings/clients/category\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Catégorie Clients </span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                        : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-type-client\") ?\r\n                                                        <NavLink to=\"/settings/clients/type\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Type Clients </span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                        : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-performance-indicator\") ? (\r\n                                                        <NavLink exact to=\"/settings/performance_indicator\"\r\n                                                                 className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\"\r\n                                                                 aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span\r\n                                                                    className=\"kt-menu__link-text\">Indicateur de performance</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-unit-type') ? (\r\n                                                        <NavLink exact to=\"/settings/unit_type\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Type d'unité</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-any-unit') || verifyPermission(props.userPermissions, 'list-my-unit') || verifyPermission(props.userPermissions, 'list-without-link-unit') ? (\r\n                                                        <NavLink exact to=\"/settings/unit\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Unité</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-position') ? (\r\n                                                        <NavLink exact to=\"/settings/positions\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Fonctions</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-claim-category') ? (\r\n                                                        <NavLink exact to=\"/settings/claim_categories\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Catégorie de réclamation</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-claim-object') ? (\r\n                                                        <NavLink exact to=\"/settings/claim_objects\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Objet de réclamation</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-staff-from-any-unit\") || verifyPermission(props.userPermissions, 'list-staff-from-my-unit') || verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit') ? (\r\n                                                        <NavLink exact to=\"/settings/staffs\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Agent</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-severity-level') ? (\r\n                                                        <NavLink exact to=\"/settings/severities\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Niveau de gravité</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-currency') ? (\r\n                                                        <NavLink exact to=\"/settings/currencies\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Devise</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-channel') ? (\r\n                                                        <NavLink exact to=\"/settings/channels\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Canaux</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-notifications\") ? (\r\n                                                        <NavLink exact to=\"/settings/notification\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Notification</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-message-apis\") ? (\r\n                                                        <NavLink exact to=\"/settings/message-apis\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Message API</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-my-institution-message-api\") ? (\r\n                                                        <NavLink exact to=\"/settings/institution-message-apis\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Institution Message API</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-delai-qualification-parameters\") ? (\r\n                                                        <NavLink exact to=\"/settings/qualification-period\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Delai qualification</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-delai-treatment-parameters\") ? (\r\n                                                        <NavLink exact to=\"/settings/treatment-period\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Delai traitement</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-active-pilot\") && props.activePilot ? (\r\n                                                        <NavLink exact to=\"/settings/activate-pilot\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Pilote actif</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-recurrence-alert-settings\") ? (\r\n                                                        <NavLink exact to=\"/settings/recurence\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Configuration des alerts de recurences</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-reject-unit-transfer-parameters\") ? (\r\n                                                        <NavLink exact to=\"/settings/reject-limit\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Configuration limitation rejet</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-min-fusion-percent-parameters\") ? (\r\n                                                        <NavLink exact to=\"/settings/percentage-min-fusion\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Configuration pourcentage minimum fusion</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n                                            </ul>\r\n                                        </div>\r\n                                    </li>\r\n                                </>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        activePilot: state.user.user.staff.is_active_pilot\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Aside);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Error401.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FaqsForm.jsx",["888","889","890"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {formatSelectOption} from \"../../helpers/function\";\r\nimport Select from \"react-select\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\r\n\r\nconst FaqsForm = (props) => {\r\n\r\n    const defaultData = {\r\n        faq_category_id: \"\",\r\n        question: \"\",\r\n        answer: \"\",\r\n    };\r\n    const defaultError = {\r\n        faq_category_id: [],\r\n        question: [],\r\n        answer: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [categorieData, setCategorieData] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const {editfaqid} = useParams();\r\n\r\n    if (!editfaqid) {\r\n        if (!verifyPermission(props.userPermissions, 'store-faq'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-faq'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + '/faq-categories')\r\n                .then(response => {\r\n                    setCategorieData(response.data)\r\n                });\r\n            if (editfaqid) {\r\n                axios.get(appConfig.apiDomaine + `/faqs/${editfaqid}`)\r\n                    .then(response => {\r\n                        const newFaq = {\r\n                            faq_category_id: response.data.faq_category.id,\r\n                            question: response.data.question[\"fr\"],\r\n                            answer: response.data.answer[\"fr\"]\r\n                        };\r\n                        setData(newFaq);\r\n                        setCategory({value: response.data.faq_category.id, label: response.data.faq_category.name.fr});\r\n                    })\r\n            }\r\n        }\r\n    }, []);\r\n    const onChangeCategory = (selected) => {\r\n        const newData = {...data};\r\n        newData.faq_category_id = selected.value;\r\n        setCategory(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeQuiz = (e) => {\r\n        const newData = {...data};\r\n        newData.question = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeAnswers = (e) => {\r\n        const newData = {...data};\r\n        newData.answer = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if(editfaqid){\r\n                axios.put(appConfig.apiDomaine + `/faqs/${editfaqid}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }else {\r\n                axios.post(appConfig.apiDomaine + `/faqs`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return(\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/faqs/faq\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    FAQs\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        editfaqid ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                editfaqid?\" Modifier une FAQ\" :\"Ajout de FAQs\"\r\n\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n                                                                <div\r\n                                                                    className={error.faq_category_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"exampleSelect1\">Catégorie</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        {categorieData ? (\r\n                                                                            <Select\r\n                                                                                value={category}\r\n                                                                                onChange={onChangeCategory}\r\n                                                                                options={formatSelectOption(categorieData, 'name', \"fr\")}\r\n                                                                            />\r\n                                                                        ) : ''\r\n                                                                        }\r\n\r\n                                                                        {\r\n                                                                            error.faq_category_id.length ? (\r\n                                                                                error.faq_category_id.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.question.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"quiz\">Question</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"quiz\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.question.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Veillez entrer la question\"\r\n                                                                            value={data.question}\r\n                                                                            onChange={(e) => onChangeQuiz(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.question.length ? (\r\n                                                                                error.question.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.answer.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"answer\">Réponse</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                <textarea\r\n                                                                    id=\"answer\"\r\n                                                                    className={error.answer.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    placeholder=\"Veillez entrer la réponse\"\r\n                                                                    cols=\"30\"\r\n                                                                    rows=\"5\"\r\n                                                                    value={data.answer}\r\n                                                                    onChange={(e) => onChangeAnswers(e)}\r\n                                                                />\r\n                                                                        {\r\n                                                                            error.answer.length ? (\r\n                                                                                error.answer.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Envoyer</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Loading...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/faqs/add\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/faqs/add\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        editfaqid ?\r\n            verifyPermission(props.userPermissions, 'update-faq') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-faq') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(FaqsForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\notification.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\middleware\\verifyToken.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\EmptyNotification.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\PerformanceIndicator.jsx",["891"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst PerformanceIndicator = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"list-performance-indicator\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [performances, setPerformances] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n       async function fetchData () {\r\n           await axios.get(`${appConfig.apiDomaine}/performance-indicators`)\r\n               .then(response => {\r\n                   setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                   setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                   setPerformances(response.data);\r\n                   setLoad(false);\r\n               })\r\n               .catch(error => {\r\n                   setLoad(false);\r\n                   console.log(\"Something is wrong\");\r\n               })\r\n           ;\r\n       }\r\n       if (verifyTokenExpire())\r\n           fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newPerformances = [...performances];\r\n        newPerformances = newPerformances.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.value).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.mesure_unit).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newPerformances;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(performances.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(performances.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(performances.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(performances.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(performances.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                performances.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                performances.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deletePerformanceIndicator = (performanceId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(`${appConfig.apiDomaine}/performance-indicators/${performanceId}`)\r\n                            .then(response => {\r\n                                const newPerformances = [...performances];\r\n                                newPerformances.splice(index, 1);\r\n                                setPerformances(newPerformances);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newPerformances.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newPerformances.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (performance, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{performance.name[\"fr\"]}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"300px\" }}>{performance.description[\"fr\"]}</td>\r\n                <td>{performance.value}</td>\r\n                <td>{performance.mesure_unit}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"update-performance-indicator\") ? (\r\n                            <Link to={`/settings/performance_indicator/${performance.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"destroy-performance-indicator\") ? (\r\n                            <button\r\n                                onClick={(e) => deletePerformanceIndicator(performance.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-performance-indicator\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#/icon\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#indicatorPerformance\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Indicateur de performance\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-performance-indicator\"}\r\n                            title={\"Indicateur de performance\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/performance_indicator/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"250px\" }}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"20px\" }}\r\n                                                            aria-label=\"Ship Address: activate to sort column ascending\">Value\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"15px\" }}\r\n                                                            aria-label=\"Company Agent: activate to sort column ascending\">Unité de mésure\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        performances.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((performance, index) => (\r\n                                                                    printBodyTable(performance, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Valeur</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Unité de mésure</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {performances.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PerformanceIndicator);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\UnitType.jsx",["892"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst UnitType = (props) => {\r\n    document.title = \"Satis client - Paramètre type d'unité\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-unit-type\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [unitTypes, setUnitTypes] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(`${appConfig.apiDomaine}/unit-types`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setUnitTypes(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newUnitTypes = [...unitTypes];\r\n        newUnitTypes = newUnitTypes.filter(el => (\r\n            getLowerCaseString(el.name ? el.name[\"fr\"] : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.can_be_target ? \"Oui\" : \"Non\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.can_treat ? \"Oui\" : \"Non\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description ? el.description[\"fr\"] : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newUnitTypes;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(unitTypes.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(unitTypes.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(unitTypes.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(unitTypes.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(unitTypes.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                unitTypes.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                unitTypes.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteUnitType = (unitTypeId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(`${appConfig.apiDomaine}/unit-types/${unitTypeId}`)\r\n                            .then(response => {\r\n                                const newUnitTypes = [...unitTypes];\r\n                                newUnitTypes.splice(index, 1);\r\n                                setUnitTypes(newUnitTypes);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (unitType, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{unitType.name ? unitType.name[\"fr\"] : \"-\"}</td>\r\n                <td>{unitType.can_be_target ? \"Oui\" : \"Non\"}</td>\r\n                <td>{unitType.can_treat ? \"Oui\" : \"Non\"}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"300px\" }}>{unitType.description ? unitType.description[\"fr\"] : \"-\"}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-unit-type') ? (\r\n                            <Link to={`/settings/unit_type/${unitType.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-unit-type') ? (\r\n                            <button\r\n                                onClick={(e) => deleteUnitType(unitType.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-unit-type') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Type d'unité\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-unit-type\"}\r\n                            title={\"Type d'unité\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/unit_type/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Peut-être visé par une réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Peut traité une réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"300px\" }}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        unitTypes.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((unitType, index) => (\r\n                                                                    printBodyTable(unitType, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Peut-être visé par une réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Peut traité une réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {unitTypes.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UnitType);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Staff.jsx",["893","894"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport ExportButton from \"../components/ExportButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/staff`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/my/staff/${unitId}`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/staff`,\r\n            destroy: unitId => `${appConfig.apiDomaine}/any/staff/${unitId}`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/staff`,\r\n            destroy: unitId => `${appConfig.apiDomaine}/my/staff/${unitId}`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/maybe/no/staff`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/maybe/no/staff/${unitId}`,\r\n    }\r\n};\r\n\r\nconst   Staff = (props) => {\r\n    if (!(verifyPermission(props.userPermissions, 'list-staff-from-any-unit') || verifyPermission(props.userPermissions, 'list-staff-from-my-unit')|| verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit')) )\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-any-unit'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-my-unit'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [staffs, setStaffs] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setStaffs(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                });\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [endPoint.list, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const separateStringByComa = (arrayString) => {\r\n        let generateString = \"\";\r\n        arrayString.map((t, index) => {\r\n            generateString = index + 1 !== arrayString.length ? generateString + t+\", \" : generateString + t\r\n        });\r\n        return generateString;\r\n    };\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newStaffs = [...staffs];\r\n        newStaffs = newStaffs.filter(el => (\r\n            getLowerCaseString(`${el.is_lead ? 'L' : ''} ${el.identite.lastname} ${el.identite.firstname}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(separateStringByComa(el.identite.telephone)).indexOf(value) >= 0 ||\r\n            getLowerCaseString(separateStringByComa(el.identite.email)).indexOf(value) >= 0 ||\r\n            getLowerCaseString(verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit') ? el.unit ? el.unit.name[\"fr\"] : '' : el.unit.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(verifyPermission(props.userPermissions, 'list-staff-from-any-unit') ?  el.institution.name[\"fr\"] : '').indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.position.name[\"fr\"]).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newStaffs;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(staffs.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(staffs.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(staffs.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(staffs.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(staffs.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                staffs.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                staffs.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteStaff = (staffId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(endPoint.destroy(staffId))\r\n                            .then(response => {\r\n                                const newStaffs = [...staffs];\r\n                                newStaffs.splice(index, 1);\r\n                                setStaffs(newStaffs);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newStaffs.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newStaffs.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (staff, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{staff.is_lead ? (<span className=\"kt-badge kt-badge--success kt-badge--inline\">L</span>) : null} {staff.identite.lastname+\" \"+staff.identite.firstname}</td>\r\n                <td>\r\n                    {\r\n                        staff.identite.telephone.map((tel, index) => (\r\n                            index === staff.identite.telephone.length - 1 ? tel : tel+\", \"\r\n                        ))\r\n                    }\r\n\r\n                </td>\r\n                <td>\r\n                    {\r\n                        staff.identite.email.map((mail, index) => (\r\n                            index === staff.identite.email.length - 1 ? mail : mail+\", \"\r\n                        ))\r\n                    }\r\n                </td>\r\n                {\r\n                    verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit') ? (\r\n                        staff.unit ? (\r\n                            <td>{staff.unit.name[\"fr\"]}</td>\r\n                            ) : null\r\n                    ) : (\r\n                        <td>{staff.unit.name[\"fr\"]}</td>\r\n                    )\r\n                }\r\n                {\r\n                    verifyPermission(props.userPermissions, 'list-staff-from-any-unit') ? (\r\n                        <td>{staff.institution.name}</td>\r\n                    ) : null\r\n                }\r\n                <td>{staff.position.name[\"fr\"]}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"update-staff-from-any-unit\") || verifyPermission(props.userPermissions, 'update-staff-from-my-unit') || verifyPermission(props.userPermissions, 'update-staff-from-maybe-no-unit') ? (\r\n                            <Link to={`/settings/staffs/${staff.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"destroy-staff-from-any-unit\") || verifyPermission(props.userPermissions, 'destroy-staff-from-my-unit') || verifyPermission(props.userPermissions, 'destroy-staff-from-maybe-no-unit') ? (\r\n                            <button\r\n                                onClick={(e) => deleteStaff(staff.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-staff-from-any-unit') || verifyPermission(props.userPermissions, 'list-staff-from-my-unit') || verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Agent\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={(<><span className=\"kt-badge kt-badge--success kt-badge--inline\">L</span> : Responsable d'unité</>)}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={[\"store-staff-from-any-unit\", \"store-staff-from-my-unit\", 'list-staff-from-maybe-no-unit']}\r\n                            title={\"Agent\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/staffs/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <ExportButton downloadLink={`${appConfig.apiDomaine}/download-excel/staffs`} pageUrl={\"/settings/staffs/import\"}/>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"50px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Téléphone\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"50px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Email\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Unité\r\n                                                        </th>\r\n                                                        {\r\n                                                            verifyPermission(props.userPermissions, 'list-staff-from-any-unit') ? (\r\n                                                                <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                    colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                                    aria-label=\"Country: activate to sort column ascending\">Institution\r\n                                                                </th>\r\n                                                            ) : <th style={{display: \"none\"}}/>\r\n                                                        }\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Position\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"53px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        staffs.length ? (\r\n                                                            showList ? (\r\n                                                                showList.map((staff, index) => (\r\n                                                                    printBodyTable(staff, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Téléphone</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Email</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Unité</th>\r\n                                                        {\r\n                                                            verifyPermission(props.userPermissions, 'list-staff-from-any-unit') ? (\r\n                                                                <th rowSpan=\"1\" colSpan=\"1\">Institution</th>\r\n                                                            ) : <th style={{display: \"none\"}}/>\r\n                                                        }\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Position</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {staffs.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Staff);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Mail.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Position.jsx",["895"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\"\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst Position = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"list-position\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [positions, setPositions] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(`${appConfig.apiDomaine}/positions`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setPositions(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newPositions = [...positions];\r\n        newPositions = newPositions.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newPositions;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(positions.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(positions.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(positions.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(positions.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(positions.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                positions.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                positions.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deletePosition = (positionId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/positions/${positionId}`)\r\n                            .then(response => {\r\n                                const newPositions = [...positions];\r\n                                newPositions.splice(index, 1);\r\n                                setPositions(newPositions);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newPositions.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newPositions.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (position, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{position.name[\"fr\"]}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-position') ? (\r\n                            <Link to={`/settings/positions/${position.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-position') ? (\r\n                            <button\r\n                                onClick={(e) => deletePosition(position.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-position\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Fonctions\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={\"Liste des fonctions occupés\"}/>\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-position\"}\r\n                            title={\"Fonctions\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/positions/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\"><label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        positions.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((position, index) => (\r\n                                                                    printBodyTable(position, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {positions.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Position);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Unit.jsx",["896","897","898","899"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/units`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/my/units/${unitId}`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/units`,\r\n            destroy: unitId => `${appConfig.apiDomaine}/any/units/${unitId}`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/units`,\r\n            destroy: unitId => `${appConfig.apiDomaine}/my/units/${unitId}`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/without-link/units`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/without-link/units/${unitId}`,\r\n    }\r\n};\r\n\r\nconst Unit = (props) => {\r\n    if (!(verifyPermission(props.userPermissions, 'list-any-unit') || verifyPermission(props.userPermissions, 'list-my-unit') || verifyPermission(props.userPermissions, 'list-without-link-unit')))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-any-unit'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-my-unit'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n    const [load, setLoad] = useState(true);\r\n    const [units, setUnits] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setUnits(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [endPoint.list, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    {/*<tr key={index} role=\"row\" className=\"odd\">\r\n        {\r\n            verifyPermission(props.userPermissions, 'list-any-unit') ? (\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{unit.institution ? unit.institution.name : null}</td>\r\n            ) : : null\r\n        }\r\n    </tr>*/}\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newUnits = [...units];\r\n        newUnits = newUnits.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.unit_type.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.lead ? el.lead.identite ? el.lead.identite.lastname+\" \"+el.lead.identite.firstname : \"Pas d'identite\" : \"Pas de responsable\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(verifyPermission(props.userPermissions, \"list-any-unit\") ? el.institution ? el.institution.name : \"\" : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newUnits;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(units.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(units.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(units.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(units.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(units.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                units.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                units.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteUnit = (unitId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(endPoint.destroy(unitId))\r\n                            .then(response => {\r\n                                const newUnits = [...units];\r\n                                newUnits.splice(index, 1);\r\n                                setUnits(newUnits);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newUnits.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newUnits.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (unit, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{unit.name[\"fr\"]}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{unit.unit_type.name[\"fr\"]}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>\r\n                    {\r\n                        unit.lead ?\r\n                            unit.lead.identite ? unit.lead.identite.lastname+\" \"+unit.lead.identite.firstname : \"Pas d'identité\"\r\n                            : \"Pas de responsable\"\r\n                    }\r\n                </td>\r\n                {\r\n                    verifyPermission(props.userPermissions, 'list-any-unit') ? (\r\n                        <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{unit.institution ? unit.institution.name : null}</td>\r\n                    ) : null\r\n                }\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-any-unit') || verifyPermission(props.userPermissions, 'update-my-unit') || verifyPermission(props.userPermissions, 'update-without-link-unit') ? (\r\n                            <Link to={`/settings/unit/${unit.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-any-unit') || verifyPermission(props.userPermissions, 'destroy-my-unit') || verifyPermission(props.userPermissions, 'destroy-without-link-unit') ? (\r\n                            <button\r\n                                onClick={(e) => deleteUnit(unit.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-any-unit') || verifyPermission(props.userPermissions, 'list-my-unit') || verifyPermission(props.userPermissions, 'list-without-link-unit') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Unité\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={\"Liste des services, agences, etc...\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={['store-any-unit', 'store-my-unit', 'store-without-link-unit']}\r\n                            title={\"Unité\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/unit/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\"><label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom Unité\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Type Unité\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Responsable\r\n                                                        </th>\r\n                                                        {\r\n                                                            verifyPermission(props.userPermissions, 'list-any-unit') ? (\r\n                                                                <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                    colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                                    aria-label=\"Country: activate to sort column ascending\">Institution\r\n                                                                </th>\r\n                                                            ) : <th style={{display: \"none\"}}/>\r\n                                                        }\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        units.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((unit, index) => (\r\n                                                                    printBodyTable(unit, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom Unité</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Type Unité</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Responsable</th>\r\n                                                        {\r\n                                                            verifyPermission(props.userPermissions, 'list-any-unit') ? (\r\n                                                                <th rowSpan=\"1\" colSpan=\"1\">Institution</th>\r\n                                                            ) : <th style={{display: \"none\"}}/>\r\n                                                        }\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {units.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Unit);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\FAQsPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimObject.jsx",["900"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport ExportButton from \"../components/ExportButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst ClaimObject = (props) => {\r\n    if (!verifyPermission(props.userPermissions, 'list-claim-object'))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claimObjects, setClaimObjects] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(`${appConfig.apiDomaine}/claim-objects`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setClaimObjects(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        let newClaimObjects = [...claimObjects];\r\n        newClaimObjects = newClaimObjects.filter(el => {\r\n            if (el.description[\"fr\"]) {\r\n                return (el.name[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.description[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.claim_category.name[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.time_limit.toString().indexOf(value.toString()) >= 0);\r\n            } else {\r\n                return (el.name[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.claim_category.name[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.time_limit.toString().indexOf(value.toString()) >= 0);\r\n            }\r\n        });\r\n\r\n        return newClaimObjects;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimObjects.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimObjects.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimObjects.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimObjects.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimObjects.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimObjects.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimObjects.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteClaimObject = (claimObjectId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/claim-objects/${claimObjectId}`)\r\n                            .then(response => {\r\n                                const newClaimObjects = [...claimObjects];\r\n                                newClaimObjects.splice(index, 1);\r\n                                setClaimObjects(newClaimObjects);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newClaimObjects.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newClaimObjects.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claimObject, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claimObject.name[\"fr\"]}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"200px\" }}>{claimObject ? claimObject.description[\"fr\"] : null}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{claimObject.claim_category.name[props.language]}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"50px\" }}>{claimObject.severity_level ? claimObject.time_limit : null}</td>\r\n                <td>\r\n                    {\r\n                        claimObject.severity_level ? (\r\n                            <div className=\"p-2 text-center\" style={{backgroundColor: claimObject.severity_level.color, color: claimObject.severity_level.color === \"#ffffff\" ? \"black\" : \"white\"}}>\r\n                                {\r\n                                    claimObject.severity_level.color ? (\r\n                                            `${claimObject.severity_level.color} ${claimObject.severity_level.color === \"#ffffff\" ? \" Blanc\" : ''}`\r\n                                        )\r\n                                        : (\r\n                                            <strong style={{color: \"black\"}}>-</strong>\r\n                                        )\r\n                                }\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-claim-category') ? (\r\n                            <Link to={`/settings/claim_objects/${claimObject.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-claim-category') ? (\r\n                            <button\r\n                                onClick={(e) => deleteClaimObject(claimObject.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-claim-category') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Objet de réclamation\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-claim-object\"}\r\n                            title={\"Objet de réclamation\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/claim_objects/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <ExportButton\r\n                                                downloadLink={`${appConfig.apiDomaine}/download-excel/objects`}\r\n                                                pageUrl={\"/settings/claim_objects/import\"}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                        <tr role=\"row\">\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"250px\" }}\r\n                                                                aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Nom de la catégorie\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Temps limite\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Niveau de gravité\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                                Action\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claimObjects.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((claimObject, index) => (\r\n                                                                    printBodyTable(claimObject, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom de la catégorie</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Temps limite</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Niveau de gravité</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {claimObjects.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        language: state.language.languageSelected\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimObject);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimCategory.jsx",["901"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport ExportButton from \"../components/ExportButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst ClaimCategory = (props) => {\r\n    if (!verifyPermission(props.userPermissions, 'list-claim-category'))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claimCategories, setClaimCategories] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(`${appConfig.apiDomaine}/claim-categories`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setClaimCategories(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaimCategories = [...claimCategories];\r\n        newClaimCategories = newClaimCategories.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newClaimCategories;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimCategories.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimCategories.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimCategories.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimCategories.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimCategories.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimCategories.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimCategories.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteClaimCategory = (claimCategoryId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/claim-categories/${claimCategoryId}`)\r\n                            .then(response => {\r\n                                const newClaimCategories = [...claimCategories];\r\n                                newClaimCategories.splice(index, 1);\r\n                                setClaimCategories(newClaimCategories);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newClaimCategories.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newClaimCategories.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(\r\n                                        toastErrorMessageWithParameterConfig(error.response.data.error)\r\n                                    );\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claimCategory, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claimCategory.name[\"fr\"]}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-claim-category') ? (\r\n                            <Link to={`/settings/claim_categories/${claimCategory.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-claim-category') ? (\r\n                            <button\r\n                                onClick={(e) => deleteClaimCategory(claimCategory.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-claim-category') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Catégorie de réclamation\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-claim-category\"}\r\n                            title={\"Catégories de réclamation\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/claim_categories/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <ExportButton\r\n                                                downloadLink={`${appConfig.apiDomaine}/download-excel/categories`}\r\n                                                pageUrl={\"/settings/claim_category/import\"}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claimCategories.length ? (\r\n                                                            showList ? (\r\n                                                                showList.map((claimCategory, index) => (\r\n                                                                    printBodyTable(claimCategory, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {claimCategories.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        language: state.language.languageSelected\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimCategory);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\CategoryFAQs.jsx",["902","903","904","905","906","907"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {connect} from \"react-redux\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst CategoryFAQs = (props) => {\r\n    document.title = \"Satis client - Paramètre Categorie FAQs\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-faq-category\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [categoryFaqs, setCategoryFaqs] = useState(undefined);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine+\"/faq-categories\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setCategoryFaqs(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newCategoryfaqs = [...categoryFaqs];\r\n        newCategoryfaqs = newCategoryfaqs.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.slug[\"fr\"]).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newCategoryfaqs;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(categoryFaqs.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(categoryFaqs.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(categoryFaqs.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(categoryFaqs.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(categoryFaqs.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                categoryFaqs.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                categoryFaqs.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteCategoryFaqs = (categoryId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(appConfig.apiDomaine+`/faq-categories/${categoryId}`)\r\n                            .then(response => {\r\n                                console.log(response, \"OK\");\r\n                                const newCategory = [setCategoryFaqs];\r\n                                newCategory.splice(index, 1);\r\n                                setCategoryFaqs(newCategory);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newCategory.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newCategory.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (category, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{category.name.fr}</td>\r\n                <td >{category.slug.fr}</td>\r\n                <td className=\"d-flex justify-content-center\">\r\n                    <Link to={`/settings/faqs/category/edit/${category.id}`}\r\n                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                          title=\"Modifier\">\r\n                        <i className=\"la la-edit\"/>\r\n                    </Link>\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-faq-category\") ? (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                FAQs\r\n                            </a>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Categorie FAQs\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable\r\n                    information={\"Liste des catégories de FAQs\"}/>\r\n\r\n                <div className=\"kt-portlet\">\r\n\r\n                    <HeaderTablePage\r\n                        addPermission={\"store-faq-category\"}\r\n                        title={\"Catégorie FAQ\"}\r\n                        addText={\"Ajouter une Catégorie FAQ\"}\r\n                        addLink={\"/settings/faqs/category/add\"}\r\n                    />\r\n\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)}\r\n                                                           className=\"form-control form-control-sm\" placeholder=\"\"\r\n                                                           aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <table\r\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{ width: \"952px\" }}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{ width: \"150px\" }}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Libellé\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{ width: \"200px\" }}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Slug\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                        Action\r\n                                                    </th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {\r\n                                                    categoryFaqs?\r\n                                                        categoryFaqs.length ? (\r\n                                                        showList.length ? (\r\n                                                            showList.map((category, index) => (\r\n                                                                printBodyTable(category, index)\r\n                                                            ))\r\n                                                        ) : (\r\n                                                            <EmptyTable search={true}/>\r\n                                                        )\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    ):null\r\n                                                }\r\n                                                </tbody>\r\n                                                <tfoot>\r\n                                                <tr/>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {categoryFaqs?categoryFaqs.length:0} données\r\n                                            </div>\r\n                                        </div>\r\n                                        {\r\n                                            showList.length ? (\r\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                    <Pagination\r\n                                                        numberPerPage={numberPerPage}\r\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                        activeNumberPage={activeNumberPage}\r\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                        pages={pages}\r\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                        numberPage={numberPage}\r\n                                                        onClickNextPage={e => onClickNextPage(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        ): null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CategoryFAQs);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Institution.jsx",["908","909"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport ExportButton from \"../components/ExportButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst Institution = (props) => {\r\n    document.title = \"Satis client - Paramètre Institution\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-any-institution\")) {\r\n        window.location.href = ERROR_401;\r\n    }\r\n    const [load, setLoad] = useState(true);\r\n    const [institutions, setInstitution] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/any/institutions\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setInstitution(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newInstitutions = [...institutions];\r\n        newInstitutions = newInstitutions.filter(el => (\r\n            getLowerCaseString(el.institution_type ? el.institution_type.name : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.name).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.acronyme).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.iso_code).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newInstitutions;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(institutions.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(institutions.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(institutions.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(institutions.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(institutions.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                institutions.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                institutions.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteInstitution = (institutionId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/any/institutions/${institutionId}`)\r\n                            .then(response => {\r\n                                const newInstitution = [...institutions];\r\n                                newInstitution.splice(index, 1);\r\n                                setInstitution(newInstitution);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newInstitution.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newInstitution.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (institution, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td style={{textAlign: 'center'}}>\r\n                    {institution.logo?(\r\n                        <img id=\"Image1\" src={institution.logo} alt=\"logo\" style={{maxWidth: \"35px\", maxHeight: \"35px\", textAlign: 'center'}}/>)\r\n                        :\"\"\r\n                    }\r\n                </td>\r\n                <td>{institution.institution_type?institution.institution_type.name:\"\"}</td>\r\n                <td>{institution.name}</td>\r\n                <td>{institution.acronyme}</td>\r\n                <td>{institution.iso_code}</td>\r\n                <td style={{textAlign:\"center\"}}>\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"update-institution-message-api\") ? (\r\n                            <Link to={`/settings/institutions/${institution.id}/message-apis`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Parametrer message API\">\r\n                                <i className=\"la flaticon-multimedia-2\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"show-any-institution\") ?\r\n                            <Link to={`/settings/institution/edit/${institution.id}`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            : verifyPermission(props.userPermissions, \"update-my-institution\") ?\r\n                            <Link to={`/settings/institution/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            : null\r\n                    }\r\n\r\n                    {/*{*/}\r\n                    {/*    verifyPermission(props.userPermissions, \"destroy-any-institution\") ?*/}\r\n                    {/*        <button*/}\r\n                    {/*            onClick={(e) => deleteInstitution(institution.id, index)}*/}\r\n                    {/*            className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"*/}\r\n                    {/*            title=\"Supprimer\">*/}\r\n                    {/*            <i className=\"la la-trash\"/>*/}\r\n                    {/*        </button>*/}\r\n                    {/*        : null*/}\r\n                    {/*}*/}\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions,\"list-any-institution\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Institution\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-any-institution\"}\r\n                            title={\"Institution\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/institution/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <ExportButton pageUrl={\"/settings/importInstitutions\"} downloadLink={`${appConfig.apiDomaine}/download-excel/institutions`}/>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"40px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Logo\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Type\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Acronyme\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"80px\"}}\r\n                                                            aria-label=\"Ship Address: activate to sort column ascending\">Iso_Code\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        institutions.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((institution, index) => (\r\n                                                                    printBodyTable(institution, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr style={{textAlign:\"center\"}}>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Logo</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Type</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Acronyme</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Iso_Code</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {institutions.length} données\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Institution);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CategoryFaqsForm.jsx",["910","911","912"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {connect} from \"react-redux\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\r\n\r\nconst CategoryFaqsForm = (props) => {\r\n    const {id}=useParams();\r\n\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-faq-category'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-faq-category'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (id){\r\n            if (verifyTokenExpire()) {\r\n                axios.get(appConfig.apiDomaine+`/faq-categories/${id}`)\r\n                    .then(response => {\r\n\r\n                        const newCategory={\r\n                            name:response.data.name.fr,\r\n                        };\r\n                        setData(newCategory)\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if(id){\r\n                axios.put(appConfig.apiDomaine+`/faq-categories/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }else{\r\n                axios.post(appConfig.apiDomaine+`/faq-categories`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/faqs/category\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Categorie FAQ\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id?\r\n                                                    \"Modification des catégories de FAQ\":\" Ajout des catégories de FAQ\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n\r\n                                        <div className={error.name.length ? \"form-group  validated\" : \"form-group\"}>\r\n                                            <label htmlFor=\"name\">Libellé <InputRequire/></label>\r\n                                            <div className=\"col-md-6 mb-3\">\r\n                                                <input\r\n                                                    id=\"name\"\r\n                                                    type=\"text\"\r\n                                                    className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le nom\"\r\n                                                    value={data.name}\r\n                                                    onChange={(e) => onChangeName(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.name.length ? (\r\n                                                        error.name.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"kt-portlet__foot\">\r\n                                        <div className=\"kt-form__actions\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id?\"Modifier\":\"Enregistrer\"}</button>\r\n                                                ) : (\r\n                                                    <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/settings/faqs/category\" className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/settings/faqs/category\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-faq-category') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-faq-category') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(CategoryFaqsForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\CategoryClient.jsx",["913"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst CategoryClient = (props) => {\r\n    document.title = \"Satis client - Paramètre categorie client\";\r\n    if (!verifyPermission(props.userPermissions, \"list-category-client\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [categoryClient, setCategoryClient] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/category-clients\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setCategoryClient(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    },[]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newCategoryClients = [...categoryClient];\r\n        newCategoryClients = newCategoryClients.filter(el => (\r\n            getLowerCaseString(el.name ? el.name[\"fr\"] : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description ? el.description[\"fr\"] : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newCategoryClients;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(categoryClient.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(categoryClient.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(categoryClient.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(categoryClient.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(categoryClient.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                categoryClient.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                categoryClient.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteCategoryClient = (categoryClientId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/category-clients/${categoryClientId}`)\r\n                            .then(response => {\r\n                                const newCategory = [...categoryClient];\r\n                                newCategory.splice(index, 1);\r\n                                setCategoryClient(newCategory);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newCategory.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newCategory.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (category, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{category.name.fr===null?\"\":category.name.fr}</td>\r\n                <td>{category.description.fr===null?\"\":category.description.fr}</td>\r\n                <td style={{textAlign:'center'}}>\r\n                    {/*<Link to=\"/settings/clients/category/detail\"*/}\r\n                    {/*      className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"*/}\r\n                    {/*      title=\"Détail\">*/}\r\n                    {/*    <i className=\"la la-eye\"/>*/}\r\n                    {/*</Link>*/}\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'show-category-client') ?\r\n                            <Link\r\n                                to={`/settings/clients/category/edit/${category.id}`}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"destroy-category-client\") ?\r\n                        <button\r\n                            onClick={(e) => deleteCategoryClient(category.id, index)}\r\n                            className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                            title=\"Supprimer\">\r\n                            <i className=\"la la-trash\"/>\r\n                        </button>\r\n                        : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-category-client\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Client\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Categorie Client\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"Liste des catégories client\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-category-client\"}\r\n                            title={\"Catégorie Client\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/clients/category/add\"}\r\n                        />\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        categoryClient.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((category, index) => (\r\n                                                                    printBodyTable(category, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {categoryClient.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CategoryClient);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\FAQs.jsx",["914","915","916","917","918","919"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {connect} from \"react-redux\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst FAQs = (props) => {\r\n    document.title = \"Satis client - Paramètre FAQs\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-faq\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [faqs, setFaqs] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/faqs\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setFaqs(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newFaqs = [...faqs];\r\n        newFaqs = newFaqs.filter(el => (\r\n            getLowerCaseString(el.faq_category.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.question[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.answer[\"fr\"]).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newFaqs;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(faqs.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(faqs.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(faqs.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(faqs.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(faqs.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                faqs.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                faqs.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteFaqs = (faqId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/faqs/${faqId}`)\r\n                            .then(response => {\r\n                                console.log(response, \"OK\");\r\n                                const newFaq = [...faqs];\r\n                                newFaq.splice(index, 1);\r\n                                setFaqs(newFaq);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newFaq.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newFaq.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n\r\n                }\r\n            })\r\n        ;\r\n    };\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (faq, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{faq.faq_category.name.fr}</td>\r\n                <td>{faq.question.fr}</td>\r\n                <td>{faq.answer.fr}</td>\r\n                <td className='d-flex justify-content-center'>\r\n                    <Link to={`/settings/faqs/faq/edit/${faq.id}`}\r\n                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                          title=\"Modifier\">\r\n                        <i className=\"la la-edit\"/>\r\n                    </Link>\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-faq\")?(\r\n                <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                    <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                        <div className=\"kt-container  kt-container--fluid \">\r\n                            <div className=\"kt-subheader__main\">\r\n                                <h3 className=\"kt-subheader__title\">\r\n                                    Paramètres\r\n                                </h3>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                        FAQs\r\n                                    </a>\r\n                                    <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                    <div className=\"kt-subheader__breadcrumbs\">\r\n                                        <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                        <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                        <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                            FAQ\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                        <InfirmationTable\r\n                            information={\"Liste de FAQs\"}/>\r\n\r\n                        <div className=\"kt-portlet\">\r\n                            <HeaderTablePage\r\n                                addPermission={\"store-faq\"}\r\n                                title={\"FAQs\"}\r\n                                addText={\"Ajouter un FAQs\"}\r\n                                addLink={\"/settings/faqs/faq/add\"}\r\n                            />\r\n\r\n                            {\r\n                                load ? (\r\n                                    <LoadingTable/>\r\n                                ) : (\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 text-left\">\r\n                                                    <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                        <label>\r\n                                                            Recherche:\r\n                                                            <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)}\r\n                                                                   className=\"form-control form-control-sm\" placeholder=\"\"\r\n                                                                   aria-controls=\"kt_table_1\"/>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-12\">\r\n                                                    <table\r\n                                                        className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                        id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                        style={{width: \"952px\"}}>\r\n                                                        <thead>\r\n                                                        <tr role=\"row\">\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{width: \"100.25px\"}}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Catégorie\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                                aria-label=\"Ship City: activate to sort column ascending\">Question\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{width: \"200px\"}}\r\n                                                                aria-label=\"Ship City: activate to sort column ascending\">Réponse\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\" colSpan=\"1\" style={{width: \"40.25px\"}}\r\n                                                                aria-label=\"Type: activate to sort column ascending\">\r\n                                                                Action\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n                                                            faqs.length ? (\r\n                                                                showList.length ? (\r\n                                                                    showList.map((faq, index) => (\r\n                                                                        printBodyTable(faq, index)\r\n                                                                    ))\r\n                                                                ) : (\r\n                                                                    <EmptyTable search={true}/>\r\n                                                                )\r\n                                                            ) : (\r\n                                                                <EmptyTable/>\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-12 col-md-5\">\r\n                                                    <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                         aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {faqs.length} données\r\n                                                    </div>\r\n                                                </div>\r\n                                                {\r\n                                                    showList.length ? (\r\n                                                        <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                            <Pagination\r\n                                                                numberPerPage={numberPerPage}\r\n                                                                onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                                activeNumberPage={activeNumberPage}\r\n                                                                onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                                pages={pages}\r\n                                                                onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                                numberPage={numberPage}\r\n                                                                onClickNextPage={e => onClickNextPage(e)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ): null\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FAQs);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CategoryClientForm.jsx",["920"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\r\n\r\n\r\nconst CategoryClientForm = (props) => {\r\n    const {editcategoryid} = useParams();\r\n\r\n    if (!editcategoryid) {\r\n        if (!verifyPermission(props.userPermissions, 'store-category-client'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-category-client'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        name: \"\",\r\n        description: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        if (editcategoryid) {\r\n            if (verifyTokenExpire()) {\r\n                axios.get(appConfig.apiDomaine + `/category-clients/${editcategoryid}`)\r\n                    .then(response => {\r\n                        const newCategory = {\r\n                            name: response.data.name.fr,\r\n                            description: response.data.description.fr\r\n                        };\r\n                        setData(newCategory);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n\r\n    },[]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n\r\n        if (verifyTokenExpire()) {\r\n            if (editcategoryid) {\r\n                axios.put(appConfig.apiDomaine + `/category-clients/${editcategoryid}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(appConfig.apiDomaine + `/category-clients`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <Link to=\"/settings/clients/category\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                Catégorie Client\r\n                            </Link>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                {\r\n                                    editcategoryid ? \"Modification\" : \"Ajout\"\r\n                                }\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"kt-portlet\">\r\n                            <div className=\"kt-portlet__head\">\r\n                                <div className=\"kt-portlet__head-label\">\r\n                                    <h3 className=\"kt-portlet__head-title\">\r\n                                        {\r\n                                            editcategoryid ? \"Modification Catégorie Client\" : \"Ajout de Catégorie Client\"\r\n                                        }\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <form method=\"POST\" className=\"kt-form\">\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div className=\"tab-content\">\r\n                                        <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                            <div className=\"kt-form kt-form--label-right\">\r\n                                                <div className=\"kt-form__body\">\r\n                                                    <div className=\"kt-section kt-section--first\">\r\n                                                        <div className=\"kt-section__body\">\r\n\r\n                                                            <div\r\n                                                                className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                       htmlFor=\"name\">Libellé <InputRequire/></label>\r\n                                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                                    <input\r\n                                                                        id=\"name\"\r\n                                                                        type=\"text\"\r\n                                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                        placeholder=\"Veillez entrer le nom\"\r\n                                                                        value={data.name}\r\n                                                                        onChange={(e) => onChangeName(e)}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        error.name.length ? (\r\n                                                                            error.name.map((error, index) => (\r\n                                                                                <div key={index}\r\n                                                                                     className=\"invalid-feedback\">\r\n                                                                                    {error}\r\n                                                                                </div>\r\n                                                                            ))\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div\r\n                                                                className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                       htmlFor=\"description\">Description </label>\r\n                                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                                <textarea\r\n                                                                    id=\"description\"\r\n                                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    placeholder=\"Veillez entrer la description\"\r\n                                                                    cols=\"30\"\r\n                                                                    rows=\"5\"\r\n                                                                    value={data.description}\r\n                                                                    onChange={(e) => onChangeDescription(e)}\r\n                                                                />\r\n                                                                    {\r\n                                                                        error.description.length ? (\r\n                                                                            error.description.map((error, index) => (\r\n                                                                                <div key={index}\r\n                                                                                     className=\"invalid-feedback\">\r\n                                                                                    {error}\r\n                                                                                </div>\r\n                                                                            ))\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"kt-portlet__foot\">\r\n                                                            <div className=\"kt-form__actions text-right\">\r\n                                                                {\r\n                                                                    !startRequest ? (\r\n                                                                        <button type=\"submit\"\r\n                                                                                onClick={(e) => onSubmit(e)}\r\n                                                                                className=\"btn btn-primary\">Enregistrer</button>\r\n                                                                    ) : (\r\n                                                                        <button\r\n                                                                            className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                            type=\"button\" disabled>\r\n                                                                            Loading...\r\n                                                                        </button>\r\n                                                                    )\r\n                                                                }\r\n                                                                {\r\n                                                                    !startRequest ? (\r\n                                                                        <Link to=\"/settings/clients/category\"\r\n                                                                              className=\"btn btn-secondary mx-2\">\r\n                                                                            Quitter\r\n                                                                        </Link>\r\n                                                                    ) : (\r\n                                                                        <Link to=\"/settings/clients/category\"\r\n                                                                              className=\"btn btn-secondary mx-2\"\r\n                                                                              disabled>\r\n                                                                            Quitter\r\n                                                                        </Link>\r\n                                                                    )\r\n                                                                }\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    return (\r\n        editcategoryid ?\r\n            verifyPermission(props.userPermissions, 'update-category-client') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-category-client') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(CategoryClientForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\TypeClient.jsx",["921","922","923"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {filterDataTableBySearchValue, forceRound, loadCss, loadScript} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst TypeClient = (props) => {\r\n    document.title = \"Satis client - Paramètre Type client\";\r\n    if (!verifyPermission(props.userPermissions, \"list-type-client\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [typeClient, setTypeClient] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/type-clients\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setTypeClient(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(typeClient.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(typeClient.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(typeClient.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                typeClient.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                typeClient.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteTypeClient = (typeClientId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/type-clients/${typeClientId}`)\r\n                            .then(response => {\r\n                                console.log(response, \"OK\");\r\n                                const newType = [...typeClient];\r\n                                newType.splice(index, 1);\r\n                                setTypeClient(newType);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newType.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newType.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (type, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{type.name.fr}</td>\r\n                <td>{type.description.fr}</td>\r\n                <td style={{textAlign:\"center\"}}>\r\n\r\n                    <Link to=\"/settings/clients/type/detail\"\r\n                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                          title=\"Détail\">\r\n                        <i className=\"la la-eye\"/>\r\n                    </Link>\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'show-type-client')?\r\n                            <Link to={`/settings/clients/type/edit/${type.id}`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            :\"\"\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-type-client') ?\r\n                            <button\r\n                                onClick={(e) => deleteTypeClient(type.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                            : null\r\n                    }\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-position\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Client\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Type Client\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"Liste des types client\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-type-client\"}\r\n                            title={\"Type Client\"}\r\n                            addText={\"Ajouter un Type Client\"}\r\n                            addLink={\"/settings/clients/type/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\" placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"200px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        typeClient.length ? (\r\n                                                            search ? (\r\n                                                                typeClient.map((type, index) => (\r\n                                                                    printBodyTable(type, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((type, index) => (\r\n                                                                    printBodyTable(type, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr></tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">\r\n                                                    {typeClient.length ?\r\n                                                        `Affichage de 1 à ${numberPerPage} sur ${typeClient.length} données`\r\n                                                        :\r\n                                                        \"Affichage de 0 page\"\r\n                                                    }\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(TypeClient);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Clients.jsx",["924","925","926","927","928","929","930","931"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport ExportButton from \"../components/ExportButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/clients`,\r\n        destroy: clientId => `${appConfig.apiDomaine}/my/clients/${clientId}`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/clients`,\r\n            destroy: clientId => `${appConfig.apiDomaine}/any/clients/${clientId}`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/clients`,\r\n            destroy: clientId => `${appConfig.apiDomaine}/my/clients/${clientId}`,\r\n        }\r\n    },\r\n\r\n};\r\n\r\nconst Clients = (props) => {\r\n    document.title = \"Satis client - Paramètre Client\";\r\n    if (!(verifyPermission(props.userPermissions, \"list-client-from-my-institution\") || verifyPermission(props.userPermissions, \"list-client-from-any-institution\"))) {\r\n        window.location.href = ERROR_401;\r\n    }\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-client-from-any-institution') || verifyPermission(props.userPermissions, 'store-client-from-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-client-from-my-institution') || verifyPermission(props.userPermissions, 'store-client-from-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [clients, setClients] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setClients(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const matchByAttribute = (accountNumbers, value, attribute) => {\r\n        var match = false;\r\n        accountNumbers.map(el => {\r\n            match = (\r\n                match ||\r\n                getLowerCaseString(attribute === \"number\" ? el[attribute] : el).indexOf(value) >= 0\r\n            )\r\n        });\r\n        return match;\r\n    };\r\n\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClients = [...clients];\r\n        newClients = newClients.filter(el => (\r\n            getLowerCaseString(el.client.identite.lastname + \" \" + el.client.identite.firstname).indexOf(value) >= 0 ||\r\n            matchByAttribute(el.accounts, value, \"number\") ||\r\n            matchByAttribute(el.client.identite.telephone, value, \"telephone\") ||\r\n            matchByAttribute(el.client.identite.email, value, \"email\")\r\n        ));\r\n\r\n        return newClients;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(clients.length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(clients.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(clients.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(clients.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(clients.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                clients.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                clients.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteClient = (clientId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(endPoint.destroy(clientId))\r\n                            .then(response => {\r\n                                const newClient = [...clients];\r\n                                newClient.splice(index, 1);\r\n                                setClients(newClient);\r\n\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newClient.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newClient.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (client, index) => {\r\n        return (\r\n            client.accounts ?\r\n                client.accounts.map((account, i) => (\r\n                    <tr key={i} role=\"row\" className=\"odd\">\r\n\r\n                        {\r\n                            i === 0 ?\r\n                                <td rowSpan={client.accounts.length}>{client.client.identite.lastname} &ensp; {client.client.identite.firstname}</td> : null\r\n                        }\r\n\r\n                        {\r\n                            i === 0 ?\r\n                                <td rowSpan={client.accounts.length}>\r\n                                    {\r\n                                        client.client.identite.telephone.length ?\r\n                                            client.client.identite.telephone.map((tel, index) => (\r\n                                                index === client.client.identite.telephone.length - 1 ? tel : tel + \" \" + \"/ \" + \" \"\r\n                                            )) : null\r\n                                    }\r\n                                </td>\r\n                                : null\r\n                        }\r\n                         {\r\n                            i === 0 ?\r\n                                <td rowSpan={client.accounts.length}>\r\n                                    {client.client.identite.email ?\r\n                                        client.client.identite.email.map((mail, index) => (\r\n                                            index === client.client.identite.email.length - 1 ? mail : mail + \" \" + \"/ \" + \" \"\r\n                                        )) : null\r\n                                    }\r\n                                </td>\r\n                                : null\r\n                        }\r\n\r\n                        <td>\r\n                            {account.number}\r\n                        </td>\r\n\r\n                        <td className=\"d-flex justify-content-center\">\r\n\r\n                            {\r\n                                verifyPermission(props.userPermissions, \"update-client-from-any-institution\") ||\r\n                                verifyPermission(props.userPermissions, \"update-client-from-my-institution\") ?\r\n                                    <Link to={`/settings/any/clients/edit/${account.id}`}\r\n                                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                          title=\"Modifier\">\r\n                                        <i className=\"la la-edit\"/>\r\n                                    </Link>\r\n                                    : null\r\n                            }\r\n\r\n                            {\r\n                                verifyPermission(props.userPermissions, \"destroy-client-from-my-institution\") ||\r\n                                verifyPermission(props.userPermissions, \"destroy-client-from-any-institution\") ?\r\n                                    <button\r\n                                        onClick={(e) => deleteClient(client.id, index)}\r\n                                        className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                        title=\"Supprimer\">\r\n                                        <i className=\"la la-trash\"/>\r\n                                    </button>\r\n                                    : null\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                )) : null\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                Client\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable\r\n                    information={\"Liste des clients\"}/>\r\n\r\n                <div className=\"kt-portlet\">\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"store-client-from-my-institution\") ?\r\n                            (\r\n                                <HeaderTablePage\r\n                                    addPermission={\"store-client-from-my-institution\"}\r\n                                    title={\"Client\"}\r\n                                    addText={\"Ajouter\"}\r\n                                    addLink={\"/settings/any/clients/add\"}\r\n                                />\r\n                            ) : (\r\n                                verifyPermission(props.userPermissions, \"store-client-from-any-institution\") ?\r\n                                    <HeaderTablePage\r\n                                        addPermission={\"store-client-from-any-institution\"}\r\n                                        title={\"Client\"}\r\n                                        addText={\"Ajouter\"}\r\n                                        addLink={\"/settings/any/clients/add\"}\r\n                                    /> : null\r\n                            )\r\n                    }\r\n\r\n\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)}\r\n                                                           className=\"form-control form-control-sm\" placeholder=\"\"\r\n                                                           aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <ExportButton pageUrl={\"/settings/importClients\"} downloadLink={`${appConfig.apiDomaine}/download-excel/clients`}/>\r\n                                    </div>\r\n                                    <div className=\"row table-responsive\">\r\n                                        <div className=\"col-sm-12 \">\r\n                                            <table\r\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline table\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{width: \"100%\"}}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"30%\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                    </th>\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        style={{width: \"15%\"}}\r\n                                                        aria-label=\"Ship Address: activate to sort column ascending\">Téléphone(s)\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        style={{width: \"20%\"}}\r\n                                                        aria-label=\"Ship Address: activate to sort column ascending\">Email(s)\r\n                                                    </th>\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        style={{width: \"20%\"}}\r\n                                                        aria-label=\"Ship Address: activate to sort column ascending\">Numero de compte\r\n                                                    </th>\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        style={{width: \"15%\"}}\r\n                                                        aria-label=\"Type: activate to sort column ascending\">\r\n                                                        Action\r\n                                                    </th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n\r\n                                                {\r\n                                                    clients.length ? (\r\n                                                        showList.length ? (\r\n                                                            showList.map((client, index) => (\r\n                                                                printBodyTable(client, index)\r\n                                                            ))\r\n                                                        ) : (\r\n                                                            <EmptyTable search={true}/>\r\n                                                        )\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    )\r\n                                                }\r\n                                                </tbody>\r\n                                                <tfoot>\r\n                                                <tr style={{textAlign: \"center\"}}>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Numero de Compte</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Téléphone</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Emails</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                </tr>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1\r\n                                                à {numberPerPage} sur {clients.length} données\r\n                                            </div>\r\n                                        </div>\r\n                                        {\r\n                                            showList.length ? (\r\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                    <Pagination\r\n                                                        numberPerPage={numberPerPage}\r\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                        activeNumberPage={activeNumberPage}\r\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                        pages={pages}\r\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                        numberPage={numberPage}\r\n                                                        onClickNextPage={e => onClickNextPage(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Clients);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\TypeClientForm.jsx",["932"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link, useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\r\n\r\n\r\nconst TypeClientForm = (props) => {\r\n    const {edittypeid} = useParams();\r\n    if (!edittypeid) {\r\n        if (!verifyPermission(props.userPermissions, 'store-type-client'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-type-client'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        name: \"\",\r\n        description: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (edittypeid) {\r\n            if (verifyTokenExpire()) {\r\n                axios.get(appConfig.apiDomaine + `/type-clients/${edittypeid}`)\r\n                    .then(response => {\r\n                        console.log(response.data, 'DATA');\r\n                        const newType = {\r\n                            name: response.data.name.fr,\r\n                            description: response.data.description.fr\r\n                        };\r\n                        setData(newType);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    },[]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (edittypeid) {\r\n                axios.put(appConfig.apiDomaine + `/type-clients/${edittypeid}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(appConfig.apiDomaine + `/type-clients`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/clients/type\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Type Client\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        edittypeid ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                edittypeid ?\r\n                                                    \"Modification de Type Client\" : \" Ajout de Type Client\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n\r\n                                                                <div\r\n                                                                    className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"name\">Le Nom</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"name\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Veillez entrer le nom\"\r\n                                                                            value={data.name}\r\n                                                                            onChange={(e) => onChangeName(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.name.length ? (\r\n                                                                                error.name.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"description\">La Description</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                        <textarea\r\n                                            id=\"description\"\r\n                                            className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                            placeholder=\"Veillez entrer la description\"\r\n                                            cols=\"30\"\r\n                                            rows=\"5\"\r\n                                            value={data.description}\r\n                                            onChange={(e) => onChangeDescription(e)}\r\n                                        />\r\n                                                                        {\r\n                                                                            error.description.length ? (\r\n                                                                                error.description.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Envoyer</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Loading...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/clients/type\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/clients/type\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        edittypeid ?\r\n            verifyPermission(props.userPermissions, 'update-type-client') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-type-client') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TypeClientForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\UnitTypeForm.jsx",["933"],"import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst UnitTypeForm = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-unit-type'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-unit-type'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        name: \"\",\r\n        can_be_target: false,\r\n        can_treat: false,\r\n        description: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        can_be_target: [],\r\n        can_treat: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/unit-types/${id}/edit`)\r\n                    .then(({data}) => {\r\n                        const newData = {\r\n                            name: data.unitType.name ? data.unitType.name.fr : \"\",\r\n                            can_be_target: data.unitType.can_be_target === 1,\r\n                            can_treat: data.unitType.can_treat === 1,\r\n                            description: data.unitType.description ? data.unitType.description.fr : \"\",\r\n                        };\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [id, appConfig.apiDomaine]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handleCanBeTargetChange = e => {\r\n        const newData = {...data, can_be_target: e.target.checked};\r\n        setData(newData);\r\n    };\r\n\r\n    const handleCanTreatChange = e => {\r\n        const newData = {...data, can_treat: e.target.checked};\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/unit-types/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/unit-types`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        redirectError401Page(errorRequest.response.data.code);\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/unit_type\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Type d'unité\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification de type d'unité\" : \"Ajout d'un type d'unité\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.can_be_target.length || error.can_treat.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Unité <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <div className=\"kt-checkbox-inline\">\r\n                                                        <label className=\"kt-checkbox\">\r\n                                                            <input type=\"checkbox\" checked={data.can_be_target} onChange={handleCanBeTargetChange}/> Peut-être visé par une réclamation ?\r\n                                                            <span/>\r\n                                                            {\r\n                                                                error.can_be_target.length ? (\r\n                                                                    error.can_be_target.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </label>\r\n                                                        <label className=\"kt-checkbox\">\r\n                                                            <input type=\"checkbox\" checked={data.can_treat} onChange={handleCanTreatChange}/> Peut résoudre une réclamation ?\r\n                                                            <span/>\r\n                                                            {\r\n                                                                error.can_treat.length ? (\r\n                                                                    error.can_treat.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Unité <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le nom du type d'unité\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description</label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                <textarea\r\n                                                    id=\"description\"\r\n                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer la description\"\r\n                                                    cols=\"30\"\r\n                                                    rows=\"5\"\r\n                                                    value={data.description}\r\n                                                    onChange={(e) => onChangeDescription(e)}\r\n                                                />\r\n                                                    {\r\n                                                        error.description.length ? (\r\n                                                            error.description.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Envoyer</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/unit_type\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/unit_type\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-unit-type') ? (\r\n                printJsx()\r\n            ) : null\r\n        : verifyPermission(props.userPermissions, 'store-unit-type') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UnitTypeForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\PositionForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\UnitForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimObjectForm.jsx",["934"],"import React, {useState, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport Select from \"react-select\";\r\nimport {formatSelectOption} from \"../../helpers/function\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst ClaimObjectForm = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-claim-object'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-claim-object'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const [claimCategories, setClaimCategories] = useState([]);\r\n    const [claimCategory, setClaimCategory] = useState(null);\r\n    const [severityLevels, setSeverityLevels] = useState([]);\r\n    const [severityLevel, setSeverityLevel] = useState(null);\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n        description: \"\",\r\n        claim_category_id: claimCategories.length ? claimCategories[0].id : \"\",\r\n        severity_levels_id: \"\",\r\n        time_limit: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        description: [],\r\n        claim_category_id: [],\r\n        severity_levels_id: [],\r\n        time_limit: []\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/claim-objects/${id}/edit`)\r\n                    .then( response => {\r\n                        setClaimCategories(formatSelectOption(response.data.claimCategories, \"name\", \"fr\"));\r\n                        setSeverityLevels(formatSelectOption(response.data.severityLevels, \"name\", \"fr\"));\r\n                        const newData = {\r\n                            name: response.data.claimObject.name[\"fr\"],\r\n                            description: response.data.claimObject.description[\"fr\"],\r\n                            claim_category_id: response.data.claimObject.claim_category_id,\r\n                            severity_levels_id: response.data.claimObject.severity_levels_id === null ? \"\" : response.data.claimObject.severity_levels_id,\r\n                            time_limit: response.data.claimObject.time_limit === null ? 0 : response.data.claimObject.time_limit,\r\n                        };\r\n                        setData(newData);\r\n                        setClaimCategory({value: response.data.claimObject.claim_category_id, label: response.data.claimObject.claim_category.name[\"fr\"]});\r\n                        setSeverityLevel(\r\n                            response.data.claimObject.severity_levels_id === null ? {} : {value: response.data.claimObject.severity_levels_id, label: response.data.claimObject.severity_level.name[\"fr\"]}\r\n                        );\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            } else {\r\n                await axios.get(`${appConfig.apiDomaine}/claim-objects/create`)\r\n                    .then(response => {\r\n                        setClaimCategories(formatSelectOption(response.data.claimCategories, \"name\", \"fr\"));\r\n                        setSeverityLevels(formatSelectOption(response.data.severityLevels, \"name\", \"fr\"));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeClaimCategory = (selected) => {\r\n        const newData = {...data};\r\n        newData.claim_category_id = selected ? selected.value : \"\";\r\n        setClaimCategory(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeTimeLimit = (e) => {\r\n        const newData = {...data};\r\n        newData.time_limit = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeSeverityLevel = (selected) => {\r\n        const newData = {...data};\r\n        newData.severity_levels_id = selected ? selected.value : \"\";\r\n        setSeverityLevel(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/claim-objects/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/claim-objects`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setClaimCategory({});\r\n                        setSeverityLevel({});\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <Link to=\"/settings/claim_objects\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                Objet de réclamation\r\n                            </Link>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                {\r\n                                    id ? \"Modification\" : \"Ajout\"\r\n                                }\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"kt-portlet\">\r\n                            <div className=\"kt-portlet__head\">\r\n                                <div className=\"kt-portlet__head-label\">\r\n                                    <h3 className=\"kt-portlet__head-title\">\r\n                                        {\r\n                                            id ? \"Modification d'objet de réclamation\" : \"Ajout d'objet de réclamation\"\r\n                                        }\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <form method=\"POST\" className=\"kt-form\">\r\n                                <div className=\"kt-form kt-form--label-right\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Objet de réclamation <InputRequire/></label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <input\r\n                                                    id=\"name\"\r\n                                                    type=\"text\"\r\n                                                    className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Nom de l'objet de réclamation\"\r\n                                                    value={data.name}\r\n                                                    onChange={(e) => onChangeName(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.name.length ? (\r\n                                                        error.name.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={error.claim_category_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"unit_type\">Catégorie de l'objet <InputRequire/></label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <Select\r\n                                                    isClearable\r\n                                                    value={claimCategory}\r\n                                                    placeholder={\"Catégorie de l'objet de réclamation\"}\r\n                                                    onChange={onChangeClaimCategory}\r\n                                                    options={claimCategories}\r\n                                                />\r\n                                                {\r\n                                                    error.claim_category_id.length ? (\r\n                                                        error.claim_category_id.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"timeLimite\">Délai de traitement <InputRequire/></label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <input\r\n                                                    id=\"timeLimite\"\r\n                                                    type=\"number\"\r\n                                                    className={error.time_limit.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Temps limite de l'objet\"\r\n                                                    value={data.time_limit}\r\n                                                    onChange={(e) => onChangeTimeLimit(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.time_limit.length ? (\r\n                                                        error.time_limit.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={error.severity_levels_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"timeLimite\">Niveau de gravité <InputRequire/></label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <Select\r\n                                                    isClearable\r\n                                                    value={severityLevel}\r\n                                                    placeholder={\"Selectioner le niveau de gravité\"}\r\n                                                    onChange={onChangeSeverityLevel}\r\n                                                    options={severityLevels}\r\n                                                />\r\n                                                {\r\n                                                    error.severity_levels_id.length ? (\r\n                                                        error.severity_levels_id.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description</label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <textarea\r\n                                                    id=\"description\"\r\n                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Description\"\r\n                                                    cols=\"30\"\r\n                                                    rows=\"5\"\r\n                                                    value={data.description}\r\n                                                    onChange={(e) => onChangeDescription(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.description.length ? (\r\n                                                        error.description.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"kt-portlet__foot\">\r\n                                        <div className=\"kt-form__actions text-right\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                ) : (\r\n                                                    <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/settings/claim_objects\" className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/settings/claim_objects\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        id ? (\r\n            verifyPermission(props.userPermissions, 'update-claim-object') ? (\r\n                printJsx()\r\n            ) : null\r\n        ) : (\r\n            verifyPermission(props.userPermissions, 'store-claim-object') ? (\r\n                printJsx()\r\n            ) : null\r\n        )\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimObjectForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimCategoryForm.jsx",["935"],"import React, {useState, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst ClaimCategoryForm = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-claim-category'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-claim-category'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/claim-categories/${id}`)\r\n                    .then(response => {\r\n                        const newData = {\r\n                            name: response.data.name.fr,\r\n                        };\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [id, appConfig.apiDomaine]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/claim-categories/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/claim-categories`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/claim_categories\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Catégorie de réclamation\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification de catégorie de réclamation\" : \"Ajout de catégorie de réclamation\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Catégorie <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Nom de la catégorie\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/claim_categories\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/claim_categories\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ? (\r\n            verifyPermission(props.userPermissions, 'update-claim-category') ? (\r\n                printJsx()\r\n            ) : null\r\n        ) : (\r\n            verifyPermission(props.userPermissions, 'store-claim-category') ? (\r\n                printJsx()\r\n            ) : null\r\n        )\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        language: state.language\r\n    }\r\n};\r\n\r\nexport default connect(mapDispatchToProps)(ClaimCategoryForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\SeverityLevelForm.jsx",["936"],"import React, {useState, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        store: `${appConfig.apiDomaine}/severity-levels`,\r\n        update: id => `${appConfig.apiDomaine}/severity-levels/${id}`,\r\n        create: `${appConfig.apiDomaine}/severity-levels/create`,\r\n        edit: id => `${appConfig.apiDomaine}/severity-levels/${id}/edit`\r\n    },\r\n    MACRO: {\r\n        plan: \"MACRO\",\r\n        store: `${appConfig.apiDomaine}/severity-levels`,\r\n        update: id => `${appConfig.apiDomaine}/severity-levels/${id}`,\r\n        create: `${appConfig.apiDomaine}/severity-levels/create`,\r\n        edit: id => `${appConfig.apiDomaine}/severity-levels/${id}/edit`\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        store: `${appConfig.apiDomaine}/severity-levels`,\r\n        update: id => `${appConfig.apiDomaine}/severity-levels/${id}`,\r\n        create: `${appConfig.apiDomaine}/severity-levels/create`,\r\n        edit: id => `${appConfig.apiDomaine}/severity-levels/${id}/edit`,\r\n    }\r\n};\r\n\r\nconst SeverityLevelForm = (props) => {\r\n    const {id} = useParams();\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-severity-level'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-severity-level'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const endpoint = endPointConfig[props.plan];\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n        color: \"#000000\",\r\n        description: \"\",\r\n    };\r\n\r\n    const defaultError = {\r\n        name: [],\r\n        color: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/severity-levels/${id}`)\r\n                    .then(response => {\r\n                        const newData = {\r\n                            name: response.data.name[\"fr\"],\r\n                            color: response.data.color,\r\n                            description: response.data.description[\"fr\"],\r\n                        };\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, id]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeColor = (e) => {\r\n        const newData = {...data};\r\n        newData.color = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(endpoint.update(id), data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(endpoint.store, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        console.log(errorRequest.response.data);\r\n                        setStartRequest(false);\r\n                        if (errorRequest.response.data.code === 422) {\r\n                            setError({...defaultError, ...errorRequest.response.data.error});\r\n                            ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        } else {\r\n                            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(errorRequest.response.data.error));\r\n                        }\r\n\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/severities\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Niveau de gravité\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification d'un niveau de gravité\" : \"Ajout d'un niveau de gravité\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Niveau de gravité <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le nom de la gravité\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.color.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"color\">Couleur <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"color\"\r\n                                                        type=\"color\"\r\n                                                        className={error.color.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez choisir la couleur représentative du niveau de gravité\"\r\n                                                        value={data.color}\r\n                                                        onChange={(e) => onChangeColor(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.color.length ? (\r\n                                                            error.color.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description</label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                <textarea\r\n                                                    id=\"description\"\r\n                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer la description\"\r\n                                                    cols=\"30\"\r\n                                                    rows=\"5\"\r\n                                                    value={data.description}\r\n                                                    onChange={(e) => onChangeDescription(e)}\r\n                                                />\r\n                                                    {\r\n                                                        error.description.length ? (\r\n                                                            error.description.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/severities\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/severities\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ? (\r\n            verifyPermission(props.userPermissions, 'update-severity-level') ? (\r\n                printJsx()\r\n            ) : null\r\n        ) : (\r\n            verifyPermission(props.userPermissions, 'store-severity-level') ? (\r\n                printJsx()\r\n            ) : null\r\n        )\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SeverityLevelForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\PerformanceIndicatorForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\SeverityLevel.jsx",["937","938","939"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/severity-levels`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/severity-levels/${unitId}`,\r\n    },\r\n    MACRO: {\r\n        plan: \"MACRO\",\r\n        list: `${appConfig.apiDomaine}/severity-levels`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/severity-levels/${unitId}`,\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/severity-levels`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/severity-levels/${unitId}`,\r\n    }\r\n};\r\n\r\nconst SeverityLevel = (props) => {\r\n    if (!verifyPermission(props.userPermissions, 'list-severity-level'))\r\n        window.location.href = ERROR_401;\r\n\r\n    const endPoint = endPointConfig[props.plan];\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [severityLevels, setSeverityLevels] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setSeverityLevels(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        fetchData();\r\n    }, [endPoint.list, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newSeverityLeveles = [...severityLevels];\r\n        newSeverityLeveles = newSeverityLeveles.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.color ? `${el.color} ${el.color === \"#ffffff\" ? \" Blanc\" : \"\"}` : `-`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description ? el.description[\"fr\"] : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newSeverityLeveles;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(severityLevels.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(severityLevels.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(severityLevels.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(severityLevels.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(severityLevels.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                severityLevels.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                severityLevels.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteSeverityLevel = (severityLevelId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(endPoint.destroy(severityLevelId))\r\n                            .then(response => {\r\n                                const newSeverityLevels = [...severityLevels];\r\n                                newSeverityLevels.splice(index, 1);\r\n                                setSeverityLevels(newSeverityLevels);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newSeverityLevels.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newSeverityLevels.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error.response.data);\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (severityLevel, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{severityLevel.name[\"fr\"]}</td>\r\n                <td>\r\n                    <div className=\"p-2 text-center\" style={{backgroundColor: severityLevel.color, color: severityLevel.color === \"#ffffff\" ? \"black\" : \"white\"}}>\r\n                        {severityLevel.color ? `${severityLevel.color} ${severityLevel.color === \"#ffffff\" ? \" Blanc\" : ''}` : <strong style={{color: \"black\"}}>-</strong>}\r\n                    </div>\r\n                </td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"300px\" }}>{severityLevel.description ? severityLevel.description[\"fr\"] : null}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-severity-level') ? (\r\n                            <Link to={`/settings/severities/${severityLevel.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-severity-level') ? (\r\n                            <button\r\n                                onClick={(e) => deleteSeverityLevel(severityLevel.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-severity-level') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Niveau de gravité\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-severity-level\"}\r\n                            title={\"Niveau de gravité\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/severities/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom du niveau\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Couleur\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"300px\" }}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        severityLevels.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((severityLevel, index) => (\r\n                                                                    printBodyTable(severityLevel, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom du niveau</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Couleur</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {severityLevels.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SeverityLevel);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Channel.jsx",["940"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst Channel = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"list-channel\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [channels, setChannels] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            axios.get(`${appConfig.apiDomaine}/channels`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setChannels(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newChannels = [...channels];\r\n        newChannels = newChannels.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.is_response ? \"Oui\" : \"Non\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newChannels;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(channels.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(channels.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(channels.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(channels.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(channels.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                channels.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                channels.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteChannel = (channelId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/channels/${channelId}`)\r\n                            .then(response => {\r\n                                const newChannels = [...channels];\r\n                                newChannels.splice(index, 1);\r\n                                setChannels(newChannels);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newChannels.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newChannels.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (channel, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{channel.name[\"fr\"]}</td>\r\n                <td>{channel.is_response ? \"Oui\" : \"Non\"}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-channel') && channel.is_editable ? (\r\n                            <Link to={`/settings/channels/${channel.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-channel') && channel.is_editable ? (\r\n                            <button\r\n                                onClick={(e) => deleteChannel(channel.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-channel') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Canal\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-channel\"}\r\n                            title={\"Canal\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/channels/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input\r\n                                                            id=\"myInput\"\r\n                                                            type=\"text\"\r\n                                                            onKeyUp={(e) => searchElement(e)}\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            placeholder=\"\" aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Canale de reponse\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        channels.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((channel, index) => (\r\n                                                                    printBodyTable(channel, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canale de reponse</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {channels.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Channel);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Currency.jsx",["941","942"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst Currency = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"list-currency\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [currencies, setCurrencies] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(`${appConfig.apiDomaine}/currencies`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setCurrencies(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newCurrencies = [...currencies];\r\n        newCurrencies = newCurrencies.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.iso_code).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newCurrencies;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(currencies.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(currencies.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(currencies.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(currencies.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(currencies.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                currencies.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                currencies.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteCurrency = (currencyId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/currencies/${currencyId}`)\r\n                            .then(response => {\r\n                                const newCurrencies = [...currencies];\r\n                                newCurrencies.splice(index, 1);\r\n                                setCurrencies(newCurrencies);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newCurrencies.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newCurrencies.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (currency, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{currency.name[\"fr\"]}</td>\r\n                <td>{currency.iso_code}</td>\r\n                <td>\r\n                    {/*{\r\n                        verifyPermission(props.userPermissions, 'update-currency') ? (\r\n                            <Link to={`/settings/currencies/${currency.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }*/}\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-currency') ? (\r\n                            <button\r\n                                onClick={(e) => deleteCurrency(currency.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission([\"list-currency\"], 'list-currency') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Devise\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-currency\"}\r\n                            title={\"Devise\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/currencies/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Search:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom de la devise\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">ISO\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        currencies.length ? (\r\n                                                            showList ? (\r\n                                                                showList.map((currency, index) => (\r\n                                                                    printBodyTable(currency, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom de la devise</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">ISO code</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {currencies.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Currency);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ChannelForm.jsx",["943"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ChannelForms = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-channel'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-channel'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n        is_response: 0,\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        is_response: [],\r\n    };\r\n\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                axios.get(`${appConfig.apiDomaine}/channels/${id}`)\r\n                    .then(response => {\r\n                        const newData = {\r\n                            name: response.data.name[\"fr\"],\r\n                            is_response: response.data.is_response\r\n                        };\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, id]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/channels/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/channels`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        redirectError401Page(errorRequest.response.data.code);\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/channels\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Canal\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification d'un canal\" : \"Ajout d'un canal\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Canal <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le nom du Canal\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/channels\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/channels\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-channel') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-channel') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChannelForms);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CurrencyForm.jsx",["944"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport currencies from \"../../constants/currencyContry\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst CurrencyForm = () => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission([\"update-currency\"], 'update-currency'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission([\"store-currency\"], 'store-currency'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const [listCurrency, setListCurrency] = useState(currencies);\r\n    const [currency, setCurrency] = useState(null);\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n        iso_code: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        iso_code: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/currencies/${id}`)\r\n                    .then(({data}) => {\r\n                        const newData = {\r\n                            name: data.currency.name[\"fr\"],\r\n                            iso_code: data.currency.iso_code\r\n                        };\r\n                        setData(newData);\r\n                        setListCurrency(filterCurrency(data.currencies));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            } else {\r\n                await axios.get(`${appConfig.apiDomaine}/currencies`)\r\n                    .then(({data}) => {\r\n                        setListCurrency(filterCurrency(data));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, id]);\r\n\r\n    const filterCurrency = (removeElement) => {\r\n        let newCurrencyList = [...listCurrency];\r\n\r\n        for (let i = 0; i < removeElement.length; i++) {\r\n            newCurrencyList = newCurrencyList.filter(e => e.iso_code !== removeElement[i].iso_code);\r\n        }\r\n\r\n        return newCurrencyList;\r\n    };\r\n\r\n    const onChangeCurrency = (selected) => {\r\n        if (error.iso_code.length || error.name.length)\r\n            setError(defaultError);\r\n        const newData = {...data};\r\n        newData.iso_code = selected ? selected.iso_code : null;\r\n        newData.name = selected ? selected.label : null;\r\n        setCurrency(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/currencies/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setCurrency(null);\r\n                        setError(defaultError);\r\n                        setListCurrency(filterCurrency([data]));\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/currencies`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        setCurrency(null);\r\n                        setListCurrency(filterCurrency([data]));\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        redirectError401Page(errorRequest.response.data.code);\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/unit_type\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Devise\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification de la devise\" : \"Ajout de la devise\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Devise <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        value={currency}\r\n                                                        placeholder={\"Veillez selectioner la devise\"}\r\n                                                        onChange={onChangeCurrency}\r\n                                                        options={listCurrency}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Nom <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        disabled={true}\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"\"\r\n                                                        value={data.name}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.iso_code.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"iso_code\">ISO code <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        disabled={true}\r\n                                                        id=\"iso_code\"\r\n                                                        type=\"text\"\r\n                                                        className={error.iso_code.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"\"\r\n                                                        value={data.iso_code}\r\n                                                    />\r\n                                                    {\r\n                                                        error.iso_code.length ? (\r\n                                                            error.iso_code.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Enregistrer</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/currencies\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/currencies\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission([\"update-currency\"], 'update-currency') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission([\"store-currency\"], 'store-currency') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CurrencyForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAdd.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\IncompleteClaims.jsx",["945"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, filterDataTableBySearchValue, forceRound} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/claims-incompletes`,\r\n        destroy: claimId => `${appConfig.apiDomaine}/my/claims-incompletes/${claimId}`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/claims-incompletes`,\r\n            destroy: claimId => `${appConfig.apiDomaine}/any/claims-incompletes/${claimId}`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/claims-incompletes`,\r\n            destroy: claimId => `${appConfig.apiDomaine}/my/claims-incompletes/${claimId}`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/without-client/claims-incompletes `,\r\n        destroy: claimId => `${appConfig.apiDomaine}/without-client/claims-incompletes/${claimId}`,\r\n    }\r\n};\r\n\r\nconst IncompleteClaims = (props) => {\r\n    document.title = \"Satis client - Liste plaintes incomplètes\";\r\n    if (!(verifyPermission(props.userPermissions, \"list-claim-incomplete-against-any-institution\") ||\r\n        verifyPermission(props.userPermissions, \"list-claim-incomplete-against-my-institution\") ||\r\n        verifyPermission(props.userPermissions, \"list-claim-incomplete-without-client\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [incompleteClaims, setIncompleteClaims] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-claim-incomplete-against-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-claim-incomplete-against-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    useEffect(() => {\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    console.log(response.data, 'Incomplete_Data');\r\n                    setLoad(false);\r\n                    setIncompleteClaims(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(incompleteClaims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(incompleteClaims.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(incompleteClaims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                incompleteClaims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                incompleteClaims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.claimer.lastname}&ensp;{claim.claimer.firstname}</td>\r\n                <td>{claim.institution_targeted.name}</td>\r\n                <td>{claim.claim_object.name.fr}</td>\r\n                <td>{claim.description}</td>\r\n                <td style={{textAlign: 'center'}}>\r\n                    {/*<Link to=\"/settings/clients/claim/detail\"\r\n                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                          title=\"Détail\">\r\n                        <i className=\"la la-eye\"/>\r\n                    </Link>*/}\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'show-claim-incomplete-against-any-institution') ||\r\n                        verifyPermission(props.userPermissions, 'show-claim-incomplete-against-my-institution') ||\r\n                        verifyPermission(props.userPermissions, \"show-claim-incomplete-without-client\")?\r\n                            <Link\r\n                                to={`/process/incomplete_claims/edit/${claim.id}`}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            : null\r\n                    }\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        (\r\n            verifyPermission(props.userPermissions, \"list-claim-incomplete-against-any-institution\") ||\r\n            verifyPermission(props.userPermissions, \"list-claim-incomplete-against-my-institution\") ||\r\n            verifyPermission(props.userPermissions, \"list-claim-incomplete-without-client\")\r\n        ) ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader  kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid\">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Collecte\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                        Réclamations Incomplètes\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"Liste des réclamations imcomplètes\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n\r\n                        <HeaderTablePage\r\n                            addPermission={\"\"}\r\n                            title={\"Réclamtions Imcomplètes\"}\r\n                            addText={\"Ajouter de réclamations\"}\r\n                            addLink={\"/settings/claims/add\"}\r\n                        />\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"text-left col-sm-6\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Rechercher:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"85px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Réclamant\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"85px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Institution\r\n                                                            concernée\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"85px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">\r\n                                                            Objet\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        incompleteClaims.length ? (\r\n                                                            search ? (\r\n                                                                incompleteClaims.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {incompleteClaims.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(IncompleteClaims);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RelationShip.jsx",["946","947","948","949","950"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {filterDataTableBySearchValue, forceRound, loadCss, loadScript} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst RelationShip = (props) => {\r\n    document.title = \"Satis client - Paramètre Type relation client\";\r\n    if (!verifyPermission(props.userPermissions, \"list-relationship\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [relation, setRelation] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/relationships\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setRelation(response.data);\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setNumberPage(forceRound(response.data.length / NUMBER_ELEMENT_PER_PAGE));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(relation.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(relation.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(relation.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                relation.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                relation.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteTypeClient = (relationId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/relationships/${relationId}`)\r\n                            .then(response => {\r\n                                console.log(response, \"OK\");\r\n                                const newType = [...relation];\r\n                                newType.splice(index, 1);\r\n                                setRelation(newType);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newType.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newType.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (typeRelation, index) => {\r\n        return (\r\n            <tr className=\"d-flex justify-content-center align-content-center odd\" key={index} role=\"row\"\r\n                className=\"odd\">\r\n                <td>{typeRelation.name.fr}</td>\r\n                <td>{typeRelation.description.fr}</td>\r\n                <td style={{textAlign:\"center\"}}>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'show-relationship')?\r\n                            <Link to={`/settings/relationship/edit/${typeRelation.id}`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            :\"\"\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-relationship') ?\r\n                            <button\r\n                                onClick={(e) => deleteTypeClient(typeRelation.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                            : null\r\n                    }\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-position\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Relation client\r\n                                </a>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-relationship\"}\r\n                            title={\"Type de relation client\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/relationship/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\" placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"200px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        relation.length ? (\r\n                                                            search ? (\r\n                                                                relation.map((type, index) => (\r\n                                                                    printBodyTable(type, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((type, index) => (\r\n                                                                    printBodyTable(type, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr></tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">\r\n                                                    {relation.length ?\r\n                                                        `Affichage de 1 à ${numberPerPage} sur ${relation.length} données`\r\n                                                        :\r\n                                                        \"Affichage de 0 page\"\r\n                                                    }\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(RelationShip);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigRequirements.jsx",["951","952","953","954","955"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n    loadCss,\r\n    forceRound,\r\n    formatSelectOption,\r\n    getLowerCaseString, debug\r\n} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n     toastEditErrorMessageConfig, toastEditSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst ConfigRequirements = () => {\r\n    document.title = \"Satis client - Paramètre Exigence\";\r\n    const defaultData = {\r\n        objectData: {},\r\n        requirements: [],\r\n    };\r\n    const [load, setLoad] = useState(true);\r\n    const [requirement, setRequirement] = useState([]);\r\n    const [claimObject, setClaimObject] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [data, setData] = useState(defaultData);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/claim-object-requirements\")\r\n                .then(response => {\r\n                    let newObjectData = [];\r\n                    response.data.claimCategories.map((claimCategory) => (\r\n                        claimCategory.claim_objects.map((claimObject) => (\r\n                            newObjectData[claimObject.id] = claimObject.requirements.map(requirement => (\r\n                                {value: requirement.id, label: requirement.description.fr})\r\n                            )\r\n                        ))\r\n                    ));\r\n\r\n                    setData(newObjectData);\r\n                    setLoad(false);\r\n                    setClaimObject(response.data.claimCategories);\r\n                    setRequirement(response.data.requirements);\r\n                    setShowList(response.data.claimCategories.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.claimCategories.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const matchRequirement = (requirement, value) => {\r\n        var match = false;\r\n        requirement.map(el => {\r\n            match = (\r\n                match ||\r\n                getLowerCaseString(el.description[\"fr\"]).indexOf(value) >= 0\r\n            )\r\n        });\r\n        return match;\r\n    };\r\n\r\n    const matchObject = (objects, value) => {\r\n        var match = false;\r\n        objects.map(el => {\r\n            match = (\r\n                match ||\r\n                getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n                matchRequirement(el.requirements, value)\r\n            )\r\n        });\r\n        return match;\r\n    };\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaimObject = [...claimObject];\r\n        debug(newClaimObject, \"object\");\r\n        newClaimObject = newClaimObject.filter(el => (\r\n            getLowerCaseString(el.name.fr).indexOf(value) >= 0 ||\r\n            (!el.claim_objects.length ? false : matchObject(el.claim_objects, value))\r\n        ));\r\n\r\n        return newClaimObject;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimObject.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimObject.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimObject.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimObject.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimObject.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimObject.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimObject.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const onChangeExigence = (e, object_id) => {\r\n        let newData = {...data};\r\n        newData[object_id] = e?e.map(sel => ({value: sel.value, label: sel.label})):\"\";\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        let claimObjects = {...data};\r\n        let values = {};\r\n\r\n        for (const claim_object_id in claimObjects) {\r\n            let requirements = claimObjects[claim_object_id];\r\n            // console.log(requirements, 'requirement_for_' + claim_object_id);\r\n            values[claim_object_id] = requirements?requirements.map(requirement => (requirement.value)):null;\r\n        }\r\n        // console.log(values, 'values');\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios.put(appConfig.apiDomaine + `/claim-object-requirements`, values)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const printBodyTable = (category, index) => {\r\n        return (\r\n\r\n            category.claim_objects ?\r\n                category.claim_objects.map((object, i) => (\r\n                    <tr key={i} role=\"row\" className=\"odd\">\r\n                        {\r\n                            i === 0 ?\r\n                                <td rowSpan={category.claim_objects.length}>{category.name.fr}</td>\r\n                                : null\r\n                        }\r\n                        <td>\r\n                            {object.name.fr}\r\n                        </td>\r\n                        <td>\r\n                            {requirement ? (\r\n                                <Select\r\n                                    value={data[object.id]}\r\n                                    onChange={(e) => onChangeExigence(e, object.id)}\r\n                                    options={formatSelectOption(requirement, 'description', \"fr\")}\r\n                                    isMulti\r\n                                    key={object.id}\r\n                                />\r\n                            ) : null\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                )) : null\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Configuration des Exigences\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable\r\n                    information={\"Configuration des Exigences \"}\r\n                />\r\n\r\n                <div className=\"kt-portlet\">\r\n                    <HeaderTablePage\r\n                        addPermission={\"\"}\r\n                        title={\"Exigences\"}\r\n                        addText={\"Ajouter une Exigence\"}\r\n                        addLink={\"/settings/requirement\"}\r\n                    />\r\n\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\"\r\n                                                           onKeyUp={(e) => searchElement(e)}\r\n                                                           className=\"form-control form-control-sm\"\r\n                                                           placeholder=\"\"\r\n                                                           aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <table\r\n                                                className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{width: \"952px\"}}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"80px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Catégorie\r\n                                                        de plainte\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Objets\r\n                                                        de plainte\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"170px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Exigences\r\n                                                    </th>\r\n\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {\r\n                                                    claimObject ? (\r\n                                                        showList.length ? (\r\n                                                            showList.map((category, index) => (\r\n                                                                printBodyTable(category, index)\r\n                                                            ))\r\n                                                        ) : <EmptyTable search={true}/>\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    )\r\n                                                }\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <div className=\"kt-portlet__foot\">\r\n                                                <div className=\"kt-form__actions text-right\">\r\n                                                    {\r\n                                                        !startRequest ? (\r\n                                                            <button type=\"submit\"\r\n                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                    className=\"btn btn-primary\">Enregistrer</button>\r\n                                                        ) : (\r\n                                                            <button\r\n                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                type=\"button\" disabled>\r\n                                                                Loading...\r\n                                                            </button>\r\n                                                        )\r\n                                                    }\r\n                                                    {\r\n                                                        !startRequest ? (\r\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\">\r\n                                                                Quitter\r\n                                                            </Link>\r\n                                                        ) : (\r\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\"\r\n                                                                  disabled>\r\n                                                                Quitter\r\n                                                            </Link>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1\r\n                                                à {numberPerPage} sur {claimObject.length} données\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {\r\n                                            showList.length ? (\r\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                    <Pagination\r\n                                                        numberPerPage={numberPerPage}\r\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                        activeNumberPage={activeNumberPage}\r\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                        pages={pages}\r\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                        numberPage={numberPage}\r\n                                                        onClickNextPage={e => onClickNextPage(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ConfigRequirements;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigProcessingCircuit.jsx",["956","957"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n    loadCss,\r\n    forceRound,\r\n    formatSelectOption,\r\n    getLowerCaseString, debug\r\n} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/processing-circuits`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/processing-circuits`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/processing-circuits`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/without-institution/processing-circuits`,\r\n    }\r\n};\r\n\r\n\r\nconst ConfigProcessingCircuit = (props) => {\r\n    document.title = \"Satis client - Paramètre Entités de traitement\";\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'update-processing-circuit-my-institution') ||\r\n        verifyPermission(props.userPermissions, \"update-processing-circuit-any-institution\") ||\r\n        verifyPermission(props.userPermissions, \"update-processing-circuit-without-institution\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'update-processing-circuit-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'update-processing-circuit-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const defaultData = {\r\n        institution_id: []\r\n    };\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [units, setUnits] = useState([]);\r\n    const [claimObject, setClaimObject] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [data, setData] = useState(undefined);\r\n    const [institutionId, setInstitutionId] = useState(undefined);\r\n    const [error] = useState(defaultData);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [institutionData, setInstitutionData] = useState(undefined);\r\n    const [institution, setInstitution] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            if (verifyPermission(props.userPermissions, 'update-processing-circuit-any-institution')) {\r\n                axios.get(endPoint.list)\r\n                    .then(response => {\r\n                        const options = [\r\n                            response.data.institutions.length ? response.data.institutions.map((institution) => ({\r\n                                value: institution.id,\r\n                                label: institution.name\r\n                            })) : null\r\n                        ];\r\n                        setInstitutionData(options);\r\n                    });\r\n            }\r\n\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    let newObjectData = [];\r\n                    response.data.claimCategories.map((claimCategory) => (\r\n                        claimCategory.claim_objects.map((claimObject) => (\r\n                            newObjectData[claimObject.id] = claimObject.units.map(unit => (\r\n                                {value: unit.id, label: unit.name.fr})\r\n                            )\r\n                        ))\r\n                    ));\r\n\r\n                    setData(newObjectData);\r\n                    setLoad(false);\r\n                    setClaimObject(response.data.claimCategories);\r\n                    setUnits(response.data.units);\r\n                    setInstitutionId(response.data.institution_id);\r\n                    setShowList(response.data.claimCategories.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.claimCategories.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, [endPoint.list,numberPerPage, props.userPermissions]);\r\n\r\n    {/*<tr key={i} role=\"row\" className=\"odd\">\r\n        {\r\n            i === 0 ?\r\n                <td rowSpan={category.claim_objects.length}>{category.name.fr}</td>\r\n                : <td style={{display: \"none\"}}/>\r\n        }\r\n        <td>\r\n            {object.name.fr}\r\n        </td>\r\n        <td>\r\n            {units ? (\r\n                <Select\r\n                    value={data[object.id]}\r\n                    onChange={(e) => onChangeProcessing(e, object.id)}\r\n                    options={formatSelectOption(units, 'name', \"fr\")}\r\n                    isMulti\r\n                    placeholder={\"Veillez selectionez le circuit\"}\r\n                    key={object.id}\r\n                />\r\n            ) : null\r\n            }\r\n        </td>\r\n    </tr>*/}\r\n\r\n    const matchToClaimObjectOrEntity = (list, value) => {\r\n        let match = false;\r\n        list.map(el => {\r\n            match = (\r\n                match ||\r\n                getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n                (el.units ? matchToClaimObjectOrEntity(el.units, value) : false)\r\n            )\r\n        });\r\n        return match;\r\n    };\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaimObject = [...claimObject];\r\n        debug(newClaimObject, \"all\");\r\n        newClaimObject = newClaimObject.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            matchToClaimObjectOrEntity(el.claim_objects, value)\r\n        ));\r\n\r\n        return newClaimObject;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimObject.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimObject.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimObject.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimObject.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimObject.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimObject.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimObject.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const onChangeProcessing = (e, object_id) => {\r\n        let newData = {...data};\r\n        newData[object_id] = e?e.map(sel => ({value: sel.value, label: sel.label})):\"\";\r\n        setData(newData);\r\n    };\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        let claimObjects = {...data};\r\n        let values = {};\r\n\r\n        for (const claim_object_id in claimObjects) {\r\n            let processings = claimObjects[claim_object_id];\r\n\r\n            values[claim_object_id] = processings?processings.map(processing => (processing.value)):null;\r\n        }\r\n\r\n        let newEndPoint = '';\r\n        if (verifyPermission(props.userPermissions, 'update-processing-circuit-any-institution')){\r\n            newEndPoint = endPoint.list + `/${institutionId}`\r\n        } else {\r\n            newEndPoint = endPoint.list\r\n        }\r\n        // {console.log(values, 'valeur à enregistrer')}\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios.put(newEndPoint, values)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const onChangeInstitution = (selected) => {\r\n        setInstitutionId(selected.value);\r\n        setInstitution(selected);\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + `/any/processing-circuits/${selected.value}`)\r\n                .then(response => {\r\n                    setUnits(response.data.units ? response.data.units.map((unit) => (unit)) : null);\r\n                    let newObjectData = [];\r\n                    response.data.claimCategories.map((claimCategory) => (\r\n                        claimCategory.claim_objects.map((claimObject) => (\r\n                            newObjectData[claimObject.id] = claimObject.units.map(unit => (\r\n                                {value: unit.id, label: unit.name.fr})\r\n                            )\r\n                        ))\r\n                    ));\r\n                    setData(newObjectData)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const printBodyTable = (category, index) => {\r\n        return (\r\n\r\n            category.claim_objects ?\r\n                category.claim_objects.map((object, i) => (\r\n                    <tr key={i} role=\"row\" className=\"odd\">\r\n\r\n                        {\r\n                            i === 0 ?\r\n                                <td rowSpan={category.claim_objects.length}>{category.name.fr}</td>\r\n                                : <td style={{display: \"none\"}}/>\r\n                        }\r\n                        <td>\r\n                            {object.name.fr}\r\n                        </td>\r\n                        <td>\r\n                            {units ? (\r\n                                <Select\r\n                                    value={data[object.id]}\r\n                                    onChange={(e) => onChangeProcessing(e, object.id)}\r\n                                    options={formatSelectOption(units, 'name', \"fr\")}\r\n                                    isMulti\r\n                                    placeholder={\"Veillez selectionez le circuit\"}\r\n                                    key={object.id}\r\n                                />\r\n                            ) : null\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                )) : null\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Configuration Entités de traitement\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable\r\n                    information={\"Paramètre de configuration des entités de traitement\"}/>\r\n\r\n                <div className=\"kt-portlet\">\r\n                    <HeaderTablePage\r\n                        addPermission={\"\"}\r\n                        title={\"Entités de Traitement\"}\r\n                        addText={\"Ajouter une entité de traitement\"}\r\n                        addLink={\"/settings/processing-circuit\"}\r\n                    />\r\n\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\"\r\n                                                           onKeyUp={(e) => searchElement(e)}\r\n                                                           className=\"form-control form-control-sm\"\r\n                                                           placeholder=\"\"\r\n                                                           aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <br/>\r\n                                            <br/>\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, \"update-processing-circuit-any-institution\") ?\r\n                                                    <div\r\n                                                        className={error.institution_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"exampleSelect1\">Sélectionnez une Institution</label>\r\n                                                        <div className=\"col-lg-9 col-xl-6\">\r\n                                                            {\r\n                                                                institutionData ? (\r\n                                                                    <Select\r\n                                                                        placeholder={\"Veillez selectionner l'institution\"}\r\n                                                                        value={institution}\r\n                                                                        onChange={onChangeInstitution}\r\n                                                                        options={institutionData.length ? institutionData[0].map(name => name) : null}\r\n                                                                    />\r\n\r\n                                                                ) : (<select name=\"category\"\r\n                                                                             className={error.institution_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                             id=\"category\">\r\n                                                                    <option value=\"\"/>\r\n                                                                </select>)\r\n                                                            }\r\n                                                        </div>\r\n                                                        {\r\n                                                            error.institution_id.length ? (\r\n                                                                error.institution_id.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n\r\n                                                    </div>\r\n                                                    : null\r\n                                            }\r\n\r\n\r\n                                            <table\r\n                                                className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{width: \"952px\"}}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"80px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Catégorie\r\n                                                        de plainte\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Objets\r\n                                                        de plainte\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"170px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Entités\r\n                                                        de traitement\r\n                                                    </th>\r\n\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {/*{console.log(data,'data')}*/}\r\n                                                {\r\n                                                    claimObject ? (\r\n                                                        showList.length ? (\r\n                                                            showList.map((category, index) => (\r\n                                                                printBodyTable(category, index)\r\n                                                            ))\r\n                                                        ) : (\r\n                                                            <EmptyTable search={true}/>\r\n                                                        )\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    )\r\n                                                }\r\n                                                </tbody>\r\n\r\n                                            </table>\r\n                                            <div className=\"kt-portlet__foot\">\r\n                                                <div className=\"kt-form__actions text-right\">\r\n                                                    {\r\n                                                        !startRequest ? (\r\n                                                            <button type=\"submit\"\r\n                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                    className=\"btn btn-primary\">Enregistrer</button>\r\n                                                        ) : (\r\n                                                            <button\r\n                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                type=\"button\" disabled>\r\n                                                                Chargement...\r\n                                                            </button>\r\n                                                        )\r\n                                                    }\r\n                                                    {\r\n                                                        !startRequest ? (\r\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\">\r\n                                                                Quitter\r\n                                                            </Link>\r\n                                                        ) : (\r\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\"\r\n                                                                  disabled>\r\n                                                                Quitter\r\n                                                            </Link>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1\r\n                                                à {numberPerPage} sur {claimObject.length} données\r\n                                            </div>\r\n                                        </div>\r\n                                        {\r\n                                            showList.length ? (\r\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                    <Pagination\r\n                                                        numberPerPage={numberPerPage}\r\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                        activeNumberPage={activeNumberPage}\r\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                        pages={pages}\r\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                        numberPage={numberPage}\r\n                                                        onClickNextPage={e => onClickNextPage(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ConfigProcessingCircuit);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\RelationShipForm.jsx",["958"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link, useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\r\n\r\n\r\nconst RelationShipForm = (props) => {\r\n    const {id} = useParams();\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-relationship'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-relationship'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        name: \"\",\r\n        description: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.get(appConfig.apiDomaine + `/relationships/${id}`)\r\n                    .then(response => {\r\n                        console.log(response.data, 'DATA');\r\n                        const newType = {\r\n                            name: response.data.name.fr,\r\n                            description: response.data.description.fr\r\n                        };\r\n                        setData(newType);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    },[appConfig.apiDomaine, id]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(appConfig.apiDomaine + `/relationships/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(appConfig.apiDomaine + `/relationships`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(({response}) => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/relationship\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Relation client\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ?\r\n                                                    \"Modification d'un type de relation client\" : \" Ajout de relation client\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n\r\n                                                                <div\r\n                                                                    className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Relation <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"name\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Veillez entrer le nom de la relation\"\r\n                                                                            value={data.name}\r\n                                                                            onChange={(e) => onChangeName(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.name.length ? (\r\n                                                                                error.name.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <textarea\r\n                                                                            id=\"description\"\r\n                                                                            className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Veillez entrer la description\"\r\n                                                                            cols=\"30\"\r\n                                                                            rows=\"5\"\r\n                                                                            value={data.description}\r\n                                                                            onChange={(e) => onChangeDescription(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.description.length ? (\r\n                                                                                error.description.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Envoyer</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Loading...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/relationship\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/relationship\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-relationship') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-relationship') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(RelationShipForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\IncompleteClaimsEdit.jsx",["959","960","961"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport Select from \"react-select\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {\r\n    debug,\r\n    filterChannel,\r\n    formatSelectOption,\r\n    formatToTime,\r\n    formatToTimeStampUpdate\r\n} from \"../../helpers/function\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {RESPONSE_CHANNEL} from \"../../constants/channel\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastEditErrorMessageConfig, toastErrorMessageWithParameterConfig, toastSuccessMessageWithParameterConfig,\r\n} from \"../../config/toastConfig\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport InfirmationTable from \"./InfirmationTable\";\r\nimport WithoutCode from \"./WithoutCode\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        edit: id => `${appConfig.apiDomaine}/my/claims-incompletes/${id}/edit`,\r\n        update: id => `${appConfig.apiDomaine}/my/claims-incompletes/${id}`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            edit: id => `${appConfig.apiDomaine}/any/claims-incompletes/${id}/edit`,\r\n            update: id => `${appConfig.apiDomaine}/any/claims-incompletes/${id}`,\r\n        },\r\n        filial: {\r\n            edit: id => `${appConfig.apiDomaine}/my/claims-incompletes/${id}/edit`,\r\n            update: id => `${appConfig.apiDomaine}/my/claims-incompletes/${id}`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        edit: id => `${appConfig.apiDomaine}/without-client/claims-incompletes/${id}/edit`,\r\n        update: id => `${appConfig.apiDomaine}/without-client/claims-incompletes/${id}`,\r\n    }\r\n};\r\n\r\nconst IncompleteClaimsEdit = props => {\r\n    document.title = \"Satis client - Complétion plaintes incomplètes\";\r\n    const {id} = useParams();\r\n    if (!(verifyPermission(props.userPermissions, 'update-claim-incomplete-against-any-institution') ||\r\n        verifyPermission(props.userPermissions, \"update-claim-incomplete-against-my-institution\") ||\r\n        verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'update-claim-incomplete-against-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'update-claim-incomplete-against-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const defaultData = {\r\n        firstname: null,\r\n        lastname: null,\r\n        sexe: null,\r\n        telephone: [],\r\n        email: [],\r\n        ville: null,\r\n        unit_targeted_id: null,\r\n        institution_targeted_id: null,\r\n        account_targeted_id: null,\r\n        claim_object_id: null,\r\n        request_channel_slug: null,\r\n        response_channel_slug: null,\r\n        claimer_expectation: null,\r\n        description: null,\r\n        amount_currency_slug: null,\r\n        amount_disputed: null,\r\n        claimer_id: null,\r\n        relationship_id: null,\r\n        event_occured_at: null,\r\n        is_revival: 0,\r\n        file: []\r\n    };\r\n    const defaultError = {\r\n        firstname: [],\r\n        lastname: [],\r\n        sexe: [],\r\n        telephone: [],\r\n        email: [],\r\n        ville: [],\r\n        unit_targeted_id: [],\r\n        institution_targeted_id: [],\r\n        account_targeted_id: [],\r\n        claim_object_id: [],\r\n        request_channel_slug: [],\r\n        response_channel_slug: [],\r\n        claimer_expectation: [],\r\n        description: [],\r\n        amount_currency_slug: [],\r\n        amount_disputed: [],\r\n        claimer_id: [],\r\n        relationship_id: [],\r\n        event_occured_at: [],\r\n        is_revival: [],\r\n        file: []\r\n    };\r\n\r\n    const option1 = 1;\r\n    const option2 = 0;\r\n\r\n    const [claimObject, setClaimObject] = useState({});\r\n    const [claimObjects, setClaimObjects] = useState([]);\r\n    const [claimCategory, setClaimCategory] = useState({});\r\n    const [claimCategories, setClaimCategories] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [account, setAccount] = useState([]);\r\n    const [units, setUnits] = useState([]);\r\n    const [unit, setUnit] = useState({});\r\n    const [responseChannels, setResponseChannels] = useState([]);\r\n    const [channels, setChannels] = useState([]);\r\n    const [relationships, setRelationships] = useState([]);\r\n    const [relationship, setRelationship] = useState({});\r\n    const [responseChannel, setResponseChannel] = useState({});\r\n    const [receptionChannel, setReceptionChannel] = useState({});\r\n    const [currency, setCurrency] = useState({});\r\n    const [currencies, setCurrencies] = useState([]);\r\n    const [disabledInput, setDisabledInput] = useState(false);\r\n    const [institution, setInstitution] = useState({});\r\n    const [institutions, setInstitutions] = useState([]);\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [isRequire, setIsRequire] = useState(null);\r\n\r\n    const currentDate = new Date();\r\n    currentDate.setHours(currentDate.getHours() + 1);\r\n    const maxDate = (currentDate.toISOString()).substr(0, (currentDate.toISOString()).length - 1);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(endPoint.edit(`${id}`))\r\n                .then(response => {\r\n                    console.log(response.data, \"GET_DATA\");\r\n                    const newIncompleteClaim = {\r\n\r\n                        claimer_id: response.data.claim.claimer_id,\r\n                        firstname: response.data.claim.claimer.firstname,\r\n                        lastname: response.data.claim.claimer.lastname,\r\n                        sexe: response.data.claim.claimer.sexe,\r\n                        telephone: response.data.claim.claimer.telephone,\r\n                        email: response.data.claim.claimer.email,\r\n                        ville: response.data.claim.claimer.ville === null ? \"\" : response.data.claim.claimer.ville,\r\n                        unit_targeted_id: response.data.claim.unit_targeted_id,\r\n                        relationship_id: response.data.claim.relationship_id,\r\n                        account_targeted_id: response.data.claim.account_targeted_id,\r\n                        institution_targeted_id: response.data.claim.institution_targeted_id,\r\n                        claim_object_id: response.data.claim.claim_object_id,\r\n                        request_channel_slug: response.data.claim.request_channel_slug,\r\n                        response_channel_slug: response.data.claim.response_channel_slug,\r\n                        claimer_expectation: response.data.claim.claimer_expectation === null ? \"\" : response.data.claim.claimer_expectation,\r\n                        description: response.data.claim.description,\r\n                        amount_currency_slug: response.data.claim.amount_currency_slug ? response.data.claim.amount_currency_slug : \"\",\r\n                        amount_disputed: response.data.claim.amount_disputed ? response.data.claim.amount_disputed : \"\",\r\n                        event_occured_at: formatToTime(response.data.claim.event_occured_at),\r\n                        is_revival: response.data.claim.is_revival,\r\n                        // file: response.data.claim.files ? response.data.claim.files.map(file => file.title) : null\r\n                    };\r\n                    setData(newIncompleteClaim);\r\n                    setIsRequire(response.data.requirements);\r\n                    if (verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\"))\r\n                        setRelationships(formatSelectOption(response.data.relationships, \"name\", \"fr\"));\r\n\r\n                    if (verifyPermission(props.userPermissions, \"update-claim-incomplete-against-any-institution\") ||\r\n                        verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\"))\r\n                        setInstitutions(formatSelectOption(response.data.institutions, \"name\", false));\r\n\r\n                    setClaimCategories(formatSelectOption(response.data.claimCategories, \"name\", \"fr\"));\r\n                    setCurrencies(formatSelectOption(response.data.currencies, \"name\", \"fr\", \"slug\"));\r\n                    setChannels(formatSelectOption(response.data.channels, \"name\", \"fr\", \"slug\"));\r\n                    setResponseChannels(formatSelectOption(filterChannel(response.data.channels, RESPONSE_CHANNEL), \"name\", \"fr\", \"slug\"))\r\n\r\n                    if (response.data.claim.request_channel !== null) {\r\n                        setReceptionChannel({\r\n                            value: response.data.claim.request_channel.id,\r\n                            label: response.data.claim.request_channel.name.fr\r\n                        });\r\n                    }\r\n                    if (response.data.claim.response_channel !== null) {\r\n                        setResponseChannel({\r\n                            value: response.data.claim.response_channel.id,\r\n                            label: response.data.claim.response_channel.name.fr\r\n                        });\r\n                    }\r\n                    if (response.data.claim.claim_object !== null) {\r\n                        setClaimObject({\r\n                            value: response.data.claim.claim_object.id,\r\n                            label: response.data.claim.claim_object.name.fr\r\n                        });\r\n                    }\r\n                    if (response.data.claim.claim_object.claim_category !== null) {\r\n                        setClaimCategory({\r\n                            value: response.data.claim.claim_object.claim_category.id,\r\n                            label: response.data.claim.claim_object.claim_category.name.fr\r\n                        });\r\n                    }\r\n                    if (response.data.claim.institution_targeted !== null) {\r\n                        setInstitution({\r\n                            value: response.data.claim.institution_targeted.id,\r\n                            label: response.data.claim.institution_targeted.name\r\n                        });\r\n                    }\r\n                    if (response.data.claim.relationship !== null) {\r\n                        setRelationship({\r\n                            value: response.data.claim.relationship.id,\r\n                            label: response.data.claim.relationship.name.fr\r\n                        });\r\n                    }\r\n                    if (response.data.claim.amount_currency !== null) {\r\n                        setCurrency({\r\n                            value: response.data.claim.amount_currency.id,\r\n                            label: response.data.claim.amount_currency.name.fr\r\n                        });\r\n                    }\r\n                    if (response.data.claim.account_targeted !== null) {\r\n                        setAccount({\r\n                            value: response.data.claim.account_targeted.id,\r\n                            label: response.data.claim.account_targeted.number\r\n                        });\r\n                    }\r\n                    if (response.data.claim.unit_targeted !== null) {\r\n                        setUnit({\r\n                            value: response.data.claim.unit_targeted.id,\r\n                            label: response.data.claim.unit_targeted.name.fr\r\n                        });\r\n                    }\r\n                })\r\n        }\r\n\r\n        if (verifyTokenExpire()) {\r\n            fetchData();\r\n        }\r\n    }, [endPoint, props.userPermissions, id]);\r\n\r\n    const onChangeRelationShip = selected => {\r\n        const newData = {...data};\r\n        if (selected) {\r\n            setRelationship(selected);\r\n            newData.relationship_id = selected.value;\r\n        } else {\r\n            setRelationship(null);\r\n            newData.relationship_id = \"\";\r\n        }\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeFirstName = (e) => {\r\n        const newData = {...data};\r\n        newData.firstname = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeLastName = (e) => {\r\n        const newData = {...data};\r\n        newData.lastname = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeSexe = (e) => {\r\n        const newData = {...data};\r\n        newData.sexe = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeVille = (e) => {\r\n        const newData = {...data};\r\n        newData.ville = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeTelephone = (tel) => {\r\n        const newData = {...data};\r\n        newData.telephone = tel;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeEmail = (mail) => {\r\n        const newData = {...data};\r\n        newData.email = mail;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeUnit = selected => {\r\n        setUnit(selected);\r\n        const newData = {...data};\r\n        if (selected.value !== \"other\")\r\n            newData.unit_targeted_id = selected.value;\r\n        else\r\n            newData.unit_targeted_id = \"\";\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeAccount = selected => {\r\n        setAccount(selected);\r\n        const newData = {...data};\r\n        newData.account_targeted_id = selected.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeClaimObject = selected => {\r\n        setClaimObject(selected);\r\n        const newData = {...data};\r\n        newData.claim_object_id = selected.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeReceptionChannel = selected => {\r\n        setReceptionChannel(selected);\r\n        const newData = {...data};\r\n        newData.request_channel_slug = selected.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeResponseChannel = selected => {\r\n        setResponseChannel(selected);\r\n        const newData = {...data};\r\n        newData.response_channel_slug = selected.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeClaimCategory = selected => {\r\n        setClaimCategory(selected);\r\n        if (verifyTokenExpire()) {\r\n            axios.get(`${appConfig.apiDomaine}/claim-categories/${selected.value}/claim-objects`)\r\n                .then(response => {\r\n                    setClaimObject({});\r\n                    setClaimObjects(formatSelectOption(response.data.claimObjects, \"name\", \"fr\"));\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"))\r\n            ;\r\n        }\r\n    };\r\n\r\n    const onChangeClaimerExpectation = e => {\r\n        const newData = {...data};\r\n        newData.claimer_expectation = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = e => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeAmountDisputed = e => {\r\n        const newData = {...data};\r\n        newData.amount_disputed = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeAmountCurrency = selected => {\r\n        setCurrency(selected);\r\n        const newData = {...data};\r\n        newData.amount_currency_slug = selected.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeEventOccuredAt = e => {\r\n        const newData = {...data};\r\n        if (new Date(e.target.value) >= new Date()) {\r\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Date invalide\"));\r\n            newData.event_occured_at = \"\";\r\n        } else\r\n            newData.event_occured_at = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handleOptionChange = (e) => {\r\n        const newData = {...data};\r\n        newData.is_revival = parseInt(e.target.value);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeFile = (e) => {\r\n        const newData = {...data};\r\n        newData.file = Object.values(e.target.files);\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const formatFormData = (newData) => {\r\n        const formData = new FormData();\r\n        formData.append(\"_method\", \"put\");\r\n        for (const key in newData) {\r\n            // console.log(`${key}:`, newData[key]);\r\n            if (key === \"file\") {\r\n                for (let i = 0; i < (newData.file).length; i++)\r\n                    formData.append(\"file[]\", (newData[key])[i], ((newData[key])[i]).name);\r\n            } else if (key === \"telephone\") {\r\n                for (let i = 0; i < (newData.telephone).length; i++)\r\n                    formData.append(\"telephone[]\", (newData[key])[i]);\r\n            } else if (key === \"email\") {\r\n                for (let i = 0; i < (newData.email).length; i++)\r\n                    formData.append(\"email[]\", (newData[key])[i]);\r\n            } else\r\n                formData.set(key, newData[key]);\r\n        }\r\n        return formData;\r\n\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        const newData = {...data};\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        newData.event_occured_at = formatToTimeStampUpdate(data.event_occured_at);\r\n\r\n        // if (!newData.file.length)\r\n        //     delete newData.file;\r\n        if (!newData.response_channel_slug)\r\n            delete newData.response_channel_slug;\r\n        if (!newData.unit_targeted_id)\r\n            delete newData.unit_targeted_id;\r\n        if (!newData.account_targeted_id)\r\n            delete newData.account_targeted_id;\r\n        if (!verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\"))\r\n            delete newData.relationship_id;\r\n\r\n        console.log('Coucou', 'COUCOU')\r\n        debug(endPoint.update(`${id}`), \"endpoint\");\r\n        for (var value of formatFormData(newData).values()) {\r\n            debug(value, \"value\");\r\n        }\r\n        if (verifyTokenExpire()) {\r\n            axios.post(endPoint.update(`${id}`), formatFormData(newData))\r\n                .then((response) => {\r\n                    console.log(response.data, \"response\");\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Succès de la complétion\"));\r\n                    window.location.href = \"/process/incomplete_claims\"\r\n                })\r\n                .catch((error) => {\r\n                    setStartRequest(false);\r\n                    setError({...defaultError, ...error.response.data.error});\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    return (\r\n       ( verifyPermission(props.userPermissions, 'update-claim-incomplete-against-any-institution')\r\n        || verifyPermission(props.userPermissions, \"update-claim-incomplete-against-my-institution\") ||\r\n        verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\")) && isRequire? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Collecte\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Réclamations Incomplètes\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                        Complétion\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"Formulaire d'enregistrement d'une réclamation. Utilisez ce formulaire pour completer les réclamations imcomplètes de vos clients.\"}\r\n                    />\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Complétion de réclamation\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        {\r\n                                            verifyPermission(props.userPermissions, 'update-claim-incomplete-against-any-institution') ||\r\n                                            verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\") ? (\r\n                                                <div\r\n                                                    className={error.institution_targeted_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                           htmlFor=\"institution\">Institution\r\n                                                        concernée <InputRequire/></label>\r\n                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                        <Select\r\n                                                            classNamePrefix=\"select\"\r\n                                                            className=\"basic-single\"\r\n                                                            isDisabled={!disabledInput}\r\n                                                            placeholder={\"Veillez selectioner l'institution\"}\r\n                                                            value={institution}\r\n                                                            options={institutions}\r\n                                                        />\r\n                                                        {\r\n                                                            error.institution_targeted_id.length ? (\r\n                                                                error.institution_targeted_id.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                        {\r\n                                            verifyPermission(props.userPermissions, \"update-claim-incomplete-against-any-institution\") ||\r\n                                            verifyPermission(props.userPermissions, \"update-claim-incomplete-against-my-institution\") ? (\r\n                                                <div className=\"kt-section kt-section--first\">\r\n                                                    <div className=\"kt-section__body\">\r\n                                                        <h3 className=\"kt-section__title kt-section__title-lg\">\r\n                                                            Client:</h3>\r\n\r\n                                                        <div className=\"form-group row\">\r\n                                                            <div\r\n                                                                className={error.lastname.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"lastname\">Nom <InputRequire/></label>\r\n                                                                <input\r\n                                                                    disabled={!disabledInput}\r\n                                                                    id=\"lastname\"\r\n                                                                    type=\"text\"\r\n                                                                    className={error.lastname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    placeholder=\"Veillez entrer le nom de famille\"\r\n                                                                    value={data.lastname}\r\n                                                                    onChange={(e) => onChangeLastName(e)}\r\n                                                                />\r\n                                                                {\r\n                                                                    error.lastname.length ? (\r\n                                                                        error.lastname.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n\r\n                                                            <div\r\n                                                                className={error.firstname.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"firstname\">Prénom\r\n                                                                    (s) <InputRequire/></label>\r\n                                                                <input\r\n                                                                    disabled={!disabledInput}\r\n                                                                    id=\"firstname\"\r\n                                                                    type=\"text\"\r\n                                                                    className={error.firstname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    placeholder=\"Veillez entrer le prénom\"\r\n                                                                    value={data.firstname}\r\n                                                                    onChange={(e) => onChangeFirstName(e)}\r\n                                                                />\r\n                                                                {\r\n                                                                    error.firstname.length ? (\r\n                                                                        error.firstname.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row\">\r\n                                                            <div\r\n                                                                className={error.firstname.length ? \"form-group col validated\" : \"form-group col\"}>\r\n                                                                <label htmlFor=\"sexe\">Sexe <InputRequire/></label>\r\n                                                                <select\r\n                                                                    disabled={!disabledInput}\r\n                                                                    id=\"sexe\"\r\n                                                                    className={error.sexe.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    value={data.sexe}\r\n                                                                    onChange={(e) => onChangeSexe(e)}\r\n                                                                >\r\n                                                                    <option value=\"\" disabled={true}>Veillez choisir le\r\n                                                                        Sexe\r\n                                                                    </option>\r\n                                                                    <option value=\"F\">Féminin</option>\r\n                                                                    <option value=\"M\">Masculin</option>\r\n                                                                    <option value=\"A\">Autres</option>\r\n                                                                </select>\r\n                                                                {\r\n                                                                    error.sexe.length ? (\r\n                                                                        error.sexe.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                            <div\r\n                                                                className={error.ville.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"ville\">Ville </label>\r\n                                                                <input\r\n                                                                    disabled={!disabledInput}\r\n                                                                    id=\"ville\"\r\n                                                                    type=\"text\"\r\n                                                                    className={error.ville.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    placeholder=\"Veillez entrer votre ville\"\r\n                                                                    value={data.ville}\r\n                                                                    onChange={(e) => onChangeVille(e)}\r\n                                                                />\r\n                                                                {\r\n                                                                    error.ville.length ? (\r\n                                                                        error.ville.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row\">\r\n                                                            <div\r\n                                                                className={error.telephone.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"telephone\"> Téléphone(s)<WithoutCode/>\r\n                                                                    <InputRequire/></label>\r\n                                                                <TagsInput disabled={!disabledInput}\r\n                                                                           value={data.telephone}\r\n                                                                           onChange={onChangeTelephone}\r\n                                                                           inputProps={{\r\n                                                                               className: 'react-tagsinput-input',\r\n                                                                               placeholder: 'Numéro(s)'\r\n                                                                           }}\r\n                                                                />\r\n                                                                {\r\n                                                                    error.telephone.length ? (\r\n                                                                        error.telephone.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n\r\n                                                            <div\r\n                                                                className={error.email.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"email\">Email(s) <InputRequire/></label>\r\n                                                                <TagsInput disabled={!disabledInput} value={data.email}\r\n                                                                           onChange={onChangeEmail} inputProps={{\r\n                                                                    className: 'react-tagsinput-input',\r\n                                                                    placeholder: 'Email(s)'\r\n                                                                }}/>\r\n                                                                {\r\n                                                                    error.email.length ? (\r\n                                                                        error.email.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n\r\n                                        <div\r\n                                            className=\"kt-separator kt-separator--border-dashed kt-separator--space-lg\"/>\r\n\r\n                                        <div className=\"kt-section\">\r\n                                            <div className=\"kt-section__body\">\r\n                                                <h3 className=\"kt-section__title kt-section__title-lg\"> Réclamation:</h3>\r\n                                                {\r\n                                                    !verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\") ?\r\n                                                        (\r\n                                                            <div className=\"form-group row\">\r\n                                                                <div\r\n                                                                    className={error.unit_targeted_id.length ? \"col validated\" : \"col\"}>\r\n                                                                    <label htmlFor=\"unit\">Unité concernée {isRequire.unit_targeted_id?<InputRequire/>:\"\"}</label>\r\n                                                                    <Select\r\n                                                                        classNamePrefix=\"select\"\r\n                                                                        className=\"basic-single\"\r\n                                                                        placeholder={\"Veillez selectioner l'unité\"}\r\n                                                                        value={unit}\r\n                                                                        onChange={onChangeUnit}\r\n                                                                        options={units}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        error.unit_targeted_id.length ? (\r\n                                                                            error.unit_targeted_id.map((error, index) => (\r\n                                                                                <div key={index}\r\n                                                                                     className=\"invalid-feedback\">\r\n                                                                                    {error}\r\n                                                                                </div>\r\n                                                                            ))\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className={error.account_targeted_id.length ? \"col validated\" : \"col\"}>\r\n                                                                    <label htmlFor=\"account\">Numéro de compte\r\n                                                                        concerné {isRequire.account_targeted_id?<InputRequire/>:\"\"}</label>\r\n                                                                    <Select\r\n                                                                        classNamePrefix=\"select\"\r\n                                                                        className=\"basic-single\"\r\n                                                                        placeholder={\"Veillez selectioner le numéro\"}\r\n                                                                        value={account}\r\n                                                                        onChange={onChangeAccount}\r\n                                                                        options={accounts}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        error.account_targeted_id.length ? (\r\n                                                                            error.account_targeted_id.map((error, index) => (\r\n                                                                                <div key={index}\r\n                                                                                     className=\"invalid-feedback\">\r\n                                                                                    {error}\r\n                                                                                </div>\r\n                                                                            ))\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                        : null\r\n                                                }\r\n\r\n                                                <div className=\"form-group row\">\r\n                                                    <div\r\n                                                        className={error.request_channel_slug.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"receptionChannel\">Canal de\r\n                                                            réception <InputRequire/></label>\r\n                                                        <Select\r\n                                                            classNamePrefix=\"select\"\r\n                                                            className=\"basic-single\"\r\n                                                            placeholder={\"Veillez selectioner le canal de réception\"}\r\n                                                            value={receptionChannel}\r\n                                                            onChange={onChangeReceptionChannel}\r\n                                                            options={channels}\r\n                                                        />\r\n                                                        {\r\n                                                            error.request_channel_slug.length ? (\r\n                                                                error.request_channel_slug.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n\r\n                                                    <div\r\n                                                        className={error.response_channel_slug.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"responseChannel\">Canal de\r\n                                                            réponse <InputRequire/></label>\r\n                                                        <Select\r\n                                                            classNamePrefix=\"select\"\r\n                                                            className=\"basic-single\"\r\n                                                            placeholder={\"Veillez selectioner le canal de réponse\"}\r\n                                                            value={responseChannel}\r\n                                                            onChange={onChangeResponseChannel}\r\n                                                            options={responseChannels}\r\n                                                        />\r\n                                                        {\r\n                                                            error.response_channel_slug.length ? (\r\n                                                                error.response_channel_slug.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group row\">\r\n                                                    <div className={\"col\"}>\r\n                                                        <label htmlFor=\"claimCtegory\">Catégorie de réclamation</label>\r\n                                                        <Select\r\n                                                            classNamePrefix=\"select\"\r\n                                                            className=\"basic-single\"\r\n                                                            placeholder={\"Veillez selectioner la catégorie de réclamation\"}\r\n                                                            value={claimCategory}\r\n                                                            onChange={onChangeClaimCategory}\r\n                                                            options={claimCategories}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                    <div\r\n                                                        className={error.claim_object_id.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"claimObject\">Objet de\r\n                                                            réclamation <InputRequire/></label>\r\n                                                        <Select\r\n                                                            classNamePrefix=\"select\"\r\n                                                            className=\"basic-single\"\r\n                                                            placeholder={\"Veillez selectioner l'objet de réclamation\"}\r\n                                                            value={claimObject}\r\n                                                            onChange={onChangeClaimObject}\r\n                                                            options={claimObjects}\r\n                                                        />\r\n                                                        {\r\n                                                            error.claim_object_id.length ? (\r\n                                                                error.claim_object_id.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group row\">\r\n                                                    <div\r\n                                                        className={error.amount_disputed.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"amount_claim\">Montant réclamé {isRequire.amount_disputed?<InputRequire/>:\"\"}</label>\r\n                                                        <input\r\n                                                            type={\"number\"}\r\n                                                            min=\"0\"\r\n                                                            id=\"amount_claim\"\r\n                                                            className={error.amount_disputed.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            placeholder=\"Veillez entrer le Montant réclamé\"\r\n                                                            value={data.amount_disputed}\r\n                                                            onChange={(e) => onChangeAmountDisputed(e)}\r\n                                                        />\r\n                                                        {\r\n                                                            error.amount_disputed.length ? (\r\n                                                                error.amount_disputed.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n\r\n                                                    <div\r\n                                                        className={error.amount_currency_slug.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"currency\">Devise du montant réclamé {isRequire.amount_currency_slug?<InputRequire/>:\"\"}</label>\r\n                                                        <Select\r\n                                                            classNamePrefix=\"select\"\r\n                                                            className=\"basic-single\"\r\n                                                            placeholder={\"Veillez selectioner la devise du montant réclamé\"}\r\n                                                            value={currency}\r\n                                                            onChange={onChangeAmountCurrency}\r\n                                                            options={currencies}\r\n                                                        />\r\n                                                        {\r\n                                                            error.amount_currency_slug.length ? (\r\n                                                                error.amount_currency_slug.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group row\">\r\n\r\n                                                    <div\r\n                                                        className={error.event_occured_at.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"date\">Date de\r\n                                                            l'évènement <InputRequire/></label>\r\n                                                        <input\r\n                                                            type={\"datetime-local\"}\r\n                                                            id=\"date\"\r\n                                                            className={error.event_occured_at.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            placeholder=\"Veillez entrer la date de l'evernement\"\r\n                                                            value={data.event_occured_at}\r\n                                                            max={maxDate}\r\n                                                            onChange={(e) => onChangeEventOccuredAt(e)}\r\n                                                        />\r\n                                                        {\r\n                                                            error.event_occured_at.length ? (\r\n                                                                error.event_occured_at.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                    {\r\n                                                        verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\") ? (\r\n                                                            <div\r\n                                                                className={error.relationship_id.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"relationship\">Relation du reclamant avec\r\n                                                                    l'institution {isRequire.relationship_id?<InputRequire/>:\"\"}</label>\r\n                                                                <Select\r\n                                                                    isClearable\r\n                                                                    value={relationship}\r\n                                                                    placeholder={\"Veillez selectioner la relation du reclamant avec l'institution\"}\r\n                                                                    onChange={onChangeRelationShip}\r\n                                                                    options={relationships}\r\n                                                                />\r\n                                                                {\r\n                                                                    error.relationship_id.length ? (\r\n                                                                        error.relationship_id.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                        ) : null\r\n                                                    }\r\n\r\n                                                    <div className=\"col\">\r\n                                                        <label htmlFor=\"file\">Pièces jointes  {isRequire.file?<InputRequire/>:\"\"}</label>\r\n                                                        <input\r\n                                                            onChange={onChangeFile}\r\n                                                            type=\"file\"\r\n                                                            className={error.file.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            id=\"customFile\"\r\n                                                            multiple={true}\r\n                                                        />\r\n                                                        {\r\n                                                            error.file.length ? (\r\n                                                                error.file.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group row\">\r\n                                                    <div className={error.description.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"description\">Description {isRequire.description?<InputRequire/>:\"\"}</label>\r\n                                                        <textarea\r\n                                                            rows=\"7\"\r\n                                                            id=\"description\"\r\n                                                            className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            placeholder=\"Veillez entrer la description\"\r\n                                                            value={data.description}\r\n                                                            onChange={(e) => onChangeDescription(e)}\r\n                                                        />\r\n                                                        {\r\n                                                            error.description.length ? (\r\n                                                                error.description.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n\r\n                                                    <div\r\n                                                        className={error.claimer_expectation.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"claimer_expectation\">Attente {isRequire.claimer_expectation?<InputRequire/>:\"\"} </label>\r\n                                                        <textarea\r\n                                                            rows=\"7\"\r\n                                                            id=\"claimer_expectation\"\r\n                                                            className={error.claimer_expectation.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            placeholder=\"Veillez entrer l'attente du réclamant\"\r\n                                                            value={data.claimer_expectation}\r\n                                                            onChange={(e) => onChangeClaimerExpectation(e)}\r\n                                                        />\r\n                                                        {\r\n                                                            error.claimer_expectation.length ? (\r\n                                                                error.claimer_expectation.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            className=\"kt-separator kt-separator--border-dashed kt-separator--space-lg\"/>\r\n                                        <div className=\"kt-section\">\r\n                                            <div className=\"kt-section__body\">\r\n                                                <h3 className=\"kt-section__title kt-section__title-lg\">Relance: <InputRequire/>\r\n                                                </h3>\r\n\r\n                                                <div className=\"form-group row\">\r\n                                                    <label className=\"col-3 col-form-label\">Est-ce une relance ?</label>\r\n                                                    <div className=\"col-9\">\r\n                                                        <div className=\"kt-radio-inline\">\r\n                                                            <label className=\"kt-radio\">\r\n                                                                <input type=\"radio\" value={option1}\r\n                                                                       onChange={handleOptionChange}\r\n                                                                       checked={option1 === data.is_revival}/> Oui<span/>\r\n                                                            </label>\r\n                                                            <label className=\"kt-radio\">\r\n                                                                <input type=\"radio\" value={option2}\r\n                                                                       onChange={handleOptionChange}\r\n                                                                       checked={option2 === data.is_revival}/> Non<span/>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"kt-portlet__foot\">\r\n                                        <div className=\"kt-form__actions\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                            className=\"btn btn-primary\">Modifier</button>\r\n                                                ) : (\r\n                                                    <button\r\n                                                        className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                        type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/process/incomplete_claims\"\r\n                                                          className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/process/incomplete_claims\"\r\n                                                          className=\"btn btn-secondary mx-2\"\r\n                                                          disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(IncompleteClaimsEdit);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssign.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimList.jsx",["962"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {filterDataTableBySearchValue, forceRound, formatDateToTimeStampte, loadCss} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimList = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"list-claim-awaiting-treatment\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claims, setClaims] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            axios.get(`${appConfig.apiDomaine}/claim-awaiting-treatment`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/numberPerPage));\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setClaims(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claims.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.reference}</td>\r\n                <td>{`${claim.claimer.lastname} ${claim.claimer.firstname}`}</td>\r\n                <td>{formatDateToTimeStampte(claim.created_at)}</td>\r\n                <td>{claim.claim_object.name[\"fr\"]}</td>\r\n                {/*<td>{claim.active_treatment.responsible_staff?`${claim.active_treatment.responsible_staff.identite.lastname} ${claim.active_treatment.responsible_staff.identite.firstname}`:\"\"}</td>*/}\r\n                <td>{claim.institution_targeted.name}</td>\r\n                {/*<td>{claim.unit_targeted_id ? claim.unit_targeted.name[\"fr\"]  : \"-\"}</td>*/}\r\n                {\r\n                    verifyPermission(props.userPermissions, \"assignment-claim-awaiting-treatment\") ? (\r\n                        <td>\r\n                            <a href={`/process/claim-list-detail/${claim.id}/detail`}\r\n                               className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                               title=\"Détail\">\r\n                                <i className=\"la la-eye\"/>\r\n                            </a>\r\n                        </td>\r\n                    ) : <td/>\r\n                }\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-claim-awaiting-treatment') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Liste des réclamations\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={\"Cette page vous présente la liste des réclamations transférées à votre unité et qui sont en attente d'affectetion\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Liste des réclamations\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Référence\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Date de réception\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Objet\r\n                                                        </th>\r\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"*/}\r\n                                                        {/*    colSpan=\"1\" style={{ width: \"70.25px\" }}*/}\r\n                                                        {/*    aria-label=\"Country: activate to sort column ascending\">Agent*/}\r\n                                                        {/*</th>*/}\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Institution concernée\r\n                                                        </th>\r\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"*/}\r\n                                                        {/*    colSpan=\"1\" style={{ width: \"70.25px\" }}*/}\r\n                                                        {/*    aria-label=\"Country: activate to sort column ascending\">Unité*/}\r\n                                                        {/*</th>*/}\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claims.length ? (\r\n                                                            search ? (\r\n                                                                claims.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Date de réception</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objet </th>\r\n                                                        {/*<th rowSpan=\"1\" colSpan=\"1\">Agent</th>*/}\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Institution concernée</th>\r\n                                                        {/*<th rowSpan=\"1\" colSpan=\"1\">Unité</th>*/}\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {claims.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimList);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimToValidatedList.jsx",["963"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport axios from \"axios\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {filterDataTableBySearchValue, forceRound, formatDateToTimeStampte, loadCss} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimToValidatedList = (props) => {\r\n    if (!((verifyPermission(props.userPermissions, \"list-claim-awaiting-validation-any-institution\") || verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-my-institution')) && props.activePilot))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claims, setClaims] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let endpoint = \"\";\r\n        if (props.plan === \"MACRO\" || props.plan === \"PRO\")\r\n            endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-my-institution`;\r\n        else\r\n            endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-any-institution`;\r\n        async function fetchData () {\r\n            axios.get(endpoint)\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    setNumberPage(forceRound((Object.values(response.data)).length/numberPerPage));\r\n                    setShowList((Object.values(response.data)).slice(0, numberPerPage));\r\n                    setClaims(Object.values(response.data));\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claims.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.reference}</td>\r\n                <td>{`${claim.claimer.lastname} ${claim.claimer.firstname}`}</td>\r\n                <td>{formatDateToTimeStampte(claim.created_at)}</td>\r\n                <td>{claim.claim_object.name[\"fr\"]}</td>\r\n                <td>{claim.active_treatment.responsible_staff?`${claim.active_treatment.responsible_staff.identite.lastname} ${claim.active_treatment.responsible_staff.identite.firstname}`:\"\"}</td>\r\n                <td>{claim.institution_targeted.name}</td>\r\n                {/*<td>{claim.unit_targeted_id ? claim.unit_targeted_id.name  : null}</td>*/}\r\n                {\r\n                    verifyPermission(props.userPermissions, \"show-claim-awaiting-validation-any-institution\") || verifyPermission(props.userPermissions, \"show-claim-awaiting-validation-my-institution\") ? (\r\n                        <td>\r\n                            <a href={`/process/claim-to-validated/${claim.id}/detail`}\r\n                               className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                               title=\"Détail\">\r\n                                <i className=\"la la-eye\"/>\r\n                            </a>\r\n                        </td>\r\n                    ) : <td/>\r\n                }\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        (verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-my-institution') || verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-any-institution')) && props.activePilot ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                               Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                   Traitement\r\n                                </a>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Réclamations à valider\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={\"Liste des réclamations à valider\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Liste des réclamations\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Search:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/*<ExportButton/>*/}\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Référence\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Date de réception\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Objet\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Agent\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Institution concernée\r\n                                                        </th>\r\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"*/}\r\n                                                        {/*    colSpan=\"1\" style={{ width: \"70.25px\" }}*/}\r\n                                                        {/*    aria-label=\"Country: activate to sort column ascending\">Unité*/}\r\n                                                        {/*</th>*/}\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claims.length ? (\r\n                                                            search ? (\r\n                                                                claims.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Date de réception</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objet</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Agent</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Institution concernée</th>\r\n                                                        {/*<th rowSpan=\"1\" colSpan=\"1\">Unité</th>*/}\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {claims.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        plan: state.plan.plan,\r\n        userPermissions: state.user.user.permissions,\r\n        activePilot: state.user.user.staff.is_active_pilot\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimToValidatedList);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssignDetail.jsx",["964","965","966","967"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {formatSelectOption, loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport FusionClaim from \"../components/FusionClaim\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport DoubleButton from \"../components/DoubleButton\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport DoubleButtonDetail from \"../components/DoubleButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport UnfoundedModal from \"../components/UnfoundedModal\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        edit: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\r\n        update: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\r\n    },\r\n    MACRO: {\r\n        plan: \"MACRO\",\r\n        edit: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\r\n        update: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\r\n\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        edit: id => `${appConfig.apiDomaine}/transfer-claim-to-unit/${id}`,\r\n        update: id => `${appConfig.apiDomaine}/transfer-claim-to-unit/${id}`,\r\n    }\r\n};\r\n\r\n\r\nconst ClaimAssignDetail = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n    const {id} = useParams();\r\n\r\n    if (!(verifyPermission(props.userPermissions, \"show-claim-awaiting-assignment\") && props.activePilot))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = endPointConfig[props.plan];\r\n\r\n    const defaultError = {\r\n        unit_id: [],\r\n    };\r\n    const [error, setError] = useState(defaultError);\r\n\r\n    const [claim, setClaim] = useState(null);\r\n    const [copyClaim, setCopyClaim] = useState(null);\r\n    const [dataId, setDataId] = useState(\"\");\r\n    const [data, setData] = useState({unit_id: null});\r\n    const [unitsData, setUnitsData] = useState({});\r\n    const [unit, setUnit] = useState(null);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [startRequestToUnit, setStartRequestToUnit] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if (verifyTokenExpire()) {\r\n                await axios.get(`${appConfig.apiDomaine}/claim-awaiting-assignment/${id}`)\r\n                    .then(response => {\r\n                        setClaim(response.data);\r\n                        setDataId(response.data.institution_targeted.name);\r\n                    })\r\n                    .catch(error => console.log(\"Something is wrong\"))\r\n                ;\r\n            }\r\n\r\n            if (verifyPermission(props.userPermissions, \"transfer-claim-to-circuit-unit\") || verifyPermission(props.userPermissions, \"transfer-claim-to-unit\")) {\r\n                if (verifyTokenExpire()) {\r\n                    await axios.get(endPoint.edit(`${id}`))\r\n                        .then(response => {\r\n                            let newUnit = Object.values(response.data.units);\r\n                            setUnitsData(formatSelectOption(newUnit, \"name\", \"fr\"))\r\n                        })\r\n                        .catch(error => console.log(\"Something is wrong\"))\r\n                    ;\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const onClickToTranfertInstitution = async (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            await axios.put(`${appConfig.apiDomaine}/transfer-claim-to-targeted-institution/${id}`)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    window.location.href = \"/process/claim-assign\";\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const onClickToTranfert = (e) => {\r\n        e.preventDefault();\r\n        setStartRequestToUnit(true);\r\n\r\n        async function fetchData() {\r\n            await axios.put(endPoint.update(`${id}`), data)\r\n                .then(response => {\r\n                    setStartRequestToUnit(false);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    window.location.href = \"/process/claim-assign\";\r\n                })\r\n                .catch(error => {\r\n                    setStartRequestToUnit(false);\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig)\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData()\r\n    };\r\n\r\n    const onChangeUnits = (selected) => {\r\n        const newData = {...data};\r\n        newData.unit_id = selected ? selected.value : null;\r\n        setUnit(selected);\r\n        setData(newData);\r\n        console.log(newData.unit_id, \"UNIT\")\r\n    };\r\n\r\n    const onClickFusionButton = async (newClaim) => {\r\n        await setCopyClaim(newClaim);\r\n        document.getElementById(`modal-button`).click();\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"show-claim-awaiting-assignment\") && props.activePilot ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\"\r\n                 id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Traitement\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/claim-assign\"\r\n                                          className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Réclamation à Transférer\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()}\r\n                                   style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Détail\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div\r\n                                            className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            {\r\n                                                claim ? (\r\n                                                    claim.active_treatment && claim.active_treatment.rejected_reason && claim.active_treatment.rejected_at ? (\r\n                                                        <div className=\"d-flex justify-content-start\">\r\n                                                            <span className=\"kt-badge kt-badge--danger kt-badge--inline\"\r\n                                                                  style={{fontWeight: \"bold\"}}>RECLAMATION  REJETEE</span>\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                ) : null\r\n                                            }<br/>\r\n\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            <DoubleButton claim={claim}/>\r\n\r\n                                            <div className=\"kt-wizard-v2__nav-item\"\r\n                                                 data-ktwizard-type=\"step\">\r\n                                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                        <i className=\"flaticon-truck\"/>\r\n                                                    </div>\r\n                                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                            Transfert\r\n                                                        </div>\r\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                            Transferer la réclamation\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        {\r\n                                            verifyPermission(props.userPermissions, \"unfounded-claim-awaiting-assignment\") ? (\r\n                                                <div className=\"d-flex justify-content-md-end\">\r\n                                                    <button type=\"button\"\r\n                                                            data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                                                            className=\"btn btn-success\">\r\n                                                        NON FONDÉ\r\n                                                    </button>\r\n                                                    {\r\n                                                        claim ? (\r\n                                                            <UnfoundedModal\r\n                                                                activeTreatment={\r\n                                                                    claim.active_treatment ? (\r\n                                                                        claim.active_treatment\r\n                                                                    ) : null\r\n                                                                }\r\n                                                                getId={`${id}`}\r\n                                                            />\r\n                                                        ) : (\r\n                                                            <UnfoundedModal\r\n                                                                getId={`${id}`}\r\n                                                            />\r\n                                                        )\r\n                                                    }\r\n\r\n                                                </div>\r\n                                            ): null\r\n                                        }\r\n\r\n\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}\r\n                                                           rejected={claim && claim.active_treatment && claim.active_treatment.rejected_reason ? true : false}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        <DoubleButtonDetail\r\n                                            claim={claim}\r\n                                            onClickFusionButton={onClickFusionButton}\r\n                                            userPermissions={props.userPermissions}\r\n                                        />\r\n\r\n                                        <div className=\"kt-wizard-v2__content\"\r\n                                             data-ktwizard-type=\"step-content\">\r\n                                            <div className=\"kt-heading kt-heading--md\">Transfert de la\r\n                                                réclamation\r\n                                            </div>\r\n                                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                                <div className=\"kt-wizard-v2__review\">\r\n                                                    {\r\n                                                        verifyPermission(props.userPermissions, \"transfer-claim-to-targeted-institution\") ?\r\n                                                            <div className=\"kt-wizard-v2__review-item\">\r\n                                                                <div\r\n                                                                    className=\"kt-wizard-v2__review-content\"\r\n                                                                    style={{fontSize: \"15px\"}}>\r\n                                                                    <label\r\n                                                                        className=\"col-xl-6 col-lg-6 col-form-label\"><strong>Institution\r\n                                                                        concernée</strong></label>\r\n                                                                    <span\r\n                                                                        className=\"kt-widget__data\">{dataId}</span>\r\n                                                                </div>\r\n                                                                <div className=\"modal-footer\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-outline-success\"\r\n                                                                                onClick={onClickToTranfertInstitution}>\r\n                                                                                TRANSFÉRER A L'INSTITUTION\r\n                                                                            </button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-success kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            : null\r\n                                                    }\r\n                                                    {\r\n                                                        (verifyPermission(props.userPermissions, \"transfer-claim-to-circuit-unit\") ||\r\n                                                            verifyPermission(props.userPermissions, \"transfer-claim-to-unit\")) ?\r\n                                                            <div className=\"kt-wizard-v2__review-item\">\r\n                                                                <div className=\"kt-wizard-v2__review-title\">\r\n                                                                    Tranferer à une unité\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className=\"kt-wizard-v2__review-content\">\r\n                                                                    <div\r\n                                                                        className={error.unit_id.length ? \"form-group validated\" : \"form-group\"}>\r\n                                                                        <label>Unité</label>\r\n                                                                        <Select\r\n                                                                            isClearable\r\n                                                                            value={unit}\r\n                                                                            onChange={onChangeUnits}\r\n                                                                            options={unitsData}\r\n                                                                            placeholder={\"Veuillez sélectionner l'unité de traitement\"}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.unit_id.length ? (\r\n                                                                                error.unit_id.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : \"\"\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"modal-footer\">\r\n                                                                    {\r\n                                                                        !startRequestToUnit ? (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-outline-success\"\r\n                                                                                onClick={onClickToTranfert}>\r\n                                                                                TRANSFÉRER A UNE UNITÉ\r\n                                                                            </button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-success kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANTE\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                    {\r\n                                        verifyPermission(props.userPermissions, \"merge-claim-awaiting-assignment\") ? (\r\n                                            <div>\r\n                                                <button style={{display: \"none\"}} id={`modal-button`}\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-bold btn-label-brand btn-sm\"\r\n                                                        data-toggle=\"modal\" data-target=\"#kt_modal_4\"/>\r\n                                                {\r\n                                                    copyClaim ? (\r\n                                                        <FusionClaim\r\n                                                            claim={claim}\r\n                                                            copyClaim={copyClaim}\r\n                                                            onCloseModal={() => setCopyClaim(null)}\r\n                                                        />\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        ) : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n        activePilot: state.user.user.staff.is_active_pilot\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimAssignDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssignToStaff.jsx",["968"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {\r\n    forceRound,\r\n    formatDateToTimeStampte,\r\n    getLowerCaseString,\r\n    loadCss\r\n} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimAssignToStaff = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-claim-assignment-to-staff\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claims, setClaims] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            axios.get(`${appConfig.apiDomaine}/claim-assignment-staff`)\r\n                .then(response => {\r\n                    console.log(response.data, \"DATA\");\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setClaims(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaims = [...claims];\r\n        newClaims = newClaims.filter(el => (\r\n            getLowerCaseString(`${el.reference} ${ el.isInvalidTreatment ? \"(R)\" : \"\"}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(`${el.claimer.lastname} ${el.claimer.firstname}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(formatDateToTimeStampte(el.created_at)).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.claim_object.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(`${el.active_treatment.responsible_staff ? el.active_treatment.responsible_staff.identite.lastname : \"\"} ${ el.active_treatment.responsible_staff ? el.active_treatment.responsible_staff.identite.firstname : \"\" }`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.institution_targeted.name).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newClaims;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claims.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claims.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claims.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.reference} {claim.isInvalidTreatment ? (<span className=\"kt-badge kt-badge--danger kt-badge--md\">R</span>) : null}</td>\r\n                <td>{`${claim.claimer.lastname} ${claim.claimer.firstname}`}</td>\r\n                <td>{formatDateToTimeStampte(claim.created_at)}</td>\r\n                <td>{claim.claim_object.name[\"fr\"]}</td>\r\n                <td>{`${claim.active_treatment.responsible_staff?claim.active_treatment.responsible_staff.identite.lastname:\"\"} ${claim.active_treatment.responsible_staff?claim.active_treatment.responsible_staff.identite.firstname:\"\"}`}</td>\r\n                <td>{claim.institution_targeted.name}</td>\r\n                {/*<td>{claim.unit_targeted_id ? claim.unit_targeted.name.fr : \"-\"}</td>*/}\r\n                <td>\r\n                    <a href={`/process/claim-assign/to-staff/${claim.id}/detail`}\r\n                       className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                       title=\"Détail\">\r\n                        <i className=\"la la-eye\"/>\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-claim-assignment-to-staff') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Réclamations à traiter\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={(\r\n                        <div>\r\n                            Liste des réclamations qui vous sont assignés\r\n                            <br/>\r\n                            <span className=\"kt-badge kt-badge--danger kt-badge--md\">R</span> représente les traitements réjetés\r\n                        </div>\r\n                    )}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Réclamations à traiter\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Référence\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Date de réception\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Objet\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Agent\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Institution concernée\r\n                                                        </th>\r\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"*/}\r\n                                                        {/*    rowSpan=\"1\"*/}\r\n                                                        {/*    colSpan=\"1\" style={{width: \"70.25px\"}}*/}\r\n                                                        {/*    aria-label=\"Country: activate to sort column ascending\">Unité*/}\r\n                                                        {/*</th>*/}\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"40.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claims.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                        <tr>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Date de réception</th>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Objet</th>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Agent</th>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Institution concernée</th>\r\n                                                            {/*<th rowSpan=\"1\" colSpan=\"1\">Unité</th>*/}\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                        </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {claims.length} données\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                <Pagination\r\n                                                    numberPerPage={numberPerPage}\r\n                                                    onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                    activeNumberPage={activeNumberPage}\r\n                                                    onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                    pages={pages}\r\n                                                    onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                    numberPage={numberPage}\r\n                                                    onClickNextPage={e => onClickNextPage(e)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimAssignToStaff);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReporting.jsx",["969","970","971","972","973"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport FileSaver from \"file-saver\";\r\nimport ApexCharts from \"apexcharts\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastErrorMessageWithParameterConfig,\r\n    toastInvalidPeriodMessageConfig,\r\n    toastValidPeriodMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {debug, formatSelectOption} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {month} from \"../../constants/date\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimReporting = props => {\r\n    document.title = \"Satis client - Reporting\";\r\n    if (!(verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, \"list-reporting-claim-my-institution\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endpoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, \"list-reporting-claim-any-institution\"))\r\n            endpoint = `${appConfig.apiDomaine}/any/reporting-claim`;\r\n        else if (verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution'))\r\n            endpoint = `${appConfig.apiDomaine}/my/reporting-claim`;\r\n    } else if(props.plan === \"HUB\")\r\n        endpoint = `${appConfig.apiDomaine}/any/reporting-claim`;\r\n    else if(props.plan === \"PRO\")\r\n        endpoint = `${appConfig.apiDomaine}/my/reporting-claim`;\r\n\r\n\r\n    const [fetchData, setFetchData] = useState(null);\r\n    const [institution, setInstitution] = useState(null);\r\n    const [startDate, setStartDate] = useState(\"\");\r\n    const [endDate, setEndDate] = useState(\"\");\r\n    const [typeFilter, setTypeFilter] = useState(\"months\");\r\n    const [startFilter, setStartFilter] = useState(false);\r\n    const [startExportation, setStartExportation] = useState(false);\r\n    const [pdfTitle, setPdfTitle] = useState(`reporting_${new Date().getFullYear()}`);\r\n    const [possibleFilter, setPossibleFilter] = useState(\r\n        {\r\n            months: true,\r\n            weeks: true,\r\n            days: true\r\n        }\r\n    );\r\n    const [stateChartOne, setStateChartOne] = useState(\"\");\r\n    const [stateChartTwo, setStateChartTwo] = useState(\"\");\r\n\r\n    var totalCollect = 0;\r\n    var totalIncomplete = 0;\r\n    var totalToAssignUnit = 0;\r\n    var totalToAssignStaff = 0;\r\n    var totalAwaitingTreatment= 0;\r\n    var totalToValidate = 0;\r\n    var totalToMeasureSatisfaction = 0;\r\n    var totalPercentage = 0;\r\n\r\n    const calculateTotal = () => {\r\n        fetchData.statistiqueObject.map(row => {\r\n            row.claim_objects.map(elRow => {\r\n                totalCollect = totalCollect + elRow.total;\r\n                totalIncomplete = totalIncomplete + elRow.incomplete;\r\n                totalToAssignUnit = totalToAssignUnit + elRow.toAssignementToUnit;\r\n                totalToAssignStaff = totalToAssignStaff + elRow.toAssignementToStaff;\r\n                totalAwaitingTreatment = totalAwaitingTreatment + elRow.awaitingTreatment;\r\n                totalToValidate = totalToValidate + elRow.toValidate;\r\n                totalToMeasureSatisfaction = totalToMeasureSatisfaction + elRow.toMeasureSatisfaction;\r\n                totalPercentage = totalPercentage + elRow.percentage\r\n            });\r\n        });\r\n        totalPercentage = parseFloat((isNaN(totalPercentage / fetchData.statistiqueObject.length) ? 0 : totalPercentage / fetchData.statistiqueObject.length).toFixed(2));\r\n    };\r\n\r\n    if (fetchData)\r\n        calculateTotal();\r\n\r\n    const applyPossibleFilter = (data) => {\r\n        const newPossibleFilter = {...possibleFilter};\r\n\r\n        newPossibleFilter.days = Object.keys(data.days.claims_received).length <= 17;\r\n        newPossibleFilter.weeks = Object.keys(data.weeks.claims_received).length <= 5;\r\n        setPossibleFilter(newPossibleFilter);\r\n    };\r\n\r\n    const getGraphOneOptions = (dataGraphOne) => {\r\n        var labels = [];\r\n        var series = [];\r\n        dataGraphOne.map(el => {\r\n            labels.push(el.name[\"fr\"]);\r\n            series.push(el.pourcentage)\r\n        });\r\n\r\n        return {\r\n            series: series,\r\n            chart: {\r\n                width: 450,\r\n                type: 'pie',\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                formatter: function (val) {\r\n                    return val + \"%\"\r\n                }\r\n            },\r\n            labels: labels,\r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                    chart: {\r\n                        width: 200\r\n                    },\r\n                    legend: {\r\n                        position: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        };\r\n    };\r\n\r\n    const getGraphTwoOptions = (dataGraphTwo, type = null) => {\r\n        var categories = [];\r\n        var newSeries = {\r\n            claims_received: [],\r\n            claims_resolved: []\r\n        };\r\n        const getDetailData = () => {\r\n            for (const property in dataGraphTwo[type ? type : typeFilter].claims_received) {\r\n                categories.push(property);\r\n                newSeries.claims_received.push(dataGraphTwo[type ? type : typeFilter].claims_received[property]);\r\n            }\r\n            for (const property in dataGraphTwo[type ? type : typeFilter].claims_resolved) {\r\n                newSeries.claims_resolved.push(dataGraphTwo[type ? type : typeFilter].claims_resolved[property]);\r\n            }\r\n        };\r\n\r\n        const formatCategoriesMouths = () => {\r\n            for (var i = 0; i < categories.length; i++)\r\n                categories[i] = `${ month[categories[i].split(\"-\")[1]] } ${ categories[i].split(\"-\")[0][2] }${ categories[i].split(\"-\")[0][3] }`;\r\n        };\r\n\r\n        const formatCategoriesDays = () => {\r\n            for (var i = 0; i < categories.length; i++) {\r\n                categories[i] = `${ categories[i].split(\"-\")[2] } ${ month[categories[i].split(\"-\")[1]] } ${ categories[i].split(\"-\")[0][2] }${ categories[i].split(\"-\")[0][3] }`;\r\n            }\r\n        };\r\n\r\n        const formatCategoriesWeeks = () => {\r\n            var start = \"\";\r\n            var end = \"\";\r\n            for (var i = 0; i < categories.length; i++) {\r\n                start = `${categories[i].replace(/\\s/g, '').split(\"-\")[2]} ${month[categories[i].replace(/\\s/g, '').split(\"-\")[1]]} ${categories[i].replace(/\\s/g, '').split(\"-\")[0][2]}${categories[i].replace(/\\s/g, '').split(\"-\")[0][3]}`;\r\n                end = `${categories[i].replace(/\\s/g, '').split(\"-\")[5]} ${month[categories[i].replace(/\\s/g, '').split(\"-\")[4]]} ${categories[i].replace(/\\s/g, '').split(\"-\")[3][2]}${categories[i].replace(/\\s/g, '').split(\"-\")[3][3]}`;\r\n                categories[i] = `${start} - ${end}`;\r\n            }\r\n        };\r\n\r\n        getDetailData();\r\n\r\n        if (type === null) {\r\n            if (typeFilter === \"months\")\r\n                formatCategoriesMouths();\r\n            else if (typeFilter === \"days\")\r\n                formatCategoriesDays();\r\n            else\r\n                formatCategoriesWeeks();\r\n        } else {\r\n            if (type === \"months\")\r\n                formatCategoriesMouths();\r\n            else if (type === \"days\")\r\n                formatCategoriesDays();\r\n            else\r\n                formatCategoriesWeeks();\r\n        }\r\n\r\n        const series = [\r\n            {\r\n                name: 'Réclamtions réçues',\r\n                data: newSeries.claims_received\r\n            },\r\n            {\r\n                name: 'Réclamations résolues',\r\n                data: newSeries.claims_resolved\r\n            }\r\n        ];\r\n\r\n        return {\r\n            series: [{\r\n                name: series[0].name,\r\n                data: series[0].data\r\n            }, {\r\n                name: series[1].name,\r\n                data: series[1].data\r\n            }],\r\n            chart: {\r\n                height: 350,\r\n                type: 'area'\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            xaxis: {\r\n                categories: categories\r\n            },\r\n            tooltip: {\r\n                x: {\r\n                    format: 'MMM \\'yyyy'\r\n                },\r\n            },\r\n        };\r\n    };\r\n\r\n    const renderChart = (dataGraphOne, dataGraphTwo) => {\r\n        const chartOne = new ApexCharts(document.getElementById(\"graphOne\"), getGraphOneOptions(dataGraphOne));\r\n        const chartTwo = new ApexCharts(document.getElementById(\"graphTwo\"), getGraphTwoOptions(dataGraphTwo));\r\n\r\n        setStateChartOne(chartOne);\r\n        setStateChartTwo(chartTwo);\r\n\r\n        chartOne.render();\r\n        chartTwo.render();\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await axios.get(endpoint)\r\n                .then(response => {\r\n                    applyPossibleFilter(response.data.statistiqueGraphePeriod);\r\n                    setFetchData(response.data);\r\n\r\n                    renderChart(response.data.statistiqueChannel, response.data.statistiqueGraphePeriod);\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"))\r\n            ;\r\n        };\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const handleTypeFilterChange = (e) => {\r\n        setTypeFilter(e.target.value);\r\n        const parent = document.getElementById(\"parentGraphTwo\");\r\n        document.getElementById(\"graphTwo\").remove();\r\n        const div = document.createElement(\"div\");\r\n        div.id = \"graphTwo\";\r\n        parent.appendChild(div);\r\n        const chartTwo = new ApexCharts(document.getElementById(\"graphTwo\"), getGraphTwoOptions(fetchData.statistiqueGraphePeriod, e.target.value));\r\n        setStateChartTwo(chartTwo);\r\n        chartTwo.render();\r\n    };\r\n\r\n    const handleStartDateChange = e => {\r\n        if (endDate && e.target.value) {\r\n            if (!(new Date(endDate) > new Date(e.target.value)))\r\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n            else\r\n                ToastBottomEnd.fire(toastValidPeriodMessageConfig);\r\n        }\r\n        setStartDate(e.target.value);\r\n    };\r\n\r\n    const handleEndDateChange = e => {\r\n        if (startDate && e.target.value) {\r\n            if (!(new Date(startDate) < new Date(e.target.value)))\r\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n            else\r\n                ToastBottomEnd.fire(toastValidPeriodMessageConfig);\r\n        }\r\n        setEndDate(e.target.value);\r\n    };\r\n\r\n    const handleInstitutionChange = selected => {\r\n        setInstitution(selected)\r\n    };\r\n\r\n    const filterRequest = () => {\r\n        const oldData = {...fetchData};\r\n        setStartFilter(true);\r\n        setTypeFilter(\"months\");\r\n        setFetchData(null);\r\n        setPossibleFilter(\r\n            {\r\n                months: true,\r\n                weeks: true,\r\n                days: true\r\n            }\r\n        );\r\n        var parameter = \"\";\r\n        if (institution && startDate && endDate)\r\n            parameter = `?date_start=${startDate}&date_end=${endDate}&institution_id=${institution.value}`;\r\n        else if (institution && !startDate && !endDate)\r\n            parameter = `?institution_id=${institution.value}`;\r\n        else  if(!institution && startDate && endDate)\r\n            parameter = `?date_start=${startDate}&date_end=${endDate}`;\r\n        if (verifyTokenExpire()) {\r\n            axios.get(`${endpoint}${parameter}`)\r\n                .then(response => {\r\n                    setPdfTitle(formatPdfTitle());\r\n                    setStartFilter(false);\r\n                    applyPossibleFilter(response.data.statistiqueGraphePeriod);\r\n                    setFetchData(response.data);\r\n\r\n                    renderChart(response.data.statistiqueChannel, response.data.statistiqueGraphePeriod);\r\n                })\r\n                .catch(error => {\r\n                    setStartFilter(false);\r\n                    setFetchData(oldData);\r\n                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error.date_end))\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const filterData = () => {\r\n        if (institution && startDate && endDate) {\r\n            if (startDate && endDate) {\r\n                if (!(new Date(startDate) <= new Date(endDate)))\r\n                    ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n                else {\r\n                    filterRequest()\r\n                }\r\n            } else {\r\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n            }\r\n        } else if (institution && !startDate && !endDate) {\r\n            filterRequest();\r\n        } else if (!institution && startDate && endDate) {\r\n            if (startDate && endDate) {\r\n                if (!(new Date(startDate) <= new Date(endDate)))\r\n                    ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n                else {\r\n                    filterRequest()\r\n                }\r\n            } else {\r\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n            }\r\n        } else {\r\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Veillez renseigner les parametres correctement\"))\r\n        }\r\n    };\r\n\r\n    const formatPdfTitle = () => {\r\n        let newStartDate = startDate;\r\n        let newEndDate = endDate;\r\n        while (newStartDate.includes(\"-\") && newEndDate.includes(\"-\")) {\r\n            newStartDate = newStartDate.replace(\"-\", \"_\");\r\n            newEndDate = newEndDate.replace(\"-\", \"_\");\r\n        }\r\n        if (institution && (newStartDate && newEndDate))\r\n            return `reporting_${institution.label}_${newStartDate}_at_${newEndDate}`;\r\n        else if(institution && !(newStartDate && newEndDate))\r\n            return `reporting_${institution.label}`;\r\n        else if(!institution && (newStartDate && newEndDate))\r\n            return `reporting_${newStartDate}_at_${newEndDate}`;\r\n        else\r\n            return `reporting_${new Date().getFullYear()}`;\r\n    };\r\n\r\n    const exportToPdf = async () => {\r\n        var uriOne = \"\";\r\n        var uriTwo = \"\";\r\n        await stateChartOne.dataURI().then(({ imgURI, blob }) => {\r\n            uriOne = imgURI;\r\n        });\r\n\r\n        await stateChartTwo.dataURI().then(({ imgURI, blob }) => {\r\n            uriTwo = imgURI;\r\n            });\r\n\r\n        if (fetchData) {\r\n            setStartExportation(true);\r\n            const sendData = {\r\n                filter: {\r\n                    institution: institution ? institution.value : \"\",\r\n                    startDate: startDate,\r\n                    endDate: endDate\r\n                },\r\n                statistiqueObject: {\r\n                    data: fetchData.statistiqueObject,\r\n                    total: {\r\n                        totalCollect: totalCollect,\r\n                        totalIncomplete: totalIncomplete,\r\n                        totalToAssignUnit: totalToAssignUnit,\r\n                        totalToAssignStaff: totalToAssignStaff,\r\n                        totalAwaitingTreatment: totalAwaitingTreatment,\r\n                        totalToValidate: totalToValidate,\r\n                        totalToMeasureSatisfaction: totalToMeasureSatisfaction,\r\n                        totalPercentage: totalPercentage,\r\n                    }\r\n                },\r\n                statistiqueQualificationPeriod: fetchData.statistiqueQualificationPeriod,\r\n                statistiqueTreatmentPeriod: fetchData.statistiqueTreatmentPeriod,\r\n                statistiqueChannel: fetchData.statistiqueChannel,\r\n                chanelGraph: {\r\n                    image: uriOne\r\n                },\r\n                evolutionClaim: {\r\n                    image: uriTwo,\r\n                    filter: typeFilter\r\n                },\r\n                headerBackground: \"#7F9CF5\",\r\n            };\r\n\r\n            if (verifyTokenExpire()) {\r\n                axios({\r\n                    method: 'post',\r\n                    url: `${appConfig.apiDomaine}/any/reporting-claim/export-pdf`,\r\n                    responseType: 'blob',\r\n                    data: {data_export: sendData}\r\n                })\r\n                    .then(({data}) => {\r\n                        setStartExportation(false);\r\n                        FileSaver.saveAs(data, `${pdfTitle}.pdf`);\r\n                    })\r\n                    .catch(({response}) => {\r\n                        setStartExportation(false);\r\n                    })\r\n                ;\r\n            }\r\n        } else {\r\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Donné indisponible pour l'exportation\"));\r\n        }\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Monitoring\r\n                            </h3>\r\n\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Reporting\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={\"Page de reporting\"}/>\r\n\r\n                    <div className=\"alert alert-light alert-elevate\" role=\"alert\">\r\n                        <div className=\"alert-icon\">\r\n                            {\r\n                                startExportation ? (\r\n                                    <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\">\r\n                                        Chargement...\r\n                                    </button>\r\n                                ) : (\r\n                                    <button className=\"btn btn-info btn-circle\" onClick={exportToPdf}>\r\n                                        <i className=\"fa fa-file-export\" style={{color: \"white\"}}/> Exportez\r\n                                    </button>\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"alert-text align-items-center\">\r\n\r\n                            <div className=\"row col-12 d-flex justify-content-center align-items-center\">\r\n                                {\r\n                                    verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                        <div className=\"form-group col-3\">\r\n                                            <label htmlFor=\"institution\">Institutions</label>\r\n                                            <Select\r\n                                                isClearable\r\n                                                value={institution}\r\n                                                placeholder={\"Choix institution\"}\r\n                                                onChange={handleInstitutionChange}\r\n                                                options={formatSelectOption(fetchData ? fetchData.institutions : [], 'name', false)}\r\n                                            />\r\n                                        </div>\r\n                                    ) : null\r\n                                }\r\n\r\n                                <div className=\"form-group col-3\">\r\n                                    <label htmlFor=\"start\">Date de début</label>\r\n                                    <input\r\n                                        id=\"start\"\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        value={startDate}\r\n                                        onChange={handleStartDateChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-3\">\r\n                                    <label htmlFor=\"end\">Date de début</label>\r\n                                    <input\r\n                                        id=\"end\"\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        value={endDate}\r\n                                        onChange={handleEndDateChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-3\">\r\n                                    {\r\n                                        !startFilter ? (\r\n                                            <button\r\n                                                className=\"btn btn-primary\"\r\n                                                style={{marginTop: \"25px\"}}\r\n                                                onClick={() => filterData()}\r\n                                            >\r\n                                                <i className=\"fa fa-filter\"/> Filtrer\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button\r\n                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                type=\"button\" disabled\r\n                                                style={{marginTop: \"25px\"}}\r\n                                            >\r\n                                                Chargement...\r\n                                            </button>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Reporting Reclamation\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div className=\"col-sm-12\">\r\n                                                <strong>Légende: <br/>R </strong>{\"<===>\"} Réclamtions\r\n                                                <table className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{ width: \"952px\" }}>\r\n                                                    <thead style={{backgroundColor: \"#7F9CF5\"}}>\r\n                                                        <tr role=\"row\">\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Catégorie de <strong>R</strong>\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Objets de <strong>R</strong>\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> collectées\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> incomplète\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à assigner à une unité\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à assigner à un agent\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à traiter\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à valider\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à mesurer satisfaction\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Pourcentage de Résolues\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            fetchData.statistiqueObject.map((row, index) => (\r\n                                                                row.claim_objects.map((elRow, indexEleRow) => (\r\n                                                                    indexEleRow === 0 ? (\r\n                                                                        <tr key={index}>\r\n                                                                            {\r\n                                                                                row.claim_objects.length === 0 ? (\r\n                                                                                    <td>{row.name[\"fr\"]}</td>\r\n                                                                                ) : (\r\n                                                                                    <td rowSpan={row.claim_objects.length}>{row.name[\"fr\"]}</td>\r\n                                                                                )\r\n                                                                            }\r\n                                                                            <td>{elRow.name[\"fr\"]}</td>\r\n                                                                            <td>{elRow.total}</td>\r\n                                                                            <td>{elRow.incomplete}</td>\r\n                                                                            <td>{elRow.toAssignementToUnit}</td>\r\n                                                                            <td>{elRow.toAssignementToStaff}</td>\r\n                                                                            <td>{elRow.awaitingTreatment}</td>\r\n                                                                            <td>{elRow.toValidate}</td>\r\n                                                                            <td>{elRow.toMeasureSatisfaction}</td>\r\n                                                                            <td>{elRow.percentage} %</td>\r\n                                                                        </tr>\r\n                                                                    ) : (\r\n                                                                        <tr key={indexEleRow}>\r\n                                                                            <td>{elRow.name[\"fr\"]}</td>\r\n                                                                            <td>{elRow.total}</td>\r\n                                                                            <td>{elRow.incomplete}</td>\r\n                                                                            <td>{elRow.toAssignementToUnit}</td>\r\n                                                                            <td>{elRow.toAssignementToStaff}</td>\r\n                                                                            <td>{elRow.awaitingTreatment}</td>\r\n                                                                            <td>{elRow.toValidate}</td>\r\n                                                                            <td>{elRow.toMeasureSatisfaction}</td>\r\n                                                                            <td>{elRow.percentage} %</td>\r\n                                                                        </tr>\r\n                                                                    )\r\n                                                                ))\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th colSpan=\"2\" className=\"text-center\">Total</th>\r\n                                                        <th>{totalCollect}</th>\r\n                                                        <th>{totalIncomplete}</th>\r\n                                                        <th>{totalToAssignUnit}</th>\r\n                                                        <th>{totalToAssignStaff}</th>\r\n                                                        <th>{totalAwaitingTreatment}</th>\r\n                                                        <th>{totalToValidate}</th>\r\n                                                        <th>{totalToMeasureSatisfaction}</th>\r\n                                                        <th>{totalPercentage} %</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Délai de qualification des réclamations\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{ width: \"952px\" }}>\r\n                                                    <thead style={{backgroundColor: \"#7F9CF5\", borderLeft: \"none\", borderRight: \"none\"}}>\r\n                                                        <tr role=\"row\">\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Délai de qualification (en jour)\r\n                                                            </th>\r\n                                                            {\r\n                                                                fetchData.statistiqueQualificationPeriod.map((el, index) => (\r\n                                                                    <th key={index} tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                        colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                        aria-label=\"Country: activate to sort column ascending\">{el.libelle}\r\n                                                                    </th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td style={{borderRight: \"none\", borderLeft: \"none\"}}>Nombre</td>\r\n                                                            {\r\n                                                                fetchData.statistiqueQualificationPeriod.map((el, index) => (\r\n                                                                    <td key={index} style={{borderRight: \"none\", borderLeft: \"none\"}}>{el.total}</td>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                        <tr>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\" style={{borderRight: \"none\", borderLeft: \"none\"}}>Taux (%)</th>\r\n                                                            {\r\n                                                                fetchData.statistiqueQualificationPeriod.map((el, index) => (\r\n                                                                    <th key={index} rowSpan=\"1\" colSpan=\"1\" style={{borderRight: \"none\", borderLeft: \"none\"}}>{el.pourcentage}</th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Délai de traitement des réclamations\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead style={{backgroundColor: \"#7F9CF5\"}}>\r\n                                                        <tr role=\"row\">\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Délai de Traitement (en jour)\r\n                                                            </th>\r\n                                                            {\r\n                                                                fetchData.statistiqueTreatmentPeriod.map((el, index) => (\r\n                                                                    <th key={index} tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                        colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                        aria-label=\"Country: activate to sort column ascending\">{el.libelle}\r\n                                                                    </th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td style={{ borderLeft: \"none\", borderRight: \"none\" }}>Nombre</td>\r\n                                                            {\r\n                                                                fetchData.statistiqueTreatmentPeriod.map((el, index) => (\r\n                                                                    <td key={index} style={{ borderLeft: \"none\", borderRight: \"none\" }}>{el.total}</td>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                        <tr>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\" style={{ borderLeft: \"none\", borderRight: \"none\" }}>Taux</th>\r\n                                                            {\r\n                                                                fetchData.statistiqueTreatmentPeriod.map((el, index) => (\r\n                                                                    <th key={index} rowSpan=\"1\" colSpan=\"1\" style={{ borderLeft: \"none\", borderRight: \"none\" }}>{el.pourcentage}</th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Utilisation de canaux\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{ width: \"952px\" }}>\r\n                                                    <thead style={{ backgroundColor: \"#7F9CF5\" }}>\r\n                                                        <tr role=\"row\">\r\n                                                            {\r\n                                                                fetchData.statistiqueChannel.map((channel, index) => (\r\n                                                                    <th\r\n                                                                        key={index}\r\n                                                                        tabIndex=\"0\"\r\n                                                                        aria-controls=\"kt_table_1\"\r\n                                                                        rowSpan=\"1\"\r\n                                                                        colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                        aria-label=\"Country: activate to sort column ascending\">\r\n                                                                        {channel.name[\"fr\"]}\r\n                                                                    </th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody/>\r\n                                                    <tfoot>\r\n                                                        <tr>\r\n                                                            {\r\n                                                                fetchData.statistiqueChannel.map((channel, index) => (\r\n                                                                    <th key={index} rowSpan=\"1\" colSpan=\"1\" style={{borderLeft: \"none\", borderRight: \"none\"}}>{channel.total_claim}</th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n\r\n                                                {\r\n                                                    fetchData ? (\r\n                                                        <div className=\"col-12 d-flex justify-content-center\">\r\n                                                            <div id=\"graphOne\" style={{position: \"relative\", zIndex: \"1\"}}/>\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Evolution des réclamations\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row d-flex justify-content-center\">\r\n                                    <div className=\"form-group col-6\">\r\n                                        <label htmlFor=\"filter\">filtre</label>\r\n                                        <select\r\n                                            id=\"filter\"\r\n                                            className=\"form-control\"\r\n                                            value={typeFilter}\r\n                                            onChange={(e) => handleTypeFilterChange(e)}\r\n                                        >\r\n                                            <option value=\"\" disabled={true}>Veillez choisir le filtre</option>\r\n                                            {\r\n                                                possibleFilter.months ? (\r\n                                                    <option value=\"months\">Mois</option>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                possibleFilter.weeks ? (\r\n                                                    <option value=\"weeks\">Semaine</option>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                possibleFilter.days ? (\r\n                                                    <option value=\"days\">Jour</option>\r\n                                                ) : null\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div id=\"parentGraphTwo\" className=\"col-sm-12\">\r\n                                                <div id=\"graphTwo\" style={{position: \"relative\", zIndex: 1}}/>\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimReporting);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimMonitoring.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Dashboards.jsx",["974"],"import React from 'react';\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport DashboardClaimsAll from \"../../APP_MACRO/Holding/DashboardClaimsAll\";\r\nimport DashboardClaimsMy from \"../components/DashboardForm/DashboardClaimsMy\";\r\nimport DashboardClaimsUnit from \"../components/DashboardForm/DashboardClaimsUnit\";\r\nimport DashboardSummaryReport from \"../components/DashboardForm/DashboardSummaryReport\";\r\nimport DashboardStatClaim from \"../components/DashboardForm/DashboardStatClaim\";\r\nimport DashboardStatistic from \"../components/DashboardForm/DashboardStatistic\";\r\nimport GraphChannel from \"../components/DashboardForm/GraphChannel\";\r\nimport DashboardClaimsActivity from \"../components/DashboardForm/DashboardClaimsActivity\";\r\nimport ClaimToInstitution from \"../components/DashboardForm/ClaimToInstitution\";\r\nimport ClaimToPointOfServices from \"../components/DashboardForm/ClaimToPointOfServices\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst Dashboards = (props) => {\r\n    document.title = \"Satis client - Dashboard\";\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Tableau de bord\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                {/*<InfirmationTable information={\"Représentation graphique des statiques des collectes et traitements des réclamations sur les 30 derniers jours\"} />*/}\r\n                <div>\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ?\r\n                            <div className=\"kt-portlet\">\r\n                                <DashboardClaimsAll/>\r\n                            </div>:null\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\") ?\r\n                            <div className=\"kt-portlet\">\r\n                                <DashboardClaimsMy/>\r\n                            </div>:null\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"show-dashboard-data-my-unit\") ?\r\n                            <div className=\"kt-portlet\">\r\n                                <DashboardClaimsUnit/>\r\n                            </div>:null\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"show-dashboard-data-my-activity\") ?\r\n                        <div className=\"kt-portlet\">\r\n                            <DashboardClaimsActivity/>\r\n                        </div>:null\r\n                    }\r\n\r\n                    <div>\r\n                        <DashboardSummaryReport/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <GraphChannel/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <DashboardStatClaim/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <DashboardStatistic/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {\r\n                            verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") &&\r\n                            (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\r\n                                <div className=\"kt-portlet\">\r\n                                    <ClaimToInstitution/>\r\n                                </div> : null\r\n                        }\r\n                        {\r\n                            !verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") &&\r\n                            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\") ?\r\n                                <div className=\"kt-portlet\">\r\n                                    <ClaimToPointOfServices/>\r\n                                </div> : null\r\n                        }\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboards);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigNotification.jsx",["975"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {notificationConfig} from \"../../constants/notification\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastEditErrorMessageConfig,\r\n    toastSuccessMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ConfigNotification = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"update-notifications\"))\r\n        window.location.href = ERROR_401;\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState({\r\n        \"notifications.acknowledgment-of-receipt\": [],\r\n        \"notifications.register-a-claim\": [],\r\n        \"notifications.complete-a-claim\": [],\r\n        \"notifications.transferred-to-targeted-institution\": [],\r\n        \"notifications.transferred-to-unit\": [],\r\n        \"notifications.assigned-to-staff\": [],\r\n        \"notifications.reject-a-claim\": [],\r\n        \"notifications.treat-a-claim\": [],\r\n        \"notifications.invalidate-a-treatment\": [],\r\n        \"notifications.validate-a-treatment\": [],\r\n        \"notifications.communicate-the-solution\": [],\r\n        \"notifications.communicate-the-solution-unfounded\": [],\r\n        \"notifications.add-contributor-to-discussion\": [],\r\n        \"notifications.post-discussion-message\": [],\r\n        \"notifications.reminder-before-deadline\": [],\r\n        \"notifications.reminder-after-deadline\": [],\r\n        \"notifications.recurrence-alert\": [],\r\n    });\r\n    const [load, setLoad] = useState(true);\r\n    const [startUpdate, setStartUpdate] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${appConfig.apiDomaine}/notifications/edit`)\r\n                .then(({data}) => {\r\n                    console.log(\"data:\", data);\r\n                    setData(data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"something is wrong\")\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine]);\r\n\r\n    const handleTextChange = (e, index) => {\r\n        const newData = [...data];\r\n        newData[index].text = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const formatUpdateData = () => {\r\n        const updateData = {};\r\n        for (const key in data)\r\n            updateData[data[key].event] = data[key].text;\r\n        return updateData;\r\n    };\r\n\r\n    const updateConfig = () => {\r\n        setStartUpdate(true);\r\n        const updateData = {\r\n            \"notifications\": formatUpdateData(),\r\n        };\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios.put(`${appConfig.apiDomaine}/notifications`, updateData)\r\n                .then(({data}) => {\r\n                    setStartUpdate(false);\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Succès de la modification\"));\r\n                })\r\n                .catch(({response}) => {\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    setError({...error, ...response.data.error});\r\n                    setStartUpdate(false);\r\n                    console.log(\"error\", response.data.error)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"update-notifications\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Notification\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Configuration notification\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div>\r\n                                            <strong>\r\n                                                Légende: <br/> <br/>\r\n                                            </strong>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-6\">{\"{claim_reference}\"} {\"<===>\"} Référence de la reclamation</div>\r\n                                                <div className=\"col-6\">{\"{claim_object}\"} {\"<===>\"} Objet de la reclamtion</div>\r\n                                                <br/> <br/>\r\n                                                <div className=\"col-6\">{\"{claim_status}\"} {\"<===>\"} Status de la réclamaion</div>\r\n                                                <div className=\"col-6\">{\"{responsible_staff}\"} {\"<===>\"} Staff en charge du traitement</div>\r\n                                                <br/> <br/>\r\n                                                <div className=\"col-6\">{\"{solution_communicated}\"} {\"<===>\"} Solution à communiquer</div>\r\n                                                <div className=\"col-6\">{\"{created_by}\"} {\"<===>\"} Celui qui à enregister la réclamation</div>\r\n                                                <br/> <br/>\r\n                                                <div className=\"col-6\">{\"{discussion_name}\"} {\"<===>\"} Nom de la discussion</div>\r\n                                                <div className=\"col-6\">{\"{posted_by}\"} {\"<===>\"} Celui qui à poster la réclamation</div>\r\n                                            </div>\r\n                                            <br/><br/>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            {\r\n                                                data.map((el, index) => (\r\n                                                    <div key={index} className={error[`notifications.${el.event}`].length ? \"col-6 form-group validated\" : \"col-6 form-group\"}>\r\n                                                        <label htmlFor={el.event}>{notificationConfig[el.event]} <InputRequire/></label>\r\n                                                        <textarea\r\n                                                            id={el.event}\r\n                                                            cols=\"30\"\r\n                                                            rows=\"3\"\r\n                                                            className={ error[`notifications.${el.event}`].length ? \"form-control is-invalid\" :  \"form-control\"}\r\n                                                            value={el.text}\r\n                                                            onChange={e => handleTextChange(e, index)}\r\n                                                        />\r\n\r\n                                                        {\r\n                                                            error[`notifications.${el.event}`].length ? (\r\n                                                                error[`notifications.${el.event}`].map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n\r\n                                            <div className=\"col-12 form-group text-center\">\r\n                                                {\r\n                                                    !startUpdate ? (\r\n                                                        <button onClick={updateConfig} className=\"btn btn-primary\">Modifier</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ConfigNotification);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\StaffChannels.jsx",["976"],"import React, {useEffect, useState} from 'react';\r\nimport HeaderTablePage from \"./HeaderTablePage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {toastAddErrorMessageConfig, toastAddSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport LoadingTable from \"./LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst StaffChannels = () => {\r\n    const defaultData = {\r\n        feedback_preferred_channels: []\r\n    };\r\n\r\n    const [data, setData] = useState(defaultData);\r\n    const [listChannels, setListChannels] = useState(\"\");\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [load, setLoad] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/feedback-channels\")\r\n                .then(response => {\r\n                    const newChannel={...data};\r\n                    if (response.data.staff.feedback_preferred_channels!==null){\r\n                        newChannel.feedback_preferred_channels=response.data.staff.feedback_preferred_channels;\r\n                        setData(newChannel);\r\n                    }\r\n                    setListChannels(response.data);\r\n                    setLoad(false)\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const onChangeOption = (e, channel) => {\r\n        const newData = {...data};\r\n        console.log(e.target.checked, \"OPTION\");\r\n        if (e.target.checked === true) {\r\n            newData.feedback_preferred_channels.push(channel)\r\n        } else newData.feedback_preferred_channels = newData.feedback_preferred_channels.filter(item => item !== channel);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            axios.put(appConfig.apiDomaine + \"/feedback-channels\", data)\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    console.log(\"something is wrong\");\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Canaux\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                               className=\"kt-subheader__breadcrumbs-link\">\r\n                                Canaux du Personnel\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Les canaux du personnel\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <form className=\"kt-form\">\r\n                                {/*{console.log(data, \"DATA\")}*/}\r\n                                {\r\n                                    load ? (\r\n                                        <LoadingTable/>\r\n                                    ) : (\r\n                                    listChannels.channels ?\r\n                                        listChannels.channels.map((channel, index) => (\r\n                                            <div className=\"form-group row\" key={index}>\r\n                                                <label className=\"col col-form-label \">{channel}</label>\r\n                                                <div className=\"col\">\r\n                                                    <span className=\"kt-switch kt-switch--sm kt-switch--outline kt-switch--icon kt-switch--success \">\r\n                                                    <label>\r\n                                                        {data.feedback_preferred_channels.length ?\r\n                                                            data.feedback_preferred_channels.map((feedback, i) => (\r\n                                                                feedback === channel ?\r\n\r\n                                                                    <input\r\n                                                                        key={i}\r\n                                                                        type=\"checkbox\"\r\n                                                                        onChange={(e) => onChangeOption(e, channel)}\r\n                                                                        checked={\"checked\"}\r\n                                                                        name={channel}\r\n                                                                    />\r\n                                                                    :\r\n                                                                    <input\r\n                                                                        key={i}\r\n                                                                        type=\"checkbox\"\r\n                                                                        onChange={(e) => onChangeOption(e, channel)}\r\n                                                                        name={channel}\r\n                                                                    />\r\n                                                            ))\r\n                                                        :\r\n                                                            <input\r\n                                                                type=\"checkbox\"\r\n                                                                onChange={(e) => onChangeOption(e, channel)}\r\n                                                                name={channel}\r\n                                                            />\r\n\r\n                                                        }\r\n                                                        <span/>\r\n                                                    </label>\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        )) : null\r\n                                    )\r\n                                }\r\n                                <div className=\"kt-portlet__foot\">\r\n                                    <div className=\"kt-form__actions text-right\">\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                        className=\"btn btn-primary\">Enregistrer</button>\r\n                                            ) : (\r\n                                                <button\r\n                                                    className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                    type=\"button\" disabled>\r\n                                                    Chargement...\r\n                                                </button>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <Link to=\"/dashbord\" className=\"btn btn-secondary mx-2\">\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            ) : (\r\n                                                <Link to=\"/dashbord\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default StaffChannels;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\MessageApi.jsx",["977"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {Link} from \"react-router-dom\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst MessageApi = props => {\r\n    if (!verifyPermission(props.userPermissions, \"list-message-apis\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [messageAPIs, setMessageAPIs] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            axios.get(`${appConfig.apiDomaine}/message-apis`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setMessageAPIs(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newMessageApis = [...messageAPIs];\r\n        newMessageApis = newMessageApis.filter(el => (\r\n            getLowerCaseString(el.name).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.method).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newMessageApis;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(messageAPIs.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(messageAPIs.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(messageAPIs.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(messageAPIs.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(messageAPIs.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                messageAPIs.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                messageAPIs.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteMessageAPI = (messageAPIid, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/message-apis/${messageAPIid}`)\r\n                            .then(response => {\r\n                                const newMessageAPIs = [...messageAPIs];\r\n                                newMessageAPIs.splice(index, 1);\r\n                                setMessageAPIs(newMessageAPIs);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newMessageAPIs.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newMessageAPIs.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (messageAPI, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{messageAPI.name}</td>\r\n                <td>{messageAPI.method}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-message-apis') ? (\r\n                            <Link to={`/settings/message-apis/${messageAPI.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-message-apis') ? (\r\n                            <button\r\n                                onClick={(e) => deleteMessageAPI(messageAPI.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-message-apis') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Message API\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-message-apis\"}\r\n                            title={\"Message API\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/message-apis/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input\r\n                                                            id=\"myInput\"\r\n                                                            type=\"text\"\r\n                                                            onKeyUp={(e) => searchElement(e)}\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            placeholder=\"\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Méthode\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        messageAPIs.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((messageAPI, index) => (\r\n                                                                    printBodyTable(messageAPI, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Méthode</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {messageAPIs.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MessageApi);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\PercentageMinFusion.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\SatisfactionMeasure.jsx",["978"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {loadCss, filterDataTableBySearchValue, forceRound} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list:`${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list:`${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\r\n        },\r\n        filial: {\r\n            list:`${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list:`${appConfig.apiDomaine}/any/claim-satisfaction-measured`,\r\n    }\r\n};\r\n\r\nconst SatisfactionMeasure = (props) => {\r\n    document.title = \"Satis client - Mesure satisfaction\";\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'list-satisfaction-measured-my-claim') ||\r\n        verifyPermission(props.userPermissions, \"list-satisfaction-measured-any-claim\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-satisfaction-measured-my-claim'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-satisfaction-measured-my-claim'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [satisfactionMeasure, setSatisfactionMeasure] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setSatisfactionMeasure(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(satisfactionMeasure.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(satisfactionMeasure.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(satisfactionMeasure.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                satisfactionMeasure.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                satisfactionMeasure.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (measure, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{measure.reference === null ? \"\" : measure.reference}</td>\r\n                <td>{`${measure.claimer.lastname} ${measure.claimer.firstname}`}</td>\r\n                <td>{measure.description === null ? \"\" : measure.description}</td>\r\n                <td>{measure.active_treatment.solution === null ? \"\" : measure.active_treatment.solution}</td>\r\n                {\r\n                    verifyPermission(props.userPermissions, \"update-satisfaction-measured-my-claim\") ||\r\n                    verifyPermission(props.userPermissions, \"update-satisfaction-measured-any-claim\") ? (\r\n                        <td style={{textAlign: 'center'}}>\r\n                            <a href={`/process/claim_measure/${measure.id}/detail`}\r\n                               className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                               title=\"Détail\">\r\n                                <i className=\"la la-eye\"/>\r\n                            </a>\r\n\r\n                        </td>\r\n                    ): null\r\n                }\r\n\r\n            </tr>\r\n        )\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Processus\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                               className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                Traitement\r\n                            </a>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Mesure de Satisfaction\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable information={\"La liste des réclamations à mésurer la satisfaction\"}/>\r\n\r\n                <div className=\"kt-portlet\">\r\n\r\n                    <HeaderTablePage\r\n                        title={\"Mesure de Satisfaction\"}\r\n                    />\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Rechercher:\r\n                                                    <input id=\"myInput\" type=\"text\"\r\n                                                           onKeyUp={(e) => searchElement(e)}\r\n                                                           className=\"form-control form-control-sm\"\r\n                                                           placeholder=\"\"\r\n                                                           aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <table\r\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{width: \"952px\"}}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Référence\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Réclamant\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Solutions proposées\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                        aria-label=\"Type: activate to sort column ascending\">\r\n                                                        Action\r\n                                                    </th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {\r\n                                                    satisfactionMeasure.length ? (\r\n                                                        search ? (\r\n                                                            satisfactionMeasure.map((measure, index) => (\r\n                                                                printBodyTable(measure, index)\r\n                                                            ))\r\n                                                        ) : (\r\n                                                            showList.map((measure, index) => (\r\n                                                                printBodyTable(measure, index)\r\n                                                            ))\r\n                                                        )\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    )\r\n                                                }\r\n                                                </tbody>\r\n                                                <tfoot>\r\n                                                <tr>\r\n\r\n                                                </tr>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1\r\n                                                à {numberPerPage} sur {satisfactionMeasure.length} données\r\n                                            </div>\r\n                                        </div>\r\n                                        {\r\n                                            !search ? (\r\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                    <Pagination\r\n                                                        numberPerPage={numberPerPage}\r\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                        activeNumberPage={activeNumberPage}\r\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                        pages={pages}\r\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                        numberPage={numberPage}\r\n                                                        onClickNextPage={e => onClickNextPage(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SatisfactionMeasure);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RecurencePage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigRapportAuto.jsx",["979"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/reporting-claim/config`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\r\n        }\r\n    },\r\n};\r\n\r\nconst ConfigRapportAuto = (props) => {\r\n    document.title = \"Satis rapport - Paramètre Configuration Rapport Automatique\";\r\n    if (!verifyPermission(props.userPermissions, \"config-reporting-claim-any-institution\")||\r\n        verifyPermission(props.userPermissions, \"config-reporting-claim-my-institution\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'config-reporting-claim-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [rapportAuto, setRapportAuto] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setRapportAuto(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    },[]);\r\n\r\n    const getEmailString = (email) => {\r\n        let emailString = \"\";\r\n        email.map((mail, index) => (\r\n            index === email.length - 1 ? emailString + mail : emailString + mail  +\"/ \"\r\n        ));\r\n        return emailString;\r\n    };\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newRapportAuto = [...rapportAuto];\r\n        newRapportAuto = newRapportAuto.filter(el => (\r\n            getLowerCaseString(el.institution_targeted ? el.institution_targeted.name : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.period ? el.period_tag.label : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(getEmailString(el.email)).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.email ? el.email : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newRapportAuto;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(rapportAuto.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(rapportAuto.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(rapportAuto.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(rapportAuto.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(rapportAuto.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                rapportAuto.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                rapportAuto.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteCategoryClient = (rapportAutoId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(endPoint.list + `/${rapportAutoId}`)\r\n                            .then(response => {\r\n                                const newRapport = [...rapportAuto];\r\n                                newRapport.splice(index, 1);\r\n                                setRapportAuto(newRapport);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newRapport.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newRapport.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (rapport, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{rapport.institution_targeted?rapport.institution_targeted.name:\"\"}</td>\r\n                <td>{rapport.period===null?\"\":rapport.period_tag.label}</td>\r\n                <td>\r\n                    {rapport.email ?\r\n                        rapport.email.map((mail, index) => (\r\n                            index === rapport.email.length - 1 ? mail : mail  +\"/ \"\r\n                        )) : null\r\n                    }\r\n                </td>\r\n                {/*<td>{rapport.email===null?\"\":rapport.email}</td>*/}\r\n                <td style={{textAlign:'center'}}>\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution') ?\r\n                            <Link\r\n                                to={`/settings/rapport/edit/${rapport.id}`}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            : null\r\n                    }\r\n\r\n                    {verifyPermission(props.userPermissions, \"config-reporting-claim-any-institution\") ?\r\n                        <button\r\n                            onClick={(e) => deleteCategoryClient(rapport.id, index)}\r\n                            className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                            title=\"Supprimer\">\r\n                            <i className=\"la la-trash\"/>\r\n                        </button>\r\n                        : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Rapport automatique\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"Liste des rapports automatiques\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n\r\n                        <HeaderTablePage\r\n                            addPermission={\"config-reporting-claim-any-institution\"}\r\n                            title={\"Rapport Automatique\"}\r\n                            addText={\"Ajouter une configuration\"}\r\n                            addLink={\"/settings/rapport/add\"}\r\n                        />\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\" style={{textAlign:\"center\"}}>\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Institutions\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Périodes\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Emails\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        rapportAuto.length ? (\r\n                                                            showList ? (\r\n                                                                showList.map((rapport, index) => (\r\n                                                                    printBodyTable(rapport, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr style={{textAlign:\"center\"}}>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Institutions</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Périodes</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Emails</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {rapportAuto.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ConfigRapportAuto);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RejectLimitPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ProfilePage.jsx",["980","981","982","983","984","985","986"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink, Route, Switch} from \"react-router-dom\";\r\nimport PersonalInfo from \"../components/profile/PersonalInfo\";\r\nimport UpdatePassword from \"../components/profile/UpdatePassword\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst ProfilePage = ({user}) => {\r\n    const defaultData = {\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        sexe: \"\",\r\n        telephone: [],\r\n        email: [],\r\n        ville: \"\"\r\n    };\r\n\r\n    const [data, setData] = useState(defaultData);\r\n\r\n    const username = user.data.username;\r\n    const formatRole = (rules) => {\r\n        const newRules = [];\r\n        rules.map(r => newRules.push(r.name));\r\n        return newRules.join(' / ');\r\n    };\r\n\r\n    const role = formatRole(user.data.roles);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${appConfig.apiDomaine}/edit-profil`)\r\n                .then(({data}) => {\r\n                    setData({\r\n                        firstname: data.identite.firstname,\r\n                        lastname: data.identite.lastname,\r\n                        sexe: data.identite.sexe,\r\n                        telephone: data.identite.telephone,\r\n                        email: data.identite.email,\r\n                        ville: data.identite.ville ? data.identite.ville : \"\"\r\n                    });\r\n                })\r\n                .catch(({response}) => {\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const handleLastNameChange = (lastname) => {\r\n        setData({...data, lastname: lastname});\r\n    };\r\n\r\n    const handleFirstNameChange = (firstname) => {\r\n        setData({...data, firstname: firstname});\r\n    };\r\n\r\n    const handleTelephoneChange = (tags) => {\r\n        setData({...data, telephone: tags});\r\n    };\r\n\r\n    const handleEmailChange = (tags) => {\r\n        setData({...data, email: tags});\r\n    };\r\n\r\n    const handleVilleChange = (ville) => {\r\n        setData({...data, ville: ville});\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            <button className=\"kt-subheader__mobile-toggle kt-subheader__mobile-toggle--left\" id=\"kt_subheader_mobile_toggle\">\r\n                                <span/>\r\n                            </button>\r\n                            Paramètre\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                <i className=\"flaticon2-shelter\"/>\r\n                            </a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"\" style={{cursor: \"default\"}} onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                Profile\r\n                            </a>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n\r\n                <div className=\"kt-grid kt-grid--desktop kt-grid--ver kt-grid--ver-desktop kt-app\">\r\n\r\n                    <button className=\"kt-app__aside-close\" id=\"kt_user_profile_aside_close\">\r\n                        <i className=\"la la-close\"/>\r\n                    </button>\r\n\r\n                    <div className=\"kt-grid__item kt-app__toggle kt-app__aside\" id=\"kt_user_profile_aside\">\r\n                        <div className=\"kt-portlet \">\r\n                            <div className=\"kt-portlet__head  kt-portlet__head--noborder\">\r\n                                <div className=\"kt-portlet__head-label\">\r\n                                    <h3 className=\"kt-portlet__head-title\">\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"kt-portlet__body kt-portlet__body--fit-y\">\r\n                                <div className=\"kt-widget kt-widget--user-profile-1\">\r\n                                    <div className=\"kt-widget__head\">\r\n                                        <div className=\"kt-widget__media\">\r\n                                            <img src=\"/assets/media/users/default.jpg\" alt=\"image\"/>\r\n                                        </div>\r\n                                        <div className=\"kt-widget__content\">\r\n                                            <div className=\"kt-widget__section\">\r\n                                                <a href=\"#\" className=\"kt-widget__username\">\r\n                                                    {`${data.lastname} ${data.firstname}`}\r\n                                                </a>\r\n                                                {/*<span className=\"kt-widget__subtitle\">\r\n                                                    Head of Development\r\n                                                </span>*/}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"kt-widget__body\">\r\n                                        <div className=\"kt-widget__content\">\r\n                                            <div className=\"kt-widget__info\">\r\n                                                <span className=\"kt-widget__label\">Username:</span>\r\n                                                <a href=\"#\" className=\"kt-widget__data\">{username}</a>\r\n                                            </div>\r\n                                            <div className=\"kt-widget__info\">\r\n                                                <span className=\"kt-widget__label\">Téléphone:</span>\r\n                                                <a href=\"#\" className=\"kt-widget__data\">{data.telephone.join(\"/\")}</a>\r\n                                            </div>\r\n                                            <div className=\"kt-widget__info\">\r\n                                                <span className=\"kt-widget__label\">Roles:</span>\r\n                                                <span className=\"kt-widget__data\">{role}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-widget__items\">\r\n                                            <NavLink to=\"/settings/account/personal-information\" className=\"kt-widget__item\" activeClassName=\"kt-widget__item--active\">\r\n                                                <span className=\"kt-widget__section\">\r\n                                                    <span className=\"kt-widget__icon\">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0h24v24H0z\"/><path d=\"M12 11a4 4 0 110-8 4 4 0 010 8z\" fill=\"#000\" fillRule=\"nonzero\" opacity=\".3\"/><path d=\"M3 20.2c.388-4.773 4.262-7.2 8.983-7.2 4.788 0 8.722 2.293 9.015 7.2.012.195 0 .8-.751.8H3.727c-.25 0-.747-.54-.726-.8z\" fill=\"#000\" fillRule=\"nonzero\"/></g></svg>\r\n                                                    </span>\r\n                                                    <span className=\"kt-widget__desc\">\r\n                                                        Informations personnelles\r\n                                                    </span>\r\n                                                </span>\r\n                                            </NavLink>\r\n\r\n                                            <NavLink to=\"/settings/account/change-password\" className=\"kt-widget__item \" activeClassName=\"kt-widget__item--active\">\r\n                                                <span className=\"kt-widget__section\">\r\n                                                    <span className=\"kt-widget__icon\">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0h24v24H0z\"/><path d=\"M4 4l7.631-1.43a2 2 0 01.738 0L20 4v9.283a8.51 8.51 0 01-4 7.217l-3.47 2.169a1 1 0 01-1.06 0L8 20.5a8.51 8.51 0 01-4-7.217V4z\" fill=\"#000\" opacity=\".3\"/><path d=\"M12 11a2 2 0 110-4 2 2 0 010 4zM7 16.5c.216-2.983 2.368-4.5 4.99-4.5 2.66 0 4.846 1.433 5.009 4.5.006.122 0 .5-.418.5H7.404c-.14 0-.415-.338-.404-.5z\" fill=\"#000\" opacity=\".3\"/></g></svg>\r\n                                                    </span>\r\n                                                    <span className=\"kt-widget__desc\">\r\n                                                        Changer le mot de passe\r\n                                                    </span>\r\n                                                </span>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-grid__item kt-grid__item--fluid kt-app__content\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12\">\r\n                                <Route exact path=\"/settings/account\">\r\n                                    <PersonalInfo\r\n                                        data={data}\r\n                                        handleLastNameChange={handleLastNameChange}\r\n                                        handleFirstNameChange={handleFirstNameChange}\r\n                                        handleTelephoneChange={handleTelephoneChange}\r\n                                        handleEmailChange={handleEmailChange}\r\n                                        handleVilleChange={handleVilleChange}\r\n                                    />\r\n                                </Route>\r\n\r\n                                <Route exact path=\"/settings/account/personal-information\">\r\n                                    <PersonalInfo\r\n                                        data={data}\r\n                                        handleLastNameChange={handleLastNameChange}\r\n                                        handleFirstNameChange={handleFirstNameChange}\r\n                                        handleTelephoneChange={handleTelephoneChange}\r\n                                        handleEmailChange={handleEmailChange}\r\n                                        handleVilleChange={handleVilleChange}\r\n                                    />\r\n                                </Route>\r\n\r\n                                <Route exact path=\"/settings/account/change-password\">\r\n                                    <UpdatePassword/>\r\n                                </Route>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProfilePage);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RuleAddPage.jsx",["987","988"],"import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\nimport {formatPermissions, formatSelectOption} from \"../../helpers/function\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig, toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst RuleAddPage = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!(verifyPermission(props.userPermissions, 'update-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role')))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!(verifyPermission(props.userPermissions, 'store-any-institution-type-role') || verifyPermission(props.userPermissions, 'store-my-institution-type-role')))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        name: \"\",\r\n        institution_type: [],\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        institutionTypes: [],\r\n        permissions: []\r\n    };\r\n    const [institutionTypes, setInstitutionTypes] = useState([]);\r\n    const [institutionType, setInstitutionType] = useState([]);\r\n    const [modulesPermissions, setModulesPermissions] = useState(null);\r\n    const [proModule, setProModule] = useState(null);\r\n    const [permissions, setPermissions] = useState([]);\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            var endpoint = '';\r\n            if (id) {\r\n                if (verifyPermission(props.userPermissions, 'update-any-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/any/roles/${id}/edit`;\r\n                if (verifyPermission(props.userPermissions, 'update-my-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/my/roles/${id}/edit`;\r\n                await axios.get(endpoint)\r\n                    .then(response => {\r\n                        if (verifyPermission(props.userPermissions, 'update-any-institution-type-role')) {\r\n                            const newInstitutionTypes = [];\r\n                            response.data.role.institution_types.map((el, index) => newInstitutionTypes.push({value: index, label: el}));\r\n\r\n                            setInstitutionTypes(formatSelectOption(response.data.institutionTypes, 'name'));\r\n                            setModulesPermissions(response.data.modulesPermissions);\r\n\r\n                            const newData = {...data};\r\n                            newData.name = response.data.role.name;\r\n                            newData.institution_type = response.data.role.institution_types;\r\n                            setPermissions(formatPermissions(response.data.role.permissions));\r\n                            setData(newData);\r\n                            setInstitutionType(newInstitutionTypes);\r\n                        } else if (verifyPermission(props.userPermissions, 'update-my-institution-type-role')) {\r\n                            setPermissions(formatPermissions(response.data.role.permissions));\r\n                            const newData = {...data};\r\n                            newData.name = response.data.role.name;\r\n                            setData(newData);\r\n                            setProModule(response.data.modulesPermissions.independant);\r\n                        }\r\n                    })\r\n                    .catch(({response}) => {\r\n                        if (response.data && response.data.error)\r\n                            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(response.data.error));\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            } else {\r\n                if (verifyPermission(props.userPermissions, 'store-any-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/any/roles/create`;\r\n                if (verifyPermission(props.userPermissions, 'store-my-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/my/roles/create`;\r\n                await axios.get(endpoint)\r\n                    .then(response => {\r\n                        if (verifyPermission(props.userPermissions, 'store-any-institution-type-role')) {\r\n                            setInstitutionTypes(formatSelectOption(response.data.institutionTypes, 'name'));\r\n                            setModulesPermissions(response.data.modulesPermissions);\r\n                        } else if (verifyPermission(props.userPermissions, 'store-my-institution-type-role'))\r\n                            setProModule(response.data);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [id, props.userPermissions]);\r\n\r\n    const handleNameChange = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handleInstitutionType = (selected) => {\r\n        const values = [];\r\n        const newData = {...data};\r\n        if (selected)\r\n            selected.map(el => values.push(el.label));\r\n        newData.institution_type = values;\r\n        setPermissions([]);\r\n        setData(newData);\r\n\r\n        setInstitutionType(selected);\r\n        setInstitutionType(selected ? selected : []);\r\n    };\r\n\r\n    const handlePermissionChange = (e) => {\r\n        var newPermission = [...permissions];\r\n        if (newPermission.includes(e.target.name))\r\n            newPermission.splice(newPermission.indexOf(e.target.name), 1);\r\n        else\r\n            newPermission.push(e.target.name);\r\n        setPermissions(newPermission);\r\n    };\r\n\r\n    const printModule = (module, index, allModule) => {\r\n        return (\r\n            <div key={index}>\r\n                <h5 className=\"text-center\">Module: {module.name[\"fr\"]}</h5>\r\n                <div className={error.permissions.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                    <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"unit_type\">Permissions <InputRequire/></label>\r\n                    <div className=\"col-lg-9 col-xl-6\">\r\n                        <div className=\"kt-checkbox-inline\">\r\n                            {\r\n                                module.permissions.map((el, ind) => (\r\n                                    <label className=\"kt-checkbox\" key={ind}>\r\n                                        <input className={\"checkInput\"} type=\"checkbox\" name={el.name} onClick={handlePermissionChange} defaultChecked={permissions.includes(el.name)}/> {el.name}<span/>\r\n                                    </label>\r\n                                ))\r\n                            }\r\n                            {\r\n                                error.permissions.length ? (\r\n                                    index === allModule.length - 1 ? (\r\n                                        error.permissions.map((error, indEr) => (\r\n                                            <div key={indEr} className=\"invalid-feedback text-center\">\r\n                                                {error}\r\n                                            </div>\r\n                                        ))\r\n                                    ) : null\r\n                                ) : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const resetAllCheckbox = () => {\r\n        const checkbox = document.getElementsByClassName(\"checkInput\");\r\n        for (var i = 0; i < checkbox.length; i++)\r\n            checkbox[i].checked = false;\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/rules\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Roles\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification de role\" : \"Ajout de role\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Nom <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le nom du type d'unité\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => handleNameChange(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'store-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-any-institution-type-role') ? (\r\n                                                    <div className={error.institutionTypes.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"unit_type\">Type d'institution <InputRequire/></label>\r\n                                                        <div className=\"col-lg-9 col-xl-6\">\r\n                                                            <Select\r\n                                                                isClearable\r\n                                                                isMulti\r\n                                                                value={institutionType}\r\n                                                                placeholder={\"filial\"}\r\n                                                                onChange={handleInstitutionType}\r\n                                                                options={institutionTypes}\r\n                                                            />\r\n                                                            {\r\n                                                                error.institutionTypes.length ? (\r\n                                                                    error.institutionTypes.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'store-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-any-institution-type-role') ? (\r\n                                                    institutionType.length ? (\r\n                                                        <>\r\n                                                            {\r\n                                                                data.institution_type.length ? (\r\n                                                                    data.institution_type.length === 2 ? (\r\n                                                                        modulesPermissions.all.map((el, index) => (\r\n                                                                            printModule(el, index, modulesPermissions.all)\r\n                                                                        ))\r\n                                                                    ) : (\r\n                                                                        modulesPermissions[data.institution_type[0]].map((el, index) => (\r\n                                                                            printModule(el, index, modulesPermissions[data.institution_type[0]])\r\n                                                                        ))\r\n                                                                    )\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </>\r\n                                                    ) : null\r\n                                                ) : (\r\n                                                    verifyPermission(props.userPermissions, 'store-my-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role') ? (\r\n                                                        proModule ? (\r\n                                                            proModule.map((el, index) => (\r\n                                                                printModule(el, index, proModule)\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    ) : null\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">\r\n                                                            {\r\n                                                                id ? \"Modifier\" : \"Enregistrer\"\r\n                                                            }\r\n                                                        </button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/rules\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/rules\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        const sendData = {\r\n            name: data.name,\r\n            permissions: permissions,\r\n            institutionTypes: data.institution_type\r\n        };\r\n        if (verifyPermission(props.userPermissions, 'store-my-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role'))\r\n            delete sendData.institutionTypes;\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                var endpoint = \"\";\r\n                if (verifyPermission(props.userPermissions, 'update-any-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/any/roles/${id}`;\r\n                if (verifyPermission(props.userPermissions, 'update-my-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/my/roles/${id}`;\r\n\r\n                axios.put(endpoint, sendData)\r\n                    .then(() => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(({response}) => {\r\n                        setError({...defaultError, ...response.data.error});\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                var endpoint = \"\";\r\n                if (verifyPermission(props.userPermissions, 'store-any-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/any/roles`;\r\n                if (verifyPermission(props.userPermissions, 'store-my-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/my/roles`;\r\n                axios.post(endpoint, sendData)\r\n                    .then(() => {\r\n                        if (verifyPermission(props.userPermissions, 'store-any-institution-type-role'))\r\n                            setInstitutionType([]);\r\n                        if (verifyPermission(props.userPermissions, 'store-my-institution-type-role'))\r\n                            resetAllCheckbox();\r\n                        setPermissions([]);\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(({response}) => {\r\n                        setError({...defaultError, ...response.data.error});\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-any-institution-type-role') || verifyPermission(props.userPermissions, 'store-my-institution-type-role') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RuleAddPage);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimImportPage.jsx",["989","990","991","992","993","994","995"],"import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastErrorMessageWithParameterConfig, toastSuccessMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ImportFileForm from \"../components/ImportFileForm\";\r\n\r\nconst ClaimImportPage = (props) => {\r\n    document.title = \"Satis client - Importation reclamation\";\r\n\r\n    let endpoint = \"\";\r\n    if (!(verifyPermission(props.userPermissions, 'store-claim-against-any-institution') || verifyPermission(props.userPermissions, \"store-claim-against-my-institution\") || verifyPermission(props.userPermissions, \"store-claim-without-client\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    if (verifyPermission(props.userPermissions, 'store-claim-against-any-institution'))\r\n        endpoint = `${appConfig.apiDomaine}/any/import-claim`;\r\n    else if(verifyPermission(props.userPermissions, 'store-claim-against-my-institution'))\r\n        endpoint = `${appConfig.apiDomaine}/my/import-claim`;\r\n    else if(verifyPermission(props.userPermissions, 'store-claim-without-client'))\r\n        endpoint = `${appConfig.apiDomaine}/without-client/import-claim`;\r\n\r\n    return (\r\n        <ImportFileForm\r\n            submitEndpoint={endpoint}\r\n            pageTitleLink=\"/process/claims/add\"\r\n            pageTitle=\"Enregistrement reclamation\"\r\n            panelTitle=\"Importation de reclamation au format excel\"\r\n            claimImport={true}\r\n        />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimImportPage);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RuleEditPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\StaffImportPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\HistoricClaimsAdd.jsx",["996"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\n\r\nconst HistoricClaimsAdd = (props) => {\r\n    document.title = \"Satis client - Paramètre Historique\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"history-list-create-claim\")) {\r\n        window.location.href = ERROR_401;\r\n    }\r\n    const [load, setLoad] = useState(true);\r\n    const [claimsAdd, setClaimsAdd] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/history/list-claim\")\r\n                .then(response => {\r\n                    console.log(response.data,\"DATA\")\r\n                    setLoad(false);\r\n                    setClaimsAdd(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaimsAdd = [...claimsAdd];\r\n        newClaimsAdd = newClaimsAdd.filter(el => (\r\n            getLowerCaseString(el.claim_object ? el.claim_object.name.fr : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.claimer.lastname).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.claimer.firstname).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.request_channel_slug).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.response_channel_slug).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newClaimsAdd;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimsAdd.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimsAdd.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimsAdd.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimsAdd.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimsAdd.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimsAdd.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimsAdd.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.claimer.lastname +\" \"+claim.claimer.firstname}</td>\r\n                <td>{claim.claim_object.name.fr}</td>\r\n                <td>{claim.description}</td>\r\n                <td>{claim.request_channel_slug}</td>\r\n                <td>{claim.response_channel_slug}</td>\r\n\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Historiques\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Réclamations Créées\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Réclamations Créées\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"80px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Objets de réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Description de la Réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Canal de réception\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Ship Address: activate to sort column ascending\">Canal de réponse\r\n                                                        </th>\r\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\"*/}\r\n                                                        {/*    aria-controls=\"kt_table_1\"*/}\r\n                                                        {/*    rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}*/}\r\n                                                        {/*    aria-label=\"Type: activate to sort column ascending\">*/}\r\n                                                        {/*    Action*/}\r\n                                                        {/*</th>*/}\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claimsAdd.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr style={{textAlign:\"center\"}}>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objets de réclamtions</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description de réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canal de réception</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canal de réponse</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {claimsAdd.length} données\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HistoricClaimsAdd);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimCategoryImportPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ActivatePilotPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimsArchived.jsx",["997","998"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    loadCss,\r\n    forceRound,\r\n    getLowerCaseString,\r\n} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/claim-archived`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/claim-archived`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/claim-archived`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/any/claim-archived`,\r\n    }\r\n};\r\n\r\nconst ClaimsArchived = (props) => {\r\n    document.title = \"Satis client - Liste réclamations archivées\";\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'list-any-claim-archived') ||\r\n        verifyPermission(props.userPermissions, \"list-my-claim-archived\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-any-claim-archived'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-my-claim-archived'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claimsArchived, setClaimsArchived] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setClaimsArchived(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaims = [...claimsArchived];\r\n        newClaims = newClaims.filter(el => (\r\n            getLowerCaseString(el.reference).indexOf(value) >= 0 ||\r\n            getLowerCaseString(`${el.claimer.lastname} ${el.claimer.firstname}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.active_treatment.solution === null ? \"-\" : el.active_treatment.solution).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newClaims;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimsArchived.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimsArchived.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimsArchived.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimsArchived.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimsArchived.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimsArchived.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimsArchived.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (archived, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{archived.reference === null ? \"-\" : archived.reference}</td>\r\n                <td>{`${archived.claimer.lastname} ${archived.claimer.firstname}`}</td>\r\n                <td>{archived.description === null ? \"-\" : archived.description}</td>\r\n                <td>{archived.active_treatment.solution === null ? \"-\" : archived.active_treatment.solution}</td>\r\n                {\r\n                    verifyPermission(props.userPermissions, \"show-any-claim-archived\") ||\r\n                    verifyPermission(props.userPermissions, \"show-my-claim-archived\") ? (\r\n                        <td style={{textAlign: 'center'}}>\r\n                            <a href={`/process/claim_archived/${archived.id}/detail`}\r\n                               className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                               title=\"Détail\">\r\n                                <i className=\"la la-eye\"/>\r\n                            </a>\r\n                        </td>\r\n                    ) : null\r\n                }\r\n\r\n            </tr>\r\n        )\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Processus\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                               className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                Traitement\r\n                            </a>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Archivage\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable\r\n                    information={\"Liste des réclamtions archivées\"}\r\n                />\r\n\r\n                <div className=\"kt-portlet\">\r\n\r\n                    <HeaderTablePage\r\n                        title={\"Réclamations Archivées\"}\r\n                    />\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Rechercher:\r\n                                                    <input id=\"myInput\" type=\"text\"\r\n                                                       onKeyUp={(e) => searchElement(e)}\r\n                                                       className=\"form-control form-control-sm\"\r\n                                                       placeholder=\"\"\r\n                                                       aria-controls=\"kt_table_1\"\r\n                                                    />\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <table\r\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{width: \"952px\"}}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Référence\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Réclamant\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Solution\r\n                                                    </th>\r\n                                                    {\r\n                                                        verifyPermission(props.userPermissions, \"show-any-claim-archived\") ||\r\n                                                        verifyPermission(props.userPermissions, \"show-my-claim-archived\") ? (\r\n                                                            <th className=\"sorting\" tabIndex=\"0\"\r\n                                                                aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                                aria-label=\"Type: activate to sort column ascending\">\r\n                                                                Action\r\n                                                            </th>\r\n                                                        ) : null\r\n                                                    }\r\n\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {\r\n                                                    claimsArchived.length ? (\r\n                                                        showList.length ? (\r\n                                                            showList.map((archived, index) => (\r\n                                                                printBodyTable(archived, index)\r\n                                                            ))\r\n                                                        ) : <EmptyTable search={true}/>\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    )\r\n                                                }\r\n                                                </tbody>\r\n                                                <tfoot>\r\n                                                <tr/>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1\r\n                                                à {numberPerPage} sur {claimsArchived.length} données\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                            <Pagination\r\n                                                numberPerPage={numberPerPage}\r\n                                                onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                activeNumberPage={activeNumberPage}\r\n                                                onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                pages={pages}\r\n                                                onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                numberPage={numberPage}\r\n                                                onClickNextPage={e => onClickNextPage(e)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimsArchived);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\UserEdit.jsx",["999"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastEditErrorMessageConfig, toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {formatSelectOption} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst UserEdit = (props) => {\r\n    const {id} = useParams();\r\n\r\n    document.title = \"Satis client - Paramètre Envoie de mail\";\r\n    if (!(verifyPermission(props.userPermissions, 'show-user-any-institution') || verifyPermission(props.userPermissions, \"show-user-my-institution\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    const defaultData = {\r\n        roles: [],\r\n        new_password: \"\",\r\n        new_password_confirmation: \"\",\r\n    };\r\n    const defaultError = {\r\n        roles: [],\r\n        new_password: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [roles, setRoles] = useState([]);\r\n    const [role, setRole] = useState([]);\r\n\r\n    const formatDefaultRoles = (userRoles) => {\r\n        const listRoles = [];\r\n        userRoles.map(r => listRoles.push(r.name));\r\n        return listRoles;\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            let endpoint = \"\";\r\n            if (props.plan === \"MACRO\" || props.plan === \"HUB\") {\r\n                if (verifyPermission(props.userPermissions, \"show-user-any-institution\"))\r\n                    endpoint = `${appConfig.apiDomaine}/any/users/${id}/change-role-password`;\r\n                if (verifyPermission(props.userPermissions, \"show-user-my-institution\"))\r\n                    endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\r\n            }\r\n            else if(props.plan === \"PRO\")\r\n                endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\r\n\r\n            if (verifyTokenExpire()) {\r\n                await axios.get(endpoint)\r\n                    .then(({data}) => {\r\n                        const newData = {...defaultData};\r\n                        newData.roles = formatDefaultRoles(data.user.roles);\r\n                        setRole(formatSelectOption(data.user.roles, \"name\", false, \"name\"));\r\n                        setRoles(formatSelectOption(data.roles, \"name\", false, \"name\"));\r\n                        setUser(data.user);\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [props.plan, appConfig.apiDomaine]);\r\n\r\n    const formatSelected = (selected) => {\r\n        const newSelected = [];\r\n        selected.map(s => newSelected.push(s.value));\r\n        return newSelected;\r\n    };\r\n\r\n    const handleRoleChange = (selected) => {\r\n        const newData = {...data};\r\n        newData.roles = selected ? formatSelected(selected) : [];\r\n        setRole(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const newData = {...data};\r\n        newData.new_password = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handlePasswordConfirmationChange = (e) => {\r\n        const newData = {...data};\r\n        newData.new_password_confirmation = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setStartRequest(true);\r\n        let endpoint = \"\";\r\n        if (props.plan === \"MACRO\" || props.plan === \"HUB\") {\r\n            if (verifyPermission(props.userPermissions, \"show-user-any-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/any/users/${id}/change-role-password`;\r\n            if (verifyPermission(props.userPermissions, \"show-user-my-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\r\n        }\r\n        else if(props.plan === \"PRO\")\r\n            endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\r\n\r\n        if (verifyTokenExpire()) {\r\n            console.log(\"enpoint:\", endpoint);\r\n            await axios.put(endpoint, data)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    const newData = {...data};\r\n                    newData.new_password = \"\";\r\n                    newData.new_password_confirmation = \"\";\r\n                    setError(defaultError);\r\n                    setData(newData);\r\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                })\r\n                .catch(errorRequest => {\r\n                    setStartRequest(false);\r\n                    setError({...defaultError, ...errorRequest.response.data.error});\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'show-user-any-institution') || verifyPermission(props.userPermissions, \"show-user-my-institution\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètre\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/users\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Utilisateur\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Modification\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Utilisateur\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.roles.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n                                                    <strong>Utilisateur</strong>\r\n                                                </label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <h4>{ user ? user.identite.lastname : \".......\" } { user ? user.identite.firstname : \".......\" }</h4>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.roles.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={\"role\"}>Role <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        isMulti\r\n                                                        value={role}\r\n                                                        placeholder={\"admin-satis\"}\r\n                                                        onChange={handleRoleChange}\r\n                                                        options={roles}\r\n                                                    />\r\n                                                    {\r\n                                                        error.roles.length ? (\r\n                                                            error.roles.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.new_password.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password\">Mot de passe</label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"password\"\r\n                                                        type=\"password\"\r\n                                                        className={error.new_password.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"************\"\r\n                                                        value={data.new_password}\r\n                                                        onChange={(e) => handlePasswordChange(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.new_password.length ? (\r\n                                                            error.new_password.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={\"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password_confirmation\">Confirmation</label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"password_confirmation\"\r\n                                                        type=\"password\"\r\n                                                        className={\"form-control\"}\r\n                                                        placeholder=\"************\"\r\n                                                        value={data.new_password_confirmation}\r\n                                                        onChange={(e) => handlePasswordConfirmationChange(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Modifier</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n\r\n                                                <Link to={\"/settings/users\"} className=\"btn btn-secondary mx-2\">Quitter</Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserEdit);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ConfigCoefficient.jsx",["1000","1001"],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RulePage.jsx",["1002"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst RulePage = (props) => {\r\n    document.title = \"Satis client - Paramètre role\";\r\n    if (!(verifyPermission(props.userPermissions, \"list-any-institution-type-role\") || verifyPermission(props.userPermissions ,'list-my-institution-type-role')))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [rules, setRulePages] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        var endpoint = ``;\r\n        if (verifyPermission(props.userPermissions, 'list-any-institution-type-role'))\r\n            endpoint = `${appConfig.apiDomaine}/any/roles`;\r\n        if (verifyPermission(props.userPermissions, 'list-my-institution-type-role'))\r\n            endpoint = `${appConfig.apiDomaine}/my/roles`;\r\n        async function fetchData () {\r\n            await axios.get(endpoint)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setRulePages(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newRulePages = [...rules];\r\n        newRulePages = newRulePages.filter(el => (\r\n            getLowerCaseString(el.name ? el.name[\"fr\"] : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description ? el.description[\"fr\"] : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newRulePages;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(rules.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(rules.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(rules.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(rules.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(rules.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                rules.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                rules.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteRulePage = (ruleId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        var endpoint = \"\";\r\n                        if (verifyPermission(props.userPermissions, 'destroy-any-institution-type-role'))\r\n                            endpoint = `${appConfig.apiDomaine}/any/roles/${ruleId}`;\r\n                        if (verifyPermission(props.userPermissions, 'destroy-my-institution-type-role'))\r\n                            endpoint = `${appConfig.apiDomaine}/my/roles/${ruleId}`;\r\n\r\n                        axios.delete(endpoint)\r\n                            .then(response => {\r\n                                const newRulePages = [...rules];\r\n                                newRulePages.splice(index, 1);\r\n                                setRulePages(newRulePages);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newRulePages.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newRulePages.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (rule, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{rule.name ? rule.name : \"-\"}</td>\r\n                <td>\r\n                    {\r\n                        rule.is_editable === 1 ? (\r\n                            verifyPermission(props.userPermissions, 'update-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role') ? (\r\n                                <Link to={`/settings/rules/${rule.name}/edit`}\r\n                                      className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                      title=\"Modifier\">\r\n                                    <i className=\"la la-edit\"/>\r\n                                </Link>\r\n                            ) : null\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-any-institution-type-role') || verifyPermission(props.userPermissions, 'destroy-my-institution-type-role') ? (\r\n                            <button\r\n                                onClick={(e) => deleteRulePage(rule.name, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-any-institution-type-role') || verifyPermission(props.userPermissions, 'list-my-institution-type-role') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Roles\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={[\"store-any-institution-type-role\", 'store-my-institution-type-role']}\r\n                            title={\"Roles\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/rules/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        rules.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((rule, index) => (\r\n                                                                    printBodyTable(rule, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {rules.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RulePage);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimObjectImportPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ParametersComponentEdit.jsx",["1003","1004","1005"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\naxios.defaults.headers.common['Content-Type'] = \"multipart/form-data\";\r\n\r\nconst ParametersComponentEdit = (props) => {\r\n    const {id} = useParams();\r\n\r\n    const [dataType, setDataType] = useState({});\r\n    const [logo, setLogo] = useState(undefined);\r\n\r\n    const [data, setData] = useState({});\r\n    const [error, setError] = useState({});\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    const formatState = (params, paramData = null) => {\r\n        const newState = {};\r\n        const newDataType = {};\r\n        const newError = {};\r\n        params.map(param => {\r\n            newState[`params_${param}`] = paramData ? paramData[param].type === 'image' ? paramData[param].value.url : paramData[param].value : \"\";\r\n            newDataType[`params_${param}`] = paramData ? paramData[param].type : \"\";\r\n            newError[`params_${param}`] = [];\r\n\r\n        });\r\n        console.log(newDataType, \"newDataType\");\r\n        setData(newState);\r\n        setDataType(newDataType);\r\n        setError(newError);\r\n    };\r\n\r\n    const initialState = (stateData) => {\r\n        let componentParams = [];\r\n        for (const param in stateData) {\r\n            componentParams.push(param);\r\n        }\r\n        formatState(componentParams, stateData);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + `/components/${id}`)\r\n                .then(response => {\r\n                    initialState(response.data.params.fr);\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const handleChange = (e, param) => {\r\n        const newData = {...data};\r\n        newData[param] = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const handleChangeImage = (e, param) => {\r\n        const newData = {...data};\r\n        newData[param] = Object.values(e.target.files)[0];\r\n        setData(newData);\r\n        console.log(Object.values(e.target.files)[0], \"NEW_DATA\");\r\n        setLogo( newData[param]);\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            var image = document.getElementById(param);\r\n            console.log(image, 'image');\r\n            image.src = e.target.result;\r\n        };\r\n        reader.readAsDataURL(newData[param]);\r\n    };\r\n\r\n    const executeSave = (url, saveData) => {\r\n        if (verifyTokenExpire()) {\r\n            axios.post(url, saveData)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    window.location.href = \"/settings/config\"\r\n                })\r\n                .catch(errorRequest => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n\r\n    const formatFormData = (newData, newType) => {\r\n        const formData = new FormData();\r\n        formData.set(\"_method\", \"put\");\r\n        for (const key in newData) {\r\n            if (newType[key]===\"image\") {\r\n                formData.append(key, newData[key]);\r\n            }else{\r\n                formData.set(key, newData[key]);\r\n            }\r\n        }\r\n        return formData;\r\n    };\r\n\r\n    const saveData = (e) => {\r\n        e.preventDefault();\r\n        const newData = {...data};\r\n        const newType = {...dataType};\r\n        if (logo!== newData.params_logo){\r\n            delete newData.params_logo;\r\n        }\r\n        if (logo!== newData.params_background){\r\n            delete newData.params_background\r\n        }\r\n        // Debut de Log du contenu du formData\r\n        let dataToSend = formatFormData(newData, newType);\r\n        // console.log(dataToSend.get(\"params_title\"),\"TITLE\")\r\n        // dataToSend = dataToSend.entries();\r\n        // let obj = dataToSend.next();\r\n        // let retrieved = {};\r\n        // while(undefined !== obj.value) {\r\n        //     retrieved[obj.value[0]] = obj.value[1];\r\n        //     obj = dataToSend.next();\r\n        // }\r\n        // console.log('retrieved: ',retrieved);\r\n        // fin de Log du contenu du formData\r\n\r\n        setStartRequest(true);\r\n        executeSave(`${appConfig.apiDomaine}/components/${id}`, dataToSend);\r\n    };\r\n\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Configuration\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Modification Configuration\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n\r\n                                            {\r\n                                                Object.keys(error).length ? (\r\n                                                    Object.values(data).map((param, index) => (\r\n                                                        dataType[Object.keys(dataType)[index]] === \"image\" ?\r\n                                                            <div key={index}\r\n                                                                 className={error[Object.keys(error)[index]].length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                       htmlFor={Object.keys(data)[index]}>{(Object.keys(data)[index]).slice(7)}\r\n                                                                    <InputRequire/></label>\r\n                                                                {/*{console.log(error,\"ERRor\")}*/}\r\n                                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                                    <div className=\"kt-avatar kt-avatar--outline\"\r\n                                                                         id=\"kt_user_add_avatar\">\r\n                                                                        <div className=\"kt-avatar__holder\"\r\n                                                                             style={{textAlign: 'center'}}>\r\n\r\n                                                                            <img\r\n                                                                                id={Object.keys(data)[index]}\r\n                                                                                src={appConfig.apiDomaine + data[Object.keys(data)[index]]}\r\n                                                                                alt={Object.keys(data)[index]}\r\n                                                                                style={{\r\n                                                                                    maxWidth: \"110px\",\r\n                                                                                    maxHeight: \"110px\",\r\n                                                                                    textAlign: 'center'\r\n                                                                                }}\r\n                                                                            />\r\n\r\n                                                                        </div>\r\n                                                                        <label className=\"kt-avatar__upload\"\r\n                                                                               id=\"files\"\r\n                                                                               data-toggle=\"kt-tooltip\"\r\n                                                                               title=\"Change avatar\">\r\n                                                                            <i className=\"fa fa-pen\"/>\r\n                                                                            <input type=\"file\"\r\n                                                                                   id=\"file\"\r\n                                                                                   name=\"kt_user_add_user_avatar\"\r\n                                                                                   onChange={(e) => handleChangeImage(e, Object.keys(data)[index])}\r\n                                                                            />\r\n                                                                        </label>\r\n                                                                        <span className=\"kt-avatar__cancel\"\r\n                                                                              data-toggle=\"kt-tooltip\"\r\n                                                                              title=\"Cancel avatar\">\r\n                                                                            <i className=\"fa fa-times\"/>\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            :\r\n                                                            <div key={index}\r\n                                                                 className={error[Object.keys(error)[index]].length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                       htmlFor={Object.keys(data)[index]}>{(Object.keys(data)[index]).slice(7)}\r\n                                                                    <InputRequire/></label>\r\n                                                                <div className=\"col-lg-9 col-xl-6\">\r\n\r\n                                                                    <input\r\n                                                                        id={Object.keys(data)[index]}\r\n                                                                        type={dataType[Object.keys(dataType)[index]]}\r\n                                                                        className={error[Object.keys(error)[index]].length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                        placeholder={\"Veuillez entrer\"+ \" \" +(Object.keys(data)[index]).slice(7)}\r\n                                                                        value={data[Object.keys(data)[index]]}\r\n                                                                        onChange={(e) => handleChange(e, Object.keys(data)[index])}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        error[Object.keys(error)[index]].length ? (\r\n                                                                            error[Object.keys(error)[index]].map((error, index) => (\r\n                                                                                <div key={index}\r\n                                                                                     className=\"invalid-feedback\">\r\n                                                                                    {error}\r\n                                                                                </div>\r\n                                                                            ))\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                    ))\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => saveData(e)}\r\n                                                                className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button\r\n                                                            className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                            type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/config\"\r\n                                                              className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/config\"\r\n                                                              className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        printJsx()\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ParametersComponentEdit);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\HistoricClaimsTraetment.jsx",["1006"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\n\r\nconst HistoricClaimsAdd = (props) => {\r\n    document.title = \"Satis client - Paramètre Historique\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"history-list-treat-claim\")) {\r\n        window.location.href = ERROR_401;\r\n    }\r\n    const [load, setLoad] = useState(true);\r\n    const [claimsAdd, setClaimsAdd] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/history/list-treat\")\r\n                .then(response => {\r\n                    console.log(response.data,\"DATA\")\r\n                    setLoad(false);\r\n                    setClaimsAdd(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaimsAdd = [...claimsAdd];\r\n        newClaimsAdd = newClaimsAdd.filter(el => (\r\n            getLowerCaseString(el.claim_object ? el.claim_object.name.fr : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.claimer.lastname).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.claimer.firstname).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.request_channel_slug).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.response_channel_slug).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newClaimsAdd;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimsAdd.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimsAdd.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimsAdd.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimsAdd.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimsAdd.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimsAdd.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimsAdd.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.claimer.lastname +\" \"+claim.claimer.firstname}</td>\r\n                <td>{claim.claim_object.name.fr}</td>\r\n                <td>{claim.description}</td>\r\n                <td>{claim.request_channel_slug}</td>\r\n                <td>{claim.response_channel_slug}</td>\r\n\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Historiques\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Réclamations traitées\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Réclamations traitées\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"80px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Objets de réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Description de la Réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Canal de réception\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Ship Address: activate to sort column ascending\">Canal de réponse\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claimsAdd.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr style={{textAlign:\"center\"}}>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objets de réclamtions</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description de réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canal de réception</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canal de réponse</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {claimsAdd.length} données\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HistoricClaimsAdd);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Clients\\ImportClientForm.jsx",["1007","1008"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport InputRequire from \"../InputRequire\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        store: `${appConfig.apiDomaine}/my/import-clients`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            store: `${appConfig.apiDomaine}/any/import-clients`,\r\n        },\r\n        filial: {\r\n            store: `${appConfig.apiDomaine}/my/import-clients`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        store: `${appConfig.apiDomaine}/any/import-clients `,\r\n    }\r\n};\r\n\r\nconst ImportClientForm = (props) => {\r\n    document.title = \"Satis client - Importation de fichier excel\";\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'store-client-from-any-institution') ||\r\n        verifyPermission(props.userPermissions, 'store-client-from-my-institution')))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'store-client-from-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'store-client-from-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n\r\n    const option1 = 1;\r\n    const option2 = 0;\r\n\r\n    const defaultData = {\r\n        file: \"\",\r\n        etat_update: \"\",\r\n        stop_identite_exist: \"\",\r\n    };\r\n    const defaultError = {\r\n        file: [],\r\n        etat_update: \"\",\r\n        stop_identite_exist: \"\",\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    const onChangeFile = (e) => {\r\n        const newData = {...data};\r\n        newData.file = Object.values(e.target.files)[0];\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeOption = (e) => {\r\n        const newData = {...data};\r\n        newData.stop_identite_exist = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeEtatOption = (e) => {\r\n        const newData = {...data};\r\n        newData.etat_update = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const formatFormData = (newData) => {\r\n        const formData = new FormData();\r\n        formData.append(\"_method\", \"post\");\r\n        for (const key in newData) {\r\n            // console.log(`${key}:`, newData[key]);\r\n            if (key === \"file\") {\r\n                formData.append(\"file\", newData.file);\r\n            } else\r\n                formData.set(key, newData[key]);\r\n        }\r\n        console.log(formData.get('file'), 'FORMDATA');\r\n        return formData;\r\n\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios.post(endPoint.store, formatFormData(data))\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    setError(defaultError);\r\n                    setData(defaultData);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    setError({...defaultError, ...error.response.data.error});\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Importation\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Importation de clients\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n                                {console.log(data, \"DATA_OPTION\")}\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n\r\n                                        <div\r\n                                            className={error.stop_identite_exist.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\">Identité existe déjà\r\n                                                ? <InputRequire/></label>\r\n                                            <div className=\"kt-radio-inline col-lg-9 col-xl-6\">\r\n\r\n                                                <label className=\"kt-radio kt-radio--bold kt-radio--success\">\r\n                                                    <input\r\n                                                        className={error.stop_identite_exist.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        type=\"radio\"\r\n                                                        name=\"radio3\"\r\n                                                        value={option1}\r\n                                                        onChange={(e) => onChangeOption(e)}\r\n                                                    /> Oui\r\n                                                    <span/>\r\n                                                </label>\r\n                                                <label className=\"kt-radio kt-radio--bold kt-radio--danger\">\r\n                                                    <input\r\n                                                        className={error.stop_identite_exist.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        type=\"radio\"\r\n                                                        name=\"radio3\"\r\n                                                        value={option2}\r\n                                                        onChange={(e) => onChangeOption(e)}\r\n                                                    /> Non\r\n                                                    <span/>\r\n                                                </label>\r\n                                            </div>\r\n                                            {\r\n                                                error.stop_identite_exist.length ? (\r\n                                                    error.stop_identite_exist.map((error, index) => (\r\n                                                        <div key={index}\r\n                                                             className=\"invalid-feedback\">\r\n                                                            {error}\r\n                                                        </div>\r\n                                                    ))\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            className={error.etat_update.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\">Est ce une mise a\r\n                                                jour? <InputRequire/></label>\r\n                                            <div className=\"kt-radio-inline col-lg-9 col-xl-6\">\r\n\r\n                                                <label className=\"kt-radio kt-radio--bold kt-radio--success\">\r\n                                                    <input\r\n                                                        className={error.etat_update.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        type=\"radio\"\r\n                                                        name=\"radio4\"\r\n                                                        value={option1}\r\n                                                        onChange={(e) => onChangeEtatOption(e)}\r\n                                                    /> Oui\r\n                                                    <span/>\r\n                                                </label>\r\n                                                <label className=\"kt-radio kt-radio--bold kt-radio--danger\">\r\n                                                    <input\r\n                                                        className={error.etat_update.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        type=\"radio\"\r\n                                                        name=\"radio4\"\r\n                                                        value={option2}\r\n                                                        onChange={(e) => onChangeEtatOption(e)}\r\n                                                    /> Non\r\n                                                    <span/>\r\n                                                </label>\r\n                                            </div>\r\n                                            {\r\n                                                error.etat_update.length ? (\r\n                                                    error.etat_update.map((error, index) => (\r\n                                                        <div key={index}\r\n                                                             className=\"invalid-feedback\">\r\n                                                            {error}\r\n                                                        </div>\r\n                                                    ))\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            className={error.file.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                   htmlFor=\"file\">Fichier <InputRequire/></label>\r\n                                            <div className=\"col-md-9 mb-3\">\r\n                                                <input\r\n                                                    id=\"file\"\r\n                                                    type=\"file\"\r\n                                                    className={error.file.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez télécharger le fichier excel\"\r\n                                                    onChange={(e) => onChangeFile(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.file.length ? (\r\n                                                        error.file.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"kt-portlet__foot text-right\">\r\n                                        <div className=\"kt-form__actions\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                            className=\"btn btn-primary\">Enregistrer</button>\r\n                                                ) : (\r\n                                                    <button\r\n                                                        className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                        type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/settings/clients\"\r\n                                                          className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/settings/clients\"\r\n                                                          className=\"btn btn-secondary mx-2\" disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        verifyPermission(props.userPermissions, 'store-client-from-any-institution') ||\r\n        verifyPermission(props.userPermissions, 'store-client-from-my-institution') ?\r\n            printJsx()\r\n            : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ImportClientForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Clients\\ClientForm.jsx",["1009","1010","1011","1012"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport '../staff/react-tagsinput.css'\r\nimport IdentityForm from \"../IdentityForm\";\r\nimport Select from \"react-select\";\r\nimport {formatSelectOption} from \"../../../helpers/function\";\r\nimport {connect} from \"react-redux\";\r\nimport {addIdentity} from \"../../../store/actions/IdentityAction\";\r\nimport {AUTH_TOKEN} from \"../../../constants/token\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst EditClients = (props) => {\r\n    const {id} = useParams();\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-client-from-my-institution'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-client-from-my-institution'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        account_type_id: \"\",\r\n        number: \"\",\r\n        category_client_id: \"\",\r\n\r\n\r\n    };\r\n    const defaultError = {\r\n        account_type_id: [],\r\n        number: [],\r\n        category_client_id: [],\r\n\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [identity, setIdentity] = useState(undefined);\r\n    const [accountType, setAccountTypes] = useState(undefined);\r\n    const [categoryClient, setCategoryClient] = useState(undefined);\r\n    const [type, setType] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + '/my/clients/create')\r\n                .then(response => {\r\n                    setAccountTypes(response.data.AccountTypes);\r\n                    setCategoryClient(response.data.clientCategories);\r\n                })\r\n            ;\r\n\r\n            if (id) {\r\n                axios.get(appConfig.apiDomaine + `/my/clients/${id}/edit`)\r\n                    .then(response => {\r\n                        const newClient = {\r\n                            number: response.data.client_institution.accounts[0].number,\r\n                            account_type_id: response.data.client_institution.accounts[0].account_type_id,\r\n                            category_client_id: response.data.client_institution.category_client_id,\r\n\r\n                        };\r\n                        setData(newClient);\r\n                        const newIdentity = {\r\n                            firstname: response.data.client_institution.client.identite.firstname,\r\n                            lastname: response.data.client_institution.client.identite.lastname,\r\n                            sexe: response.data.client_institution.client.identite.sexe,\r\n                            telephone: response.data.client_institution.client.identite.telephone,\r\n                            email: response.data.client_institution.client.identite.email,\r\n                            ville: response.data.client_institution.client.identite.ville === null ? \"\" : response.data.client_institution.client.identite.ville,\r\n                        };\r\n                        setIdentity(newIdentity);\r\n                        props.addIdentite(newIdentity);\r\n                        setType({\r\n                            value: response.data.client_institution.accounts[0].account_type.id,\r\n                            label: response.data.client_institution.accounts[0].account_type.name.fr\r\n                        });\r\n                        setCategory({\r\n                            value: response.data.client_institution.category_client.id,\r\n                            label: response.data.client_institution.category_client.name.fr\r\n                        });\r\n\r\n                    });\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const onChangeAccountType = (selected) => {\r\n        const newData = {...data};\r\n        newData.account_type_id = selected.value;\r\n        setType(selected);\r\n        setData(newData);\r\n    };\r\n    const onChangeAccount = (e) => {\r\n        const newData = {...data};\r\n        newData.number = e.target.value;\r\n        setData(newData);\r\n\r\n    };\r\n\r\n    const onChangeCategoryClient = (selected) => {\r\n        const newData = {...data};\r\n        newData.category_client_id = selected.value;\r\n        setCategory(selected);\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        {\r\n            console.log(...props.identite, \"props\")\r\n        }\r\n        const formData = {...props.identite, ...data};\r\n        console.log(formData, \"FORM_DATA\");\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(appConfig.apiDomaine + `/my/clients/${id}`, formData)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch((errorRequest) => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\r\n                            errorRequest.response.data.identite.lastname + \" \" + errorRequest.response.data.identite.firstname + \": \" + errorRequest.response.data.message)\r\n                        );\r\n                    })\r\n                ;\r\n            } else {\r\n                console.log(props.identite.client_id, \"CLIENT_ID\");\r\n                if (props.identite.client_id) {\r\n                    axios.post(appConfig.apiDomaine + `/my/accounts/${props.identite.client_id}/clients`, formData)\r\n                        .then(response => {\r\n                            setStartRequest(false);\r\n                            setError(defaultError);\r\n                            setData(defaultData);\r\n                            setType({});\r\n                            setCategory({});\r\n                            setIdentity({});\r\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                        })\r\n                        .catch((errorRequest) => {\r\n                            setStartRequest(false);\r\n                            setError({...defaultError, ...errorRequest.response.data.error});\r\n                            ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        })\r\n                    ;\r\n                } else {\r\n                    axios.post(appConfig.apiDomaine + `/my/clients`, formData)\r\n                        .then(response => {\r\n                            setStartRequest(false);\r\n                            setError(defaultError);\r\n                            setData(defaultData);\r\n                            setType({});\r\n                            setCategory({});\r\n                            setIdentity({});\r\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                        })\r\n                        .catch(async (errorRequest) => {\r\n\r\n                            console.log(errorRequest.response.data.identite, 'ERROR');\r\n\r\n                            if (errorRequest.response.data.identite) {\r\n                                await axios.post(appConfig.apiDomaine + `/my/identites/${errorRequest.response.data.identite.id}/client`, formData)\r\n                                    .then(response => {\r\n                                        setStartRequest(false);\r\n                                        setError(defaultError);\r\n                                        setData(defaultData);\r\n                                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                                    })\r\n                            } else if (errorRequest.response.data.client) {\r\n                                setStartRequest(false);\r\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\r\n                                    errorRequest.response.data.client.identite.lastname + \" \" + errorRequest.response.data.client.identite.firstname + \": \" + errorRequest.response.data.message)\r\n                                );\r\n                            } else {\r\n                                setStartRequest(false);\r\n                                setError({...defaultError, ...errorRequest.response.data.error});\r\n                                ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <Link to=\"/settings/clients\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                Client\r\n                            </Link>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                {\r\n                                    id ? \"Modification\" : \"Ajout\"\r\n                                }\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"kt-portlet\">\r\n                            <div className=\"kt-portlet__head\">\r\n                                <div className=\"kt-portlet__head-label\">\r\n                                    <h3 className=\"kt-portlet__head-title\">\r\n                                        {\r\n                                            id ?\r\n                                                \"Modification de Clients\" : \" Ajout de Clients\"\r\n                                        }\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n                            <form method=\"POST\" className=\"kt-form\">\r\n\r\n                                <div className=\"kt-portlet\">\r\n\r\n                                    {\r\n\r\n                                        !id ? (\r\n                                            <IdentityForm/>\r\n\r\n                                        ) : (\r\n                                            identity ?\r\n                                                <IdentityForm\r\n                                                    getIdentite={identity}\r\n                                                    getLoading={true}\r\n                                                />\r\n                                                : null\r\n                                        )\r\n                                    }\r\n\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"kt-section kt-section--first\">\r\n                                            <h5 className=\"kt-section__title kt-section__title-lg\">\r\n                                                Informations Techniques\r\n                                            </h5>\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <div className={error.account_type_id.length ? \"col validated\" : \"col\"}>\r\n                                                    <label htmlFor=\"exampleSelect1\">Type de Compte</label>\r\n                                                    {accountType ? (\r\n                                                        <Select\r\n                                                            value={type}\r\n                                                            onChange={onChangeAccountType}\r\n                                                            placeholder={\"Veillez selectionner le type de compte\"}\r\n                                                            options={formatSelectOption(accountType, 'name', 'fr')}\r\n                                                        />\r\n                                                    ) : (<select name=\"typeClient\"\r\n                                                                 className={error.account_type_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                 id=\"typeClient\">\r\n                                                        <option value=\"\"/>\r\n                                                    </select>)\r\n                                                    }\r\n\r\n                                                    {\r\n                                                        error.account_type_id.length ? (\r\n                                                            error.account_type_id.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                                <div\r\n                                                    className={error.category_client_id.length ? \"col validated\" : \"col\"}>\r\n                                                    <label htmlFor=\"exampleSelect1\">Catégorie Client</label>\r\n\r\n                                                    {categoryClient ? (\r\n                                                        <Select\r\n                                                            value={category}\r\n                                                            onChange={onChangeCategoryClient}\r\n                                                            placeholder={\"Veillez selectionner la catégorie client\"}\r\n                                                            options={formatSelectOption(categoryClient, 'name', 'fr')}\r\n                                                        />\r\n                                                    ) : (<select name=\"category\"\r\n                                                                 className={error.category_client_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                 id=\"category\">\r\n                                                        <option value=\"\"/>\r\n                                                    </select>)\r\n                                                    }\r\n\r\n                                                    {\r\n                                                        error.category_client_id.length ? (\r\n                                                            error.category_client_id.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row\">\r\n\r\n                                                <div className={error.number.length ? \"col validated\" : \"col\"}>\r\n                                                    <label htmlFor=\"number\">Numero de Compte</label>\r\n                                                    <input\r\n                                                        id=\"number\"\r\n                                                        type=\"text\"\r\n                                                        className={error.number.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le numero de compte\"\r\n                                                        value={data.number}\r\n                                                        onChange={(e) => onChangeAccount(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.number.length ? (\r\n                                                            error.number.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"kt-portlet__foot\">\r\n                                    <div className=\"kt-form__actions text-right\">\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                        className=\"btn btn-primary\">Envoyer</button>\r\n                                            ) : (\r\n                                                <button\r\n                                                    className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                    type=\"button\" disabled>\r\n                                                    Loading...\r\n                                                </button>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\">\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            ) : (\r\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\"\r\n                                                      disabled>\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        identite: state.identity,\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {addIdentite: addIdentity})(EditClients);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Institutions\\InstitutionForm.jsx",["1013"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig, toastEditSuccessMessageConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport Select from \"react-select\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport InputRequire from \"../InputRequire\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\n\r\nconst InstitutionForm = (props) => {\r\n    const {id} = useParams();\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-any-institution'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-any-institution'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        institution_type_id: \"\",\r\n        name: \"\",\r\n        acronyme: \"\",\r\n        iso_code: \"\",\r\n        logo: \"/assets/media/users/Icon.png\",\r\n        default_currency_slug:\"\"\r\n    };\r\n    const defaultError = {\r\n        institution_type_id: [],\r\n        name: [],\r\n        acronyme: [],\r\n        iso_code: [],\r\n        logo: \"/assets/media/users/Icon.png\",\r\n        default_currency_slug:[]\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [logo, setLogo] = useState(undefined);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [defaultCurrency, setDefaultCurrency] = useState(null);\r\n    const [defaultCurrencyData, setDefaultCurrencyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            if (verifyPermission(props.userPermissions, 'store-any-institution')) {\r\n                axios.get(appConfig.apiDomaine + '/any/institutions/create')\r\n                    .then(response => {\r\n                        console.log(response.data, \"DEVISE\")\r\n                        setDefaultCurrencyData(response.data.currencies.length ?\r\n                            response.data.currencies.map((currencie) => ({\r\n                                value: currencie.slug,\r\n                                label: currencie.name.fr\r\n                            })) : null\r\n                        )\r\n                        // setDefaultCurrencyData(options);\r\n                    })\r\n                ;\r\n            }\r\n\r\n            if (id) {\r\n                axios.get(appConfig.apiDomaine + `/any/institutions/${id}`)\r\n                    .then(response => {\r\n                        console.log(response, \"GET_INSTITUTION\");\r\n                        const newInstitution = {\r\n                            default_currency_slug: (response.data.default_currency_slug !== null) ? (response.data.default_currency_slug) : '',\r\n                            name: response.data.name,\r\n                            acronyme: response.data.acronyme,\r\n                            iso_code: response.data.iso_code,\r\n                            logo: response.data.logo,\r\n                        };\r\n                        setData(newInstitution);\r\n                        if (response.data.default_currency_slug !== null) {\r\n                            setDefaultCurrency({\r\n                                value: response.data.default_currency.slug,\r\n                                label: response.data.default_currency.name.fr\r\n                            });\r\n                        }\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeCurrencies = (selected) => {\r\n        const newData = {...data};\r\n        newData.default_currency_slug = selected.value;\r\n        setDefaultCurrency(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeAcronyme = (e) => {\r\n        const newData = {...data};\r\n        newData.acronyme = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeIsoCode = (e) => {\r\n        const newData = {...data};\r\n        newData.iso_code = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeFile = (e) => {\r\n        const newData = {...data};\r\n        newData.logo = e.target.files[0];\r\n        setData(newData);\r\n        setLogo(newData);\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            var image = document.getElementById('Image1');\r\n            console.log(image, 'image');\r\n            image.src = e.target.result;\r\n        };\r\n        reader.readAsDataURL(newData.logo);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        if (logo) {\r\n            formData.append('logo', data.logo);\r\n        }\r\n        formData.set('name', data.name);\r\n        formData.set('default_currency_slug', data.default_currency_slug);\r\n        formData.set('acronyme', data.acronyme);\r\n        formData.set('iso_code', data.iso_code);\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                formData.append(\"_method\", \"put\");\r\n                axios.post(appConfig.apiDomaine + `/any/institutions/${id}`, formData)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(appConfig.apiDomaine + `/any/institutions`, formData)\r\n                    .then(response => {\r\n                        setError(defaultError);\r\n                        setStartRequest(false);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setError({defaultError, ...error.response.data.error});\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/institution\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Institution\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ?\r\n                                                    \"Modification d'une institution\" : \"Ajout d'une institution\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n                                                                <div className=\"form-group row\">\r\n                                                                    <label\r\n                                                                        className=\"col-xl-3 col-lg-3 col-form-label\">Logo</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <div className=\"kt-avatar kt-avatar--outline\"\r\n                                                                             id=\"kt_user_add_avatar\">\r\n                                                                            <div className=\"kt-avatar__holder\"\r\n                                                                                 style={{textAlign: 'center'}}>\r\n                                                                                {\r\n                                                                                    data.logo?(\r\n                                                                                        <img\r\n                                                                                            id=\"Image1\"\r\n                                                                                            src={data.logo}\r\n                                                                                            alt=\"logo\"\r\n                                                                                            style={{\r\n                                                                                                maxWidth: \"115px\",\r\n                                                                                                maxHeight: \"115px\",\r\n                                                                                                textAlign: 'center'\r\n                                                                                            }}\r\n                                                                                        />\r\n                                                                                )\r\n                                                                                :(\r\n                                                                                            <img\r\n                                                                                                id=\"Image1\"\r\n                                                                                                src={\"/assets/media/users/Icon.png\"}\r\n                                                                                                alt=\"logo\"\r\n                                                                                                style={{\r\n                                                                                                    maxWidth: \"115px\",\r\n                                                                                                    maxHeight: \"115px\",\r\n                                                                                                    textAlign: 'center'\r\n                                                                                                }}\r\n                                                                                            />\r\n                                                                                        )}\r\n\r\n\r\n                                                                            </div>\r\n                                                                            <label className=\"kt-avatar__upload\"\r\n                                                                                   id=\"files\"\r\n                                                                                   data-toggle=\"kt-tooltip\"\r\n                                                                                   title=\"Change avatar\">\r\n                                                                                <i className=\"fa fa-pen\"/>\r\n                                                                                <input type=\"file\"\r\n                                                                                       id=\"file\"\r\n                                                                                       name=\"kt_user_add_user_avatar\"\r\n                                                                                       onChange={(e) => onChangeFile(e)}\r\n                                                                                />\r\n                                                                            </label>\r\n                                                                            <span className=\"kt-avatar__cancel\"\r\n                                                                                  data-toggle=\"kt-tooltip\"\r\n                                                                                  title=\"Cancel avatar\">\r\n                                                                            <i className=\"fa fa-times\"/>\r\n                                                                        </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                {console.log(defaultCurrencyData,\"defaultCurrencyData\")}\r\n                                                                {defaultCurrencyData ? (\r\n                                                                    <div\r\n                                                                        className={error.default_currency_slug.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                        <label\r\n                                                                            className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                            htmlFor=\"exampleSelect1\">Devise</label>\r\n                                                                        <div className=\"col-lg-9 col-xl-6\">\r\n\r\n                                                                            <Select\r\n                                                                                value={defaultCurrency}\r\n                                                                                onChange={onChangeCurrencies}\r\n                                                                                options={defaultCurrencyData.length ? defaultCurrencyData.map(name => name) : ''}\r\n                                                                            />\r\n                                                                            {\r\n                                                                                error.default_currency_slug.length ? (\r\n                                                                                    error.default_currency_slug.map((error, index) => (\r\n                                                                                        <div key={index}\r\n                                                                                             className=\"invalid-feedback\">\r\n                                                                                            {error}\r\n                                                                                        </div>\r\n                                                                                    ))\r\n                                                                                ) : null\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                ) : ''\r\n                                                                }\r\n                                                                <div\r\n                                                                    className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"name\">Nom <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"name\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Ex:  Satis\"\r\n                                                                            value={data.name}\r\n                                                                            onChange={(e) => onChangeName(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.name.length ? (\r\n                                                                                error.name.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.acronyme.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"Acronyme\">Acronyme <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"Acronyme\"\r\n                                                                            className={error.acronyme.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Ex:  Satis Acronyme\"\r\n                                                                            type=\"text\"\r\n                                                                            value={data.acronyme}\r\n                                                                            onChange={(e) => onChangeAcronyme(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.acronyme.length ? (\r\n                                                                                error.acronyme.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.iso_code.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"value\">Code Iso <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"value\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.iso_code.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Ex: 0000-Satis\"\r\n                                                                            value={data.iso_code}\r\n                                                                            onChange={(e) => onChangeIsoCode(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.iso_code.length ? (\r\n                                                                                error.iso_code.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Enregistrer</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/institution\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/institution\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-any-institution') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-any-institution') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(InstitutionForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\staff\\StaffForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\Chats.jsx",["1014","1015","1016"],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\RemoveChats.jsx",["1017","1018"],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\Participants.jsx",["1019"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {loadCss, filterDataTableBySearchValue, forceRound} from \"../../../helpers/function\";\r\nimport LoadingTable from \"../../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../../config/confirmConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport EmptyTable from \"../../components/EmptyTable\";\r\nimport HeaderTablePage from \"../../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst Participants = (props) => {\r\n    const {id} = useParams();\r\n    if (!verifyPermission(props.userPermissions, \"list-discussion-contributors\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [contributor, setContributor] = useState([]);\r\n    const [responseData, setResponseData] = useState(null);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + `/discussions/${id}/staff`)\r\n                .then(response => {\r\n                    console.log(response.data, 'DONNEES');\r\n                    setLoad(false);\r\n                    setResponseData(response.data);\r\n                    setContributor(response.data.staff);\r\n                    setShowList(response.data.staff.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.staff.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(contributor.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(contributor.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(contributor.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                contributor.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                contributor.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteContributor = (contributorId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/discussions/${id}/staff/${contributorId}`)\r\n                            .then(response => {\r\n                                const newContributor = [...contributor];\r\n                                newContributor.splice(index, 1);\r\n                                setContributor(newContributor);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newContributor.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newContributor.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (user, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{user.identite.lastname + \"  \" + user.identite.firstname}</td>\r\n                <td>{user.unit.name.fr}</td>\r\n                <td>{user.identite.email ?\r\n                    user.identite.email.map((mail, index) => (\r\n                        index === user.identite.email.length - 1 ? mail : mail + \" \" + <br/> + \" \"\r\n                    )) : null\r\n                }</td>\r\n\r\n                {\r\n                    verifyPermission(props.userPermissions, \"remove-discussion-contributor\") ?\r\n                    <td style={{textAlign: 'center'}}>\r\n                        {\r\n                            user.id === responseData.created_by.id?\r\n                        \"\":\r\n                            <button\r\n                                onClick={(e) => deleteContributor(user.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Retirer du Tchat\">\r\n                                <i className=\"la la-user-times fa-2x\"/>\r\n                            </button>\r\n                        }\r\n\r\n                    </td>\r\n                    : null\r\n                }\r\n\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-discussion-contributors\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Traitement\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Tchat\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Liste des participants\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"A common UI paradigm to use with interactive tables is to present buttons that will trigger some action. See official documentation\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n\r\n                        <HeaderTablePage\r\n                            addPermission={\"add-discussion-contributor\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={`/treatment/chat/add_user/${id}`}\r\n                            title={\"Liste des participants\"}\r\n                        />\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Search:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Participants\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Staff\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Email\r\n                                                        </th>\r\n                                                        {\r\n                                                            verifyPermission(props.userPermissions, \"remove-discussion-contributor\") ?\r\n                                                                <th className=\"sorting\" tabIndex=\"0\"\r\n                                                                    aria-controls=\"kt_table_1\"\r\n                                                                    rowSpan=\"1\" colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                                    aria-label=\"Type: activate to sort column ascending\">\r\n                                                                    Action\r\n                                                                </th>\r\n                                                                :\"\"\r\n                                                        }\r\n\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        contributor.length ? (\r\n                                                            search ? (\r\n                                                                contributor.map((user, index) => (\r\n                                                                    printBodyTable(user, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((user, index) => (\r\n                                                                    printBodyTable(user, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {contributor.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Participants);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\AddChatsForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\AddMemberForm.jsx",["1020"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport Select from \"react-select\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst AddMemberForm = (props) => {\r\nconst {id}=useParams();\r\n    if (!verifyPermission(props.userPermissions, 'add-discussion-contributor'))\r\n        window.location.href = ERROR_401;\r\n\r\n    const defaultData = {\r\n        staff_id: [],\r\n    };\r\n    const defaultError = {\r\n        staff_id: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [staffId, setStaffId] = useState([]);\r\n    const [staffIdData, setStaffIdData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(`${appConfig.apiDomaine}/discussions/${id}/staff/create`)\r\n                .then(response => {\r\n                    console.log(response.data, \"PARTICIPANT\");\r\n                    let newStaffs=Object.values(response.data.staff).map(staff=>(\r\n                        {value:staff.id, label:staff.identite.lastname+\" \"+staff.identite.firstname}\r\n                    ));\r\n                    setStaffIdData(newStaffs);\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const onChangeClaim = (e,selected) => {\r\n        const newData = {...data};\r\n        newData.staff_id = e?e.map(sel => sel.value):\"\";\r\n        setStaffId(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            axios.post(appConfig.apiDomaine + `/discussions/${id}/staff`, data)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    // setError(defaultError);\r\n                    // setData(defaultData);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    window.location.href=\"/chat\";\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    setError({...defaultError,...error.response.data.error});\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Traitement\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/treatment/chat\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Chat\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                \"Ajout des Participants\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n                                                                <div\r\n                                                                    className={error.staff_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"exampleSelect1\">Participants</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        {staffIdData ? (\r\n                                                                            <Select\r\n                                                                                value={staffId}\r\n                                                                                onChange={(e) => onChangeClaim(e)}\r\n                                                                                options={staffIdData}\r\n                                                                                isMulti\r\n                                                                            />\r\n                                                                        ) : ''\r\n                                                                        }\r\n\r\n\r\n                                                                        {\r\n                                                                            error.staff_id.length ? (\r\n                                                                                error.staff_id.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Ajouter</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/chat\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/chat\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'add-discussion-contributor') ? (\r\n            printJsx()\r\n        ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddMemberForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Institutions\\ImportInstitutionForm.jsx",["1021","1022"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport InputRequire from \"../InputRequire\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst ImportInstitutionForm = (props) => {\r\n    document.title = \"Satis institution - Importation de fichier excel\";\r\n\r\n    if (!verifyPermission(props.userPermissions, 'store-any-institution'))\r\n        window.location.href = ERROR_401;\r\n\r\n    const defaultData = {\r\n        file: \"\",\r\n    };\r\n    const defaultError = {\r\n        file: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    const onChangeFile = (e) => {\r\n        const newData = {...data};\r\n        newData.file = Object.values(e.target.files)[0];\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const formatFormData = (newData) => {\r\n        const formData = new FormData();\r\n        formData.append(\"_method\", \"post\");\r\n        for (const key in newData) {\r\n            // console.log(`${key}:`, newData[key]);\r\n            if (key === \"file\") {\r\n                formData.append(\"file\", newData.file);\r\n            } else\r\n                formData.set(key, newData[key]);\r\n        }\r\n        console.log(formData.get('file'), 'FORMDATA');\r\n        return formData;\r\n\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n\r\n        if (verifyTokenExpire()) {\r\n            if (verifyTokenExpire()) {\r\n                axios.post(`${appConfig.apiDomaine}/any/import-institutions`, formatFormData(data))\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Importation\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Importation de clients\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n\r\n                                        <div\r\n                                            className={error.file.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                   htmlFor=\"file\">Fichier <InputRequire/></label>\r\n                                            <div className=\"col-md-9 mb-3\">\r\n                                                <input\r\n                                                    id=\"file\"\r\n                                                    type=\"file\"\r\n                                                    className={error.file.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez télécharger le fichier excel\"\r\n                                                    onChange={(e) => onChangeFile(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.file.length ? (\r\n                                                        error.file.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"kt-portlet__foot text-right\">\r\n                                        <div className=\"kt-form__actions\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                            className=\"btn btn-primary\">Enregistrer</button>\r\n                                                ) : (\r\n                                                    <button\r\n                                                        className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                        type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/settings/clients\"\r\n                                                          className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/settings/clients\"\r\n                                                          className=\"btn btn-secondary mx-2\" disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        verifyPermission(props.userPermissions, 'store-any-institution') ?\r\n            printJsx()\r\n            : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ImportInstitutionForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ParametersComponent.jsx",["1023"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst ParametersComponent = (props) => {\r\n    document.title = \"Satis Paramètre - Configuration formulaire\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"update-components-parameters\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [component, setComponent] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/components\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setComponent(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n    },[]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newComponent = [...component];\r\n        newComponent = newComponent.filter(el => (\r\n            getLowerCaseString(el.params[\"fr\"].title ? el.params[\"fr\"].title.value : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newComponent;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(component.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(component.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(component.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(component.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(component.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                component.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                component.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (component, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{component.params.fr.title===null?\"\":component.params.fr.title.value}</td>\r\n                <td style={{textAlign:'center'}}>\r\n                    <Link\r\n                        to={`/settings/config/edit/${component.id}`}\r\n                        className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                        title=\"Modifier\">\r\n                        <i className=\"la la-edit\"/>\r\n                    </Link>\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"update-components-parameters\")?(\r\n                <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                    <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                        <div className=\"kt-container  kt-container--fluid \">\r\n                            <div className=\"kt-subheader__main\">\r\n                                <h3 className=\"kt-subheader__title\">\r\n                                    Paramètres\r\n                                </h3>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                    <div className=\"kt-subheader__breadcrumbs\">\r\n                                        <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                            className=\"flaticon2-shelter\"/></a>\r\n                                        <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                        <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                           className=\"kt-subheader__breadcrumbs-link\">\r\n                                            Configurations\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                        <InfirmationTable\r\n                            information={\"Configuration des formulaires\"}/>\r\n\r\n                        <div className=\"kt-portlet\">\r\n\r\n                            <HeaderTablePage\r\n                                title={\"Configuration\"}\r\n                            />\r\n                            {\r\n                                load ? (\r\n                                    <LoadingTable/>\r\n                                ) : (\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 text-left\">\r\n                                                    <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                        <label>\r\n                                                            Recherche:\r\n                                                            <input id=\"myInput\" type=\"text\"\r\n                                                                   onKeyUp={(e) => searchElement(e)}\r\n                                                                   className=\"form-control form-control-sm\"\r\n                                                                   placeholder=\"\"\r\n                                                                   aria-controls=\"kt_table_1\"/>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-12\">\r\n                                                    <table\r\n                                                        className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                        id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                        style={{width: \"952px\"}}>\r\n                                                        <thead>\r\n                                                        <tr role=\"row\">\r\n                                                            <th className=\"sorting\" tabIndex=\"0\"\r\n                                                                aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                                aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\"\r\n                                                                aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                                aria-label=\"Type: activate to sort column ascending\">\r\n                                                                Action\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n                                                            component.length ? (\r\n                                                                showList ? (\r\n                                                                    showList.map((component, index) => (\r\n                                                                        printBodyTable(component, index)\r\n                                                                    ))\r\n                                                                ) : (\r\n                                                                    <EmptyTable search={true}/>\r\n                                                                )\r\n                                                            ) : (\r\n                                                                <EmptyTable/>\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                        <tfoot>\r\n                                                        <tr>\r\n\r\n                                                        </tr>\r\n                                                        </tfoot>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-12 col-md-5\">\r\n                                                    <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                         aria-live=\"polite\">Affichage de 1\r\n                                                        à {numberPerPage} sur {component.length} données\r\n                                                    </div>\r\n                                                </div>\r\n                                                {\r\n                                                    showList.length ? (\r\n                                                        <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                            <Pagination\r\n                                                                numberPerPage={numberPerPage}\r\n                                                                onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                                activeNumberPage={activeNumberPage}\r\n                                                                onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                                pages={pages}\r\n                                                                onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                                numberPage={numberPage}\r\n                                                                onClickNextPage={e => onClickNextPage(e)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ):null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ParametersComponent);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\TreatmentPeriodAdd.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\QualificationPeriodAdd.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\APP_MACRO\\Holding\\HoldingClientForm.jsx",["1024","1025","1026","1027"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../../views/components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig, toastEditErrorMessageConfig, toastEditSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport '../../views/components/staff/react-tagsinput.css';\r\nimport Select from \"react-select\";\r\nimport {formatSelectOption} from \"../../helpers/function\";\r\nimport {connect} from \"react-redux\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport InputRequire from \"../../views/components/InputRequire\";\r\nimport WithoutCode from \"../../views/components/WithoutCode\";\r\nimport ConfirmClientSaveForm from \"../../views/components/Clients/ConfirmClientSaveForm\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        store: `${appConfig.apiDomaine}/my/clients`,\r\n        storeAccount: id=> `${appConfig.apiDomaine}/my/accounts/${id}/clients`,\r\n        update: id => `${appConfig.apiDomaine}/my/clients/${id}`,\r\n        create: `${appConfig.apiDomaine}/my/clients/create`,\r\n        edit: id => `${appConfig.apiDomaine}/my/clients/${id}/edit`\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            store: `${appConfig.apiDomaine}/any/clients`,\r\n            storeAccount: id=> `${appConfig.apiDomaine}/any/accounts/${id}/clients`,\r\n            update: id => `${appConfig.apiDomaine}/any/clients/${id}`,\r\n            create: `${appConfig.apiDomaine}/any/clients/create`,\r\n            edit: id => `${appConfig.apiDomaine}/any/clients/${id}/edit`\r\n        },\r\n        filial: {\r\n            store: `${appConfig.apiDomaine}/my/clients`,\r\n            storeAccount: id=> `${appConfig.apiDomaine}/my/accounts/${id}/clients`,\r\n            update: id => `${appConfig.apiDomaine}/my/clients/${id}`,\r\n            create: `${appConfig.apiDomaine}/my/clients/create`,\r\n            edit: id => `${appConfig.apiDomaine}/my/clients/${id}/edit`\r\n        }\r\n    },\r\n};\r\n\r\nconst HoldingClientForm = (props) => {\r\n\r\n    const {id} = useParams();\r\n\r\n    if (!id) {\r\n        if (!(verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'store-client-from-my-institution')))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!(verifyPermission(props.userPermissions, 'update-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-my-institution')))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'store-client-from-my-institution') || verifyPermission(props.userPermissions, 'update-client-from-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const defaultData = {\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        sexe: \"\",\r\n        ville: \"\",\r\n        telephone: [],\r\n        email: [],\r\n        client_id: \"\",\r\n        institution_id: [],\r\n        account_type_id: \"\",\r\n        number: [],\r\n        category_client_id: \"\",\r\n    };\r\n\r\n    const defaultError = {\r\n        firstname: [],\r\n        lastname: [],\r\n        sexe: [],\r\n        ville: [],\r\n        telephone: [],\r\n        email: [],\r\n        client_id: [],\r\n        institution_id: [],\r\n        account_type_id: [],\r\n        number: [],\r\n        category_client_id: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [accountType, setAccountTypes] = useState(undefined);\r\n    const [categoryClient, setCategoryClient] = useState(undefined);\r\n    const [type, setType] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n    const [nameClient, setNameClient] = useState(undefined);\r\n    const [client, setClient] = useState([]);\r\n    const [institutionData, setInstitutionData] = useState(undefined);\r\n    const [institution, setInstitution] = useState([]);\r\n    const [disableInput, setDisableInput] = useState(true);\r\n    const [foundIdentity, setFoundIdentity] = useState(undefined);\r\n\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.create)\r\n                .then(response => {\r\n                    // console.log(response.data,\"RESPONSE\")\r\n                    if (verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution')){\r\n                        const options =\r\n                            response.data.institutions.length ? response.data.institutions.map((institution) => ({\r\n                                value: institution.id,\r\n                                label: institution.name\r\n                            })) : \"\";\r\n                        setInstitutionData(options);\r\n                    }\r\n                    if (verifyPermission(props.userPermissions, 'store-client-from-my-institution') || verifyPermission(props.userPermissions, 'update-client-from-my-institution')) {\r\n                        const clientOptions =\r\n                            response.data.client_institutions ? response.data.client_institutions.map((client) => ({\r\n                                value: client.client_id,\r\n                                label: client.client.identite.firstname + ' ' + client.client.identite.lastname\r\n                            })) : \"\";\r\n                        setNameClient(clientOptions);\r\n                    }\r\n                    setAccountTypes(response.data.accountTypes);\r\n                    setCategoryClient(response.data.clientCategories);\r\n                })\r\n            ;\r\n\r\n            if (id) {\r\n                axios.get(endPoint.edit(id))\r\n                    .then(response => {\r\n                        console.log(response.data,\"DATA\")\r\n\r\n                        const newClient = {\r\n                            firstname: response.data.client_institution.client.identite.firstname,\r\n                            lastname: response.data.client_institution.client.identite.lastname,\r\n                            sexe: response.data.client_institution.client.identite.sexe,\r\n                            telephone: response.data.client_institution.client.identite.telephone,\r\n                            email: response.data.client_institution.client.identite.email,\r\n                            institution_id: response.data.client_institution.institution_id,\r\n                            ville: response.data.client_institution.client.identite.ville === null ? \"\" : response.data.client_institution.client.identite.ville,\r\n\r\n                            number: response.data.account.number,\r\n                            account_type_id: response.data.account.account_type_id,\r\n                            category_client_id: response.data.client_institution.category_client_id,\r\n                        };\r\n                        setData(newClient);\r\n                        setType({\r\n                            value: response.data.account.account_type?response.data.account.account_type.id:\"\",\r\n                            label: response.data.account.account_type?response.data.account.account_type.name.fr:\"\"\r\n                        });\r\n                        setCategory({\r\n                            value: response.data.client_institution.category_client ? response.data.client_institution.category_client.id : \"\",\r\n                            label: response.data.client_institution.category_client ? response.data.client_institution.category_client.name.fr : \"\"\r\n                        });\r\n\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const onChangeAccountType = (selected) => {\r\n        const newData = {...data};\r\n        newData.account_type_id = selected.value;\r\n        setType(selected);\r\n        setData(newData);\r\n    };\r\n    const onChangeAccount = (e) => {\r\n        const newData = {...data};\r\n        newData.number = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeCategoryClient = (selected) => {\r\n        const newData = {...data};\r\n        newData.category_client_id = selected.value;\r\n        setCategory(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeFirstName = (e) => {\r\n        const newData = {...data};\r\n        newData.firstname = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeLastName = (e) => {\r\n        const newData = {...data};\r\n        newData.lastname = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeTelephone = (tel) => {\r\n        const newData = {...data};\r\n        newData.telephone = tel;\r\n        setData(newData);\r\n    };\r\n    const onChangeSexe = (e) => {\r\n        const newData = {...data};\r\n        newData.sexe = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeEmail = (mail) => {\r\n        const newData = {...data};\r\n        newData.email = mail;\r\n        setData(newData);\r\n    };\r\n    const onChangeVille = (e) => {\r\n        const newData = {...data};\r\n        newData.ville = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeInstitution = (selected) => {\r\n        const newData = {...data};\r\n        if (selected) {\r\n            newData.institution_id = selected.value;\r\n            setInstitution(selected);\r\n            if (verifyTokenExpire()) {\r\n                axios.get(appConfig.apiDomaine + `/any/clients/${newData.institution_id}/institutions`)\r\n                    .then(response => {\r\n                        const options =\r\n                            response.data ? response.data.map((client) => ({\r\n                                value: client.client_id,\r\n                                label: client.client.identite.firstname + ' ' + client.client.identite.lastname\r\n                            })) : \"\";\r\n                        setNameClient(options);\r\n                    })\r\n                ;\r\n            }\r\n            setCategory([]);\r\n            setClient([]);\r\n            newData.firstname = \"\";\r\n            newData.lastname = \"\";\r\n            newData.sexe = \"\";\r\n            newData.telephone = [];\r\n            newData.email = [];\r\n            newData.ville = \"\";\r\n            newData.client_id = [];\r\n            newData.account_type_id = \"\";\r\n            newData.number = [];\r\n            newData.category_client_id = \"\";\r\n        }\r\n        setData(newData);\r\n        setDisableInput(false)\r\n    };\r\n\r\n    const onChangeClient = (selected) => {\r\n        const newData = {...data};\r\n        newData.client_id = selected.value;\r\n        setClient(selected);\r\n        if (newData.client_id) {\r\n            if (verifyTokenExpire()) {\r\n                axios.get(endPoint.update(`${newData.client_id}`))\r\n                    .then(response => {\r\n                        const newIdentity = {\r\n                            firstname: response.data.client.identite.firstname,\r\n                            lastname: response.data.client.identite.lastname,\r\n                            sexe: response.data.client.identite.sexe,\r\n                            telephone: response.data.client.identite.telephone,\r\n                            email: response.data.client.identite.email,\r\n                            ville: response.data.client.identite.ville === null ? \"\" : response.data.client.identite.ville,\r\n                            client_id: response.data.client_id,\r\n                            institution_id: response.data.institution_id,\r\n                            category_client_id: response.data.category_client_id\r\n                        };\r\n                        setData(newIdentity);\r\n                        setCategory({\r\n                            value: response.data.category_client ? response.data.category_client.id : \"\",\r\n                            label: response.data.category_client ? response.data.category_client.name.fr : \"\"\r\n                        });\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        let newData = {...data};\r\n        if (verifyTokenExpire()) {\r\n            if (!(verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution')))\r\n                delete newData.institution_id;\r\n\r\n            if (id) {\r\n                axios.put(endPoint.update(`${id}`), newData)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch((errorRequest) => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n\r\n                if (data.client_id.length !== 0) {\r\n                    axios.post(endPoint.storeAccount(`${data.client_id}`), data)\r\n\r\n                        .then(response => {\r\n                            setStartRequest(false);\r\n                            setError(defaultError);\r\n                            setData(defaultData);\r\n                            setInstitution(null);\r\n                            setType(null);\r\n                            setCategory(null);\r\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                        })\r\n                        .catch((errorRequest) => {\r\n                            setStartRequest(false);\r\n                            setError({...defaultError, ...errorRequest.response.data.error});\r\n                            ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        })\r\n                    ;\r\n                } else {\r\n                    axios.post(endPoint.store, newData)\r\n                        .then(response => {\r\n                            setStartRequest(false);\r\n                            setError(defaultError);\r\n                            setData(defaultData);\r\n                            setType(null);\r\n                            setCategory(null);\r\n                            setInstitution(null);\r\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                        })\r\n                        .catch(async (errorRequest) => {\r\n\r\n                            if (errorRequest.response.data.error.identite) {\r\n                                await setFoundIdentity(errorRequest.response.data.error);\r\n                                await document.getElementById(\"confirmClientSaveForm\").click();\r\n                                await setInstitution(null);\r\n                                await setType(null);\r\n                                await setCategory(null);\r\n                                setStartRequest(false);\r\n                                setError(defaultError);\r\n                                setData(defaultData);\r\n                            } else if (errorRequest.response.data.client) {\r\n                                setStartRequest(false);\r\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\r\n                                    errorRequest.response.data.client.identite.lastname + \" \" + errorRequest.response.data.client.identite.firstname + \": \" + errorRequest.response.data.message)\r\n                                );\r\n                            } else {\r\n                                setStartRequest(false);\r\n                                setError({...defaultError, ...errorRequest.response.data.error});\r\n                                ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                            }\r\n                        });\r\n                }\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <Link to=\"/settings/clients\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                Client\r\n                            </Link>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                {\r\n                                    id ? \"Modification\" : \"Ajout\"\r\n                                }\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"kt-portlet\">\r\n                            <div className=\"kt-portlet__head\">\r\n                                <div className=\"kt-portlet__head-label\">\r\n                                    <h3 className=\"kt-portlet__head-title\">\r\n                                        {\r\n                                            id ?\r\n                                                \"Modification de Clients\" : \" Ajout de Clients\"\r\n                                        }\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n                            <form method=\"POST\" className=\"kt-form\">\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div className=\"kt-section kt-section--first\">\r\n                                        <h5 className=\"kt-section__title kt-section__title-lg\">Identité:</h5>\r\n                                        {\r\n                                            !id ?\r\n                                                <div className=\"form-group row\">\r\n                                                    {\r\n                                                        verifyPermission(props.userPermissions, \"store-client-from-any-institution\") ?\r\n                                                            <div\r\n                                                                className={error.institution_id.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"exampleSelect1\"> Institution <span\r\n                                                                    style={{color: \"red\"}}>*</span></label>\r\n                                                                {institutionData ? (\r\n                                                                    <Select\r\n                                                                        value={institution}\r\n                                                                        placeholder={\"Veillez selectionner l'institution\"}\r\n                                                                        onChange={onChangeInstitution}\r\n                                                                        options={institutionData ? institutionData.map(name => name) : ''}\r\n                                                                    />\r\n                                                                ) : (\r\n                                                                    <select name=\"institution\"\r\n                                                                            className={error.institution_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            id=\"institution\">\r\n                                                                        <option value=\"\"/>\r\n                                                                    </select>\r\n                                                                )\r\n                                                                }\r\n\r\n                                                                {\r\n                                                                    error.institution_id.length ? (\r\n                                                                        error.institution_id.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                            : null\r\n                                                    }\r\n                                                    <div\r\n                                                        className={error.client_id.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"exampleSelect1\"> Client</label>\r\n                                                        {/*{console.log(nameClient,\"NAME\")}*/}\r\n                                                        {nameClient ? (\r\n                                                            <Select\r\n\r\n                                                                placeholder={\"Veillez selectionner le client\"}\r\n                                                                value={client}\r\n                                                                onChange={onChangeClient}\r\n                                                                options={nameClient ? nameClient.map(name => name) : ''}\r\n                                                            />\r\n                                                        ) : (<select name=\"client\"\r\n                                                                     className={error.client_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                     id=\"client\">\r\n                                                            <option value=\"\"/>\r\n                                                        </select>)\r\n                                                        }\r\n\r\n                                                        {\r\n                                                            error.client_id.length ? (\r\n                                                                error.client_id.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                : null\r\n                                        }\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.lastname.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"lastname\">Nom<span style={{color: \"red\"}}>*</span>\r\n                                                </label>\r\n                                                <input\r\n                                                    id=\"lastname\"\r\n                                                    type=\"text\"\r\n                                                    className={error.lastname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le nom de famille\"\r\n                                                    value={data.lastname}\r\n                                                    onChange={(e) => onChangeLastName(e)}\r\n                                                    disabled={props.getDisable ? props.getDisable : false}\r\n                                                />\r\n                                                {\r\n                                                    error.lastname.length ? (\r\n                                                        error.lastname.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className={error.firstname.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"firstname\">Prénom(s) <span\r\n                                                    style={{color: \"red\"}}>*</span></label>\r\n                                                <input\r\n                                                    id=\"firstname\"\r\n                                                    type=\"text\"\r\n                                                    className={error.firstname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le prénom\"\r\n                                                    value={data.firstname}\r\n                                                    onChange={(e) => onChangeFirstName(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.firstname.length ? (\r\n                                                        error.firstname.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.sexe.length ? \" col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"sexe\">Sexe <span\r\n                                                    style={{color: \"red\"}}>*</span></label>\r\n                                                <select\r\n                                                    id=\"sexe\"\r\n                                                    className={error.sexe.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    value={data.sexe}\r\n                                                    onChange={(e) => onChangeSexe(e)}\r\n                                                >\r\n                                                    <option value=\"\" disabled={true}>Veillez choisir le Sexe\r\n                                                    </option>\r\n                                                    <option value=\"F\">Féminin</option>\r\n                                                    <option value=\"M\">Masculin</option>\r\n                                                    <option value=\"M\">Autres</option>\r\n                                                </select>\r\n                                                {\r\n                                                    error.sexe.length ? (\r\n                                                        error.sexe.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                            <div className={error.ville.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"ville\">Ville <InputRequire/></label>\r\n                                                <input\r\n                                                    id=\"ville\"\r\n                                                    type=\"text\"\r\n                                                    className={error.ville.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer votre ville\"\r\n                                                    value={data.ville}\r\n                                                    onChange={(e) => onChangeVille(e)}\r\n                                                    disabled={props.getDisable ? props.getDisable : false}\r\n                                                />\r\n                                                {\r\n                                                    error.ville.length ? (\r\n                                                        error.ville.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.telephone.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"telephone\">Téléphone(s) <WithoutCode/>\r\n                                                    <InputRequire/> </label>\r\n                                                <TagsInput\r\n                                                    value={data.telephone}\r\n                                                    onChange={onChangeTelephone}\r\n                                                    disabled={props.getDisable ? props.getDisable : false}\r\n                                                    inputProps={{\r\n                                                        className: \"react-tagsinput-input\",\r\n                                                        placeholder: \"Numéro(s)\"\r\n                                                    }}\r\n                                                />\r\n                                                {\r\n                                                    error.telephone.length ? (\r\n                                                        error.telephone.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className={error.email.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"email\"> Email(s) <InputRequire/></label>\r\n                                                <TagsInput\r\n                                                    value={data.email}\r\n                                                    onChange={onChangeEmail}\r\n                                                    // disabled={props.getDisable ? props.getDisable : false}\r\n                                                    inputProps={{\r\n                                                        className: \"react-tagsinput-input\",\r\n                                                        placeholder: \"Email(s)\"\r\n                                                    }}\r\n                                                />\r\n                                                {\r\n                                                    error.email.length ? (\r\n                                                        error.email.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div className=\"kt-section kt-section--first\">\r\n                                        <h5 className=\"kt-section__title kt-section__title-lg\">\r\n                                            Informations Techniques\r\n                                        </h5>\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.account_type_id.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"exampleSelect1\">Type de\r\n                                                    Compte <InputRequire/></label>\r\n                                                {accountType ? (\r\n                                                    <Select\r\n                                                        placeholder={\"Veillez selectionner le type de compte\"}\r\n                                                        value={type}\r\n                                                        onChange={onChangeAccountType}\r\n                                                        options={formatSelectOption(accountType, 'name', 'fr')}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <select name=\"type\"\r\n                                                            className={error.account_type_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            id=\"type\">\r\n                                                        <option value=\"\"/>\r\n                                                    </select>\r\n                                                )\r\n                                                }\r\n\r\n                                                {\r\n                                                    error.account_type_id.length ? (\r\n                                                        error.account_type_id.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                            <div\r\n                                                className={error.category_client_id.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"exampleSelect1\">Catégorie\r\n                                                    Client <InputRequire/></label>\r\n\r\n                                                {categoryClient ? (\r\n                                                    <Select\r\n                                                        placeholder={\"Veillez selectionner la catégorie client\"}\r\n                                                        value={category}\r\n                                                        onChange={onChangeCategoryClient}\r\n                                                        options={formatSelectOption(categoryClient, 'name', 'fr')}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <select name=\"category\"\r\n                                                            className={error.category_client_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            id=\"category\">\r\n                                                        <option value=\"\"/>\r\n                                                    </select>\r\n                                                )\r\n                                                }\r\n\r\n                                                {\r\n                                                    error.category_client_id.length ? (\r\n                                                        error.category_client_id.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.number.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"number\">Numero de Compte <InputRequire/></label>\r\n                                                <input\r\n                                                    id=\"number\"\r\n                                                    type=\"text\"\r\n                                                    className={error.number.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le numero de compte\"\r\n                                                    value={data.number}\r\n                                                    onChange={onChangeAccount}\r\n                                                />\r\n                                                {\r\n                                                    error.number.length ? (\r\n                                                        error.number.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"kt-portlet__foot\">\r\n                                    <div className=\"kt-form__actions text-right\">\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                        className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                            ) : (\r\n                                                <button\r\n                                                    className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                    type=\"button\" disabled>\r\n                                                    Chargement...\r\n                                                </button>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\">\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            ) : (\r\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\"\r\n                                                      disabled>\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            )\r\n                                        }\r\n                                        <button style={{display: \"none\"}} id=\"confirmClientSaveForm\" type=\"button\" className=\"btn btn-bold btn-label-brand btn-sm\"\r\n                                                data-toggle=\"modal\" data-target=\"#kt_modal_4\">Launch Modal\r\n                                        </button>\r\n\r\n                                        {\r\n                                            foundIdentity? (\r\n                                                <ConfirmClientSaveForm\r\n                                                    plan={props.plan}\r\n                                                    userPermissions={props.userPermissions}\r\n                                                    message={foundIdentity.message}\r\n                                                    institution={institution}\r\n                                                    category={category}\r\n                                                    categories={categoryClient}\r\n                                                    type={type}\r\n                                                    identite={foundIdentity}\r\n                                                    client={client}\r\n                                                    clients={nameClient}\r\n                                                    types={accountType}\r\n                                                    institutions={institutionData}\r\n                                                    client_id={data.client_id}\r\n                                                    institution_id={data.institution_id}\r\n                                                    account_type_id={data.account_type_id}\r\n                                                    category_id={data.category_client_id}\r\n                                                    number={data.number}\r\n                                                    resetFoundIdentity={() => setFoundIdentity({})}\r\n                                                />\r\n                                            ) :  null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        identite: state.identity,\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(HoldingClientForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\APP_MACRO\\Filiale\\FilialeInstitutionForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\TreatmentPeriod.jsx",["1028"],"import React, {useEffect, useState} from \"react\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst TreatmentPeriod = props => {\r\n    document.title = \"Satis client - Paramètre délai de qualification\";\r\n    if (!verifyPermission(props.userPermissions, \"list-delai-treatment-parameters\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [TreatmentPeriods, setTreatmentPeriods] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            axios.get(`${appConfig.apiDomaine}/delai-treatment-parameters`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setTreatmentPeriods(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire()) {\r\n            fetchData();\r\n        }\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newTreatmentPeriods = [...TreatmentPeriods];\r\n        newTreatmentPeriods = newTreatmentPeriods.filter(el => (\r\n            getLowerCaseString(`${el.borne_sup === \"+\" ? `Plus de ${el.borne_inf}` : `${el.borne_inf}-${el.borne_sup}`} jours`).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newTreatmentPeriods;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(TreatmentPeriods.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(TreatmentPeriods.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(TreatmentPeriods.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(TreatmentPeriods.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(TreatmentPeriods.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                TreatmentPeriods.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                TreatmentPeriods.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deletePeriod = (TreatmentPeriodId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(`${appConfig.apiDomaine}/delai-treatment-parameters/${TreatmentPeriodId}`)\r\n                            .then(response => {\r\n                                const newUnitTypes = [...TreatmentPeriods];\r\n                                newUnitTypes.splice(index, 1);\r\n                                setTreatmentPeriods(newUnitTypes);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (TreatmentPeriod, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd text-center\">\r\n                <td>\r\n                    {\r\n                        TreatmentPeriod.borne_sup === \"+\" ? (\r\n                            `Plus de ${TreatmentPeriod.borne_inf}`\r\n                        ) : (\r\n                            `${TreatmentPeriod.borne_inf}-${TreatmentPeriod.borne_sup}`\r\n                        )\r\n                    } Jours\r\n                </td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-delai-treatment-parameters') ? (\r\n                            <button\r\n                                onClick={(e) => deletePeriod(TreatmentPeriod.uuid, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-delai-treatment-parameters') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Délai traitement\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={!TreatmentPeriods.length ? \"\" : TreatmentPeriods[TreatmentPeriods.length - 1].borne_sup === \"+\" ? \"\" : \"store-delai-treatment-parameters\"}\r\n                            title={\"Délai traitement\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/treatment-period/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input\r\n                                                            id=\"myInput\"\r\n                                                            type=\"text\"\r\n                                                            onKeyUp={(e) => searchElement(e)}\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            placeholder=\"\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\" className=\"text-center\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Période\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"15%\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        TreatmentPeriods.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((TreatmentPeriod, index) => (\r\n                                                                    printBodyTable(TreatmentPeriod, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr className=\"text-center\">\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Période</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {TreatmentPeriods.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TreatmentPeriod);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\errorPage.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FaqListe.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\dataTable.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\date.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ExportButton.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\InputRequire.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\InfirmationTable.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\WithoutCode.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Pagination.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\UnfoundedModal.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\LoadingTable.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ImportFileForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\DetailModal.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\ClaimToPointOfServices.jsx",["1029"],"import React, {useEffect, useState} from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\n\r\nconst ClaimToInstitution = (props) => {\r\n    const [load, setLoad] = useState(true);\r\n    const [pointOfServiceData, setPointOfServiceData] = useState(\"\");\r\n\r\n    const defaultData = {\r\n        series: pointOfServiceData ? pointOfServiceData.series : [],\r\n        options: {\r\n            chart: {\r\n                width: 380,\r\n                type: 'pie',\r\n            },\r\n            labels: pointOfServiceData ? pointOfServiceData.options.labels : [],\r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                    chart: {\r\n                        width: 200\r\n                    },\r\n                    legend: {\r\n                        position: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n          await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    if (!isCancelled) {\r\n                        let pointOfService = response.data.pointOfServicesTargeted;\r\n                        let ServiceData = [];\r\n                        for (const processus in pointOfService) {\r\n                            ServiceData.push(processus);\r\n                        }\r\n                        let newData = {...defaultData};\r\n\r\n                        newData.options.labels = ServiceData;\r\n                        newData.series = Object.values(pointOfService).map(serie => serie.myInstitution);\r\n                        setPointOfServiceData(newData);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"kt-portlet__head\">\r\n                <div className=\"kt-portlet__head-label\">\r\n                    <h3 className=\"kt-portlet__head-title\">Statistique des points de services qui reçoivent plus de\r\n                        réclamations sur les 30 derniers jours</h3>\r\n                </div>\r\n            </div>\r\n            {\r\n                load ? (\r\n                    <LoadingTable/>\r\n                ) : (\r\n                    <div className=\"kt-portlet__body\">\r\n                        <div id=\"chart\" className=\"d-flex justify-content-center\" style={{position: \"relative\"}}>\r\n                            {pointOfServiceData?(\r\n                                <Chart options={pointOfServiceData.options} series={pointOfServiceData.series}\r\n                                       type=\"pie\" width={550}/>\r\n                            ):\"\"\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimToInstitution);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\profile\\UpdatePassword.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\HeaderTablePage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\PeriodForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\EmptyTable.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Clients\\ConfirmClientSaveForm.jsx",["1030","1031","1032","1033","1034","1035"],"import React, {useState} from \"react\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport axios from \"axios\";\r\nimport {ToastBottomEnd} from \"../Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport {formatSelectOption} from \"../../../helpers/function\";\r\nimport {formatInstitutions} from \"../../../helpers/institution\";\r\nimport Select from \"react-select\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport FormInformation from \"../FormInformation\";\r\nimport InputRequire from \"../InputRequire\";\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        confirm: id => `${appConfig.apiDomaine}/my/identites/${id}/clients`\r\n    },\r\n    MACRO: {\r\n        plan: \"MACRO\",\r\n        holding: {\r\n            confirm: id => `${appConfig.apiDomaine}/any/identites/${id}/clients`\r\n        },\r\n        filial: {\r\n            confirm: id => `${appConfig.apiDomaine}/my/identites/${id}/clients`\r\n        }\r\n    },\r\n};\r\n\r\nconst ConfirmClientSaveForm = (props) => {\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'store-client-from-my-institution') || verifyPermission(props.userPermissions, 'update-client-from-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const [types, setTypes] = useState(props.types);\r\n    const [clients, setClients] = useState(props.clients);\r\n    const [category, setCategory] = useState(props.category);\r\n    const [categories, setCategories] = useState(props.categories);\r\n    // const institution = props.institution;\r\n    const [institution, setInstitution] = useState(props.institution);\r\n    const [institutions, setInstitutions] = useState(props.institutions);\r\n    const [type, setType] = useState(props.type);\r\n    const [client, setClient] = useState(props.client);\r\n\r\n\r\n    const defaultData = {\r\n        firstname: props.identite.identite.identite.firstname,\r\n        lastname: props.identite.identite.identite.lastname,\r\n        sexe: props.identite.identite.identite.sexe,\r\n        telephone: (props.identite.identite.identite.telephone),\r\n        email: (props.identite.identite.identite.email),\r\n        ville: props.identite.identite.identite.ville === null ? \"\" : props.identite.identite.identite.ville,\r\n        number:props.number,\r\n        account_type_id: props.account_type_id,\r\n        client_id: props.client_id,\r\n        institution_id: props.institution_id,\r\n        category_client_id:props.category_id\r\n    };\r\n\r\n    const defaultError = {\r\n        firstname: [],\r\n        lastname: [],\r\n        sexe: [],\r\n        telephone: [],\r\n        email: [],\r\n        ville: [],\r\n        number:[],\r\n        account_type_id: [],\r\n        client_id: [],\r\n        institution_id: [],\r\n        category_client_id:[]\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    const onChangeFirstName = (e) => {\r\n        const newData = {...data};\r\n        newData.firstname = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeLastName = (e) => {\r\n        const newData = {...data};\r\n        newData.lastname = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeSexe = (e) => {\r\n        const newData = {...data};\r\n        newData.sexe = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeVille = (e) => {\r\n        const newData = {...data};\r\n        newData.ville = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeTelephone = (tel) => {\r\n        const newData = {...data};\r\n        newData.telephone = tel;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeEmail = (mail) => {\r\n        const newData = {...data};\r\n        newData.email = mail;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeType = (selected) => {\r\n        const newData = {...data};\r\n        newData.account_type_id = selected.value;\r\n        setType(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeAccount = (e) => {\r\n        const newData = {...data};\r\n        newData.number = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeCategory = (selected) => {\r\n        const newData = {...data};\r\n        newData.category_client_id = selected.value;\r\n        setCategory(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeInstitution = (selected) => {\r\n        const newData = {...data};\r\n        newData.institution_id = selected.value;\r\n        setInstitution(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        axios.post(endPoint.confirm(props.identite.identite.identites_id), data)\r\n            .then(async (response) => {\r\n                ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                await setStartRequest(false);\r\n                await setError(defaultError);\r\n                await setTypes([]);\r\n                await setCategories([]);\r\n                await setInstitutions([]);\r\n                await setInstitution({});\r\n                await setType({});\r\n                await setCategory({});\r\n                document.getElementById(\"closeConfirmSaveForm\").click();\r\n                // await props.resetFoundIdentity();\r\n            })\r\n            .catch(errorRequest => {\r\n                setStartRequest(false);\r\n                setError({...defaultError, ...errorRequest.response.data.error});\r\n                ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n            })\r\n        ;\r\n    };\r\n\r\n    const onClickClose = async (e) => {\r\n        await setStartRequest(false);\r\n        await setError(defaultError);\r\n        await setData(defaultError);\r\n        await setTypes([]);\r\n        await setCategory({});\r\n        await setCategories([]);\r\n        await setInstitutions([]);\r\n        await setInstitution({});\r\n        await setType({});\r\n        await document.getElementById(\"closeButton\").click();\r\n        // await props.resetFoundIdentity();\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"kt_modal_4\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" role=\"dialog\" data-backdrop=\"false\"\r\n             style={{ display: \"block\", paddingRight: \"17px\"}} aria-modal=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\" style={{boxShadow: \"0px 4px 23px 6px rgba(0,0,0,0.75)\"}}>\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Ajout d'un client avec des identifiants existant</h5>\r\n                        <button onClick={(e) => onClickClose(e)} type=\"button\" className=\"close\"/>\r\n                        <button id=\"closeButton\" style={{display: \"none\"}} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"/>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form>\r\n                            <div className=\"kt-portlet__body\">\r\n                                <FormInformation\r\n                                    information={props.message}\r\n                                />\r\n\r\n                                <div className=\"kt-section kt-section--first\">\r\n                                    <div className=\"kt-section__body\">\r\n                                        <h3 className=\"kt-section__title kt-section__title-lg\">Informations personnelles:</h3>\r\n\r\n                                        <div className={\"form-group row \"}>\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution') ? (\r\n\r\n                                                    <div className=\"col\">\r\n                                                        <label htmlFor=\"type\">Institution <InputRequire/></label>\r\n                                                        <Select\r\n                                                            value={institution}\r\n                                                            onChange={onChangeInstitution}\r\n                                                            options={institutions}\r\n                                                        />\r\n                                                        {\r\n                                                            error.institution_id.length ? (\r\n                                                                error.institution_id.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.lastname.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"lastname\">Nom <InputRequire/></label>\r\n                                                <input\r\n                                                    id=\"lastname\"\r\n                                                    type=\"text\"\r\n                                                    className={error.lastname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le nom de famille\"\r\n                                                    value={data.lastname}\r\n                                                    onChange={(e) => onChangeLastName(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.lastname.length ? (\r\n                                                        error.lastname.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className={error.firstname.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"firstname\">Prénom(s) <InputRequire/></label>\r\n                                                <input\r\n                                                    id=\"firstname\"\r\n                                                    type=\"text\"\r\n                                                    className={error.firstname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le prénom\"\r\n                                                    value={data.firstname}\r\n                                                    onChange={(e) => onChangeFirstName(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.firstname.length ? (\r\n                                                        error.firstname.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className={error.firstname.length ? \"form-group col validated\" : \"form-group col\"}>\r\n                                                <label htmlFor=\"sexe\">Sexe <InputRequire/></label>\r\n                                                <select\r\n                                                    id=\"sexe\"\r\n                                                    className={error.sexe.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    value={data.sexe}\r\n                                                    onChange={(e) => onChangeSexe(e)}\r\n                                                >\r\n                                                    <option value=\"\" disabled={true}>Veillez choisir le Sexe</option>\r\n                                                    <option value=\"F\">Féminin</option>\r\n                                                    <option value=\"M\">Masculin</option>\r\n                                                    <option value=\"A\">Autres</option>\r\n                                                </select>\r\n                                                {\r\n                                                    error.sexe.length ? (\r\n                                                        error.sexe.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.telephone.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"telephone\"> Téléphone(s) <InputRequire/></label>\r\n                                                <TagsInput value={data.telephone} onChange={onChangeTelephone} />\r\n                                                {\r\n                                                    error.telephone.length ? (\r\n                                                        error.telephone.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className={error.email.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"email\"> Email(s) <InputRequire/></label>\r\n                                                <TagsInput value={data.email} onChange={onChangeEmail} />\r\n                                                {\r\n                                                    error.email.length ? (\r\n                                                        error.email.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className={error.ville.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"ville\">Ville <InputRequire/></label>\r\n                                                <input\r\n                                                    id=\"ville\"\r\n                                                    type=\"text\"\r\n                                                    className={error.ville.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer votre ville\"\r\n                                                    value={data.ville}\r\n                                                    onChange={(e) => onChangeVille(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.ville.length ? (\r\n                                                        error.ville.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-section\">\r\n                                    <div className=\"kt-section__body\">\r\n                                        <h3 className=\"kt-section__title kt-section__title-lg\">Informations professionnelles:</h3>\r\n                                        <div className={\"form-group row \"}>\r\n\r\n                                            <div className=\"col\">\r\n                                                <label htmlFor=\"type\">Categorie client <InputRequire/></label>\r\n                                                <Select\r\n                                                    value={category}\r\n                                                    onChange={onChangeCategory}\r\n                                                    options={formatSelectOption(categories, \"name\", \"fr\")}\r\n                                                />\r\n                                                {\r\n                                                    error.category_client_id.length ? (\r\n                                                        error.category_client_id.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className={\"form-group row\"}>\r\n                                              <div className=\"col\">\r\n                                                        <label htmlFor=\"institution\">Type de compte <InputRequire/></label>\r\n                                                        <Select\r\n                                                            value={type}\r\n                                                            onChange={onChangeType}\r\n                                                            options={formatSelectOption(types, \"name\", \"fr\")}\r\n                                                        />\r\n                                                        {\r\n                                                            error.account_type_id.length ? (\r\n                                                                error.account_type_id.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.number.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"number\">Numero de Compte <InputRequire/></label>\r\n                                                <input\r\n                                                    id=\"number\"\r\n                                                    type=\"text\"\r\n                                                    className={error.number.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le numero de compte\"\r\n                                                    value={data.number}\r\n                                                    onChange={onChangeAccount}\r\n                                                />\r\n                                                {\r\n                                                    error.number.length ? (\r\n                                                        error.number.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : \"\"\r\n                                                }\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        {\r\n                            !startRequest ? (\r\n                                <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Enregistrer</button>\r\n                            ) : (\r\n                                <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                    Chargement...\r\n                                </button>\r\n                            )\r\n                        }\r\n                        <button id=\"closeConfirmSaveForm\" style={{display: \"none\"}} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConfirmClientSaveForm;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\MessageList.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\unit.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\institution.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\currencyContry.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\IdentityForm.jsx",["1036","1037"],"import React, {useEffect, useState} from \"react\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport './staff/react-tagsinput.css';\r\nimport {connect} from \"react-redux\";\r\nimport {addIdentity} from \"../../store/actions/IdentityAction\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Select from \"react-select\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InputRequire from \"./InputRequire\";\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/clients`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/clients`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/clients`,\r\n        }\r\n    },\r\n\r\n};\r\n\r\nconst IndentiteForm = (props) => {\r\n    const {id} = useParams();\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'store-client-from-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'store-client-from-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n    const defaultData = {\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        sexe: \"\",\r\n        ville: \"\",\r\n        telephone: [],\r\n        email: [],\r\n        client_id: [],\r\n        institution_id: []\r\n    };\r\n    const defaultError = {\r\n        firstname: [],\r\n        lastname: [],\r\n        sexe: [],\r\n        ville: [],\r\n        telephone: [],\r\n        email: [],\r\n        client_id: [],\r\n        institution_id: []\r\n    };\r\n    const [data, setData] = useState(props.getLoading ? props.getIdentite : defaultData);\r\n    const [error] = useState(defaultError);\r\n    const [nameClient, setNameClient] = useState([]);\r\n    const [client, setClient] = useState([]);\r\n    const [institutionData, setInstitutionData] = useState(undefined);\r\n    const [institution, setInstitution] = useState([]);\r\n    const [disableInput,setDisableInput]=useState(true);\r\n\r\n    useEffect(() => {\r\n        if(verifyPermission(props.userPermissions,'store-client-from-my-institution')){\r\n        axios.get(endPoint.list)\r\n            .then(response => {\r\n                const options = [\r\n                    response.data? response.data.map((client) => ({\r\n                        value: client.client_id,\r\n                        label: client.client.identite.firstname + ' ' + client.client.identite.lastname\r\n                    })) : \"\"\r\n                ];\r\n                setNameClient(options);\r\n            });\r\n        }\r\n        axios.get(appConfig.apiDomaine + `/any/clients/create`)\r\n            .then(response => {\r\n                const options = [\r\n                    response.data.institutions.length ? response.data.institutions.map((institution) => ({\r\n                        value: institution.id,\r\n                        label: institution.name\r\n                    })) : \"\"\r\n                ];\r\n                setInstitutionData(options);\r\n            });\r\n    }, []);\r\n    const onChangeFirstName = (e) => {\r\n        const newData = {...data};\r\n        newData.firstname = e.target.value;\r\n        setData(newData);\r\n        props.addIdentite(newData)\r\n    };\r\n\r\n    const onChangeLastName = (e) => {\r\n        const newData = {...data};\r\n        newData.lastname = e.target.value;\r\n        setData(newData);\r\n        props.addIdentite(newData)\r\n    };\r\n\r\n    const onChangeTelephone = (tel) => {\r\n        const newData = {...data};\r\n        newData.telephone = tel;\r\n        setData(newData);\r\n        props.addIdentite(newData)\r\n    };\r\n\r\n    const onChangeSexe = (e) => {\r\n        const newData = {...data};\r\n        newData.sexe = e.target.value;\r\n        setData(newData);\r\n        props.addIdentite(newData)\r\n    };\r\n    const onChangeEmail = (mail) => {\r\n        const newData = {...data};\r\n        newData.email = mail;\r\n        setData(newData);\r\n        props.addIdentite(newData)\r\n    };\r\n    const onChangeVille = (e) => {\r\n        const newData = {...data};\r\n        newData.ville = e.target.value;\r\n        setData(newData);\r\n        props.addIdentite(newData)\r\n    };\r\n    const onChangeInstitution = (selected) => {\r\n        const newData = {...data};\r\n        newData.institution_id = selected.value;\r\n        setInstitution(selected);\r\n        props.addIdentite(selected);\r\n        axios.get(appConfig.apiDomaine + `/any/clients/${newData.institution_id}/institutions`)\r\n            .then(response => {\r\n                console.log(response.data, \"CLIENT D'UNE INSTITUTION\");\r\n                const options = [\r\n                    response.data ? response.data.map((client) => ({\r\n                        value: client.client_id,\r\n                        label: client.client.identite.firstname + ' ' + client.client.identite.lastname\r\n                    })) : \"\"\r\n                ];\r\n                    setNameClient(options);\r\n            });\r\n\r\n        setData(newData);\r\n        setDisableInput(false)\r\n    };\r\n\r\n\r\n    const onChangeClient = (selected) => {\r\n        const newData = {...data};\r\n        newData.client_id = selected.value;\r\n        setClient(selected);\r\n        setData(newData);\r\n        props.addIdentite(selected);\r\n        axios.get(endPoint.list + `/${newData.client_id}`)\r\n            .then(response => {\r\n                console.log(response.data,\"IDENTITE\")\r\n                const newIdentity = {\r\n                    firstname: response.data.client.identite.firstname,\r\n                    lastname: response.data.client.identite.lastname,\r\n                    sexe: response.data.client.identite.sexe,\r\n                    telephone: response.data.client.identite.telephone,\r\n                    email: response.data.client.identite.email,\r\n                    ville: response.data.client.identite.ville === null ? \"\" : response.data.client.identite.ville,\r\n                    client_id: response.data.client_id,\r\n                    institution_id:response.data.institution_id\r\n                };\r\n                setData(newIdentity);\r\n                props.addIdentite(newIdentity);\r\n\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"kt-portlet__body\">\r\n                <div className=\"kt-section kt-section--first\">\r\n                    <h5 className=\"kt-section__title kt-section__title-lg\">Identité:</h5>\r\n                    {!id ?\r\n                        <div className=\"form-group row\">\r\n                            {\r\n                                verifyPermission(props.userPermissions, \"store-client-from-any-institution\") ?\r\n                                    <div\r\n                                        className={error.institution_id.length ? \"col validated\" : \"col\"}>\r\n                                        <label htmlFor=\"exampleSelect1\"> Institution</label>\r\n                                        {institutionData ? (\r\n                                            <Select\r\n                                                value={institution}\r\n                                                placeholder={\"Veillez selectionner l'institution\"}\r\n                                                onChange={onChangeInstitution}\r\n                                                options={institutionData.length ? institutionData[0].map(name => name) : ''}\r\n                                            />\r\n                                        ) : (\r\n                                            <select name=\"category\"\r\n                                                    className={error.institution_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    id=\"category\">\r\n                                                <option value=\"\"/>\r\n                                            </select>\r\n                                        )\r\n                                        }\r\n\r\n                                        {\r\n                                            error.institution_id.length ? (\r\n                                                error.institution_id.map((error, index) => (\r\n                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                        {error}\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : \"\"\r\n                                        }\r\n                                    </div>\r\n                                    : \"\"\r\n                            }\r\n                            <div\r\n                                className={error.client_id.length ? \"col validated\" : \"col\"}>\r\n                                <label htmlFor=\"exampleSelect1\"> Client</label>\r\n                                {nameClient ? (\r\n                                    <Select\r\n                                        placeholder={\"Veillez selectionner le client\"}\r\n                                        value={client}\r\n                                        onChange={onChangeClient}\r\n                                        options={nameClient.length ? nameClient[0].map(name => name) : ''}\r\n                                    />\r\n                                ) : (<select name=\"category\"\r\n                                             className={error.client_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                             id=\"category\">\r\n                                    <option value=\"\"/>\r\n                                </select>)\r\n                                }\r\n\r\n                                {\r\n                                    error.client_id.length ? (\r\n                                        error.client_id.map((error, index) => (\r\n                                            <div key={index} className=\"invalid-feedback\">\r\n                                                {error}\r\n                                            </div>\r\n                                        ))\r\n                                    ) : \"\"\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        : \"\"\r\n                    }\r\n                    <div className=\"form-group row\">\r\n                        <div className={error.lastname.length ? \"col validated\" : \"col\"}>\r\n                            <label htmlFor=\"lastname\">Nom <InputRequire/></label>\r\n                            <input\r\n                                id=\"lastname\"\r\n                                type=\"text\"\r\n                                className={error.lastname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                placeholder=\"Veillez entrer le nom de famille\"\r\n                                value={data.lastname}\r\n                                onChange={(e) => onChangeLastName(e)}\r\n                                disabled={props.getDisable ? props.getDisable : false}\r\n                            />\r\n                            {\r\n                                error.lastname.length ? (\r\n                                    error.lastname.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                ) : \"\"\r\n                            }\r\n                        </div>\r\n\r\n                        <div className={error.firstname.length ? \"col validated\" : \"col\"}>\r\n                            <label htmlFor=\"firstname\">Prénom(s) <InputRequire/></label>\r\n                            <input\r\n                                id=\"firstname\"\r\n                                type=\"text\"\r\n                                className={error.firstname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                placeholder=\"Veillez entrer le prénom\"\r\n                                value={data.firstname}\r\n                                onChange={(e) => onChangeFirstName(e)}\r\n                                disabled={props.getDisable ? props.getDisable : false}\r\n                            />\r\n                            {\r\n                                error.firstname.length ? (\r\n                                    error.firstname.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                ) : \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className={error.sexe.length ? \" col validated\" : \"col\"}>\r\n                            <label htmlFor=\"sexe\">Sexe <InputRequire/></label>\r\n                            <select\r\n                                id=\"sexe\"\r\n                                className={error.sexe.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                value={data.sexe}\r\n                                onChange={(e) => onChangeSexe(e)}\r\n                                disabled={props.getDisable ? props.getDisable : false}\r\n                            >\r\n                                <option value=\"\" disabled={true}>Veillez choisir le Sexe\r\n                                </option>\r\n                                <option value=\"F\">Féminin</option>\r\n                                <option value=\"M\">Masculin</option>\r\n                                <option value=\"A\">Autres</option>\r\n                            </select>\r\n                            {\r\n                                error.sexe.length ? (\r\n                                    error.sexe.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                ) : \"\"\r\n                            }\r\n                        </div>\r\n                        <div className={error.ville.length ? \"col validated\" : \"col\"}>\r\n                            <label htmlFor=\"ville\">Ville <InputRequire/></label>\r\n                            <input\r\n                                id=\"ville\"\r\n                                type=\"text\"\r\n                                className={error.ville.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                placeholder=\"Veillez entrer votre ville\"\r\n                                value={data.ville}\r\n                                onChange={(e) => onChangeVille(e)}\r\n                                disabled={props.getDisable ? props.getDisable : false}\r\n                            />\r\n                            {\r\n                                error.ville.length ? (\r\n                                    error.ville.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                ) : \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className={error.telephone.length ? \"col validated\" : \"col\"}>\r\n                            <label htmlFor=\"telephone\"> Téléphone(s) <InputRequire/></label>\r\n                            <TagsInput\r\n                                value={data.telephone}\r\n                                onChange={onChangeTelephone}\r\n                                disabled={props.getDisable ? props.getDisable : false}\r\n                                inputProps={{className: \"react-tagsinput-input\", placeholder: \"Numéro(s)\"}}\r\n                            />\r\n                            {\r\n                                error.telephone.length ? (\r\n                                    error.telephone.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                ) : \"\"\r\n                            }\r\n                        </div>\r\n\r\n                        <div className={error.email.length ? \"col validated\" : \"col\"}>\r\n                            <label htmlFor=\"email\">Email(s) <InputRequire/></label>\r\n                            <TagsInput\r\n                                value={data.email}\r\n                                onChange={onChangeEmail}\r\n                                disabled={props.getDisable ? props.getDisable : false}\r\n                                inputProps={{className: \"react-tagsinput-input\", placeholder: \"Email(s)\"}}\r\n                            />\r\n                            {\r\n                                error.email.length ? (\r\n                                    error.email.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                ) : \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        identite: state.identite,\r\n        plan: state.plan.plan,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {addIdentite: addIdentity})(IndentiteForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\staff\\ConfirmSaveForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardStatClaim.jsx",["1038"],"import React, {useEffect, useState} from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {connect} from \"react-redux\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\n\r\nconst DashboardStatClaim = (props) => {\r\n\r\n    const [satisfactionData, setSatisfactionData] = useState(\"\");\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const tooltipHoverFormatter = (val, opts) => {\r\n        return val + ' : ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n    };\r\n\r\n    const defaultData = {\r\n        series: [\r\n\r\n            {\r\n                name: \"Mesure Satisfaction\",\r\n                data: satisfactionData ? satisfactionData.series.data1 : []\r\n            },\r\n            {\r\n                name: \"Satisfaisantes\",\r\n                data: satisfactionData ? satisfactionData.series.data2 : []\r\n            },\r\n            {\r\n                name: 'Non Satisfaisantes',\r\n                data: satisfactionData ? satisfactionData.series.data3 : []\r\n            }\r\n        ],\r\n        options: {\r\n            chart: {\r\n                height: 350,\r\n                type: 'line',\r\n                zoom: {\r\n                    enabled: false\r\n                },\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                width: [3, 5, 3],\r\n                curve: 'smooth',\r\n                dashArray: [0, 3, 3]\r\n            },\r\n            title: {\r\n                text: 'Evolution des satisfactions par mois',\r\n                align: 'left'\r\n            },\r\n            legend: {\r\n                tooltipHoverFormatter\r\n            },\r\n\r\n            grid: {\r\n                row: {\r\n                    colors: ['#f3f3f3', 'transparent'],\r\n                    opacity: 0.2\r\n                },\r\n            },\r\n            xaxis: {\r\n                categories:satisfactionData ? satisfactionData.options.xaxis.categories : [],\r\n                title: {\r\n                    text: 'Mois'\r\n                }\r\n            },\r\n\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n            await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    // console.log(response.data, \"claimerSatisfactionEvolution\")\r\n                    if (!isCancelled) {\r\n                        let claimSatifaction = response.data.claimerSatisfactionEvolution;\r\n                        let satisfiedData = [];\r\n                        for (const satisfied in Object.values(claimSatifaction)[0]) {\r\n                            satisfiedData.push(satisfied);\r\n                        }\r\n                        // console.log(satisfiedData,\"satisfiedData\")\r\n                        let newData = [];\r\n                        for (const key in claimSatifaction) {\r\n                            let totalSatisfaction = claimSatifaction[key];\r\n                            if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\r\n                                newData.push({\r\n                                    month: key,\r\n                                    data0: totalSatisfaction.measured.allInstitution,\r\n                                    data1: totalSatisfaction.satisfied.allInstitution,\r\n                                    data2: totalSatisfaction.unsatisfied.allInstitution\r\n                                })\r\n                            } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\r\n                                newData.push({\r\n                                    month: key,\r\n                                    data0: totalSatisfaction.measured.myInstitution,\r\n                                    data1: totalSatisfaction.satisfied.myInstitution,\r\n                                    data2: totalSatisfaction.unsatisfied.myInstitution\r\n                                })\r\n                            }\r\n                        }\r\n                        let newSatisfaction = {...defaultData};\r\n                        newSatisfaction.options.xaxis.categories=Object.values(newData.map(label=>label.month));\r\n                        for (let i = 0; i <= satisfiedData.length - 1; i++) {\r\n                            newSatisfaction.series[i].data = Object.values(newData).map(serie => serie['data' + i]);\r\n                        }\r\n                        // console.log(newSatisfaction,\"WITH_MONTH\");\r\n                        setSatisfactionData(newSatisfaction);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                });\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, [props.userPermissions, defaultData]);\r\n\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\r\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\r\n            <div className=\"kt-portlet\">\r\n                <div className=\"kt-portlet__head\">\r\n                    <div className=\"kt-portlet__head-label\">\r\n                        <h3 className=\"kt-portlet__head-title\">Evolution de la satisfaction des réclamants sur les 11\r\n                            derniers mois</h3>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    load ? (\r\n                        <LoadingTable/>\r\n                    ) : (\r\n                        satisfactionData ?\r\n                            <div id=\"chart\" className=\"kt-portlet__body\">\r\n                                <Chart options={satisfactionData.options} series={satisfactionData.series} type=\"line\"\r\n                                       height={350}/>\r\n                            </div>\r\n                            : null\r\n                    )\r\n                }\r\n            </div>\r\n            : null\r\n    )\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DashboardStatClaim);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\ClaimToInstitution.jsx",["1039","1040"],"import React, {useEffect, useState} from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\n\r\nconst ClaimToInstitution = (props) => {\r\n    const [load, setLoad] = useState(true);\r\n    const [institutionData, setInstitutionData] = useState(\"\");\r\n\r\n    const defaultData = {\r\n        series: institutionData?institutionData.series:[],\r\n        options: {\r\n            chart: {\r\n                width: 380,\r\n                type: 'pie',\r\n            },\r\n            labels: institutionData?institutionData.options.labels:[],\r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                    chart: {\r\n                        width: 200\r\n                    },\r\n                    legend: {\r\n                        position: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n            await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    if (!isCancelled) {\r\n                        // console.log(response.data, \"ProcessEvolution\");\r\n                        let institutionTarget = response.data.institutionsTargeted;\r\n                        let institutionData = [];\r\n                        for (const processus in institutionTarget) {\r\n                            institutionData.push(processus);\r\n                        }\r\n                        // console.log(institutionData,\"institutionData\");\r\n                        let newData = {...defaultData};\r\n                        newData.options.labels = institutionData;\r\n                        newData.series = Object.values(institutionTarget).map(serie => serie.allInstitution);\r\n                        // console.log(newData,\"newData\");\r\n                        setInstitutionData(newData);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n\r\n                <div>\r\n                    <div className=\"kt-portlet__head\">\r\n                        <div className=\"kt-portlet__head-label\">\r\n                            <h3 className=\"kt-portlet__head-title\">Satisfaction des institutions qui reçoivent plus de\r\n                                réclamations sur les 30 derniers jours</h3>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div id=\"chart\" className=\"d-flex justify-content-center\" style={{position: \"relative\"}}>\r\n                                <Chart options={institutionData.options} series={institutionData.series} type=\"pie\"\r\n                                       width={380}/>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimToInstitution);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsActivity.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardSummaryReport.jsx",["1041"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\nconst DashboardSummaryReport = (props) => {\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const reportColor = [\r\n        {\r\n            id: 0,\r\n            rowColor: \"table-primary\",\r\n            rang:1,\r\n        },\r\n        {\r\n            id: 1,\r\n            rowColor: \"table-success\",\r\n            rang:2,\r\n        },\r\n        {\r\n            id: 2,\r\n            rowColor: \"table-bland\",\r\n            rang:3,\r\n        },\r\n        {\r\n            id: 3,\r\n            rowColor: \"table-warning\",\r\n            rang:4,\r\n        },\r\n        {\r\n            id: 4,\r\n            rowColor: \"table-danger\",\r\n            rang:5\r\n        },\r\n\r\n    ];\r\n\r\n    const [data, setData] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n            await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    if (!isCancelled) {\r\n                        let claimObjects = response.data.claimObjectsUse;\r\n                        let newData = [];\r\n                        for (const key in claimObjects) {\r\n                            let totalObjectUse = claimObjects[key];\r\n                            if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\r\n                                newData.push({canal: key, label: totalObjectUse.allInstitution})\r\n                            } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\r\n                                newData.push({canal: key, label: totalObjectUse.myInstitution})\r\n                            }\r\n                        }\r\n                        newData.sort(function (a, b) {\r\n                            return b.label - a.label;\r\n                        });\r\n                        const result = newData.filter(function (event) {\r\n                            return newData.indexOf(event) < 5\r\n                        });\r\n                        setData(result);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\r\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\r\n            <div className=\"kt-portlet\">\r\n                    <div className=\"kt-portlet__head\">\r\n                        <div className=\"kt-portlet__head-label\">\r\n                            <h3 className=\"kt-portlet__head-title\">\r\n                                Statistique des cinq (05) plus fréquents Objets de Réclamations sur les 30 derniers jours\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <table className=\"table table-striped table-bordered\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>Rang</th>\r\n                                        <th>Objets de Réclamations</th>\r\n                                        <th>Total</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n\r\n                                    {data ?\r\n                                        data.map((report, i) => (\r\n                                            reportColor.map((color, j) => (\r\n                                                i === j ?\r\n                                                    report.label!==0?\r\n                                                    <tr key={i}>\r\n                                                        <td>{color.rang}</td>\r\n\r\n                                                        <td>{report.canal}</td>\r\n\r\n                                                        <td>{report.label}</td>\r\n                                                    </tr> : null\r\n                                                    : null\r\n                                            ))\r\n                                        ))\r\n                                        : null\r\n                                    }\r\n\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n            </div>\r\n            : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DashboardSummaryReport);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\profile\\PersonalInfo.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\APP_MACRO\\Holding\\DashboardClaimsAll.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToAssignStaff.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToMeasure.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToTreat.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToAssignUnit.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToValidate.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardStatistic.jsx",["1042"],"import React, {useEffect, useState} from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\nconst DashboardStatistic = (props) => {\r\n    const [data, setProcessData] = useState(\"\");\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const tooltipHoverFormatter = (val, opts) => {\r\n        return val + ' : ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n    };\r\n\r\n    const defaultData = {\r\n        series: [{\r\n            name: \"Enregistrées\",\r\n            data: data ? data.series.data1 : []\r\n        },\r\n            {\r\n                name: \"Tranférées à une Unité\",\r\n                data: data ? data.series.data2 : []\r\n            },\r\n            {\r\n                name: 'Traitées',\r\n                data: data ? data.series.data3 : []\r\n            },\r\n            {\r\n                name: 'Non Fondées',\r\n                data: data ? data.series.data4 : []\r\n            },\r\n            {\r\n                name: 'Mesure Satisfaction',\r\n                data: data ? data.series.data5 : []\r\n            }\r\n        ],\r\n        options: {\r\n            chart: {\r\n                height: 350,\r\n                type: 'line',\r\n                zoom: {\r\n                    enabled: false\r\n                },\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                width: [3, 5, 3, 2, 3],\r\n                curve: 'smooth',\r\n                dashArray: [0, 3, 3, 0, 3]\r\n            },\r\n            title: {\r\n                text: 'Evolution des satisfactions par mois',\r\n                align: 'left'\r\n            },\r\n            legend: {\r\n                tooltipHoverFormatter\r\n            },\r\n            fill: {\r\n                opacity: 0.05,\r\n                type: 'gradient',\r\n                gradient: {\r\n                    shadeIntensity: 1,\r\n                    inverseColors: false,\r\n                    opacityFrom: 0.45,\r\n                    opacityTo: 0.05,\r\n                    stops: [20, 100, 100, 100]\r\n                },\r\n            },\r\n            grid: {\r\n                row: {\r\n                    colors: ['#f3f3f3', 'transparent'],\r\n                    opacity: 0.2\r\n                },\r\n            },\r\n\r\n            xaxis: {\r\n                categories: data ? data.options.xaxis.categories : [],\r\n                title: {\r\n                    text: 'Mois'\r\n                }\r\n            },\r\n\r\n        },\r\n    };\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n           await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    if (!isCancelled) {\r\n                        // console.log(response.data, \"claimerProcessEvolution\");\r\n                        let claimProcess = response.data.claimerProcessEvolution;\r\n                        let processData = [];\r\n                        for (const processus in Object.values(claimProcess)[0]) {\r\n                            processData.push(processus);\r\n                        }\r\n                        // console.log(processData,\"processData\");\r\n                        let newData = [];\r\n                        for (const key in claimProcess) {\r\n                            let totalProcess = claimProcess[key];\r\n                            if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\r\n                                newData.push({\r\n                                    month: key,\r\n                                    data0: totalProcess.registered.allInstitution,\r\n                                    data1: totalProcess.transferred_to_unit.allInstitution,\r\n                                    data2: totalProcess.treated.allInstitution,\r\n                                    data3: totalProcess.unfounded.allInstitution,\r\n                                    data4: totalProcess.measured.allInstitution\r\n                                })\r\n                            } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\r\n                                newData.push({\r\n                                    month: key,\r\n                                    data0: totalProcess.registered.myInstitution,\r\n                                    data1: totalProcess.transferred_to_unit.myInstitution,\r\n                                    data2: totalProcess.treated.myInstitution,\r\n                                    data3: totalProcess.unfounded.myInstitution,\r\n                                    data4: totalProcess.measured.myInstitution\r\n                                })\r\n                            }\r\n                        }\r\n                        let newProcess = {...defaultData};\r\n                        newProcess.options.xaxis.categories=Object.values(newData.map(label=>label.month));\r\n                        for (let i = 0; i <= processData.length - 1; i++) {\r\n                            newProcess.series[i].data = Object.values(newData).map(serie => serie['data' + i]);\r\n                        }\r\n                        // console.log(newProcess,\"WITH_MONTH\");\r\n                        setProcessData(newProcess);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\r\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\r\n            <div className=\"kt-portlet\">\r\n                <div className=\"kt-portlet__head\">\r\n                    <div className=\"kt-portlet__head-label\">\r\n                        <h3 className=\"kt-portlet__head-title\">Evolution de la satisfaction des réclamations sur les 11\r\n                            derniers mois</h3>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    load ? (\r\n                        <LoadingTable/>\r\n                    ) : (\r\n                    data ?\r\n                        <div id=\"chart\" className=\"kt-portlet__body\">\r\n                            <Chart options={data.options} series={data.series} type=\"area\" height={350}/>\r\n                        </div>\r\n                        : null\r\n                    )\r\n                }\r\n            </div>\r\n            : null\r\n    )\r\n\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DashboardStatistic);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToComplete.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsMy.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DoubleButtonDetail.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\AttachmentsButtonDetail.jsx",["1043"],"import React from \"react\";\r\nimport appConfig from \"../../config/appConfig\";\r\n\r\nconst AttachmentsButtonDetail = ({claim}) => {\r\n    return (\r\n        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\">\r\n            <div className=\"kt-heading kt-heading--md\">Liste de pièces jointes\r\n            </div>\r\n            <div className=\"kt-form__section kt-form__section--first\">\r\n                <div className=\"kt-wizard-v2__review\">\r\n                    {\r\n                        !claim ? \"\" : (\r\n                            claim.files.length ? (\r\n                                claim.files.map((file, index) => (\r\n                                    <div className=\"kt-wizard-v2__review-item\"\r\n                                         key={index}>\r\n                                        {/*<div className=\"kt-wizard-v2__review-title\">*/}\r\n                                        {/*    Pièce jointe Nº{index + 1}*/}\r\n                                        {/*</div>*/}\r\n                                        <div className=\"kt-wizard-v2__review-content\">\r\n                                            <a href={`${appConfig.apiDomaine}${file.url}`}\r\n                                               download={true} target={\"_blank\"}>\r\n                                                {file.title}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            ) : (\r\n                                <div className=\"kt-wizard-v2__review-item\">\r\n                                    <div className=\"kt-wizard-v2__review-title\">\r\n                                        Pas de pièce jointe\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AttachmentsButtonDetail;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsUnit.jsx",["1044"],"import React, {useEffect, useState} from 'react';\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {connect} from \"react-redux\";\r\nimport {percentageData} from \"../../../helpers/function\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst DashboardClaimsUnit = (props) => {\r\n\r\n    const [data, setData] = useState(\"\");\r\n    const [totalData, setTotalData] = useState(\"\");\r\n    const [load, setLoad] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n           await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    if (!isCancelled) {\r\n                        setData(response.data.statistics);\r\n                        setTotalData(response.data.totalClaimsRegisteredStatistics);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"show-dashboard-data-my-unit\") ?\r\n            (\r\n                <div>\r\n                    <div className=\"kt-portlet__head\">\r\n                        <div className=\"kt-portlet__head-label\">\r\n                            <h5 className=\"kt-portlet__head-title\">\r\n                                Statistiques des Réclamations de mon Unité sur les 30 derniers jours\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                                <div className=\"row row-no-padding row-col-separator-lg\">\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Enregistrées\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-brand\">\r\n\t\t\t\t\t\t\t\t\t{data.totalRegistered ? data.totalRegistered.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Incomplètes\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-danger\">\r\n\t\t\t\t\t\t\t\t\t{data.totalIncomplete ? data.totalIncomplete.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalIncomplete ?\r\n                                                        <div className=\"progress-bar kt-bg-danger\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalIncomplete.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalIncomplete.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\r\n\t\t\t\t\t\t\t\t\t% Réclamations Incomplètes\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n\r\n                                                {\r\n                                                    data.totalIncomplete ?\r\n                                                        <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalIncomplete.myUnit), totalData)}\r\n                                           </span>\r\n                                                        : \"\"\r\n                                                }\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Complètes\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-success\">\r\n\t\t\t\t\t\t\t\t\t{data.totalComplete ? data.totalComplete.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalComplete ?\r\n                                                        <div className=\"progress-bar kt-bg-success\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalComplete.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalComplete.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\r\n\t\t\t\t\t\t\t\t\t% Réclamations Complètes\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalComplete ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalComplete.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Transférées à une Unité\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-brand\">\r\n                                        {data.totalTransferredToUnit ? data.totalTransferredToUnit.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n\r\n                                                {\r\n                                                    data.totalTransferredToUnit ?\r\n                                                        <div className=\"progress-bar kt-bg-brand\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalTransferredToUnit.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalTransferredToUnit.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Réclamations Transférées à une Unité\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalTransferredToUnit ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalTransferredToUnit.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations en Cours de Traitement\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-warning\">\r\n\t\t\t\t\t\t\t\t\t   {data.totalBeingProcess ? data.totalBeingProcess.myUnit : \"\"}\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalBeingProcess ?\r\n                                                        <div className=\"progress-bar kt-bg-warning\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalBeingProcess.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalBeingProcess.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Réclamations en Cours de Traitement\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalBeingProcess ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalBeingProcess.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Traitées\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-success\">\r\n                                        {data.totalTreated ? data.totalTreated.myUnit : \"\"}\r\n                                    </span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalTreated ?\r\n                                                        <div className=\"progress-bar kt-bg-success\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalTreated.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalTreated.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : ''\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Réclamations Traitées\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalTreated ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalTreated.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Non Fondées\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-success\">\r\n                                        {data.totalUnfounded ? data.totalUnfounded.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalUnfounded ?\r\n                                                        <div className=\"progress-bar kt-bg-success\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalUnfounded.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalUnfounded.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Réclamations Non Fondées\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalUnfounded ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalUnfounded.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Satisfaction Mesurée\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-danger\">\r\n                                        {data.totalMeasuredSatisfaction ? data.totalMeasuredSatisfaction.myUnit : \"\"}\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalMeasuredSatisfaction ?\r\n                                                        <div className=\"progress-bar kt-bg-danger\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalMeasuredSatisfaction.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalMeasuredSatisfaction.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Satisfaction Mesurée\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalMeasuredSatisfaction ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalMeasuredSatisfaction.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            ) : \"\"\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DashboardClaimsUnit);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\GraphChannel.jsx",["1045"],"import React, {useEffect, useState} from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst GraphChannel = (props) => {\r\n\r\n    const [channelData, setChannelData] = useState(\"\");\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const defaultData = {\r\n\r\n        series: [{\r\n            name: 'Total',\r\n            data: channelData ? channelData.series.data : []\r\n        }],\r\n        options: {\r\n            chart: {\r\n                height: 350,\r\n                type: 'bar',\r\n                events: {\r\n                    click: function (chart, w, e) {\r\n                    }\r\n                }\r\n            },\r\n            // colors: \"#f3f3f8\",\r\n            plotOptions: {\r\n                bar: {\r\n                    columnWidth: '45%',\r\n                    distributed: true\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            xaxis: {\r\n                categories: channelData ? channelData.options.xaxis.categories : [],\r\n                labels: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n           await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    // console.log(response.data, \"CANAL_STAT\")\r\n                    if (!isCancelled) {\r\n                        let channels = [];\r\n                        for (const channel in response.data.channelsUse) {\r\n                            channels.push(channel);\r\n                        }\r\n                        let newChannels = {...defaultData};\r\n                        newChannels.options.xaxis.categories = channels;\r\n                        if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\r\n                            newChannels.series[0].data = Object.values(response.data.channelsUse).map(serie => serie.allInstitution)\r\n                        } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\r\n                            newChannels.series[0].data = Object.values(response.data.channelsUse).map(serie => serie.myInstitution)\r\n                        }\r\n                        setChannelData(newChannels);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\r\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\r\n            <div className=\"kt-portlet\">\r\n                <div className=\"kt-portlet__head\">\r\n                    <div className=\"kt-portlet__head-label\">\r\n                        <h3 className=\"kt-portlet__head-title\">Total des Réclamations reçues par Canal sur les 30 derniers jours</h3>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    load ? (\r\n                        <LoadingTable/>\r\n                    ) : (\r\n                        channelData ?\r\n                            <div id=\"chart\" className=\"kt-portlet__body\">\r\n                                <Chart options={channelData.options} series={channelData.series} type=\"bar\"\r\n                                       height={350}/>\r\n                            </div>\r\n                            : null\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(GraphChannel);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimButtonDetail.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClientButtonDetail.jsx",["1046","1047"],"import React from \"react\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst ClientButtonDetail = ({claim}) => {\r\n    return (\r\n        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\"\r\n             data-ktwizard-state=\"current\">\r\n            <div className=\"kt-heading kt-heading--md\">Détails du client</div>\r\n            <div className=\"kt-form__section kt-form__section--first\">\r\n                <div className=\"kt-wizard-v2__review\">\r\n                    <div className=\"kt-wizard-v2__review-item\">\r\n                        <div className=\"kt-widget kt-widget--user-profile-1\">\r\n                            <div className=\"kt-widget__head\">\r\n                                <div className=\"kt-widget__media\">\r\n                                    <img src=\"/personal/img/default-avatar.png\"\r\n                                         alt=\"image\"/>\r\n                                </div>\r\n                                <div className=\"kt-widget__content\"\r\n                                     style={{marginTop: \"auto\", marginBottom: \"auto\"}}>\r\n                                    <div className=\"kt-widget__section\">\r\n                                        {\r\n                                            !claim ? (\r\n                                                <Loader/>\r\n                                            ) : (\r\n                                                <a href=\"#\"\r\n                                                   className=\"kt-widget__username\">\r\n                                                    {`${claim.claimer.lastname} ${claim.claimer.firstname}`}\r\n                                                    <i className=\"flaticon2-correct kt-font-success\"/>\r\n                                                </a>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"kt-widget__body\">\r\n                                {\r\n                                    !claim ? \"\" : (\r\n                                        <div className=\"kt-widget__content\">\r\n                                            <div className=\"kt-widget__info\">\r\n                                                                                <span className=\"fa fa-venus-mars\"\r\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\r\n                                                <span\r\n                                                    className=\"kt-widget__data\">{claim.claimer.sexe === 'F' ? \"Féminin\" : \"Masculin\"}</span>\r\n                                            </div>\r\n                                            <div className=\"kt-widget__info\">\r\n                                                                                <span className=\"fa fa-envelope\"\r\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\r\n                                                <span className=\"kt-widget__data\">\r\n                                                                                {\r\n                                                                                    claim.claimer.email.map((mail, index) => (\r\n                                                                                        index === claim.claimer.email.length - 1 ? mail : mail + \"/ \"\r\n                                                                                    ))\r\n                                                                                }\r\n                                                                            </span>\r\n                                            </div>\r\n                                            <div className=\"kt-widget__info\">\r\n                                                                                <span className=\"fa fa-phone-alt\"\r\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\r\n                                                <span className=\"kt-widget__data\">\r\n                                                                                {\r\n                                                                                    claim.claimer.telephone.map((telephone, index) => (\r\n                                                                                        index === claim.claimer.telephone.length - 1 ? telephone : telephone + \"/ \"\r\n                                                                                    ))\r\n                                                                                }\r\n                                                                            </span>\r\n                                            </div>\r\n                                            <div className=\"kt-widget__info\">\r\n                                                                                <span className=\"fa fa-location-arrow\"\r\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\r\n                                                <span className=\"kt-widget__data\">\r\n                                                                                {claim.claimer.ville ? claim.claimer.ville : \"Pas d'information sur la ville\"}\r\n                                                                            </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClientButtonDetail;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FusionClaim.jsx",["1048","1049"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastErrorMessageWithParameterConfig,\r\n    toastMergeSuccessMessageConfig,\r\n    toastSuccessMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {debug, formatDateToTimeStampte} from \"../../helpers/function\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst FusionClaim = props => {\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [choice, setChoice] = useState({\r\n        original: false,\r\n        duplicate: false\r\n    });\r\n\r\n    const onClickFusion = () => {\r\n        if (choice.original || choice.duplicate) {\r\n            setStartRequest(true);\r\n            if (choice.original && choice.duplicate)\r\n                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Veuillez choisir une seule réclamation.\"));\r\n            else {\r\n                setStartRequest(true);\r\n                if (verifyTokenExpire()) {\r\n                    axios.put(`${appConfig.apiDomaine}/claim-awaiting-assignment/${props.claim.id}/merge/${props.copyClaim.id}`, {keep_claim: !choice.original && !choice.duplicate ? null : choice.original})\r\n                        .then(response => {\r\n                            ToastBottomEnd.fire(toastMergeSuccessMessageConfig);\r\n                            setStartRequest(false);\r\n                            document.getElementById(\"close-button\").click();\r\n                            window.location.href = `/process/claim-assign/${response.data.id}/detail`;\r\n                        })\r\n                        .catch(({response}) => {\r\n                            if (response.data.error.keep_claim)\r\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(response.data.error.keep_claim[0]));\r\n                            setStartRequest(false);\r\n                            console.log(\"Something is wrong\")\r\n                        })\r\n                    ;\r\n                }\r\n            }\r\n        } else\r\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Veillez choisir la réclamation à conserver.\"));\r\n    };\r\n\r\n    const handleChoiceChange = (e) => {\r\n        const newChoice = {...choice};\r\n        if (e.target.id === \"original\")\r\n            setChoice({...newChoice, original: e.target.checked, duplicate: !e.target.checked});\r\n        else if(e.target.id === \"duplicate\")\r\n            setChoice({...newChoice, duplicate: e.target.checked, original: !e.target.checked});\r\n    };\r\n\r\n    const onClickCloseButton = () => {\r\n        document.getElementById(\"close-button\").click();\r\n        props.onCloseModal();\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"kt_modal_4\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Fusion de réclamation</h5>\r\n                        <button disabled={startRequest} onClick={() => onClickCloseButton()} type=\"button\" className=\"close\"/>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form>\r\n                            <table className=\"table table-bordered text-center\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th><strong>Paramètre</strong></th>\r\n                                        <th style={{width: \"40%\"}}><strong>Réclamation</strong></th>\r\n                                        <th style={{width: \"40%\"}}><strong>Doublon</strong></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td><strong>Réclamant</strong></td>\r\n                                        <td>{props.claim.claimer ? `${props.claim.claimer.lastname} ${props.claim.claimer.firstname}` : \"Pas de reclamant\"}</td>\r\n                                        <td>{props.copyClaim.claimer ? `${props.copyClaim.claimer.lastname} ${props.copyClaim.claimer.firstname}` : \"Pas de reclamant\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Montant réclamé</strong></td>\r\n                                        <td>{props.claim.amount_disputed ? `${props.claim.amount_disputed} ${props.claim.amount_currency ? props.claim.amount_currency.name[\"fr\"] : \"\"}` : \"Pas de montant\"}</td>\r\n                                        <td>{props.copyClaim.amount_disputed ? `${props.copyClaim.amount_disputed} ${props.copyClaim.amount_currency ? props.copyClaim.amount_currency.name[\"fr\"] : \"\"}` : \"Pas de montant\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Date de réception</strong></td>\r\n                                        <td>{props.claim.created_at ? formatDateToTimeStampte(props.claim.created_at) : \"Pas de date de reclamation\"}</td>\r\n                                        <td>{props.copyClaim.created_at ? formatDateToTimeStampte(props.copyClaim.created_at) : \"Pas de date de reclamation\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Date de l'évenement</strong></td>\r\n                                        <td>{props.claim.event_occured_at ? formatDateToTimeStampte(props.claim.event_occured_at) : \"Pas de date\"}</td>\r\n                                        <td>{props.copyClaim.event_occured_at ? formatDateToTimeStampte(props.copyClaim.event_occured_at) : \"Pas de date\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Objet de reclamation</strong></td>\r\n                                        <td>{props.claim.claim_object ? props.claim.claim_object.name[\"fr\"] : \"Pas d'objet de Réclamation\"}</td>\r\n                                        <td>{props.copyClaim.claim_object ? props.copyClaim.claim_object.name[\"fr\"] : \"Pas d'objet de Réclamation\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Description</strong></td>\r\n                                        <td>{props.claim.description ? props.claim.description: \"Pas de description\"}</td>\r\n                                        <td>{props.copyClaim.description ? props.copyClaim.description : \"Pas de description\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Attente</strong></td>\r\n                                        <td>{props.claim.claimer_expectation ? props.claim.claimer_expectation : \"Pas d'attente\"}</td>\r\n                                        <td>{props.copyClaim.claimer_expectation ? props.copyClaim.claimer_expectation : \"Pas d'attente\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Choix</strong></td>\r\n                                        <td>\r\n                                            <label className=\"kt-checkbox\">\r\n                                                <input id={\"original\"} type=\"checkbox\" checked={choice.original} onChange={handleChoiceChange}/><span/>\r\n                                            </label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <label className=\"kt-checkbox\">\r\n                                                <input id={\"duplicate\"} type=\"checkbox\" checked={choice.duplicate} onChange={handleChoiceChange}/><span/>\r\n                                            </label>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button disabled={startRequest} onClick={() => onClickCloseButton()} type=\"button\" className=\"btn btn-secondary\">Fermer</button>\r\n                        <button style={{display: \"none\"}} id={\"close-button\"} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n                        {\r\n                            !startRequest ? (\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={() => onClickFusion()}>Fusioner</button>\r\n                            ) : (\r\n                                <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                    Chargement...\r\n                                </button>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FusionClaim;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\AttachmentsButton.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\User.jsx",["1050","1051"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmActivation} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastErrorMessageWithParameterConfig, toastSuccessMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst User = (props) => {\r\n    if (!(verifyPermission(props.userPermissions, \"list-user-any-institution\") || (verifyPermission(props.userPermissions, \"list-user-my-institution\"))))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [users, setUsers] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let endpoint = \"\";\r\n        if (props.plan === \"MACRO\") {\r\n            if (verifyPermission(props.userPermissions, \"list-user-any-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/any/users`;\r\n            if (verifyPermission(props.userPermissions, \"list-user-my-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/my/users`;\r\n        }\r\n        else if(props.plan === \"HUB\")\r\n            endpoint = `${appConfig.apiDomaine}/any/users`;\r\n        else if(props.plan === \"PRO\")\r\n            endpoint = `${appConfig.apiDomaine}/my/users`;\r\n\r\n        async function fetchData () {\r\n            await axios.get(endpoint)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setUsers(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, props.plan, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newUsers = [...users];\r\n        newUsers = newUsers.filter(el => (\r\n            getLowerCaseString(`${el.identite.lastname} ${el.identite.firstname}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.username).indexOf(value) >= 0 ||\r\n            getLowerCaseString(printRole(el.roles)).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.disabled_at === null ? \"Active\" : \"Désactiver\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newUsers;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(users.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(users.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(users.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(users.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(users.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                users.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                users.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printRole = (roles) => {\r\n        const newRoles = [];\r\n        roles.map(r => newRoles.push(r.name));\r\n        return newRoles.join(' / ');\r\n    };\r\n\r\n    const activeAccount = (e, user, index, label) => {\r\n        e.preventDefault();\r\n        DeleteConfirmation.fire(confirmActivation(label))\r\n            .then(async (result) => {\r\n                if (result.value) {\r\n                    document.getElementById(`user-spinner-${user.id}`).style.display = \"block\";\r\n                    document.getElementById(`user-${user.id}`).style.display = \"none\";\r\n                    document.getElementById(`user-edit-${user.id}`).style.display = \"none\";\r\n\r\n                    let endpoint = \"\";\r\n                    if (props.plan === \"MACRO\") {\r\n                        if (verifyPermission(props.userPermissions, \"list-user-any-institution\"))\r\n                            endpoint = `${appConfig.apiDomaine}/any/users/${user.id}/enabled-desabled`;\r\n                        if (verifyPermission(props.userPermissions, \"list-user-my-institution\"))\r\n                            endpoint = `${appConfig.apiDomaine}/my/users/${user.id}/enabled-desabled`;\r\n                    }\r\n                    else if(props.plan === \"HUB\")\r\n                        endpoint = `${appConfig.apiDomaine}/any/users/${user.id}/enabled-desabled`;\r\n                    else if(props.plan === \"PRO\")\r\n                        endpoint = `${appConfig.apiDomaine}/my/users/${user.id}/enabled-desabled`;\r\n\r\n                    if (verifyTokenExpire()) {\r\n                        await axios.put(endpoint)\r\n                            .then(response => {\r\n                                const newUsers = [...users];\r\n                                newUsers[index].disabled_at = newUsers[index].disabled_at === null ? true : null;\r\n                                document.getElementById(`user-spinner-${user.id}`).style.display = \"none\";\r\n                                document.getElementById(`user-${user.id}`).style.display = \"block\";\r\n                                document.getElementById(`user-edit-${user.id}`).style.display = \"block\";\r\n                                setUsers(newUsers);\r\n                                ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Succes de l'opération\"));\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Echec de l'opération\"));\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const rulesInclude = (rules, ...rule) => {\r\n        let value = false;\r\n        rules.map(r => {\r\n            value = r.name === rule[0] || r.name === rule[1];\r\n        });\r\n\r\n        return value;\r\n    };\r\n\r\n    const printBodyTable = (user, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                {console.log('user:', user)}\r\n                <td>\r\n                    {`${user.identite.lastname} ${user.identite.firstname} `}\r\n                    {\r\n                        rulesInclude(user.roles, \"pilot-filial\", \"pilot-holding\") ?\r\n                            user.identite.staff ? (\r\n                                    user.identite.staff.is_active_pilot ? (\r\n                                        <span className=\"kt-badge kt-badge--success kt-badge--inline\">pilot actif</span>\r\n                                    ) : null\r\n                            ) : null\r\n                            : null\r\n                    }\r\n                </td>\r\n                <td>{user.username}</td>\r\n                <td>\r\n                    {printRole(user.roles)}\r\n                </td>\r\n                <td>\r\n                    {\r\n                        user.disabled_at === null ? (\r\n                            <span className=\"kt-badge kt-badge--success kt-badge--inline\">Active</span>\r\n                        ) : (\r\n                            <span className=\"kt-badge kt-badge--danger kt-badge--inline\">Désactiver</span>\r\n                        )\r\n                    }\r\n                </td>\r\n                <td className=\"d-flex justify-content-between align-items-center\">\r\n                    <div id={`user-spinner-${user.id}`} className=\"kt-spinner kt-spinner--lg kt-spinner--dark mt-2 mx-3\" style={{display: \"none\"}}/>\r\n                    <a\r\n                        className=\"mt-2\"\r\n                        id={`user-${user.id}`}\r\n                        href={user.disabled_at === null ? `desactive/${user.id}` : `reactive/${user.id}`}\r\n                        onClick={(e) => activeAccount(e, user, index, user.disabled_at === null ? \"désactiver\" : \"réactiver\")}\r\n                        title={user.disabled_at === null ? \"Désactiver\" : \"Réactiver\"}>\r\n                        {user.disabled_at === null ? \"Désactiver\" : \"Réactiver\"}\r\n                    </a>\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"show-user-any-institution\") || verifyPermission(props.userPermissions, \"show-user-my-institution\") ? (\r\n                            <Link to={`/settings/users/${user.id}/edit`}\r\n                                  id={`user-edit-${user.id}`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md mx-3\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-user-any-institution') || verifyPermission(props.userPermissions, 'list-user-my-institution') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Utilisateur\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={[\"store-user-any-institution\", \"store-user-my-institution\"]}\r\n                            title={\"Utilisateur\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/users/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Email\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Role\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Statut\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"70.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        users.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((user, index) => (\r\n                                                                    printBodyTable(user, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Email</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">role</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Statut</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {users.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(User);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\UserAdd.jsx",["1052"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastSuccessMessageWithParameterConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {formatSelectOption} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst UserAdd = (props) => {\r\n    document.title = \"Satis client - Paramètre Envoie de mail\";\r\n    if (!(verifyPermission(props.userPermissions, 'store-user-any-institution') || verifyPermission(props.userPermissions, \"store-user-my-institution\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    const optionOne = 1;\r\n    const optionTwo = 0;\r\n    const defaultData = {\r\n        identite_id: \"\",\r\n        roles: [],\r\n        activate: optionTwo,\r\n        institution_id: \"\",\r\n        password: \"\",\r\n        password_confirmation: \"\",\r\n    };\r\n    const defaultError = {\r\n        identite_id: [],\r\n        roles: [],\r\n        activate: [],\r\n        institution_id: [],\r\n        password: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [institutions, setInstitutions] = useState([]);\r\n    const [institution, setInstitution] = useState(null);\r\n    const [identities, setIdentities] = useState([]);\r\n    const [identity, setIdentity] = useState(null);\r\n    const [roles, setRoles] = useState([]);\r\n    const [role, setRole] = useState([]);\r\n    const activePilot = institution ? institution.value === props.activeUserInstitution : \"\" === props.activeUserInstitution;\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            let endpoint = \"\";\r\n            if (props.plan === \"MACRO\") {\r\n                if (verifyPermission(props.userPermissions, \"store-user-any-institution\"))\r\n                    endpoint = `${appConfig.apiDomaine}/any/users/create`;\r\n                if (verifyPermission(props.userPermissions, \"store-user-my-institution\"))\r\n                    endpoint = `${appConfig.apiDomaine}/my/users/create`;\r\n            }\r\n            else if(props.plan === \"HUB\")\r\n                endpoint = `${appConfig.apiDomaine}/any/users/create`;\r\n            else if(props.plan === \"PRO\")\r\n                endpoint = `${appConfig.apiDomaine}/my/users/create`;\r\n\r\n            await axios.get(endpoint)\r\n                .then(({data}) => {\r\n                    if (verifyPermission(props.userPermissions, \"store-user-any-institution\"))\r\n                        setInstitutions(formatSelectOption(data, \"name\", false));\r\n                    else {\r\n                        setRoles(formatSelectOption(data.roles, \"name\", false, \"name\"));\r\n                        setIdentities(formatSelectOption(formatIdentities(data.identites), \"fullName\", false));\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [props.plan, appConfig.apiDomaine]);\r\n\r\n    const handleIdentityChange = (selected) => {\r\n        const newData = {...data};\r\n        newData.identite_id = selected ? selected.value : \"\";\r\n        setIdentity(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const formatSelected = (selected) => {\r\n        const newSelected = [];\r\n        selected.map(s => newSelected.push(s.value));\r\n        return newSelected;\r\n    };\r\n\r\n    const handleRoleChange = (selected) => {\r\n        const newData = {...data};\r\n        newData.roles = selected ? formatSelected(selected) : [];\r\n        setRole(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const handleOptionChange = (e) => {\r\n        const newData = {...data};\r\n        newData.activate = parseInt(e.target.value);\r\n        setData(newData);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const newData = {...data};\r\n        newData.password = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handlePasswordConfirmationChange = (e) => {\r\n        const newData = {...data};\r\n        newData.password_confirmation = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const formatStaff = function (options, labelKey, valueKey = \"id\") {\r\n        const newOptions = [];\r\n        for (let i = 0; i < options.length; i++) {\r\n            newOptions.push({value: (options[i])[valueKey], label: (options[i])[labelKey], staff_id: options[i].staff.id});\r\n        }\r\n        return newOptions;\r\n    };\r\n\r\n    const formatIdentities = (identityList) => {\r\n        for (let i = 0; i < identityList.length; i++)\r\n            identityList[i].fullName = `${identityList[i].lastname} ${identityList[i].firstname}`;\r\n        return identityList\r\n    };\r\n\r\n    const loadStaff = async (institutionId) => {\r\n        if (institutionId) {\r\n            if (verifyTokenExpire()) {\r\n                await axios.get(`${appConfig.apiDomaine}/any/users/${institutionId}/create`)\r\n                    .then(({data}) => {\r\n                        setRoles(formatSelectOption(data.roles, \"name\", false, \"name\"));\r\n                        setIdentities(formatStaff(formatIdentities(data.identites), \"fullName\"));\r\n                    })\r\n                    .catch(() => console.log(\"Something is wrong\"))\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInstitutionChange = (selected) => {\r\n        const newData = {...defaultData, roles: []};\r\n        newData.institution_id = selected ? selected.value : \"\";\r\n        setInstitution(selected);\r\n        setRole(null);\r\n        setIdentity(null);\r\n        setData(newData);\r\n        loadStaff(selected ? selected.value : null);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setStartRequest(true);\r\n        let endpoint = \"\";\r\n        if (props.plan === \"MACRO\") {\r\n            if (verifyPermission(props.userPermissions, \"store-user-any-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/any/users`;\r\n            if (verifyPermission(props.userPermissions, \"store-user-my-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/my/users`;\r\n        }\r\n        else if(props.plan === \"HUB\")\r\n            endpoint = `${appConfig.apiDomaine}/any/users`;\r\n        else if(props.plan === \"PRO\")\r\n            endpoint = `${appConfig.apiDomaine}/my/users`;\r\n\r\n        if (verifyTokenExpire()) {\r\n            if ((data.roles.includes(\"pilot-filial\") || data.roles.includes('pilot-holding')) && activePilot) {\r\n                const addUser = await axios.post(endpoint, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        setRole(null);\r\n                        setInstitution(null);\r\n                        return true;\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        return false;\r\n                    })\r\n                ;\r\n\r\n                if (addUser) {\r\n                    if (data.activate === 1) {\r\n                        setStartRequest(true);\r\n                        const active = await axios.put(`${appConfig.apiDomaine}/active-pilot/institutions/${data.institution_id}`, {staff_id: identity.staff_id})\r\n                            .then(({data}) => {\r\n                                setStartRequest(false);\r\n                                setIdentity(null);\r\n                                return true;\r\n                            })\r\n                            .catch(({response}) => {\r\n                                setStartRequest(false);\r\n                                setIdentity(null);\r\n                                return false;\r\n                            })\r\n                        ;\r\n\r\n                        if (addUser && active) {\r\n                            ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Utilisateur enregistré et désigné comme pilote\"));\r\n                        }\r\n\r\n                        if (addUser && !active) {\r\n                            ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Utilisateur enregistré mais non défini comme pilote actif\"));\r\n                        }\r\n                    } else {\r\n                        setIdentity(null);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig)\r\n                    }\r\n                }\r\n            } else {\r\n                const addUser = await axios.post(endpoint, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        setRole(null);\r\n                        setInstitution(null);\r\n                        return true;\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        return false;\r\n                    })\r\n                ;\r\n\r\n                if (addUser) {\r\n                    setIdentity(null);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig)\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'store-user-any-institution') || verifyPermission(props.userPermissions, \"store-user-my-institution\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètre\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/users\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Utilisateur\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Ajout\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Utilisateur\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, \"store-user-any-institution\") ? (\r\n                                                    <div className={error.institution_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"institution\">Institution <InputRequire/></label>\r\n                                                        <div className=\"col-lg-9 col-xl-6\">\r\n                                                            <Select\r\n                                                                isClearable\r\n                                                                value={institution}\r\n                                                                placeholder={\"SATIS\"}\r\n                                                                onChange={handleInstitutionChange}\r\n                                                                options={institutions}\r\n                                                            />\r\n                                                            {\r\n                                                                error.institution_id.length ? (\r\n                                                                    error.institution_id.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            <div className={error.identite_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"staff\">Agent<InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        value={identity}\r\n                                                        placeholder={\"HOUNSSOU Romaric\"}\r\n                                                        onChange={handleIdentityChange}\r\n                                                        options={identities}\r\n                                                    />\r\n                                                    {\r\n                                                        error.identite_id.length ? (\r\n                                                            error.identite_id.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.roles.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={\"role\"}>Role <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        isMulti\r\n                                                        value={role}\r\n                                                        placeholder={\"admin-satis\"}\r\n                                                        onChange={handleRoleChange}\r\n                                                        options={roles}\r\n                                                    />\r\n                                                    {\r\n                                                        error.roles.length ? (\r\n                                                            error.roles.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                (data.roles.includes(\"pilot-filial\") || data.roles.includes('pilot-holding')) && activePilot ? (\r\n                                                    <div className={error.activate.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={\"role\"}>Pilote actif <InputRequire/></label>\r\n                                                        <div className=\"col-lg-9 col-xl-6\">\r\n                                                            <div className=\"kt-radio-inline\">\r\n                                                                <label className=\"kt-radio\">\r\n                                                                    <input type=\"radio\" className={error.activate.length ? \"form-control is-invalid\" : \"form-control\"}  value={optionOne} onChange={handleOptionChange} checked={optionOne === data.activate}/> OUI<span/>\r\n                                                                </label>\r\n                                                                <label className=\"kt-radio\">\r\n                                                                    <input type=\"radio\" className={error.activate.length ? \"form-control is-invalid\" : \"form-control\"} value={optionTwo} onChange={handleOptionChange} checked={optionTwo === data.activate}/> NON<span/>\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            {\r\n                                                                error.activate.length ? (\r\n                                                                    error.activate.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            <div className={error.password.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password\">Mot de passe <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"password\"\r\n                                                        type=\"password\"\r\n                                                        className={error.password.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"************\"\r\n                                                        value={data.password}\r\n                                                        onChange={(e) => handlePasswordChange(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.password.length ? (\r\n                                                            error.password.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={\"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password_confirmation\">Confirmation <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"password_confirmation\"\r\n                                                        type=\"password\"\r\n                                                        className={\"form-control\"}\r\n                                                        placeholder=\"************\"\r\n                                                        value={data.password_confirmation}\r\n                                                        onChange={(e) => handlePasswordConfirmationChange(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Enregistrer</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n\r\n                                                <Link to={\"/settings/users\"} className=\"btn btn-secondary mx-2\">Quitter</Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        activeUserInstitution: state.user.user.institution.id,\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAdd);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClientButton.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimToValidatedListDetail.jsx",["1053","1054","1055","1056"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, loadScript, validatedClaimRule} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport ReasonModal from \"../components/ReasonModal\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastErrorMessageWithParameterConfig} from \"../../config/toastConfig\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\n\r\nconst ClaimToValidatedListDetail = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n    const {id} = useParams();\r\n    const validation = validatedClaimRule(id);\r\n\r\n    if (!((verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-my-institution') ||\r\n        verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-any-institution')) && props.activePilot))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [claim, setClaim] = useState(null);\r\n    const [showReason, setShowReason] = useState(false);\r\n    const [reasonTitle, setReasonTitle] = useState(\"\");\r\n    const [reasonLabel, setReasonLabel] = useState(\"\");\r\n    const [action, setAction] = useState(\"\");\r\n    const [startRequest, setStartRequest] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let endpoint = \"\";\r\n            if (verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-my-institution'))\r\n                endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-my-institution/${id}`;\r\n            else if (verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-any-institution'))\r\n                endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-any-institution/${id}`;\r\n\r\n            await axios.get(endpoint)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    setClaim(response.data);\r\n                })\r\n                .catch(({response}) => {\r\n                    setStartRequest(false);\r\n                    if (response.data && response.data.code === 409)\r\n                        ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(response.data.error));\r\n                    else\r\n                        console.log(\"Something is wrong\")\r\n                });\r\n        }\r\n        if (verifyTokenExpire()) {\r\n            fetchData();\r\n        }\r\n    }, [id]);\r\n\r\n    const showReasonInput = async (type) => {\r\n        if (type === \"validateReject\") {\r\n            await setReasonTitle('Motif de rejet');\r\n            await setReasonLabel('Le motif');\r\n        } else if (type === \"validateSolution\") {\r\n            await setReasonTitle('Solution à communiquer au client');\r\n            await setReasonLabel('Solution');\r\n        }\r\n        await setAction(type);\r\n        await setShowReason(true);\r\n        document.getElementById(\"reason-modal\").click();\r\n    };\r\n\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-claim-awaiting-validation-my-institution\") ||\r\n        verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-any-institution') && props.activePilot) ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/claim-to-validated\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Réclamations à valider\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Détail réclamation\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, validation[props.plan].permission) ? (\r\n                                                    <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                        <div className=\"kt-wizard-v2__nav-body\">\r\n                                                            <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                                <i className=\"flaticon-list\"/>\r\n                                                            </div>\r\n                                                            <div className=\"kt-wizard-v2__nav-label\">\r\n                                                                <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                                    Validation du traitement\r\n                                                                </div>\r\n                                                                <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                                    Valider du traitement de l'agent\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        {\r\n                                            verifyPermission(props.userPermissions, validation[props.plan].permission) ? (\r\n                                                <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\">\r\n                                                    <div className=\"kt-heading kt-heading--md\">\r\n                                                        Validation du traitement\r\n                                                    </div>\r\n                                                    <div className=\"kt-form__section kt-form__section--first\">\r\n                                                        <div className=\"kt-wizard-v2__review\">\r\n                                                            {\r\n                                                                !startRequest ? (\r\n                                                                    claim ? (\r\n                                                                        <div className=\"kt-wizard-v2__review-item\">\r\n                                                                            {\r\n                                                                                claim.active_treatment.solved_at !== null ? (\r\n                                                                                    <>\r\n                                                                                        <div className=\"kt-wizard-v2__review-item\">\r\n                                                                                            <div className=\"kt-wizard-v2__review-title\">\r\n                                                                                                <h5><strong>Traitement</strong></h5>\r\n                                                                                            </div>\r\n                                                                                            <div className=\"kt-wizard-v2__review-content\">\r\n                                                                                                <strong>Statut</strong>: <span className=\"mx-2\">Traité</span><br/>\r\n                                                                                                <strong>Montant retourné</strong>: <span className=\"mx-2\">{claim.active_treatment.amount_returned ? claim.active_treatment.amount_returned : \"Pas de montant\"}</span><br/>\r\n                                                                                                <strong>Solution</strong>: <span className=\"mx-2\">{claim.active_treatment.solution ? claim.active_treatment.solution : \"Pas de solution\"}</span><br/>\r\n                                                                                                <strong>Commentaires</strong>: <span className=\"mx-2\">{claim.active_treatment.comments ? claim.active_treatment.comments : \"Pas de commentaire\"}</span><br/>\r\n                                                                                                <strong>Mésures préventives</strong>: <span className=\"mx-2\">{claim.active_treatment.preventive_measures ? claim.active_treatment.preventive_measures : \"Pas de mésures préventives\"}</span><br/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"kt-widget__action\">\r\n                                                                                            {\r\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-my-institution\") ||\r\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-any-institution\") ? (\r\n                                                                                                    <button\r\n                                                                                                        type=\"button\"\r\n                                                                                                        className=\"btn btn-label-danger btn-sm btn-upper\"\r\n                                                                                                        onClick={() => showReasonInput(\"validateReject\")}>\r\n                                                                                                        Rejeter\r\n                                                                                                    </button>\r\n                                                                                                ) : null\r\n                                                                                            }\r\n\r\n                                                                                            &nbsp;\r\n                                                                                            {\r\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-my-institution\") ||\r\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-any-institution\") ? (\r\n                                                                                                    <button\r\n                                                                                                        type=\"button\"\r\n                                                                                                        className=\"btn btn-brand btn-sm btn-upper\"\r\n                                                                                                        onClick={() => showReasonInput(\"validateSolution\")}>\r\n                                                                                                        Valider\r\n                                                                                                    </button>\r\n                                                                                                ) : null\r\n                                                                                            }\r\n\r\n                                                                                        </div>\r\n                                                                                    </>\r\n                                                                                ) : null\r\n                                                                            }\r\n\r\n                                                                            {\r\n                                                                                claim.active_treatment.declared_unfounded_at !== null ? (\r\n                                                                                    <>\r\n                                                                                        <div className=\"kt-wizard-v2__review-item\">\r\n                                                                                            <div className=\"kt-wizard-v2__review-title\">\r\n                                                                                                <h5><strong>Traitement</strong></h5>\r\n                                                                                            </div>\r\n                                                                                            <div className=\"kt-wizard-v2__review-content\">\r\n                                                                                                <strong>Statut</strong>: <span className=\"mx-2\">Non fondé</span>\r\n                                                                                                <br/>\r\n                                                                                                <strong>Motif</strong>: <span className=\"mx-2\">{claim.active_treatment.unfounded_reason ? claim.active_treatment.unfounded_reason : \"Pas de motif\"}</span>\r\n                                                                                                <br/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div className=\"kt-widget__action\">\r\n                                                                                            <button type=\"button\" className=\"btn btn-label-danger btn-sm btn-upper\" onClick={() => showReasonInput(\"validateReject\")}>\r\n                                                                                                Rejeter\r\n                                                                                            </button>\r\n                                                                                            &nbsp;\r\n                                                                                            <button type=\"button\" className=\"btn btn-brand btn-sm btn-upper\" onClick={() => showReasonInput(\"validateSolution\")}>\r\n                                                                                                Valider\r\n                                                                                            </button>\r\n                                                                                        </div>\r\n                                                                                    </>\r\n                                                                                ) : null\r\n                                                                            }\r\n                                                                            <button id={\"reason-modal\"}\r\n                                                                                    style={{display: \"none\"}} type=\"button\"\r\n                                                                                    className=\"btn btn-bold btn-label-brand btn-sm\"\r\n                                                                                    data-toggle=\"modal\"\r\n                                                                                    data-target=\"#kt_modal_4_2\"/>\r\n                                                                        </div>\r\n                                                                    ) : null\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANTE\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                    {\r\n                                        showReason ? (\r\n                                            <ReasonModal\r\n                                                plan={props.plan}\r\n                                                id={id}\r\n                                                action={action}\r\n                                                reasonTitle={reasonTitle}\r\n                                                reasonLabel={reasonLabel}\r\n                                                onClose={() => setShowReason(false)}\r\n                                            />\r\n                                        ) : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n        activePilot: state.user.user.staff.is_active_pilot\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimToValidatedListDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DoubleButton.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimButton.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimsArchivedDetail.jsx",["1057","1058"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport TreatmentButtonDetail from \"../components/TreatmentButtonDetail\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\nconst ClaimArchivedDetail = (props) => {\r\n    document.title = \"Satis client - Détail plainte\";\r\n    const {id} = useParams();\r\n\r\n    const [claim, setClaim] = useState(null);\r\n\r\n    const endPointConfig = {\r\n        PRO: {\r\n            plan: \"PRO\",\r\n            list: `${appConfig.apiDomaine}/my/claim-archived`,\r\n        },\r\n        MACRO: {\r\n            holding: {\r\n                list: `${appConfig.apiDomaine}/any/claim-archived`,\r\n            },\r\n            filial: {\r\n                list: `${appConfig.apiDomaine}/my/claim-archived`,\r\n            }\r\n        },\r\n        HUB: {\r\n            plan: \"HUB\",\r\n            list: `${appConfig.apiDomaine}/any/claim-archived`,\r\n        }\r\n    };\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'show-any-claim-archived') ||\r\n        verifyPermission(props.userPermissions, \"show-my-claim-archived\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'show-any-claim-archived'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'show-my-claim-archived'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(endPoint.list + `/${id}`)\r\n                .then(response => {\r\n                    setClaim(response.data);\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"))\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"show-any-claim-archived\") ||\r\n        verifyPermission(props.userPermissions, \"show-my-claim-archived\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/claim_archived\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Archivage\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {claim?claim.reference: 'Detail'}\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                        <i className=\"flaticon-list\"/>\r\n                                                    </div>\r\n                                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                            Traitement Effectué\r\n                                                        </div>\r\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                            Détails du traitement effectué\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        <TreatmentButtonDetail archive={true} claim={claim}/>\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANTE\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimArchivedDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\QualificationPeriod.jsx",["1059"],"import React, {useEffect, useState} from \"react\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst QualificationPeriod = props => {\r\n    document.title = \"Satis client - Paramètre délai de qualification\";\r\n    if (!verifyPermission(props.userPermissions, \"list-delai-qualification-parameters\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [qualificationPeriods, setQualificationPeriods] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            axios.get(`${appConfig.apiDomaine}/delai-qualification-parameters`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setQualificationPeriods(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire()) {\r\n            fetchData();\r\n        }\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newQualificationPeriods = [...qualificationPeriods];\r\n        newQualificationPeriods = newQualificationPeriods.filter(el => (\r\n            getLowerCaseString(`${el.borne_sup === \"+\" ? `Plus de ${el.borne_inf}` : `${el.borne_inf}-${el.borne_sup}`} jours`).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newQualificationPeriods;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(qualificationPeriods.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(qualificationPeriods.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(qualificationPeriods.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(qualificationPeriods.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(qualificationPeriods.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                qualificationPeriods.slice(\r\n                    getEndByPosition(activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                qualificationPeriods.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deletePeriod = (qualificationPeriodId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/delai-qualification-parameters/${qualificationPeriodId}`)\r\n                            .then(response => {\r\n                                const newUnitTypes = [...qualificationPeriods];\r\n                                newUnitTypes.splice(index, 1);\r\n                                setQualificationPeriods(newUnitTypes);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (qualificationPeriod, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd text-center\">\r\n                <td>\r\n                    {\r\n                        qualificationPeriod.borne_sup === \"+\" ? (\r\n                            `Plus de ${qualificationPeriod.borne_inf}`\r\n                        ) : (\r\n                            `${qualificationPeriod.borne_inf}-${qualificationPeriod.borne_sup}`\r\n                        )\r\n                    } Jours\r\n                </td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-delai-qualification-parameters') ? (\r\n                            <button\r\n                                onClick={(e) => deletePeriod(qualificationPeriod.uuid, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-delai-qualification-parameters') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Délai qualification\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\r\n                                !qualificationPeriods.length ? \"\" : qualificationPeriods[qualificationPeriods.length - 1 ].borne_sup === \"+\" ? \"\" : \"store-delai-qualification-parameters\"\r\n                            }\r\n                            title={\"Délai qualification\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/qualification-period/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input\r\n                                                            id=\"myInput\"\r\n                                                            type=\"text\"\r\n                                                            onKeyUp={(e) => searchElement(e)}\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            placeholder=\"\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\" className=\"text-center\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Période\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"15%\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        qualificationPeriods.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((qualificationPeriod, index) => (\r\n                                                                    printBodyTable(qualificationPeriod, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr className=\"text-center\">\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Période</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {qualificationPeriods.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(QualificationPeriod);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\SatisfactionMeasureDetail.jsx",["1060","1061"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport ReasonSatisfaction from \"../components/ReasonSatisfaction\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport TreatmentButtonDetail from \"../components/TreatmentButtonDetail\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        edit: `${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            edit: `${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\r\n        },\r\n        filial: {\r\n            edit: `${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        edit: `${appConfig.apiDomaine}/any/claim-satisfaction-measured`,\r\n    }\r\n};\r\n\r\n\r\nconst SatisfactionMeasureDetail = (props) => {\r\n    document.title = \"Satis client - Détail plainte\";\r\n    const {id} = useParams();\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'update-satisfaction-measured-any-claim') ||\r\n        verifyPermission(props.userPermissions, \"update-satisfaction-measured-my-claim\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'update-satisfaction-measured-my-claim'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'update-satisfaction-measured-my-claim'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const [claim, setClaim] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(endPoint.edit + `/${id}`)\r\n                .then(response => {\r\n                    setClaim(response.data);\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"));\r\n        }\r\n\r\n        if (verifyTokenExpire()) {\r\n            fetchData();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"update-satisfaction-measured-any-claim\") ||\r\n        verifyPermission(props.userPermissions, \"update-satisfaction-measured-my-claim\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/claim_measure\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Mesure de Satisfaction\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {claim ? claim.reference : 'Detail'}\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                        <i className=\"flaticon-list\"/>\r\n                                                    </div>\r\n                                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                            Traitement Effectué\r\n                                                        </div>\r\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                            Détails du traitement effectué\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                        <i className=\"flaticon-list\"/>\r\n                                                    </div>\r\n                                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                            Mesure de Satisfaction\r\n                                                        </div>\r\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                            Mesurer la satisfaction du client\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        <TreatmentButtonDetail claim={claim}/>\r\n\r\n                                        <div className=\"kt-wizard-v2__content\"\r\n                                             data-ktwizard-type=\"step-content\">\r\n                                            <div className=\"kt-heading kt-heading--md\">Mesure de Satisfaction\r\n                                            </div>\r\n                                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                                <div className=\"kt-wizard-v2__review\">\r\n                                                    <div className=\"kt-wizard-v2__review-content\">\r\n\r\n                                                        <ReasonSatisfaction\r\n                                                            getId={`${id}`}\r\n                                                            getEndPoint={endPoint.edit}\r\n                                                        />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANTE\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SatisfactionMeasureDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssignToStaffDetail.jsx",["1062","1063"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport UnfoundedModal from \"../components/UnfoundedModal\";\r\nimport TreatmentForm from \"../components/TreatmentForm\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\n\r\nconst ClaimAssignToStaffDetail = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n    const {id} = useParams();\r\n\r\n    if (!verifyPermission(props.userPermissions, \"show-claim-assignment-to-staff\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [claim, setClaim] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${appConfig.apiDomaine}/claim-assignment-staff/${id}`)\r\n                .then(response => {\r\n                    setClaim(response.data);\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"));\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"show-claim-assignment-to-staff\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/claim-assign/to-staff\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Réclamations à traitrer\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {claim?claim.reference: 'Detail'}\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                        <i className=\"flaticon-clipboard\"/>\r\n                                                    </div>\r\n                                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                            Traitement de la réclamtion\r\n                                                        </div>\r\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                            Procédez au traitement de la réclamation\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <button type=\"button\"\r\n                                                    data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                                                    className=\"btn btn-success\">\r\n                                                NON FONDÉ\r\n                                            </button>\r\n                                            {\r\n                                                claim ? (\r\n                                                    <UnfoundedModal\r\n                                                        activeTreatment={\r\n                                                            claim.active_treatment ? (\r\n                                                                claim.active_treatment\r\n                                                            ) : null\r\n                                                        }\r\n                                                        getId={`${id}`}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <UnfoundedModal\r\n                                                        getId={`${id}`}\r\n                                                    />\r\n                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        <div className=\"kt-wizard-v2__content\"\r\n                                             data-ktwizard-type=\"step-content\">\r\n                                            <div className=\"kt-heading kt-heading--md\">Traitement de la\r\n                                                réclamation\r\n                                            </div>\r\n                                            {\r\n                                                claim ? (\r\n                                                    claim.active_treatment ? (\r\n                                                        claim.active_treatment.validated_at && claim.active_treatment.invalidated_reason ? (\r\n                                                            <div className=\"kt-wizard-v2__review-item mb-4\">\r\n                                                                <div className=\"kt-wizard-v2__review-title\">\r\n                                                                    <h5><strong className=\"text-danger\">Traitement rejeté</strong></h5>\r\n                                                                </div>\r\n                                                                <div className=\"kt-wizard-v2__review-content\">\r\n                                                                    <strong>Motif</strong>: <span className=\"mx-2\">{claim.active_treatment.invalidated_reason ? claim.active_treatment.invalidated_reason : \"Pas de raison\"}</span><br/>\r\n                                                                    <hr/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        ) : null\r\n                                                    ) : null\r\n                                                ) : null\r\n                                            }\r\n                                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                                <div className=\"kt-wizard-v2__review\">\r\n                                                    <div className=\"kt-wizard-v2__review-content\">\r\n                                                        {console.log(claim ,\"claim_treatment\" )}\r\n                                                        {\r\n                                                            claim ? (\r\n                                                                <TreatmentForm\r\n                                                                    amount_disputed={claim?claim.amount_disputed:null}\r\n                                                                    activeTreatment={\r\n                                                                        claim.active_treatment ? (\r\n                                                                            claim.active_treatment\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                    getId={`${id}`}\r\n                                                                />\r\n                                                            ) : (\r\n                                                                <TreatmentForm\r\n                                                                    amount_disputed={claim?claim.amount_disputed:null}\r\n                                                                    getId={`${id}`}\r\n                                                                />\r\n                                                            )\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANTE\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimAssignToStaffDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ConfigRapportAutoForm.jsx",["1064","1065"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig, toastEditSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport Select from \"react-select\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/reporting-claim/config`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\r\n        }\r\n    },\r\n\r\n};\r\n\r\nconst ConfigRapportAutoForm = (props) => {\r\n    const {id} = useParams();\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'config-reporting-claim-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n\r\n    const defaultData = {\r\n        institution_id: \"\",\r\n        period: \"\",\r\n        email: [],\r\n    };\r\n    const defaultError = {\r\n        institution_id: \"\",\r\n        period: [],\r\n        email: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [periodData, setPeriodData] = useState(null);\r\n    const [period, setPeriod] = useState(null);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [disabledInput, setDisabledInput] = useState(false);\r\n    const [institution, setInstitution] = useState(null);\r\n    const [institutions, setInstitutions] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.get(endPoint.list + `/${id}/edit`)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                        const newRapport = {\r\n                            period: (response.data.reportingTask.period !== null) ? (response.data.reportingTask.period) : '',\r\n                            email: response.data.reportingTask.email,\r\n                            institution_id:response.data.reportingTask.institution_targeted_id!==null?response.data.reportingTask.institution_targeted_id:\"\"\r\n                        };\r\n\r\n                        setData(newRapport);\r\n\r\n                        if (response.data.reportingTask.period !== null) {\r\n                            setPeriodData(response.data.period);\r\n                            setPeriod(response.data.reportingTask.period_tag);\r\n                        }\r\n                        if (response.data.reportingTask.institution_targeted_id !== null) {\r\n                            setInstitutions(response.data.institutions);\r\n                            setInstitution({value: response.data.reportingTask.institution_targeted.id, label: response.data.reportingTask.institution_targeted.name});\r\n\r\n                        }\r\n                    })\r\n            }\r\n            axios.get(endPoint.list + `/create`)\r\n                .then(response => {\r\n                    let options =\r\n                        response.data.institutions.length ? response.data.institutions.map(institution => ({\r\n                            value: institution.id, label: institution.name\r\n                        })) : \"\"\r\n                    ;\r\n                    setInstitutions(options);\r\n                    setPeriodData(response.data.period)\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const onChangePeriod = (selected) => {\r\n        const newData = {...data};\r\n        newData.period = selected.value;\r\n        setPeriod(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeEmail = (mail) => {\r\n        const newData = {...data};\r\n        newData.email = mail;\r\n        setData(newData);\r\n    };\r\n\r\n    const handleDisabledInputChange = () => {\r\n        setDisabledInput(!disabledInput);\r\n    };\r\n    const onChangeInstitution = (selected) => {\r\n        const newData = {...data};\r\n        if (selected) {\r\n            newData.institution_id = selected.value;\r\n            setInstitution(selected);\r\n        } else setInstitution(null);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(endPoint.list + `/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                        window.location.href=\"/settings/rapport-auto\"\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(endPoint.list, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/clients/category\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Rapport Automatique\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification des rapports automatiques\" : \"Ajout des rapports automatiques\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n\r\n                                                                <div className=\"form-group row\">\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"institution\">\r\n                                                                        <input\r\n                                                                            type=\"checkbox\"\r\n                                                                            value={disabledInput}\r\n                                                                            onChange={handleDisabledInputChange}/>\r\n                                                                        <span/>    Toutes les institutions<span/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <Select\r\n                                                                            isClearable\r\n                                                                            isDisabled={disabledInput}\r\n                                                                            placeholder={\"Veuillez sélectionner une institution\"}\r\n                                                                            value={institution}\r\n                                                                            onChange={onChangeInstitution}\r\n                                                                            options={institutions?institutions.map(institution=>institution):\"\"}\r\n                                                                        />\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className={error.period.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"exampleSelect1\">Période(s)</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                            <Select\r\n                                                                                value={period}\r\n                                                                                onChange={onChangePeriod}\r\n                                                                                options={periodData }\r\n                                                                            />\r\n                                                                        {\r\n                                                                            error.period.length ? (\r\n                                                                                error.period.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.email.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"email\">Votre Email(s)</label>\r\n                                                                    <div className=\" col-lg-9 col-xl-6\">\r\n                                                                        <TagsInput\r\n                                                                            value={data.email}\r\n                                                                            onChange={onChangeEmail}\r\n                                                                            inputProps={{\r\n                                                                                className: \"react-tagsinput-input\",\r\n                                                                                placeholder: \"Email(s)\"\r\n                                                                            }}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.email.length ? (\r\n                                                                                error.email.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Enregistrer</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Loading...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/rapport-auto\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/rapport-auto\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution') ? (\r\n            printJsx()\r\n        ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ConfigRapportAutoForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\MessageAPIForm.jsx",["1066"],"import React, {useEffect, useState} from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst MessageAPIForm = props => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-message-apis'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-message-apis'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        method: [],\r\n    };\r\n\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [method, setMethod] = useState(null);\r\n    const [methods, setMethods] = useState([]);\r\n\r\n    const formatMethodOptions = ({methods}) => {\r\n        const methodOptions = [];\r\n        methods.map((method, index) => methodOptions.push({value: index, label: method}) );\r\n        return methodOptions;\r\n    };\r\n\r\n    const formatSelectMethod = (methods, option) => {\r\n        let formatOption;\r\n        formatOption = methods.filter(el => el.label === option);\r\n        return formatOption[0];\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/message-apis/${id}/edit`)\r\n                    .then(response => {\r\n                        const newData = {\r\n                            name: response.data.messageApi.name,\r\n                        };\r\n                        setData(newData);\r\n                        setMethod(formatSelectMethod(formatMethodOptions(response.data), response.data.messageApi.method));\r\n                        setMethods(formatMethodOptions(response.data));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            } else {\r\n                await axios.get(`${appConfig.apiDomaine}/message-apis/create`)\r\n                    .then(({data}) => {\r\n                        setMethods(formatMethodOptions(data));\r\n                    })\r\n                    .catch(({response}) => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, id]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handleMethodChange = (selected) => {\r\n        setMethod(selected);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        const submitData = {name: data.name, method: method ? method.label : \"\"};\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/message-apis/${id}`, submitData)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/message-apis`, submitData)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        const oldMethod = method;\r\n                        let newMethods = [...methods];\r\n                        newMethods = newMethods.filter(el => el.label !== oldMethod.label );\r\n                        setMethod(null);\r\n                        setMethods(newMethods);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        redirectError401Page(errorRequest.response.data.code);\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/message-apis\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Message API\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification d'un méssage API\" : \"Ajout d'un méssage API\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Méssage API <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le nom du Méssage API\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.method.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Méthode <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        value={method}\r\n                                                        placeholder=\"Veillez selectionner la méthod\"\r\n                                                        onChange={handleMethodChange}\r\n                                                        options={methods}\r\n                                                    />\r\n                                                    {\r\n                                                        error.method.length ? (\r\n                                                            error.method.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/message-apis\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/message-apis\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-message-apis') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-message-apis') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MessageAPIForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimListDetail.jsx",["1067"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAssignClaimSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport ReasonModal from \"../components/ReasonModal\";\r\nimport {AssignClaimConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmAssignConfig} from \"../../config/confirmConfig\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\n\r\nconst ClaimListDetail = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n    const {id} = useParams();\r\n\r\n    if (!verifyPermission(props.userPermissions, \"assignment-claim-awaiting-treatment\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [claim, setClaim] = useState(null);\r\n    const [showReason, setShowReason] = useState(false);\r\n    const [reasonTitle, setReasonTitle] = useState(\"\");\r\n    const [reasonLabel, setReasonLabel] = useState(\"\");\r\n    const [action, setAction] = useState(\"\");\r\n    const [staffs, setStaffs] = useState([]);\r\n    const [errors, setErrors] = useState([]);\r\n    const [staff, setStaff] = useState(null);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    const formatStaffsOptions = (data) => {\r\n        const newData = [];\r\n        for (let i = 0; i < data.length; i++)\r\n            newData.push({value: data[i].id, label: `${data[i].identite.lastname} ${data[i].identite.firstname}`});\r\n        return newData;\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${appConfig.apiDomaine}/claim-awaiting-treatment/${id}/edit`)\r\n                .then(response => {\r\n                    setClaim(response.data.claim);\r\n                    setStaffs(formatStaffsOptions(response.data.staffs));\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"))\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [id]);\r\n\r\n    const onChangeStaff = (selected) => {\r\n        setStaff(selected);\r\n    };\r\n\r\n    const selfAssign = () => {\r\n        AssignClaimConfirmation.fire(confirmAssignConfig)\r\n            .then(response => {\r\n                if (verifyTokenExpire()) {\r\n                    if (response.value) {\r\n                        axios.put(`${appConfig.apiDomaine}/claim-awaiting-treatment/${id}/self-assignment`, {})\r\n                            .then(response => {\r\n                                ToastBottomEnd.fire(toastAssignClaimSuccessMessageConfig);\r\n                                window.location.href = \"/process/unit-claims\";\r\n                            })\r\n                            .catch(error => console.log(\"Something is wrong\"))\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n    };\r\n\r\n    const assignClaim = () => {\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            axios.put(`${appConfig.apiDomaine}/claim-awaiting-treatment/${id}/assignment`, {staff_id: staff ? staff.value : null})\r\n                .then(response => {\r\n                    ToastBottomEnd.fire(toastAssignClaimSuccessMessageConfig);\r\n                    setStartRequest(false);\r\n                    setStaff(null);\r\n                    setErrors([]);\r\n                    window.location.href = \"/process/unit-claims\";\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    setErrors(error.response.data.error.staff_id)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const showReasonInput = async (type) => {\r\n        await setReasonTitle(\"Motif de rejet\");\r\n        await setReasonLabel(\"Le motif\");\r\n        await setAction(type);\r\n        await setShowReason(true);\r\n        document.getElementById(\"reason-modal\").click();\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"assignment-claim-awaiting-treatment\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/unit-claims\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Liste des réclamations\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"text\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        claim ? claim.reference : \"Détail réclamation\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            {\r\n                                                props.lead ? (\r\n                                                    <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                        <div className=\"kt-wizard-v2__nav-body\">\r\n                                                            <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                                <i className=\"flaticon-paper-plane\"/>\r\n                                                            </div>\r\n                                                            <div className=\"kt-wizard-v2__nav-label\">\r\n                                                                <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                                    Affectation de la réclamation\r\n                                                                </div>\r\n                                                                <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                                    Affectez la réclamation à un agent\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            {\r\n                                                !props.lead ? (\r\n                                                    verifyPermission(props.userPermissions, \"self-assignment-claim-awaiting-treatment\") ? (\r\n                                                        <button className=\"btn btn-primary btn-sm mx-2\" onClick={selfAssign}>Auto-affectation</button>\r\n                                                    ) : null\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, \"rejected-claim-awaiting-treatment\") ? (\r\n                                                    <button\r\n                                                        className=\"btn btn-danger btn-sm\"\r\n                                                        onClick={() => showReasonInput(\"reject\")}>\r\n                                                        Rejeter la réclamation\r\n                                                    </button>\r\n                                                ) : null\r\n                                            }\r\n                                            <button id={\"reason-modal\"} style={{display: \"none\"}} type=\"button\"\r\n                                                    className=\"btn btn-bold btn-label-brand btn-sm\"\r\n                                                    data-toggle=\"modal\" data-target=\"#kt_modal_4_2\"/>\r\n                                        </div>\r\n\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        {\r\n                                            props.lead ? (\r\n                                                <div className=\"kt-wizard-v2__content\"\r\n                                                     data-ktwizard-type=\"step-content\">\r\n                                                    <div className=\"kt-heading kt-heading--md\">Affectation de la\r\n                                                        réclamation\r\n                                                    </div>\r\n                                                    <div className=\"kt-form__section kt-form__section--first\">\r\n                                                        <div className=\"kt-wizard-v2__review\">\r\n                                                            <div className=\"kt-wizard-v2__review-content\">\r\n                                                                <div\r\n                                                                    className={errors.length ? \"form-group validated\" : \"form-group\"}>\r\n                                                                    <label>Agent</label>\r\n                                                                    <Select\r\n                                                                        isClearable\r\n                                                                        placeholder={\"Veillez selectioner l'agent\"}\r\n                                                                        value={staff}\r\n                                                                        onChange={onChangeStaff}\r\n                                                                        options={staffs}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        errors.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className=\"form-group d-flex justify-content-between\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button className=\"btn btn-primary\"\r\n                                                                                    onClick={assignClaim}>Affecter la\r\n                                                                                réclamation</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANTE\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                    {\r\n                                        showReason ? (\r\n                                            <ReasonModal\r\n                                                plan={props.plan}\r\n                                                id={id}\r\n                                                action={action}\r\n                                                reasonTitle={reasonTitle}\r\n                                                reasonLabel={reasonLabel}\r\n                                                onClose={() => setShowReason(false)}\r\n                                            />\r\n                                        ) : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimListDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\InstitutionMessageApi.jsx",["1068","1069"],"import React, {useEffect, useState} from \"react\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig, toastErrorMessageWithParameterConfig,\r\n} from \"../../config/toastConfig\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport Select from \"react-select\";\r\nimport {debug} from \"../../helpers/function\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst InstitutionMessageApi = props => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-institution-message-api'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-my-institution-message-api'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const [defaultData, setDefaultData] = useState({});\r\n    const [defaultError, setDefaultError] = useState({});\r\n\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [messageApis, setMessageApis] = useState([]);\r\n    const [messageApi, setMessageApi] = useState(null);\r\n    const [editData, setEditData] = useState(null);\r\n\r\n    const formatMessageApiOptions = (messageApis) => {\r\n        const messageApiOptions = [];\r\n        messageApis.map(messageApi => messageApiOptions.push({value: messageApi.id, label: messageApi.method, params: messageApi.params}));\r\n        return messageApiOptions;\r\n    };\r\n\r\n    const formatState = (params, paramData = null) => {\r\n        const newState = {};\r\n        const newError = {};\r\n        console.log(paramData,\"PARAMS\");\r\n        params.map(param => {\r\n            if (param !== \"to\" && param !== \"text\") {\r\n                newState[param] = paramData ? paramData[param] : \"\";\r\n                newError[`params.${param}`] = [];\r\n            }\r\n        });\r\n        setData(newState);\r\n        setDefaultData(newState);\r\n        setError(newError);\r\n        setDefaultError(newError);\r\n    };\r\n\r\n    const initialState = (stateData) => {\r\n        setEditData({...stateData.params, value: stateData.message_api.id});\r\n        formatState(stateData.message_api.params, stateData.params);\r\n        setMessageApi({\r\n            value: stateData.message_api.id,\r\n            label: stateData.message_api.method,\r\n            params: stateData.message_api.params\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/any/institutions/${id}/message-apis/create`)\r\n                    .then(({data}) => {\r\n                        setMessageApis(formatMessageApiOptions(data.messageApis));\r\n                        if (data.institutionMessageApi) {\r\n                            initialState(data.institutionMessageApi);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            } else {\r\n                await axios.get(`${appConfig.apiDomaine}/my/institutions/message-apis/create`)\r\n                    .then(({data}) => {\r\n                        debug(data, \"data\");\r\n                        setMessageApis(formatMessageApiOptions(data.messageApis));\r\n                        if (data.institutionMessageApi) {\r\n                            initialState(data.institutionMessageApi);\r\n                        }\r\n                    })\r\n                    .catch(({response}) => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const handleMessageApiChange = (selected) => {\r\n        if (selected)\r\n            formatState(selected.params, editData ? selected.value === editData.value ? editData : null : null);\r\n        else {\r\n            setData({});\r\n            setDefaultData({});\r\n            setError({});\r\n            setDefaultError({});\r\n        }\r\n        setMessageApi(selected);\r\n    };\r\n\r\n    const handleChange = (e, param) => {\r\n        const newData = {...data};\r\n        newData[param] = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const executeSave = (url, saveData) => {\r\n        if (verifyTokenExpire()) {\r\n            axios.post(url, saveData)\r\n                .then(() => {\r\n                    setStartRequest(false);\r\n                    setError(defaultError);\r\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                })\r\n                .catch(errorRequest => {\r\n                    setStartRequest(false);\r\n                    setError({...defaultError, ...errorRequest.response.data.error});\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const saveData = (e) => {\r\n        e.preventDefault();\r\n        const sendData = {\r\n            \"message_api_id\": messageApi ? messageApi.value : \"\",\r\n            \"params\": data\r\n        };\r\n        debug(!sendData.message_api_id.length, \"sendData\");\r\n        if (sendData.message_api_id.length) {\r\n            setStartRequest(true);\r\n            if (id)\r\n                executeSave(`${appConfig.apiDomaine}/any/institutions/${id}/message-apis`, sendData);\r\n            else\r\n                executeSave(`${appConfig.apiDomaine}/my/institutions/message-apis`, sendData);\r\n        } else\r\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Veillez renseigner les informations\"));\r\n    };\r\n\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Fournisseur SMS\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Modification Fournisseur SMS\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n\r\n                                            <div className={\"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Fournisseur SMS <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        value={messageApi}\r\n                                                        placeholder=\"oceanique\"\r\n                                                        onChange={handleMessageApiChange}\r\n                                                        options={messageApis}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                Object.keys(error).length ? (\r\n                                                    Object.keys(data).map((param, index) => (\r\n                                                        <div key={index} className={ error[Object.keys(error)[index]].length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={Object.keys(data)[index]}>{Object.keys(data)[index]} <InputRequire/></label>\r\n                                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                                <input\r\n                                                                    id={Object.keys(data)[index]}\r\n                                                                    type={Object.keys(data)[index] === \"password\" ? \"password\" : \"text\"}\r\n                                                                    className={error[Object.keys(error)[index]].length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    placeholder={Object.keys(data)[index]}\r\n                                                                    value={data[Object.keys(data)[index]]}\r\n                                                                    onChange={(e) => handleChange(e, param)}\r\n                                                                />\r\n                                                                {\r\n                                                                    error[Object.keys(error)[index]].length ? (\r\n                                                                        error[Object.keys(error)[index]].map((error, index) => (\r\n                                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    ))\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => saveData(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/institution\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/institution\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-institution-message-api') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'update-my-institution-message-api') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(InstitutionMessageApi);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Modal\\ConfirmClaimAddModal.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ClaimDetails.jsx",["1070","1071","1072","1073","1074"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {formatDateToTimeStampte, loadCss, loadScript} from \"../../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../../constants/token\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport Loader from \"../Loader\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\n\r\nconst ClaimDetails = (props) => {\r\n\r\n    console.log(props.claim);\r\n    const claim = props.claim;\r\n\r\n    const [first, setFist] = useState(\"current\");\r\n    const [second, setSecond] = useState(\"pending\");\r\n    const [third, setThird] = useState(\"pending\");\r\n    const [last, setLast] = useState(\"pending\");\r\n\r\n    const onClickFirst = () => {\r\n        setFist(\"current\");\r\n        setSecond(\"pending\");\r\n        setThird(\"pending\");\r\n        setLast(\"pending\");\r\n    };\r\n\r\n    const onClickSecond = () => {\r\n        setFist(\"done\");\r\n        setSecond(\"current\");\r\n        setThird(\"pending\");\r\n        setLast(\"pending\");\r\n    };\r\n\r\n    const onClickThird = () => {\r\n        setFist(\"done\");\r\n        setSecond(\"done\");\r\n        setThird(\"current\");\r\n        setLast(\"pending\");\r\n    };\r\n\r\n    const onClickLast = () => {\r\n        setFist(\"done\");\r\n        setSecond(\"done\");\r\n        setThird(\"done\");\r\n        setLast(\"current\");\r\n    };\r\n\r\n    const onClickPrevious = (e) => {\r\n        e.preventDefault();\r\n        if (last === \"current\")\r\n            onClickThird();\r\n        else if (third === \"current\")\r\n            onClickSecond();\r\n        else if (second === \"current\")\r\n            onClickFirst();\r\n    };\r\n\r\n    const onClickNext = (e) => {\r\n        e.preventDefault();\r\n        if (first === \"current\")\r\n            onClickSecond();\r\n        else if (second === \"current\")\r\n            onClickThird();\r\n        else if (third === \"current\")\r\n            onClickLast()\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-portlet__body kt-portlet__body--fit w-100\">\r\n            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\" data-ktwizard-state={first === \"current\" ? \"step-first\" : last === \"current\" ? \"last\" : \"between\"}>\r\n                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                    <div className=\"kt-wizard-v2__nav\">\r\n                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                            <div onClick={() => onClickFirst() } className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\" data-ktwizard-state={first}>\r\n                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                        <i className=\"flaticon-user-settings\"/>\r\n                                    </div>\r\n                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                            Client\r\n                                        </div>\r\n                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                            Acceder aux détails du client\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => onClickSecond() } className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\" data-ktwizard-state={second}>\r\n                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                        <i className=\"flaticon-book\"/>\r\n                                    </div>\r\n                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                            Réclamation\r\n                                        </div>\r\n                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                            Acceder aux détails de la réclamation\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => onClickThird() } className=\"kt-wizard-v2__nav-item\" href=\"#\" data-ktwizard-type=\"step\" data-ktwizard-state={third}>\r\n                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                        <i className=\"flaticon-file-2\"/>\r\n                                    </div>\r\n                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                            Pièces jointes\r\n                                            {\r\n                                                !props.claim ? \"\" : (\r\n                                                    <span\r\n                                                        className=\"mx-lg-4 kt-badge kt-badge--success  kt-badge--inline kt-badge--pill\">{props.claim.files.length}</span>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                            Acceder à la liste des pièces jointes\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                    <form className=\"kt-form\" id=\"kt_form\">\r\n\r\n                        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\" data-ktwizard-state={first === \"current\" ? \"current\" : \"pending\"}>\r\n                            <div className=\"kt-heading kt-heading--md\">Détails du client</div>\r\n                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                <div className=\"kt-wizard-v2__review\">\r\n                                    <div className=\"kt-wizard-v2__review-item\">\r\n                                        <div className=\"kt-widget kt-widget--user-profile-1\">\r\n                                            <div className=\"kt-widget__head\">\r\n                                                <div className=\"kt-widget__media\">\r\n                                                    <img src=\"/personal/img/default-avatar.png\"\r\n                                                         alt=\"image\"/>\r\n                                                </div>\r\n                                                <div className=\"kt-widget__content\"\r\n                                                     style={{marginTop: \"auto\", marginBottom: \"auto\"}}>\r\n                                                    <div className=\"kt-widget__section\">\r\n                                                        {\r\n                                                            !claim ? (\r\n                                                                <Loader/>\r\n                                                            ) : (\r\n                                                                <a href=\"#\"\r\n                                                                   className=\"kt-widget__username\">\r\n                                                                    {`${claim.claimer.lastname} ${claim.claimer.firstname}`}\r\n                                                                    <i className=\"flaticon2-correct kt-font-success\"/>\r\n                                                                </a>\r\n                                                            )\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"kt-widget__body\">\r\n                                                {\r\n                                                    !claim ? \"\" : (\r\n                                                        <div className=\"kt-widget__content\">\r\n                                                            <div className=\"kt-widget__info\">\r\n                                                                                <span className=\"fa fa-venus-mars\"\r\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\r\n                                                                <span\r\n                                                                    className=\"kt-widget__data\">{claim.claimer.sexe === 'F' ? \"Féminin\" : \"Masculin\"}</span>\r\n                                                            </div>\r\n                                                            <div className=\"kt-widget__info\">\r\n                                                                                <span className=\"fa fa-envelope\"\r\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\r\n                                                                <span className=\"kt-widget__data\">\r\n                                                                                {\r\n                                                                                    claim.claimer.email.map((mail, index) => (\r\n                                                                                        index === claim.claimer.email.length - 1 ? mail : mail + \"/ \"\r\n                                                                                    ))\r\n                                                                                }\r\n                                                                            </span>\r\n                                                            </div>\r\n                                                            <div className=\"kt-widget__info\">\r\n                                                                                <span className=\"fa fa-phone-alt\"\r\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\r\n                                                                <span className=\"kt-widget__data\">\r\n                                                                                {\r\n                                                                                    claim.claimer.telephone.map((telephone, index) => (\r\n                                                                                        index === claim.claimer.telephone.length - 1 ? telephone : telephone + \"/ \"\r\n                                                                                    ))\r\n                                                                                }\r\n                                                                            </span>\r\n                                                            </div>\r\n                                                            <div className=\"kt-widget__info\">\r\n                                                                                <span className=\"fa fa-location-arrow\"\r\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\r\n                                                                <span className=\"kt-widget__data\">\r\n                                                                                {claim.claimer.ville ? claim.claimer.ville : \"Pas d'information sur la ville\"}\r\n                                                                            </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\" data-ktwizard-state={second === \"current\" ? \"current\" : \"pending\"}>\r\n                            <div className=\"kt-heading kt-heading--md\">Détails de la réclamation</div>\r\n                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                <div className=\"kt-wizard-v2__review\">\r\n                                    <div className=\"kt-wizard-v2__review-item\">\r\n                                        {\r\n                                            !claim ? null : (\r\n                                                <div className=\"kt-wizard-v2__review-content\">\r\n                                                    <h5><span style={{color:\"#48465b\"}}>Référence:</span></h5>\r\n                                                    <span className=\"mx-2\">{claim.reference ? claim.reference : \"Pas de canal de référence\"}</span>\r\n                                                    <br/>\r\n                                                    <br/>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n\r\n                                        <div className=\"kt-wizard-v2__review-title\">\r\n                                            <h5><span style={{color:\"#48465b\"}}>Canaux</span></h5>\r\n                                        </div>\r\n                                        {\r\n                                            !claim ? null : (\r\n                                                <div className=\"kt-wizard-v2__review-content\">\r\n                                                    <strong>Canal de réception:</strong> <span\r\n                                                    className=\"mx-2\">{claim.request_channel ? claim.request_channel.name[\"fr\"] : \"Pas de canal de réception\"}</span><br/>\r\n                                                    <strong>Canal de réponse préférentiel:</strong> <span\r\n                                                    className=\"mx-2\">{claim.response_channel ? claim.response_channel.name[\"fr\"] : \"Pas de canal de réponse\"}</span><br/>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"kt-wizard-v2__review-item\">\r\n                                        <div className=\"kt-wizard-v2__review-title\">\r\n                                            <h5><span style={{color:\"#48465b\"}}>Cible</span></h5>\r\n                                        </div>\r\n                                        {\r\n                                            !claim ? null : (\r\n                                                <div className=\"kt-wizard-v2__review-content\">\r\n                                                    <strong>Institution</strong>: <span\r\n                                                    className=\"mx-2\">{claim.institution_targeted.name}</span><br/>\r\n                                                    <strong>Unité</strong>: <span\r\n                                                    className=\"mx-2\">{claim.unit_targeted ? claim.unit_targeted.name[\"fr\"] : \"Pas d'institution ciblé\"}</span><br/>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"kt-wizard-v2__review-item\">\r\n                                        <div className=\"kt-wizard-v2__review-title\">\r\n                                            <h5><span style={{color:\"#48465b\"}}>Spécifications</span></h5>\r\n                                        </div>\r\n                                        {\r\n                                            !claim ? null : (\r\n                                                <div className=\"kt-wizard-v2__review-content\">\r\n                                                    <strong>Objet</strong>: <span\r\n                                                    className=\"mx-2\">{claim.claim_object.name[\"fr\"]}</span><br/>\r\n                                                    <br/>\r\n                                                    <strong>Numéro de compte </strong>: <span\r\n                                                    className=\"mx-2\">{claim.account_targeted ? claim.account_targeted.number : \"Pas de compte cible\"}</span><br/>\r\n                                                    <br/>\r\n                                                    <strong>Montant réclamé</strong>: <span\r\n                                                    className=\"mx-2\">{claim.amount_disputed ? `${claim.amount_disputed} ${claim.amount_currency.name[\"fr\"]}` : \"Pas de montant\"}</span><br/>\r\n                                                    <br/>\r\n                                                    <strong>Date de réception</strong>: <span className=\"mx-2\">{claim.created_at ? formatDateToTimeStampte(claim.created_at) : \"Pas de date\"}</span><br/>\r\n                                                    <br/>\r\n                                                    <strong>Date de l'évernement</strong>: <span className=\"mx-2\">{claim.event_occured_at ? formatDateToTimeStampte(claim.event_occured_at) : \"Pas de date\"}</span><br/>\r\n                                                    <br/>\r\n                                                    <strong>Description:</strong> <span\r\n                                                    className=\"mx-2\">{claim.description ? claim.description : \"Pas de description\"}</span><br/>\r\n                                                    <br/>\r\n                                                    <strong>Attente:</strong> <span\r\n                                                    className=\"mx-2\">{claim.claimer_expectation ? claim.claimer_expectation : \"Pas d'attente\"}</span><br/>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\" data-ktwizard-state={third === \"current\" ? \"current\" : \"pending\"}>\r\n                            <div className=\"kt-heading kt-heading--md\">Liste de pièces jointes\r\n                            </div>\r\n                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                <div className=\"kt-wizard-v2__review\">\r\n                                    {\r\n                                        !claim ? \"\" : (\r\n                                            claim.files.length ? (\r\n                                                claim.files.map((file, index) => (\r\n                                                    <div className=\"kt-wizard-v2__review-item\"\r\n                                                         key={index}>\r\n                                                        {/*<div className=\"kt-wizard-v2__review-title\">*/}\r\n                                                        {/*    Pièce jointe Nº{index + 1}*/}\r\n                                                        {/*</div>*/}\r\n                                                        <div className=\"kt-wizard-v2__review-content\">\r\n                                                            <a href={`${appConfig.apiDomaine}${file.url}`}\r\n                                                               download={true} target={\"_blank\"}>\r\n                                                                {file.title}\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : (\r\n                                                <div className=\"kt-wizard-v2__review-item\">\r\n                                                    <div className=\"kt-wizard-v2__review-title\">\r\n                                                        Pas de pièce jointe\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClaimDetails;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\Message.js",["1075","1076","1077","1078"],"import React from 'react';\r\nimport moment from 'moment';\r\nimport './Message.css';\r\nimport appConfig from \"../../../config/appConfig\";\r\n\r\n\r\nexport default function Message(props) {\r\n\r\n    const {\r\n        data,\r\n        isMine,\r\n        startsSequence,\r\n        endsSequence,\r\n        showTimestamp,\r\n    } = props;\r\n\r\n    const friendlyTimestamp = moment(data.created_at).format('LL');\r\n    const chatTimestamp = moment(data.created_at).format('LT');\r\n\r\n    const deletedProps = (key) => {\r\n        props.deleted(key)\r\n    };\r\n\r\n    const responseItemProps = (key, text) => {\r\n        props.responseItem(key, text);\r\n\r\n    };\r\n\r\n    const ouvrirFermerSpoiler = (id) => {\r\n        if (document.getElementById(id).style.display === \"none\")\r\n            document.getElementById(id).style.display = \"block\";\r\n        else\r\n            document.getElementById(id).style.display = \"none\";\r\n    };\r\n\r\n    return (\r\n\r\n        <div\r\n            className={[\r\n                'message',\r\n                `${isMine ? 'mine' : ''}`,\r\n                `${startsSequence ? 'start' : ''}`,\r\n                `${endsSequence ? 'end' : ''}`\r\n            ].join(' ')}>\r\n\r\n            {\r\n                showTimestamp &&\r\n                <div className=\"timestamp\">\r\n                    {friendlyTimestamp}\r\n                </div>\r\n            }\r\n            <div className=\"author\">\r\n\r\n                {\r\n                    !isMine && startsSequence && data.posted_by.identite_id ?\r\n                        <div>\r\n                        <span\r\n                            className=\"kt-media kt-media--circle kt-media--sm\"><img\r\n                            src=\"/assets/media/users/default.jpg\"\r\n                            alt=\"image\"/>\r\n                        </span>\r\n                            {data.posted_by.identite.lastname + \" \" + data.posted_by.identite.firstname}\r\n                        </div> : \"\"\r\n                }\r\n\r\n            </div>\r\n            <div className=\"bubble-container\" onMouseEnter={() => ouvrirFermerSpoiler(data.id)}>\r\n\r\n                {\r\n                    data.files.length ?\r\n                        data.files.map((file, index) => (\r\n                            <div className=\"bubble-media\" key={index}>\r\n                                <div>\r\n                                    <img src={appConfig.apiDomaine + file.url} alt=\"\"\r\n                                         style={{\r\n                                             maxWidth: \"115px\",\r\n                                             maxHeight: \"115px\",\r\n                                             textAlign: 'center'\r\n                                         }}\r\n                                    />\r\n                                </div>\r\n\r\n                                {index === file.length - 1 ? file.title : file.title + \" \"}\r\n                                <br/>\r\n                                <a href={appConfig.apiDomaine + '/download/' + file.id}\r\n                                   download={file.title}><strong>Télécharger</strong></a>\r\n                                <hr/>\r\n                                <div className=\"\">\r\n                                    {data.text}\r\n                                    <div className=\"time\">\r\n                                        {chatTimestamp}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )) :\r\n                        <div className=\"bubble\">\r\n\r\n                            {\r\n                                data.parent_id && data.parent ?\r\n                                    <div>\r\n                                        <div><i className=\"la la-tags\"></i></div>\r\n                                        <em> {data.parent.text} </em>\r\n                                        <div style={{fontSize: '12px'}}>\r\n                                            {\"By:\" + \" \" + data.parent.posted_by.identite.lastname + ' ' + data.parent.posted_by.identite.firstname}\r\n                                        </div>\r\n                                        <hr/>\r\n                                        {data.text}\r\n                                    </div> :\r\n                                    data.text\r\n                            }\r\n\r\n                            <div className=\"time\">\r\n                                {chatTimestamp}\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <div className=\"dropdown dropdown-inline\"\r\n                     style={{cursor: \"pointer\"}}>\r\n                    <div\r\n                        id={data.id}\r\n                        style={{display: \"none\"}}\r\n                        data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"false\">\r\n                        <i className=\"flaticon-more-v5\"></i>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-md w-auto\">\r\n\r\n                        <ul className=\"kt-nav\">\r\n                            <li className=\"kt-nav__head\">\r\n                               <span\r\n                                   className=\"kt-nav__link-text\">Citer\r\n                               </span>\r\n                                <a href={\"#\"} onClick={() => responseItemProps(data.id, data.text)}>\r\n                                    <i className=\"kt-nav__link-icon flaticon-reply\"></i>\r\n                                </a>\r\n                            </li>\r\n\r\n                            <li className=\"kt-nav__head\">\r\n                               <span\r\n                                   className=\"kt-nav__link-text\">Supprimer\r\n                               </span>\r\n                                <a href={\"#\"} onClick={(e) => deletedProps(data.id)}>\r\n                                    <i className=\"kt-nav__link-icon flaticon2-trash\"></i>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FormInformation.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\KanbanElementDetail.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ReasonSatisfaction.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\TreatmentForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ReasonModal.jsx",["1079"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAssignClaimSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig,\r\n    toastRejectTreatmentClaimSuccessMessageConfig,\r\n    toastValidateTreatmentClaimSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst ReasonModal = props => {\r\n    const [description, setDescription] = useState(\"\");\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [error, setError] = useState([]);\r\n\r\n    const sendData = () => {\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (props.action === \"reject\") {\r\n                axios.put(`${appConfig.apiDomaine}/claim-awaiting-treatment/${props.id}/rejected`, {rejected_reason: description})\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastAssignClaimSuccessMessageConfig);\r\n                        window.location.href = `/process/unit-claims`\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError(error.response.data.error.rejected_reason);\r\n                    })\r\n                ;\r\n            } else if(props.action === \"validateReject\") {\r\n                let endpoint = ``;\r\n                if (props.plan === \"MACRO\" || props.plan === \"PRO\")\r\n                    endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-my-institution/${props.id}/invalidate`;\r\n                else if(props.plan === \"HUB\")\r\n                    endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-any-institution/${props.id}/invalidate`;\r\n                axios.put(endpoint, {invalidated_reason: description})\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastRejectTreatmentClaimSuccessMessageConfig);\r\n                        window.location.href = `/process/claim-to-validated`\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError(error.response.data.error.invalidated_reason);\r\n                    })\r\n                ;\r\n            } else if(props.action === \"validateSolution\") {\r\n                let endpoint = \"\";\r\n                if (props.plan === \"MACRO\" || props.plan === \"PRO\")\r\n                    endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-my-institution/${props.id}/validate`;\r\n                else if(props.plan === \"HUB\")\r\n                    endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-any-institution/${props.id}/validate`;\r\n                axios.put(endpoint, {solution_communicated: description})\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastValidateTreatmentClaimSuccessMessageConfig);\r\n                        window.location.href = `/process/claim-to-validated`\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError(error.response.data.error.solution_communicated);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal fade show\" id=\"kt_modal_4_2\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" style={{display: \"block\", paddingRight: \"17px\"}} aria-modal=\"true\">\r\n            <div className=\"modal-dialog modal-xl\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">{props.reasonTitle}</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"/>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form>\r\n                            <div className={error.length ? \"form-group validated\" : \"\"}>\r\n                                <label htmlFor=\"message-text\" className=\"form-control-label\">{props.reasonLabel}:</label>\r\n                                <textarea\r\n                                    className={error.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                    id=\"message-text\"\r\n                                    onChange={e => setDescription(e.target.value)}\r\n                                />\r\n                                {\r\n                                    error.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button id={\"close-button-reason\"} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => props.onClose()}>Fermer</button>\r\n                        {\r\n                            !startRequest ? (\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={() => sendData()}>Envoyer</button>\r\n                            ) : (\r\n                                <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                    Chargement...\r\n                                </button>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReasonModal;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\TreatmentButtonDetail.jsx",[],{"ruleId":"1080","replacedBy":"1081"},{"ruleId":"1082","replacedBy":"1083"},{"ruleId":"1084","severity":1,"message":"1085","line":9,"column":1,"nodeType":"1086","endLine":28,"endColumn":2},{"ruleId":"1087","severity":1,"message":"1088","line":48,"column":22,"nodeType":"1089","messageId":"1090","endLine":48,"endColumn":29},{"ruleId":"1087","severity":1,"message":"1091","line":80,"column":27,"nodeType":"1089","messageId":"1090","endLine":80,"endColumn":31},{"ruleId":"1092","severity":1,"message":"1093","line":119,"column":49,"nodeType":"1094","endLine":119,"endColumn":128},{"ruleId":"1095","severity":1,"message":"1096","line":9,"column":106,"nodeType":"1097","endLine":9,"endColumn":121},{"ruleId":"1098","severity":1,"message":"1099","line":34,"column":8,"nodeType":"1100","endLine":34,"endColumn":27,"suggestions":"1101"},{"ruleId":"1098","severity":1,"message":"1102","line":41,"column":8,"nodeType":"1100","endLine":41,"endColumn":30,"suggestions":"1103"},{"ruleId":"1098","severity":1,"message":"1104","line":59,"column":8,"nodeType":"1100","endLine":59,"endColumn":10,"suggestions":"1105"},{"ruleId":"1098","severity":1,"message":"1106","line":75,"column":8,"nodeType":"1100","endLine":75,"endColumn":29,"suggestions":"1107"},{"ruleId":"1098","severity":1,"message":"1108","line":80,"column":8,"nodeType":"1100","endLine":80,"endColumn":30,"suggestions":"1109"},{"ruleId":"1098","severity":1,"message":"1108","line":85,"column":8,"nodeType":"1100","endLine":85,"endColumn":26,"suggestions":"1110"},{"ruleId":"1098","severity":1,"message":"1111","line":87,"column":33,"nodeType":"1089","endLine":87,"endColumn":44},{"ruleId":"1098","severity":1,"message":"1111","line":111,"column":36,"nodeType":"1089","endLine":111,"endColumn":47},{"ruleId":"1087","severity":1,"message":"1112","line":98,"column":8,"nodeType":"1089","messageId":"1090","endLine":98,"endColumn":20},{"ruleId":"1087","severity":1,"message":"1113","line":7,"column":21,"nodeType":"1089","messageId":"1090","endLine":7,"endColumn":34},{"ruleId":"1114","severity":1,"message":"1115","line":16,"column":25,"nodeType":"1094","endLine":16,"endColumn":77},{"ruleId":"1114","severity":1,"message":"1115","line":34,"column":33,"nodeType":"1094","endLine":35,"endColumn":72},{"ruleId":"1114","severity":1,"message":"1115","line":45,"column":45,"nodeType":"1094","endLine":45,"endColumn":119},{"ruleId":"1114","severity":1,"message":"1115","line":82,"column":33,"nodeType":"1094","endLine":82,"endColumn":143},{"ruleId":"1114","severity":1,"message":"1115","line":92,"column":45,"nodeType":"1094","endLine":92,"endColumn":119},{"ruleId":"1114","severity":1,"message":"1115","line":281,"column":37,"nodeType":"1094","endLine":281,"endColumn":147},{"ruleId":"1114","severity":1,"message":"1115","line":290,"column":49,"nodeType":"1094","endLine":290,"endColumn":123},{"ruleId":"1098","severity":1,"message":"1116","line":68,"column":8,"nodeType":"1100","endLine":68,"endColumn":10,"suggestions":"1117"},{"ruleId":"1118","severity":1,"message":"1119","line":134,"column":33,"nodeType":"1094","endLine":134,"endColumn":88},{"ruleId":"1118","severity":1,"message":"1119","line":141,"column":33,"nodeType":"1094","endLine":141,"endColumn":121},{"ruleId":"1098","severity":1,"message":"1120","line":52,"column":8,"nodeType":"1100","endLine":52,"endColumn":55,"suggestions":"1121"},{"ruleId":"1098","severity":1,"message":"1120","line":59,"column":8,"nodeType":"1100","endLine":59,"endColumn":55,"suggestions":"1122"},{"ruleId":"1098","severity":1,"message":"1123","line":88,"column":8,"nodeType":"1100","endLine":88,"endColumn":48,"suggestions":"1124"},{"ruleId":"1125","severity":1,"message":"1126","line":92,"column":36,"nodeType":"1127","messageId":"1128","endLine":92,"endColumn":38},{"ruleId":"1098","severity":1,"message":"1120","line":55,"column":8,"nodeType":"1100","endLine":55,"endColumn":55,"suggestions":"1129"},{"ruleId":"1098","severity":1,"message":"1123","line":87,"column":8,"nodeType":"1100","endLine":87,"endColumn":48,"suggestions":"1130"},{"ruleId":"1131","severity":1,"message":"1132","line":89,"column":5,"nodeType":"1133","messageId":"1134","endLine":95,"endColumn":13},{"ruleId":"1118","severity":1,"message":"1119","line":269,"column":33,"nodeType":"1094","endLine":269,"endColumn":88},{"ruleId":"1118","severity":1,"message":"1119","line":271,"column":33,"nodeType":"1094","endLine":271,"endColumn":146},{"ruleId":"1098","severity":1,"message":"1120","line":53,"column":8,"nodeType":"1100","endLine":53,"endColumn":55,"suggestions":"1135"},{"ruleId":"1098","severity":1,"message":"1120","line":56,"column":8,"nodeType":"1100","endLine":56,"endColumn":55,"suggestions":"1136"},{"ruleId":"1098","severity":1,"message":"1137","line":56,"column":8,"nodeType":"1100","endLine":56,"endColumn":10,"suggestions":"1138"},{"ruleId":"1087","severity":1,"message":"1139","line":128,"column":11,"nodeType":"1089","messageId":"1090","endLine":128,"endColumn":29},{"ruleId":"1118","severity":1,"message":"1119","line":203,"column":29,"nodeType":"1094","endLine":203,"endColumn":84},{"ruleId":"1118","severity":1,"message":"1119","line":205,"column":29,"nodeType":"1094","endLine":205,"endColumn":117},{"ruleId":"1118","severity":1,"message":"1119","line":210,"column":33,"nodeType":"1094","endLine":210,"endColumn":88},{"ruleId":"1118","severity":1,"message":"1119","line":212,"column":33,"nodeType":"1094","endLine":212,"endColumn":121},{"ruleId":"1098","severity":1,"message":"1137","line":55,"column":8,"nodeType":"1100","endLine":55,"endColumn":10,"suggestions":"1140"},{"ruleId":"1087","severity":1,"message":"1141","line":129,"column":11,"nodeType":"1089","messageId":"1090","endLine":129,"endColumn":28},{"ruleId":"1098","severity":1,"message":"1142","line":56,"column":8,"nodeType":"1100","endLine":56,"endColumn":10,"suggestions":"1143"},{"ruleId":"1118","severity":1,"message":"1119","line":110,"column":33,"nodeType":"1094","endLine":110,"endColumn":88},{"ruleId":"1118","severity":1,"message":"1119","line":117,"column":33,"nodeType":"1094","endLine":117,"endColumn":121},{"ruleId":"1098","severity":1,"message":"1137","line":55,"column":7,"nodeType":"1100","endLine":55,"endColumn":9,"suggestions":"1144"},{"ruleId":"1098","severity":1,"message":"1137","line":57,"column":8,"nodeType":"1100","endLine":57,"endColumn":10,"suggestions":"1145"},{"ruleId":"1087","severity":1,"message":"1146","line":130,"column":11,"nodeType":"1089","messageId":"1090","endLine":130,"endColumn":21},{"ruleId":"1118","severity":1,"message":"1119","line":207,"column":37,"nodeType":"1094","endLine":207,"endColumn":92},{"ruleId":"1118","severity":1,"message":"1119","line":209,"column":37,"nodeType":"1094","endLine":209,"endColumn":125},{"ruleId":"1118","severity":1,"message":"1119","line":214,"column":41,"nodeType":"1094","endLine":214,"endColumn":96},{"ruleId":"1118","severity":1,"message":"1119","line":216,"column":41,"nodeType":"1094","endLine":216,"endColumn":129},{"ruleId":"1098","severity":1,"message":"1147","line":60,"column":7,"nodeType":"1100","endLine":60,"endColumn":9,"suggestions":"1148"},{"ruleId":"1087","severity":1,"message":"1149","line":6,"column":60,"nodeType":"1089","messageId":"1090","endLine":6,"endColumn":70},{"ruleId":"1098","severity":1,"message":"1137","line":54,"column":8,"nodeType":"1100","endLine":54,"endColumn":10,"suggestions":"1150"},{"ruleId":"1118","severity":1,"message":"1119","line":216,"column":33,"nodeType":"1094","endLine":216,"endColumn":121},{"ruleId":"1098","severity":1,"message":"1151","line":82,"column":8,"nodeType":"1100","endLine":82,"endColumn":10,"suggestions":"1152"},{"ruleId":"1125","severity":1,"message":"1126","line":86,"column":31,"nodeType":"1127","messageId":"1128","endLine":86,"endColumn":33},{"ruleId":"1153","severity":1,"message":"1154","line":233,"column":121,"nodeType":"1155","messageId":"1156","endLine":233,"endColumn":122},{"ruleId":"1153","severity":1,"message":"1154","line":233,"column":128,"nodeType":"1155","messageId":"1156","endLine":233,"endColumn":129},{"ruleId":"1153","severity":1,"message":"1154","line":244,"column":115,"nodeType":"1155","messageId":"1156","endLine":244,"endColumn":116},{"ruleId":"1153","severity":1,"message":"1154","line":244,"column":122,"nodeType":"1155","messageId":"1156","endLine":244,"endColumn":123},{"ruleId":"1118","severity":1,"message":"1119","line":295,"column":29,"nodeType":"1094","endLine":295,"endColumn":84},{"ruleId":"1118","severity":1,"message":"1119","line":298,"column":29,"nodeType":"1094","endLine":298,"endColumn":117},{"ruleId":"1098","severity":1,"message":"1157","line":56,"column":7,"nodeType":"1100","endLine":56,"endColumn":9,"suggestions":"1158"},{"ruleId":"1098","severity":1,"message":"1159","line":70,"column":8,"nodeType":"1100","endLine":70,"endColumn":34,"suggestions":"1160"},{"ruleId":"1098","severity":1,"message":"1142","line":94,"column":8,"nodeType":"1100","endLine":94,"endColumn":10,"suggestions":"1161"},{"ruleId":"1098","severity":1,"message":"1159","line":59,"column":8,"nodeType":"1100","endLine":59,"endColumn":34,"suggestions":"1162"},{"ruleId":"1098","severity":1,"message":"1159","line":92,"column":8,"nodeType":"1100","endLine":92,"endColumn":34,"suggestions":"1163"},{"ruleId":"1098","severity":1,"message":"1123","line":74,"column":8,"nodeType":"1100","endLine":74,"endColumn":48,"suggestions":"1164"},{"ruleId":"1118","severity":1,"message":"1119","line":244,"column":33,"nodeType":"1094","endLine":244,"endColumn":88},{"ruleId":"1118","severity":1,"message":"1119","line":246,"column":33,"nodeType":"1094","endLine":246,"endColumn":146},{"ruleId":"1098","severity":1,"message":"1120","line":56,"column":8,"nodeType":"1100","endLine":56,"endColumn":55,"suggestions":"1165"},{"ruleId":"1087","severity":1,"message":"1166","line":3,"column":9,"nodeType":"1089","messageId":"1090","endLine":3,"endColumn":13},{"ruleId":"1098","severity":1,"message":"1120","line":56,"column":8,"nodeType":"1100","endLine":56,"endColumn":55,"suggestions":"1167"},{"ruleId":"1098","severity":1,"message":"1159","line":66,"column":8,"nodeType":"1100","endLine":66,"endColumn":34,"suggestions":"1168"},{"ruleId":"1098","severity":1,"message":"1169","line":79,"column":8,"nodeType":"1100","endLine":79,"endColumn":34,"suggestions":"1170"},{"ruleId":"1098","severity":1,"message":"1151","line":86,"column":8,"nodeType":"1100","endLine":86,"endColumn":10,"suggestions":"1171"},{"ruleId":"1087","severity":1,"message":"1149","line":6,"column":60,"nodeType":"1089","messageId":"1090","endLine":6,"endColumn":70},{"ruleId":"1098","severity":1,"message":"1120","line":54,"column":8,"nodeType":"1100","endLine":54,"endColumn":55,"suggestions":"1172"},{"ruleId":"1173","severity":1,"message":"1174","line":166,"column":17,"nodeType":"1097","endLine":166,"endColumn":32},{"ruleId":"1118","severity":1,"message":"1119","line":207,"column":33,"nodeType":"1094","endLine":207,"endColumn":88},{"ruleId":"1118","severity":1,"message":"1119","line":210,"column":33,"nodeType":"1094","endLine":210,"endColumn":121},{"ruleId":"1098","severity":1,"message":"1137","line":70,"column":8,"nodeType":"1100","endLine":70,"endColumn":10,"suggestions":"1175"},{"ruleId":"1125","severity":1,"message":"1126","line":74,"column":28,"nodeType":"1127","messageId":"1128","endLine":74,"endColumn":30},{"ruleId":"1125","severity":1,"message":"1126","line":85,"column":24,"nodeType":"1127","messageId":"1128","endLine":85,"endColumn":26},{"ruleId":"1118","severity":1,"message":"1119","line":251,"column":33,"nodeType":"1094","endLine":251,"endColumn":88},{"ruleId":"1118","severity":1,"message":"1119","line":254,"column":33,"nodeType":"1094","endLine":255,"endColumn":79},{"ruleId":"1131","severity":1,"message":"1132","line":129,"column":5,"nodeType":"1133","messageId":"1134","endLine":151,"endColumn":13},{"ruleId":"1125","severity":1,"message":"1126","line":155,"column":21,"nodeType":"1127","messageId":"1128","endLine":155,"endColumn":23},{"ruleId":"1098","severity":1,"message":"1159","line":57,"column":7,"nodeType":"1100","endLine":57,"endColumn":33,"suggestions":"1176"},{"ruleId":"1087","severity":1,"message":"1177","line":127,"column":22,"nodeType":"1089","messageId":"1090","endLine":127,"endColumn":33},{"ruleId":"1087","severity":1,"message":"1178","line":129,"column":19,"nodeType":"1089","messageId":"1090","endLine":129,"endColumn":27},{"ruleId":"1087","severity":1,"message":"1179","line":139,"column":27,"nodeType":"1089","messageId":"1090","endLine":139,"endColumn":43},{"ruleId":"1098","severity":1,"message":"1180","line":48,"column":8,"nodeType":"1100","endLine":48,"endColumn":10,"suggestions":"1181"},{"ruleId":"1098","severity":1,"message":"1182","line":54,"column":8,"nodeType":"1100","endLine":54,"endColumn":10,"suggestions":"1183"},{"ruleId":"1087","severity":1,"message":"1184","line":18,"column":35,"nodeType":"1089","messageId":"1090","endLine":18,"endColumn":71},{"ruleId":"1087","severity":1,"message":"1185","line":68,"column":19,"nodeType":"1089","messageId":"1090","endLine":68,"endColumn":27},{"ruleId":"1098","severity":1,"message":"1186","line":105,"column":8,"nodeType":"1100","endLine":105,"endColumn":10,"suggestions":"1187"},{"ruleId":"1118","severity":1,"message":"1119","line":185,"column":33,"nodeType":"1094","endLine":185,"endColumn":88},{"ruleId":"1098","severity":1,"message":"1180","line":57,"column":8,"nodeType":"1100","endLine":57,"endColumn":10,"suggestions":"1188"},{"ruleId":"1087","severity":1,"message":"1189","line":19,"column":9,"nodeType":"1089","messageId":"1090","endLine":19,"endColumn":14},{"ruleId":"1125","severity":1,"message":"1126","line":71,"column":45,"nodeType":"1127","messageId":"1128","endLine":71,"endColumn":47},{"ruleId":"1125","severity":1,"message":"1126","line":72,"column":41,"nodeType":"1127","messageId":"1128","endLine":72,"endColumn":43},{"ruleId":"1125","severity":1,"message":"1126","line":100,"column":29,"nodeType":"1127","messageId":"1128","endLine":100,"endColumn":31},{"ruleId":"1098","severity":1,"message":"1190","line":253,"column":8,"nodeType":"1100","endLine":253,"endColumn":10,"suggestions":"1191"},{"ruleId":"1087","severity":1,"message":"1192","line":2,"column":8,"nodeType":"1089","messageId":"1090","endLine":2,"endColumn":24},{"ruleId":"1098","severity":1,"message":"1159","line":63,"column":8,"nodeType":"1100","endLine":63,"endColumn":30,"suggestions":"1193"},{"ruleId":"1098","severity":1,"message":"1194","line":39,"column":8,"nodeType":"1100","endLine":39,"endColumn":10,"suggestions":"1195"},{"ruleId":"1098","severity":1,"message":"1120","line":55,"column":8,"nodeType":"1100","endLine":55,"endColumn":55,"suggestions":"1196"},{"ruleId":"1098","severity":1,"message":"1151","line":76,"column":8,"nodeType":"1100","endLine":76,"endColumn":10,"suggestions":"1197"},{"ruleId":"1098","severity":1,"message":"1151","line":80,"column":7,"nodeType":"1100","endLine":80,"endColumn":9,"suggestions":"1198"},{"ruleId":"1087","severity":1,"message":"1199","line":3,"column":25,"nodeType":"1089","messageId":"1090","endLine":3,"endColumn":31},{"ruleId":"1118","severity":1,"message":"1119","line":88,"column":29,"nodeType":"1094","endLine":88,"endColumn":84},{"ruleId":"1118","severity":1,"message":"1119","line":92,"column":29,"nodeType":"1094","endLine":92,"endColumn":145},{"ruleId":"1200","severity":1,"message":"1201","line":119,"column":45,"nodeType":"1094","endLine":119,"endColumn":101},{"ruleId":"1118","severity":1,"message":"1119","line":123,"column":49,"nodeType":"1094","endLine":123,"endColumn":93},{"ruleId":"1118","severity":1,"message":"1119","line":136,"column":49,"nodeType":"1094","endLine":136,"endColumn":89},{"ruleId":"1118","severity":1,"message":"1119","line":140,"column":49,"nodeType":"1094","endLine":140,"endColumn":89},{"ruleId":"1098","severity":1,"message":"1194","line":110,"column":8,"nodeType":"1100","endLine":110,"endColumn":35,"suggestions":"1202"},{"ruleId":"1203","severity":1,"message":"1204","line":373,"column":21,"nodeType":"1089","messageId":"1205","endLine":373,"endColumn":29},{"ruleId":"1087","severity":1,"message":"1206","line":1,"column":16,"nodeType":"1089","messageId":"1090","endLine":1,"endColumn":24},{"ruleId":"1087","severity":1,"message":"1207","line":3,"column":8,"nodeType":"1089","messageId":"1090","endLine":3,"endColumn":13},{"ruleId":"1087","severity":1,"message":"1208","line":4,"column":9,"nodeType":"1089","messageId":"1090","endLine":4,"endColumn":23},{"ruleId":"1087","severity":1,"message":"1184","line":6,"column":5,"nodeType":"1089","messageId":"1090","endLine":6,"endColumn":41},{"ruleId":"1087","severity":1,"message":"1209","line":6,"column":43,"nodeType":"1089","messageId":"1090","endLine":6,"endColumn":81},{"ruleId":"1087","severity":1,"message":"1210","line":11,"column":8,"nodeType":"1089","messageId":"1090","endLine":11,"endColumn":20},{"ruleId":"1087","severity":1,"message":"1166","line":12,"column":9,"nodeType":"1089","messageId":"1090","endLine":12,"endColumn":13},{"ruleId":"1098","severity":1,"message":"1137","line":49,"column":8,"nodeType":"1100","endLine":49,"endColumn":10,"suggestions":"1211"},{"ruleId":"1098","severity":1,"message":"1151","line":80,"column":8,"nodeType":"1100","endLine":80,"endColumn":10,"suggestions":"1212"},{"ruleId":"1118","severity":1,"message":"1119","line":208,"column":33,"nodeType":"1094","endLine":208,"endColumn":88},{"ruleId":"1098","severity":1,"message":"1213","line":78,"column":8,"nodeType":"1100","endLine":78,"endColumn":42,"suggestions":"1214"},{"ruleId":"1118","severity":1,"message":"1119","line":83,"column":33,"nodeType":"1094","endLine":83,"endColumn":88},{"ruleId":"1118","severity":1,"message":"1119","line":86,"column":33,"nodeType":"1094","endLine":86,"endColumn":121},{"ruleId":"1098","severity":1,"message":"1215","line":63,"column":8,"nodeType":"1100","endLine":63,"endColumn":55,"suggestions":"1216"},{"ruleId":"1125","severity":1,"message":"1126","line":32,"column":26,"nodeType":"1127","messageId":"1128","endLine":32,"endColumn":28},{"ruleId":"1098","severity":1,"message":"1217","line":61,"column":8,"nodeType":"1100","endLine":61,"endColumn":10,"suggestions":"1218"},{"ruleId":"1153","severity":1,"message":"1154","line":239,"column":103,"nodeType":"1155","messageId":"1156","endLine":239,"endColumn":104},{"ruleId":"1098","severity":1,"message":"1137","line":49,"column":8,"nodeType":"1100","endLine":49,"endColumn":10,"suggestions":"1219"},{"ruleId":"1118","severity":1,"message":"1119","line":137,"column":33,"nodeType":"1094","endLine":137,"endColumn":88},{"ruleId":"1118","severity":1,"message":"1119","line":140,"column":33,"nodeType":"1094","endLine":140,"endColumn":121},{"ruleId":"1098","severity":1,"message":"1220","line":99,"column":8,"nodeType":"1100","endLine":99,"endColumn":10,"suggestions":"1221"},{"ruleId":"1131","severity":1,"message":"1132","line":125,"column":9,"nodeType":"1133","messageId":"1134","endLine":127,"endColumn":10},{"ruleId":"1118","severity":1,"message":"1119","line":214,"column":29,"nodeType":"1094","endLine":214,"endColumn":84},{"ruleId":"1118","severity":1,"message":"1119","line":221,"column":29,"nodeType":"1094","endLine":221,"endColumn":117},{"ruleId":"1098","severity":1,"message":"1222","line":94,"column":8,"nodeType":"1100","endLine":94,"endColumn":10,"suggestions":"1223"},{"ruleId":"1087","severity":1,"message":"1224","line":46,"column":12,"nodeType":"1089","messageId":"1090","endLine":46,"endColumn":18},{"ruleId":"1098","severity":1,"message":"1225","line":76,"column":9,"nodeType":"1226","endLine":76,"endColumn":42},{"ruleId":"1114","severity":1,"message":"1227","line":302,"column":89,"nodeType":"1094","endLine":306,"endColumn":124},{"ruleId":"1087","severity":1,"message":"1228","line":12,"column":8,"nodeType":"1089","messageId":"1090","endLine":12,"endColumn":20},{"ruleId":"1098","severity":1,"message":"1137","line":53,"column":7,"nodeType":"1100","endLine":53,"endColumn":9,"suggestions":"1229"},{"ruleId":"1098","severity":1,"message":"1230","line":58,"column":8,"nodeType":"1100","endLine":58,"endColumn":10,"suggestions":"1231"},{"ruleId":"1098","severity":1,"message":"1142","line":54,"column":8,"nodeType":"1100","endLine":54,"endColumn":10,"suggestions":"1232"},{"ruleId":"1118","severity":1,"message":"1119","line":92,"column":33,"nodeType":"1094","endLine":92,"endColumn":88},{"ruleId":"1118","severity":1,"message":"1119","line":95,"column":33,"nodeType":"1094","endLine":95,"endColumn":121},{"ruleId":"1098","severity":1,"message":"1137","line":53,"column":7,"nodeType":"1100","endLine":53,"endColumn":9,"suggestions":"1233"},{"ruleId":"1087","severity":1,"message":"1234","line":115,"column":12,"nodeType":"1089","messageId":"1090","endLine":115,"endColumn":24},{"ruleId":"1098","severity":1,"message":"1186","line":177,"column":8,"nodeType":"1100","endLine":177,"endColumn":10,"suggestions":"1235"},{"ruleId":"1118","severity":1,"message":"1119","line":383,"column":29,"nodeType":"1094","endLine":383,"endColumn":84},{"ruleId":"1118","severity":1,"message":"1119","line":390,"column":29,"nodeType":"1094","endLine":390,"endColumn":117},{"ruleId":"1098","severity":1,"message":"1120","line":54,"column":8,"nodeType":"1100","endLine":54,"endColumn":55,"suggestions":"1236"},{"ruleId":"1098","severity":1,"message":"1237","line":68,"column":8,"nodeType":"1100","endLine":68,"endColumn":10,"suggestions":"1238"},{"ruleId":"1087","severity":1,"message":"1239","line":6,"column":5,"nodeType":"1089","messageId":"1090","endLine":6,"endColumn":31},{"ruleId":"1087","severity":1,"message":"1240","line":11,"column":9,"nodeType":"1089","messageId":"1090","endLine":11,"endColumn":27},{"ruleId":"1087","severity":1,"message":"1241","line":46,"column":12,"nodeType":"1089","messageId":"1090","endLine":46,"endColumn":19},{"ruleId":"1087","severity":1,"message":"1242","line":46,"column":21,"nodeType":"1089","messageId":"1090","endLine":46,"endColumn":31},{"ruleId":"1087","severity":1,"message":"1243","line":53,"column":12,"nodeType":"1089","messageId":"1090","endLine":53,"endColumn":18},{"ruleId":"1087","severity":1,"message":"1244","line":53,"column":20,"nodeType":"1089","messageId":"1090","endLine":53,"endColumn":29},{"ruleId":"1087","severity":1,"message":"1234","line":68,"column":12,"nodeType":"1089","messageId":"1090","endLine":68,"endColumn":24},{"ruleId":"1098","severity":1,"message":"1245","line":93,"column":8,"nodeType":"1100","endLine":93,"endColumn":10,"suggestions":"1246"},{"ruleId":"1098","severity":1,"message":"1247","line":20,"column":11,"nodeType":"1248","endLine":74,"endColumn":6},{"ruleId":"1087","severity":1,"message":"1249","line":4,"column":9,"nodeType":"1089","messageId":"1090","endLine":4,"endColumn":25},{"ruleId":"1098","severity":1,"message":"1237","line":70,"column":8,"nodeType":"1100","endLine":70,"endColumn":10,"suggestions":"1250"},{"ruleId":"1098","severity":1,"message":"1251","line":83,"column":8,"nodeType":"1100","endLine":83,"endColumn":10,"suggestions":"1252"},{"ruleId":"1098","severity":1,"message":"1253","line":149,"column":8,"nodeType":"1100","endLine":149,"endColumn":10,"suggestions":"1254"},{"ruleId":"1095","severity":1,"message":"1096","line":22,"column":64,"nodeType":"1097","endLine":22,"endColumn":81},{"ruleId":"1087","severity":1,"message":"1255","line":3,"column":9,"nodeType":"1089","messageId":"1090","endLine":3,"endColumn":18},{"ruleId":"1098","severity":1,"message":"1253","line":93,"column":8,"nodeType":"1100","endLine":93,"endColumn":10,"suggestions":"1256"},{"ruleId":"1200","severity":1,"message":"1201","line":15,"column":37,"nodeType":"1094","endLine":16,"endColumn":55},{"ruleId":"1118","severity":1,"message":"1119","line":25,"column":49,"nodeType":"1094","endLine":26,"endColumn":84},{"ruleId":"1087","severity":1,"message":"1209","line":8,"column":5,"nodeType":"1089","messageId":"1090","endLine":8,"endColumn":43},{"ruleId":"1087","severity":1,"message":"1189","line":10,"column":9,"nodeType":"1089","messageId":"1090","endLine":10,"endColumn":14},{"ruleId":"1098","severity":1,"message":"1215","line":66,"column":8,"nodeType":"1100","endLine":66,"endColumn":67,"suggestions":"1257"},{"ruleId":"1125","severity":1,"message":"1126","line":200,"column":21,"nodeType":"1127","messageId":"1128","endLine":200,"endColumn":23},{"ruleId":"1098","severity":1,"message":"1215","line":86,"column":8,"nodeType":"1100","endLine":86,"endColumn":42,"suggestions":"1258"},{"ruleId":"1098","severity":1,"message":"1251","line":70,"column":8,"nodeType":"1100","endLine":70,"endColumn":12,"suggestions":"1259"},{"ruleId":"1260","severity":1,"message":"1261","line":86,"column":99,"nodeType":"1262","messageId":"1263","endLine":86,"endColumn":101},{"ruleId":"1260","severity":1,"message":"1261","line":87,"column":99,"nodeType":"1262","messageId":"1263","endLine":87,"endColumn":101},{"ruleId":"1118","severity":1,"message":"1119","line":115,"column":33,"nodeType":"1094","endLine":115,"endColumn":88},{"ruleId":"1098","severity":1,"message":"1264","line":77,"column":8,"nodeType":"1100","endLine":77,"endColumn":10,"suggestions":"1265"},{"ruleId":"1118","severity":1,"message":"1119","line":110,"column":33,"nodeType":"1094","endLine":110,"endColumn":88},{"ruleId":"1098","severity":1,"message":"1120","line":53,"column":8,"nodeType":"1100","endLine":53,"endColumn":55,"suggestions":"1266"},{"ruleId":"1098","severity":1,"message":"1267","line":79,"column":8,"nodeType":"1100","endLine":79,"endColumn":10,"suggestions":"1268"},{"ruleId":"1118","severity":1,"message":"1119","line":112,"column":33,"nodeType":"1094","endLine":112,"endColumn":88},{"ruleId":"1098","severity":1,"message":"1142","line":49,"column":8,"nodeType":"1100","endLine":49,"endColumn":10,"suggestions":"1269"},{"ruleId":"1118","severity":1,"message":"1119","line":80,"column":33,"nodeType":"1094","endLine":80,"endColumn":88},{"ruleId":"1087","severity":1,"message":"1255","line":14,"column":9,"nodeType":"1089","messageId":"1090","endLine":14,"endColumn":18},{"ruleId":"1098","severity":1,"message":"1264","line":107,"column":8,"nodeType":"1100","endLine":107,"endColumn":10,"suggestions":"1270"},{"ruleId":"1098","severity":1,"message":"1159","line":87,"column":8,"nodeType":"1100","endLine":87,"endColumn":34,"suggestions":"1271"},{"ruleId":"1118","severity":1,"message":"1119","line":150,"column":33,"nodeType":"1094","endLine":150,"endColumn":88},{"ruleId":"1125","severity":1,"message":"1126","line":51,"column":26,"nodeType":"1127","messageId":"1128","endLine":51,"endColumn":28},{"ruleId":"1098","severity":1,"message":"1217","line":104,"column":8,"nodeType":"1100","endLine":104,"endColumn":10,"suggestions":"1272"},{"ruleId":"1087","severity":1,"message":"1273","line":52,"column":11,"nodeType":"1089","messageId":"1090","endLine":52,"endColumn":26},{"ruleId":"1087","severity":1,"message":"1274","line":62,"column":11,"nodeType":"1089","messageId":"1090","endLine":62,"endColumn":22},{"ruleId":"1200","severity":1,"message":"1201","line":146,"column":53,"nodeType":"1094","endLine":147,"endColumn":71},{"ruleId":"1118","severity":1,"message":"1119","line":156,"column":65,"nodeType":"1094","endLine":157,"endColumn":100},{"ruleId":"1095","severity":1,"message":"1096","line":310,"column":80,"nodeType":"1097","endLine":310,"endColumn":97},{"ruleId":"1200","severity":1,"message":"1201","line":58,"column":80,"nodeType":"1094","endLine":60,"endColumn":42},{"ruleId":"1153","severity":1,"message":"1154","line":104,"column":52,"nodeType":"1155","messageId":"1156","endLine":104,"endColumn":53},{"ruleId":"1118","severity":1,"message":"1119","line":136,"column":33,"nodeType":"1094","endLine":136,"endColumn":101},{"ruleId":"1118","severity":1,"message":"1119","line":145,"column":33,"nodeType":"1094","endLine":145,"endColumn":86},{"ruleId":"1087","severity":1,"message":"1184","line":7,"column":5,"nodeType":"1089","messageId":"1090","endLine":7,"endColumn":41},"no-native-reassign",["1275"],"no-negated-in-lhs",["1276"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'mounted' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'EventNotification'. Either exclude it or remove the dependency array. Outer scope values like 'EventNotification' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["1277"],"React Hook useCallback has an unnecessary dependency: 'RelaunchNotification'. Either exclude it or remove the dependency array. Outer scope values like 'RelaunchNotification' aren't valid dependencies because mutating them doesn't re-render the component.",["1278"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["1279"],"React Hook useEffect has missing dependencies: 'fetchData' and 'props.user'. Either include them or remove the dependency array.",["1280"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["1281"],["1282"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'RuleEditPage' is defined but never used.","'seeHistorique' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","React Hook useEffect has a missing dependency: 'editfaqid'. Either include it or remove the dependency array.",["1283"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has unnecessary dependencies: 'NUMBER_ELEMENT_PER_PAGE' and 'appConfig.apiDomaine'. Either exclude them or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1284"],["1285"],"React Hook useEffect has an unnecessary dependency: 'NUMBER_ELEMENT_PER_PAGE'. Either exclude it or remove the dependency array. Outer scope values like 'NUMBER_ELEMENT_PER_PAGE' aren't valid dependencies because mutating them doesn't re-render the component.",["1286"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["1287"],["1288"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["1289"],["1290"],"React Hook useEffect has a missing dependency: 'numberPerPage'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1291"],"'deleteCategoryFaqs' is assigned a value but never used.",["1292"],"'deleteInstitution' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1293"],["1294"],["1295"],"'deleteFaqs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'editcategoryid'. Either include it or remove the dependency array.",["1296"],"'loadScript' is defined but never used.",["1297"],"React Hook useEffect has missing dependencies: 'endPoint.list' and 'numberPerPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1298"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'edittypeid'. Either include it or remove the dependency array.",["1299"],"React Hook useEffect has an unnecessary dependency: 'appConfig.apiDomaine'. Either exclude it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1300"],["1301"],["1302"],["1303"],["1304"],["1305"],"'Link' is defined but never used.",["1306"],["1307"],"React Hook useEffect has a missing dependency: 'filterCurrency'. Either include it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1308"],["1309"],["1310"],"react/jsx-no-duplicate-props","No duplicate props allowed",["1311"],["1312"],"'setAccounts' is assigned a value but never used.","'setUnits' is assigned a value but never used.","'setDisabledInput' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'numberPerPage'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberPage' needs the current value of 'numberPerPage'.",["1313"],"React Hook useEffect has missing dependencies: 'numberPerPage' and 'props.plan'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberPage' needs the current value of 'numberPerPage'.",["1314"],"'toastErrorMessageWithParameterConfig' is defined but never used.","'setError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'endPoint', 'id', and 'props.userPermissions'. Either include them or remove the dependency array.",["1315"],["1316"],"'debug' is defined but never used.","React Hook useEffect has missing dependencies: 'applyPossibleFilter', 'endpoint', and 'renderChart'. Either include them or remove the dependency array.",["1317"],"'InfirmationTable' is defined but never used.",["1318"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["1319"],["1320"],["1321"],["1322"],"'Switch' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["1323"],"no-redeclare","'endpoint' is already defined.","redeclared","'useState' is defined but never used.","'axios' is defined but never used.","'ToastBottomEnd' is defined but never used.","'toastSuccessMessageWithParameterConfig' is defined but never used.","'InputRequire' is defined but never used.",["1324"],["1325"],"React Hook useEffect has missing dependencies: 'defaultData', 'id', and 'props.userPermissions'. Either include them or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1326"],"React Hook useEffect has a missing dependency: 'props.userPermissions'. Either include it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1327"],"React Hook useEffect has missing dependencies: 'id' and 'initialState'. Either include them or remove the dependency array.",["1328"],["1329"],"React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1330"],"React Hook useEffect has missing dependencies: 'id' and 'props.userPermissions'. Either include them or remove the dependency array.",["1331"],"'search' is assigned a value but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'ExportButton' is defined but never used.",["1332"],"React Hook useEffect has missing dependencies: 'id' and 'numberPerPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1333"],["1334"],["1335"],"'disableInput' is assigned a value but never used.",["1336"],["1337"],"React Hook useEffect has a missing dependency: 'defaultData'. Either include it or remove the dependency array.",["1338"],"'toastAddErrorMessageConfig' is defined but never used.","'formatInstitutions' is defined but never used.","'clients' is assigned a value but never used.","'setClients' is assigned a value but never used.","'client' is assigned a value but never used.","'setClient' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'endPoint.list' and 'props.userPermissions'. Either include them or remove the dependency array.",["1339"],"The 'defaultData' object makes the dependencies of useEffect Hook (at line 130) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'defaultData' in its own useMemo() Hook.","VariableDeclarator","'verifyPermission' is defined but never used.",["1340"],"React Hook useEffect has a missing dependency: 'props.userPermissions'. Either include it or remove the dependency array.",["1341"],"React Hook useEffect has missing dependencies: 'defaultData' and 'props.userPermissions'. Either include them or remove the dependency array.",["1342"],"'ERROR_401' is defined but never used.",["1343"],["1344"],["1345"],["1346"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'endPoint.list' and 'id'. Either include them or remove the dependency array.",["1347"],["1348"],"React Hook useEffect has missing dependencies: 'endPoint.edit' and 'id'. Either include them or remove the dependency array.",["1349"],["1350"],["1351"],["1352"],["1353"],"'onClickPrevious' is assigned a value but never used.","'onClickNext' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1354","fix":"1355"},{"desc":"1354","fix":"1356"},{"desc":"1357","fix":"1358"},{"desc":"1359","fix":"1360"},{"desc":"1361","fix":"1362"},{"desc":"1361","fix":"1363"},{"desc":"1364","fix":"1365"},{"desc":"1354","fix":"1366"},{"desc":"1354","fix":"1367"},{"desc":"1368","fix":"1369"},{"desc":"1354","fix":"1370"},{"desc":"1368","fix":"1371"},{"desc":"1354","fix":"1372"},{"desc":"1354","fix":"1373"},{"desc":"1374","fix":"1375"},{"desc":"1374","fix":"1376"},{"desc":"1377","fix":"1378"},{"desc":"1374","fix":"1379"},{"desc":"1374","fix":"1380"},{"desc":"1381","fix":"1382"},{"desc":"1374","fix":"1383"},{"desc":"1384","fix":"1385"},{"desc":"1386","fix":"1387"},{"desc":"1377","fix":"1388"},{"desc":"1377","fix":"1389"},{"desc":"1377","fix":"1390"},{"desc":"1377","fix":"1391"},{"desc":"1368","fix":"1392"},{"desc":"1354","fix":"1393"},{"desc":"1354","fix":"1394"},{"desc":"1377","fix":"1395"},{"desc":"1396","fix":"1397"},{"desc":"1384","fix":"1398"},{"desc":"1354","fix":"1399"},{"desc":"1374","fix":"1400"},{"desc":"1377","fix":"1401"},{"desc":"1374","fix":"1402"},{"desc":"1403","fix":"1404"},{"desc":"1405","fix":"1406"},{"desc":"1374","fix":"1407"},{"desc":"1408","fix":"1409"},{"desc":"1354","fix":"1410"},{"desc":"1411","fix":"1412"},{"desc":"1354","fix":"1413"},{"desc":"1384","fix":"1414"},{"desc":"1384","fix":"1415"},{"desc":"1416","fix":"1417"},{"desc":"1374","fix":"1418"},{"desc":"1384","fix":"1419"},{"desc":"1420","fix":"1421"},{"desc":"1422","fix":"1423"},{"desc":"1424","fix":"1425"},{"desc":"1374","fix":"1426"},{"desc":"1427","fix":"1428"},{"desc":"1429","fix":"1430"},{"desc":"1374","fix":"1431"},{"desc":"1432","fix":"1433"},{"desc":"1377","fix":"1434"},{"desc":"1374","fix":"1435"},{"desc":"1405","fix":"1436"},{"desc":"1354","fix":"1437"},{"desc":"1438","fix":"1439"},{"desc":"1440","fix":"1441"},{"desc":"1438","fix":"1442"},{"desc":"1422","fix":"1443"},{"desc":"1444","fix":"1445"},{"desc":"1444","fix":"1446"},{"desc":"1447","fix":"1448"},{"desc":"1447","fix":"1449"},{"desc":"1429","fix":"1450"},{"desc":"1451","fix":"1452"},{"desc":"1354","fix":"1453"},{"desc":"1454","fix":"1455"},{"desc":"1377","fix":"1456"},{"desc":"1451","fix":"1457"},{"desc":"1377","fix":"1458"},{"desc":"1424","fix":"1459"},"Update the dependencies array to be: []",{"range":"1460","text":"1461"},{"range":"1462","text":"1461"},"Update the dependencies array to be: [fetchData]",{"range":"1463","text":"1464"},"Update the dependencies array to be: [fetchData, props.user, props.user.identite]",{"range":"1465","text":"1466"},"Update the dependencies array to be: [props]",{"range":"1467","text":"1468"},{"range":"1469","text":"1468"},"Update the dependencies array to be: [editfaqid]",{"range":"1470","text":"1471"},{"range":"1472","text":"1461"},{"range":"1473","text":"1461"},"Update the dependencies array to be: [endPoint.list]",{"range":"1474","text":"1475"},{"range":"1476","text":"1461"},{"range":"1477","text":"1475"},{"range":"1478","text":"1461"},{"range":"1479","text":"1461"},"Update the dependencies array to be: [numberPerPage]",{"range":"1480","text":"1481"},{"range":"1482","text":"1481"},"Update the dependencies array to be: [id]",{"range":"1483","text":"1484"},{"range":"1485","text":"1481"},{"range":"1486","text":"1481"},"Update the dependencies array to be: [editcategoryid]",{"range":"1487","text":"1488"},{"range":"1489","text":"1481"},"Update the dependencies array to be: [endPoint.list, numberPerPage]",{"range":"1490","text":"1491"},"Update the dependencies array to be: [edittypeid]",{"range":"1492","text":"1493"},{"range":"1494","text":"1484"},{"range":"1495","text":"1484"},{"range":"1496","text":"1484"},{"range":"1497","text":"1484"},{"range":"1498","text":"1475"},{"range":"1499","text":"1461"},{"range":"1500","text":"1461"},{"range":"1501","text":"1484"},"Update the dependencies array to be: [filterCurrency, id]",{"range":"1502","text":"1503"},{"range":"1504","text":"1491"},{"range":"1505","text":"1461"},{"range":"1506","text":"1481"},{"range":"1507","text":"1484"},{"range":"1508","text":"1481"},"Update the dependencies array to be: [numberPerPage, props.plan]",{"range":"1509","text":"1510"},"Update the dependencies array to be: [endPoint, id, props.userPermissions]",{"range":"1511","text":"1512"},{"range":"1513","text":"1481"},"Update the dependencies array to be: [applyPossibleFilter, endpoint, renderChart]",{"range":"1514","text":"1515"},{"range":"1516","text":"1461"},"Update the dependencies array to be: [data]",{"range":"1517","text":"1518"},{"range":"1519","text":"1461"},{"range":"1520","text":"1491"},{"range":"1521","text":"1491"},"Update the dependencies array to be: [data, id, props.userPermissions]",{"range":"1522","text":"1523"},{"range":"1524","text":"1481"},{"range":"1525","text":"1491"},"Update the dependencies array to be: [props.plan, props.userPermissions, id, defaultData]",{"range":"1526","text":"1527"},"Update the dependencies array to be: [props.userPermissions]",{"range":"1528","text":"1529"},"Update the dependencies array to be: [id, initialState]",{"range":"1530","text":"1531"},{"range":"1532","text":"1481"},"Update the dependencies array to be: [id, props]",{"range":"1533","text":"1534"},"Update the dependencies array to be: [id, props.userPermissions]",{"range":"1535","text":"1536"},{"range":"1537","text":"1481"},"Update the dependencies array to be: [id, numberPerPage]",{"range":"1538","text":"1539"},{"range":"1540","text":"1484"},{"range":"1541","text":"1481"},{"range":"1542","text":"1512"},{"range":"1543","text":"1461"},"Update the dependencies array to be: [defaultData]",{"range":"1544","text":"1545"},"Update the dependencies array to be: [endPoint.list, props.userPermissions]",{"range":"1546","text":"1547"},{"range":"1548","text":"1545"},{"range":"1549","text":"1529"},"Update the dependencies array to be: [defaultData, props.userPermissions]",{"range":"1550","text":"1551"},{"range":"1552","text":"1551"},"Update the dependencies array to be: [props.plan, props.userPermissions]",{"range":"1553","text":"1554"},{"range":"1555","text":"1554"},{"range":"1556","text":"1536"},"Update the dependencies array to be: [endPoint.list, id]",{"range":"1557","text":"1558"},{"range":"1559","text":"1461"},"Update the dependencies array to be: [endPoint.edit, id]",{"range":"1560","text":"1561"},{"range":"1562","text":"1484"},{"range":"1563","text":"1558"},{"range":"1564","text":"1484"},{"range":"1565","text":"1531"},[1662,1681],"[]",[1899,1921],[2505,2507],"[fetchData]",[3293,3314],"[fetchData, props.user, props.user.identite]",[3449,3471],"[props]",[3594,3612],[2480,2482],"[editfaqid]",[2345,2392],[2545,2592],[3781,3821],"[endPoint.list]",[2490,2537],[3711,3751],[2370,2417],[2457,2504],[2479,2481],"[numberPerPage]",[2452,2454],[1787,1789],"[id]",[2467,2469],[2415,2417],[1978,1980],"[editcategoryid]",[2442,2444],[3664,3666],"[endPoint.list, numberPerPage]",[1944,1946],"[edittypeid]",[2520,2546],[4247,4249],[1958,1984],[3262,3288],[2961,3001],[2442,2489],[2479,2526],[2186,2212],[2809,2835],"[filterCurrency, id]",[3736,3738],[2494,2541],[3038,3040],[1961,1987],[2142,2144],[2631,2633],"[numberPerPage, props.plan]",[4362,4364],"[endPoint, id, props.userPermissions]",[2301,2303],[9891,9893],"[applyPossibleFilter, endpoint, renderChart]",[2690,2712],[1566,1568],"[data]",[2404,2451],[3136,3138],[3372,3374],[5705,5732],"[data, id, props.userPermissions]",[2117,2119],[3055,3057],[3269,3303],"[props.plan, props.userPermissions, id, defaultData]",[2883,2930],"[props.userPermissions]",[2171,2173],"[id, initialState]",[2116,2118],[4372,4374],"[id, props]",[3862,3864],"[id, props.userPermissions]",[2467,2469],[2667,2669],"[id, numberPerPage]",[1969,1971],[2171,2173],[8536,8538],[2385,2432],[2318,2320],"[defaultData]",[3210,3212],"[endPoint.list, props.userPermissions]",[2568,2570],[2759,2761],[5886,5888],"[defaultData, props.userPermissions]",[3246,3248],[3064,3123],"[props.plan, props.userPermissions]",[3630,3664],[3300,3304],[2899,2901],"[endPoint.list, id]",[2407,2454],[3012,3014],"[endPoint.edit, id]",[1971,1973],[4222,4224],[3228,3254],[4244,4246]]
>>>>>>> e5381b3bc3ebb6ef7fa4b1a3c5182a807dc479b4
