<<<<<<< HEAD
[{"/var/vhosts/satis-macro/client/satis-client/src/index.js":"1","/var/vhosts/satis-macro/client/satis-client/src/AppContainer.js":"2","/var/vhosts/satis-macro/client/satis-client/src/serviceWorker.js":"3","/var/vhosts/satis-macro/client/satis-client/src/store/reducers/languageReducer.js":"4","/var/vhosts/satis-macro/client/satis-client/src/store/reducers/IdentityReducer.js":"5","/var/vhosts/satis-macro/client/satis-client/src/store/reducers/authReducer.js":"6","/var/vhosts/satis-macro/client/satis-client/src/store/reducers/planReducer.js":"7","/var/vhosts/satis-macro/client/satis-client/src/store/reducers/treatmentReducer.js":"8","/var/vhosts/satis-macro/client/satis-client/src/routeApp.js":"9","/var/vhosts/satis-macro/client/satis-client/src/NatureAppChoice.js":"10","/var/vhosts/satis-macro/client/satis-client/src/store/actions/planAction.js":"11","/var/vhosts/satis-macro/client/satis-client/src/constants/token.js":"12","/var/vhosts/satis-macro/client/satis-client/src/store/actions/languageAction.js":"13","/var/vhosts/satis-macro/client/satis-client/src/store/actions/IdentityAction.js":"14","/var/vhosts/satis-macro/client/satis-client/src/store/actions/authActions.js":"15","/var/vhosts/satis-macro/client/satis-client/src/store/actions/treatmentAction.js":"16","/var/vhosts/satis-macro/client/satis-client/src/config/appConfig.js":"17","/var/vhosts/satis-macro/client/satis-client/src/views/components/Loader.jsx":"18","/var/vhosts/satis-macro/client/satis-client/src/helpers/function.js":"19","/var/vhosts/satis-macro/client/satis-client/src/modules/login/views/Pages/LoginPage.jsx":"20","/var/vhosts/satis-macro/client/satis-client/src/views/components/ConfirmationAlert.js":"21","/var/vhosts/satis-macro/client/satis-client/src/config/confirmConfig.js":"22","/var/vhosts/satis-macro/client/satis-client/src/views/layouts/App.jsx":"23","/var/vhosts/satis-macro/client/satis-client/src/constants/channel.js":"24","/var/vhosts/satis-macro/client/satis-client/src/helpers/permission.js":"25","/var/vhosts/satis-macro/client/satis-client/src/constants/userClient.js":"26","/var/vhosts/satis-macro/client/satis-client/src/views/components/Toast.js":"27","/var/vhosts/satis-macro/client/satis-client/src/config/toastConfig.js":"28","/var/vhosts/satis-macro/client/satis-client/src/views/includes/HeaderMobile.jsx":"29","/var/vhosts/satis-macro/client/satis-client/src/views/includes/Footer.jsx":"30","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Error401.jsx":"31","/var/vhosts/satis-macro/client/satis-client/src/views/includes/Body.jsx":"32","/var/vhosts/satis-macro/client/satis-client/src/views/includes/Nav.jsx":"33","/var/vhosts/satis-macro/client/satis-client/src/views/includes/Aside.jsx":"34","/var/vhosts/satis-macro/client/satis-client/src/views/components/FaqsForm.jsx":"35","/var/vhosts/satis-macro/client/satis-client/src/middleware/verifyToken.js":"36","/var/vhosts/satis-macro/client/satis-client/src/constants/notification.js":"37","/var/vhosts/satis-macro/client/satis-client/src/views/pages/FAQsPage.jsx":"38","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Dashboards.jsx":"39","/var/vhosts/satis-macro/client/satis-client/src/views/pages/PercentageMinFusion.jsx":"40","/var/vhosts/satis-macro/client/satis-client/src/views/pages/RejectLimitPage.jsx":"41","/var/vhosts/satis-macro/client/satis-client/src/views/components/CategoryFaqsForm.jsx":"42","/var/vhosts/satis-macro/client/satis-client/src/views/components/RelationShipForm.jsx":"43","/var/vhosts/satis-macro/client/satis-client/src/views/components/StaffChannels.jsx":"44","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimsArchivedDetail.jsx":"45","/var/vhosts/satis-macro/client/satis-client/src/views/pages/RecurencePage.jsx":"46","/var/vhosts/satis-macro/client/satis-client/src/views/components/EmptyNotification.jsx":"47","/var/vhosts/satis-macro/client/satis-client/src/views/components/CategoryClientForm.jsx":"48","/var/vhosts/satis-macro/client/satis-client/src/views/components/TypeClientForm.jsx":"49","/var/vhosts/satis-macro/client/satis-client/src/views/components/PositionForm.jsx":"50","/var/vhosts/satis-macro/client/satis-client/src/views/components/ClaimCategoryForm.jsx":"51","/var/vhosts/satis-macro/client/satis-client/src/views/components/ChannelForm.jsx":"52","/var/vhosts/satis-macro/client/satis-client/src/views/pages/RelationShip.jsx":"53","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ConfigNotification.jsx":"54","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimAssignToStaffDetail.jsx":"55","/var/vhosts/satis-macro/client/satis-client/src/views/pages/SatisfactionMeasureDetail.jsx":"56","/var/vhosts/satis-macro/client/satis-client/src/views/components/SeverityLevelForm.jsx":"57","/var/vhosts/satis-macro/client/satis-client/src/views/components/CurrencyForm.jsx":"58","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/AddChatsForm.jsx":"59","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/AddMemberForm.jsx":"60","/var/vhosts/satis-macro/client/satis-client/src/views/components/MessageAPIForm.jsx":"61","/var/vhosts/satis-macro/client/satis-client/src/views/pages/InstitutionMessageApi.jsx":"62","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Position.jsx":"63","/var/vhosts/satis-macro/client/satis-client/src/views/pages/CategoryFAQs.jsx":"64","/var/vhosts/satis-macro/client/satis-client/src/views/components/UnitTypeForm.jsx":"65","/var/vhosts/satis-macro/client/satis-client/src/views/components/PerformanceIndicatorForm.jsx":"66","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimList.jsx":"67","/var/vhosts/satis-macro/client/satis-client/src/views/pages/SatisfactionMeasure.jsx":"68","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Mail.jsx":"69","/var/vhosts/satis-macro/client/satis-client/src/views/pages/PerformanceIndicator.jsx":"70","/var/vhosts/satis-macro/client/satis-client/src/views/pages/UnitType.jsx":"71","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimCategory.jsx":"72","/var/vhosts/satis-macro/client/satis-client/src/views/pages/FAQs.jsx":"73","/var/vhosts/satis-macro/client/satis-client/src/views/pages/CategoryClient.jsx":"74","/var/vhosts/satis-macro/client/satis-client/src/views/pages/TypeClient.jsx":"75","/var/vhosts/satis-macro/client/satis-client/src/views/pages/SeverityLevel.jsx":"76","/var/vhosts/satis-macro/client/satis-client/src/views/components/ClaimObjectForm.jsx":"77","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Currency.jsx":"78","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Channel.jsx":"79","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ConfigRequirements.jsx":"80","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimAssign.jsx":"81","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimAssignToStaff.jsx":"82","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimToValidatedList.jsx":"83","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimsArchived.jsx":"84","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/RemoveChats.jsx":"85","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ConfigRapportAuto.jsx":"86","/var/vhosts/satis-macro/client/satis-client/src/views/pages/MessageApi.jsx":"87","/var/vhosts/satis-macro/client/satis-client/src/views/components/ConfigRapportAutoForm.jsx":"88","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimListDetail.jsx":"89","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimToValidatedListDetail.jsx":"90","/var/vhosts/satis-macro/client/satis-client/src/views/pages/IncompleteClaims.jsx":"91","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Unit.jsx":"92","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimObject.jsx":"93","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Institution.jsx":"94","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Clients.jsx":"95","/var/vhosts/satis-macro/client/satis-client/src/views/components/Clients/ClientForm.jsx":"96","/var/vhosts/satis-macro/client/satis-client/src/views/components/UnitForm.jsx":"97","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/Participants.jsx":"98","/var/vhosts/satis-macro/client/satis-client/src/views/pages/User.jsx":"99","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Staff.jsx":"100","/var/vhosts/satis-macro/client/satis-client/src/APP_MACRO/Filiale/FilialeInstitutionForm.jsx":"101","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimAssignDetail.jsx":"102","/var/vhosts/satis-macro/client/satis-client/src/views/components/Institutions/InstitutionForm.jsx":"103","/var/vhosts/satis-macro/client/satis-client/src/views/pages/UserAdd.jsx":"104","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ConfigProcessingCircuit.jsx":"105","/var/vhosts/satis-macro/client/satis-client/src/config/errorPage.js":"106","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimMonitoring.jsx":"107","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimImportPage.jsx":"108","/var/vhosts/satis-macro/client/satis-client/src/views/components/FaqListe.jsx":"109","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimCategoryImportPage.jsx":"110","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/Chats.jsx":"111","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ProfilePage.jsx":"112","/var/vhosts/satis-macro/client/satis-client/src/views/components/staff/StaffForm.jsx":"113","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ActivatePilotPage.jsx":"114","/var/vhosts/satis-macro/client/satis-client/src/views/pages/RuleEditPage.jsx":"115","/var/vhosts/satis-macro/client/satis-client/src/APP_MACRO/Holding/HoldingClientForm.jsx":"116","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimReporting.jsx":"117","/var/vhosts/satis-macro/client/satis-client/src/views/pages/RulePage.jsx":"118","/var/vhosts/satis-macro/client/satis-client/src/views/pages/RuleAddPage.jsx":"119","/var/vhosts/satis-macro/client/satis-client/src/constants/dataTable.js":"120","/var/vhosts/satis-macro/client/satis-client/src/views/components/IncompleteClaimsEdit.jsx":"121","/var/vhosts/satis-macro/client/satis-client/src/views/components/InputRequire.jsx":"122","/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/ClaimToPointOfServices.jsx":"123","/var/vhosts/satis-macro/client/satis-client/src/views/components/LoadingTable.jsx":"124","/var/vhosts/satis-macro/client/satis-client/src/views/components/AttachmentsButtonDetail.jsx":"125","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimAdd.jsx":"126","/var/vhosts/satis-macro/client/satis-client/src/views/components/AttachmentsButton.jsx":"127","/var/vhosts/satis-macro/client/satis-client/src/views/components/ClientButtonDetail.jsx":"128","/var/vhosts/satis-macro/client/satis-client/src/views/components/ClaimButtonDetail.jsx":"129","/var/vhosts/satis-macro/client/satis-client/src/views/components/Pagination.jsx":"130","/var/vhosts/satis-macro/client/satis-client/src/views/components/InfirmationTable.jsx":"131","/var/vhosts/satis-macro/client/satis-client/src/views/components/TreatmentButtonDetail.jsx":"132","/var/vhosts/satis-macro/client/satis-client/src/views/components/HeaderTablePage.jsx":"133","/var/vhosts/satis-macro/client/satis-client/src/views/components/ClaimButton.jsx":"134","/var/vhosts/satis-macro/client/satis-client/src/views/components/ExportButton.jsx":"135","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/MessageList.js":"136","/var/vhosts/satis-macro/client/satis-client/src/helpers/institution.js":"137","/var/vhosts/satis-macro/client/satis-client/src/helpers/unit.js":"138","/var/vhosts/satis-macro/client/satis-client/src/views/components/DoubleButtonDetail.jsx":"139","/var/vhosts/satis-macro/client/satis-client/src/views/components/UnfoundedModal.jsx":"140","/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/DetailModal.jsx":"141","/var/vhosts/satis-macro/client/satis-client/src/constants/date.js":"142","/var/vhosts/satis-macro/client/satis-client/src/views/components/ImportFileForm.jsx":"143","/var/vhosts/satis-macro/client/satis-client/src/views/components/WithoutCode.jsx":"144","/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ColToMeasure.jsx":"145","/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ColToValidate.jsx":"146","/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ColToTreat.jsx":"147","/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ColToAssignUnit.jsx":"148","/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ColToAssignStaff.jsx":"149","/var/vhosts/satis-macro/client/satis-client/src/views/components/EmptyTable.jsx":"150","/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ColToComplete.jsx":"151","/var/vhosts/satis-macro/client/satis-client/src/views/components/DoubleButton.jsx":"152","/var/vhosts/satis-macro/client/satis-client/src/views/components/profile/UpdatePassword.jsx":"153","/var/vhosts/satis-macro/client/satis-client/src/views/components/ClientButton.jsx":"154","/var/vhosts/satis-macro/client/satis-client/src/views/components/profile/PersonalInfo.jsx":"155","/var/vhosts/satis-macro/client/satis-client/src/constants/currencyContry.js":"156","/var/vhosts/satis-macro/client/satis-client/src/views/components/staff/ConfirmSaveForm.jsx":"157","/var/vhosts/satis-macro/client/satis-client/src/views/components/FusionClaim.jsx":"158","/var/vhosts/satis-macro/client/satis-client/src/views/components/ReasonModal.jsx":"159","/var/vhosts/satis-macro/client/satis-client/src/views/components/Clients/ConfirmClientSaveForm.jsx":"160","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/Message.js":"161","/var/vhosts/satis-macro/client/satis-client/src/views/components/IdentityForm.jsx":"162","/var/vhosts/satis-macro/client/satis-client/src/views/components/ReasonSatisfaction.jsx":"163","/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/ClaimToInstitution.jsx":"164","/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/GraphChannel.jsx":"165","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimObjectImportPage.jsx":"166","/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/DashboardStatistic.jsx":"167","/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/DashboardSummaryReport.jsx":"168","/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/DashboardStatClaim.jsx":"169","/var/vhosts/satis-macro/client/satis-client/src/views/components/TreatmentForm.jsx":"170","/var/vhosts/satis-macro/client/satis-client/src/views/components/Institutions/ImportInstitutionForm.jsx":"171","/var/vhosts/satis-macro/client/satis-client/src/views/components/ConfigCoefficient.jsx":"172","/var/vhosts/satis-macro/client/satis-client/src/views/pages/TreatmentPeriodAdd.jsx":"173","/var/vhosts/satis-macro/client/satis-client/src/views/pages/QualificationPeriodAdd.jsx":"174","/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/DashboardClaimsActivity.jsx":"175","/var/vhosts/satis-macro/client/satis-client/src/views/pages/StaffImportPage.jsx":"176","/var/vhosts/satis-macro/client/satis-client/src/views/pages/HistoricClaimsTraetment.jsx":"177","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ParametersComponent.jsx":"178","/var/vhosts/satis-macro/client/satis-client/src/views/pages/UserEdit.jsx":"179","/var/vhosts/satis-macro/client/satis-client/src/views/components/Clients/ImportClientForm.jsx":"180","/var/vhosts/satis-macro/client/satis-client/src/views/pages/HistoricClaimsAdd.jsx":"181","/var/vhosts/satis-macro/client/satis-client/src/views/components/ParametersComponentEdit.jsx":"182","/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/DashboardClaimsMy.jsx":"183","/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/DashboardClaimsUnit.jsx":"184","/var/vhosts/satis-macro/client/satis-client/src/APP_MACRO/Holding/DashboardClaimsAll.jsx":"185","/var/vhosts/satis-macro/client/satis-client/src/views/pages/TreatmentPeriod.jsx":"186","/var/vhosts/satis-macro/client/satis-client/src/views/pages/QualificationPeriod.jsx":"187","/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/KanbanElementDetail.jsx":"188","/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ClaimDetails.jsx":"189","/var/vhosts/satis-macro/client/satis-client/src/views/components/FormInformation.jsx":"190","/var/vhosts/satis-macro/client/satis-client/src/views/components/Modal/ConfirmClaimAddModal.jsx":"191","/var/vhosts/satis-macro/client/satis-client/src/views/components/PeriodForm.jsx":"192"},{"size":1011,"mtime":1609921336057,"results":"193","hashOfConfig":"194"},{"size":2176,"mtime":1609921336057,"results":"195","hashOfConfig":"194"},{"size":5085,"mtime":1609921336057,"results":"196","hashOfConfig":"194"},{"size":668,"mtime":1609921336057,"results":"197","hashOfConfig":"194"},{"size":852,"mtime":1609921336057,"results":"198","hashOfConfig":"194"},{"size":858,"mtime":1609921336057,"results":"199","hashOfConfig":"194"},{"size":566,"mtime":1609921336057,"results":"200","hashOfConfig":"194"},{"size":641,"mtime":1609921336057,"results":"201","hashOfConfig":"194"},{"size":1010,"mtime":1609921336057,"results":"202","hashOfConfig":"194"},{"size":6709,"mtime":1609921336057,"results":"203","hashOfConfig":"194"},{"size":250,"mtime":1609921336057,"results":"204","hashOfConfig":"194"},{"size":69,"mtime":1609921336057,"results":"205","hashOfConfig":"194"},{"size":158,"mtime":1609921336057,"results":"206","hashOfConfig":"194"},{"size":131,"mtime":1609921336057,"results":"207","hashOfConfig":"194"},{"size":232,"mtime":1609921336057,"results":"208","hashOfConfig":"194"},{"size":135,"mtime":1609921336057,"results":"209","hashOfConfig":"194"},{"size":692,"mtime":1609927508773,"results":"210","hashOfConfig":"194"},{"size":351,"mtime":1609921336065,"results":"211","hashOfConfig":"194"},{"size":18338,"mtime":1609921336057,"results":"212","hashOfConfig":"194"},{"size":13231,"mtime":1609921336057,"results":"213","hashOfConfig":"194"},{"size":331,"mtime":1609921336061,"results":"214","hashOfConfig":"194"},{"size":2384,"mtime":1609921336057,"results":"215","hashOfConfig":"194"},{"size":2375,"mtime":1609921336073,"results":"216","hashOfConfig":"194"},{"size":888,"mtime":1609921336057,"results":"217","hashOfConfig":"194"},{"size":217,"mtime":1609921336057,"results":"218","hashOfConfig":"194"},{"size":688,"mtime":1609921336057,"results":"219","hashOfConfig":"194"},{"size":635,"mtime":1609921336069,"results":"220","hashOfConfig":"194"},{"size":5901,"mtime":1609921336057,"results":"221","hashOfConfig":"194"},{"size":813,"mtime":1609921336073,"results":"222","hashOfConfig":"194"},{"size":580,"mtime":1609921336073,"results":"223","hashOfConfig":"194"},{"size":1274,"mtime":1609921336081,"results":"224","hashOfConfig":"194"},{"size":19968,"mtime":1609921336073,"results":"225","hashOfConfig":"194"},{"size":27792,"mtime":1609921336073,"results":"226","hashOfConfig":"194"},{"size":61338,"mtime":1609921336073,"results":"227","hashOfConfig":"194"},{"size":18717,"mtime":1609921336065,"results":"228","hashOfConfig":"194"},{"size":243,"mtime":1609921336057,"results":"229","hashOfConfig":"194"},{"size":2466,"mtime":1609921336057,"results":"230","hashOfConfig":"194"},{"size":1891,"mtime":1609921336081,"results":"231","hashOfConfig":"194"},{"size":4667,"mtime":1609921336081,"results":"232","hashOfConfig":"194"},{"size":8156,"mtime":1609921336081,"results":"233","hashOfConfig":"194"},{"size":8169,"mtime":1609921336085,"results":"234","hashOfConfig":"194"},{"size":10056,"mtime":1609921336061,"results":"235","hashOfConfig":"194"},{"size":15708,"mtime":1609921336069,"results":"236","hashOfConfig":"194"},{"size":9530,"mtime":1609921336069,"results":"237","hashOfConfig":"194"},{"size":9827,"mtime":1609921336077,"results":"238","hashOfConfig":"194"},{"size":10129,"mtime":1609921336085,"results":"239","hashOfConfig":"194"},{"size":532,"mtime":1609921336065,"results":"240","hashOfConfig":"194"},{"size":15241,"mtime":1609921336061,"results":"241","hashOfConfig":"194"},{"size":15480,"mtime":1609921336069,"results":"242","hashOfConfig":"194"},{"size":10576,"mtime":1609921336069,"results":"243","hashOfConfig":"194"},{"size":10693,"mtime":1609921336061,"results":"244","hashOfConfig":"194"},{"size":10816,"mtime":1609921336061,"results":"245","hashOfConfig":"194"},{"size":17261,"mtime":1609921336085,"results":"246","hashOfConfig":"194"},{"size":10837,"mtime":1609921336077,"results":"247","hashOfConfig":"194"},{"size":14244,"mtime":1609921336077,"results":"248","hashOfConfig":"194"},{"size":12307,"mtime":1609921336085,"results":"249","hashOfConfig":"194"},{"size":16177,"mtime":1609921336069,"results":"250","hashOfConfig":"194"},{"size":14848,"mtime":1609921336061,"results":"251","hashOfConfig":"194"},{"size":14645,"mtime":1609921336081,"results":"252","hashOfConfig":"194"},{"size":12227,"mtime":1609921336081,"results":"253","hashOfConfig":"194"},{"size":14024,"mtime":1609921336065,"results":"254","hashOfConfig":"194"},{"size":14324,"mtime":1609921336081,"results":"255","hashOfConfig":"194"},{"size":16401,"mtime":1609921336081,"results":"256","hashOfConfig":"194"},{"size":16508,"mtime":1609921336073,"results":"257","hashOfConfig":"194"},{"size":16408,"mtime":1609921336069,"results":"258","hashOfConfig":"194"},{"size":16980,"mtime":1609921336069,"results":"259","hashOfConfig":"194"},{"size":17666,"mtime":1609921336077,"results":"260","hashOfConfig":"194"},{"size":16977,"mtime":1609921336085,"results":"261","hashOfConfig":"194"},{"size":20458,"mtime":1609921336081,"results":"262","hashOfConfig":"194"},{"size":18487,"mtime":1609921336081,"results":"263","hashOfConfig":"194"},{"size":18901,"mtime":1609921336085,"results":"264","hashOfConfig":"194"},{"size":17266,"mtime":1609921336077,"results":"265","hashOfConfig":"194"},{"size":17780,"mtime":1609921336081,"results":"266","hashOfConfig":"194"},{"size":18872,"mtime":1609921336073,"results":"267","hashOfConfig":"194"},{"size":18073,"mtime":1609921336085,"results":"268","hashOfConfig":"194"},{"size":19158,"mtime":1609921336085,"results":"269","hashOfConfig":"194"},{"size":20118,"mtime":1609921336061,"results":"270","hashOfConfig":"194"},{"size":17252,"mtime":1609921336081,"results":"271","hashOfConfig":"194"},{"size":17595,"mtime":1609921336073,"results":"272","hashOfConfig":"194"},{"size":19569,"mtime":1609921336081,"results":"273","hashOfConfig":"194"},{"size":19022,"mtime":1609921336073,"results":"274","hashOfConfig":"194"},{"size":19350,"mtime":1609921336077,"results":"275","hashOfConfig":"194"},{"size":18457,"mtime":1609921336077,"results":"276","hashOfConfig":"194"},{"size":17613,"mtime":1609921336077,"results":"277","hashOfConfig":"194"},{"size":17216,"mtime":1609921336081,"results":"278","hashOfConfig":"194"},{"size":20391,"mtime":1609921336081,"results":"279","hashOfConfig":"194"},{"size":17643,"mtime":1609921336081,"results":"280","hashOfConfig":"194"},{"size":19746,"mtime":1609921336061,"results":"281","hashOfConfig":"194"},{"size":18768,"mtime":1609921336077,"results":"282","hashOfConfig":"194"},{"size":23035,"mtime":1609921336077,"results":"283","hashOfConfig":"194"},{"size":18585,"mtime":1609921336081,"results":"284","hashOfConfig":"194"},{"size":21631,"mtime":1609921336085,"results":"285","hashOfConfig":"194"},{"size":20725,"mtime":1609921336077,"results":"286","hashOfConfig":"194"},{"size":21611,"mtime":1609921336081,"results":"287","hashOfConfig":"194"},{"size":22565,"mtime":1609921336077,"results":"288","hashOfConfig":"194"},{"size":20935,"mtime":1609921336061,"results":"289","hashOfConfig":"194"},{"size":23425,"mtime":1609921336069,"results":"290","hashOfConfig":"194"},{"size":19126,"mtime":1609921336081,"results":"291","hashOfConfig":"194"},{"size":21378,"mtime":1609921336085,"results":"292","hashOfConfig":"194"},{"size":23989,"mtime":1609921336085,"results":"293","hashOfConfig":"194"},{"size":20808,"mtime":1609921336053,"results":"294","hashOfConfig":"194"},{"size":25679,"mtime":1609921336077,"results":"295","hashOfConfig":"194"},{"size":29285,"mtime":1609921336065,"results":"296","hashOfConfig":"194"},{"size":25195,"mtime":1609921336085,"results":"297","hashOfConfig":"194"},{"size":26980,"mtime":1609921336077,"results":"298","hashOfConfig":"194"},{"size":152,"mtime":1609921336057,"results":"299","hashOfConfig":"194"},{"size":28606,"mtime":1609921336077,"results":"300","hashOfConfig":"194"},{"size":1930,"mtime":1609921336077,"results":"301","hashOfConfig":"194"},{"size":3983,"mtime":1609921336065,"results":"302","hashOfConfig":"194"},{"size":1135,"mtime":1609921336077,"results":"303","hashOfConfig":"194"},{"size":38810,"mtime":1609921336081,"results":"304","hashOfConfig":"194"},{"size":11795,"mtime":1609921336081,"results":"305","hashOfConfig":"194"},{"size":40594,"mtime":1609921336073,"results":"306","hashOfConfig":"194"},{"size":8860,"mtime":1609921336073,"results":"307","hashOfConfig":"194"},{"size":16402,"mtime":1609921336085,"results":"308","hashOfConfig":"194"},{"size":46207,"mtime":1609921336053,"results":"309","hashOfConfig":"194"},{"size":50133,"mtime":1609921336077,"results":"310","hashOfConfig":"194"},{"size":17639,"mtime":1609921336085,"results":"311","hashOfConfig":"194"},{"size":23515,"mtime":1609921336085,"results":"312","hashOfConfig":"194"},{"size":43,"mtime":1609921336057,"results":"313","hashOfConfig":"194"},{"size":69004,"mtime":1609921336065,"results":"314","hashOfConfig":"194"},{"size":188,"mtime":1609921336065,"results":"315","hashOfConfig":"194"},{"size":3462,"mtime":1609921336061,"results":"316","hashOfConfig":"194"},{"size":1993,"mtime":1609921336065,"results":"317","hashOfConfig":"194"},{"size":1993,"mtime":1609921336061,"results":"318","hashOfConfig":"194"},{"size":75958,"mtime":1609921336073,"results":"319","hashOfConfig":"194"},{"size":1121,"mtime":1609921336057,"results":"320","hashOfConfig":"194"},{"size":5859,"mtime":1609921336061,"results":"321","hashOfConfig":"194"},{"size":6482,"mtime":1609921336061,"results":"322","hashOfConfig":"194"},{"size":2505,"mtime":1609921336069,"results":"323","hashOfConfig":"194"},{"size":706,"mtime":1609921336065,"results":"324","hashOfConfig":"194"},{"size":8527,"mtime":1609921336069,"results":"325","hashOfConfig":"194"},{"size":1890,"mtime":1609921336065,"results":"326","hashOfConfig":"194"},{"size":772,"mtime":1609921336061,"results":"327","hashOfConfig":"194"},{"size":1590,"mtime":1609921336065,"results":"328","hashOfConfig":"194"},{"size":2793,"mtime":1609921336081,"results":"329","hashOfConfig":"194"},{"size":277,"mtime":1609921336057,"results":"330","hashOfConfig":"194"},{"size":271,"mtime":1609921336057,"results":"331","hashOfConfig":"194"},{"size":7860,"mtime":1609921336065,"results":"332","hashOfConfig":"194"},{"size":8313,"mtime":1609921336069,"results":"333","hashOfConfig":"194"},{"size":1581,"mtime":1609921336069,"results":"334","hashOfConfig":"194"},{"size":232,"mtime":1609921336057,"results":"335","hashOfConfig":"194"},{"size":10794,"mtime":1609921336065,"results":"336","hashOfConfig":"194"},{"size":201,"mtime":1609921336069,"results":"337","hashOfConfig":"194"},{"size":3048,"mtime":1609921336069,"results":"338","hashOfConfig":"194"},{"size":3883,"mtime":1609921336069,"results":"339","hashOfConfig":"194"},{"size":3877,"mtime":1609921336069,"results":"340","hashOfConfig":"194"},{"size":3401,"mtime":1609921336069,"results":"341","hashOfConfig":"194"},{"size":3601,"mtime":1609921336069,"results":"342","hashOfConfig":"194"},{"size":432,"mtime":1609921336065,"results":"343","hashOfConfig":"194"},{"size":3050,"mtime":1609921336069,"results":"344","hashOfConfig":"194"},{"size":1092,"mtime":1609921336065,"results":"345","hashOfConfig":"194"},{"size":7537,"mtime":1609921336069,"results":"346","hashOfConfig":"194"},{"size":811,"mtime":1609921336061,"results":"347","hashOfConfig":"194"},{"size":11255,"mtime":1609921336069,"results":"348","hashOfConfig":"194"},{"size":3892,"mtime":1609921336057,"results":"349","hashOfConfig":"194"},{"size":22395,"mtime":1609921336073,"results":"350","hashOfConfig":"194"},{"size":9373,"mtime":1609921336065,"results":"351","hashOfConfig":"194"},{"size":5989,"mtime":1609921336069,"results":"352","hashOfConfig":"194"},{"size":24357,"mtime":1609921336061,"results":"353","hashOfConfig":"194"},{"size":6047,"mtime":1609921336081,"results":"354","hashOfConfig":"194"},{"size":17940,"mtime":1609921336065,"results":"355","hashOfConfig":"194"},{"size":5371,"mtime":1609921336069,"results":"356","hashOfConfig":"194"},{"size":3602,"mtime":1609921336061,"results":"357","hashOfConfig":"194"},{"size":4411,"mtime":1609921336065,"results":"358","hashOfConfig":"194"},{"size":1112,"mtime":1609921336077,"results":"359","hashOfConfig":"194"},{"size":6961,"mtime":1609921336065,"results":"360","hashOfConfig":"194"},{"size":5318,"mtime":1609921336065,"results":"361","hashOfConfig":"194"},{"size":6367,"mtime":1609921336065,"results":"362","hashOfConfig":"194"},{"size":10155,"mtime":1609921336069,"results":"363","hashOfConfig":"194"},{"size":9041,"mtime":1609921336065,"results":"364","hashOfConfig":"194"},{"size":8580,"mtime":1609921336061,"results":"365","hashOfConfig":"194"},{"size":10539,"mtime":1609921336085,"results":"366","hashOfConfig":"194"},{"size":10570,"mtime":1609921336085,"results":"367","hashOfConfig":"194"},{"size":22973,"mtime":1609921336061,"results":"368","hashOfConfig":"194"},{"size":14596,"mtime":1609921336085,"results":"369","hashOfConfig":"194"},{"size":16318,"mtime":1609921336081,"results":"370","hashOfConfig":"194"},{"size":14801,"mtime":1609921336081,"results":"371","hashOfConfig":"194"},{"size":14878,"mtime":1609921336085,"results":"372","hashOfConfig":"194"},{"size":16137,"mtime":1609921336061,"results":"373","hashOfConfig":"194"},{"size":16887,"mtime":1609921336081,"results":"374","hashOfConfig":"194"},{"size":16966,"mtime":1609921336069,"results":"375","hashOfConfig":"194"},{"size":23064,"mtime":1609921336061,"results":"376","hashOfConfig":"194"},{"size":22879,"mtime":1609921336065,"results":"377","hashOfConfig":"194"},{"size":23166,"mtime":1609921336053,"results":"378","hashOfConfig":"194"},{"size":17263,"mtime":1609921336085,"results":"379","hashOfConfig":"194"},{"size":17468,"mtime":1609921336085,"results":"380","hashOfConfig":"194"},{"size":1801,"mtime":1609921336069,"results":"381","hashOfConfig":"194"},{"size":21660,"mtime":1609921336069,"results":"382","hashOfConfig":"194"},{"size":852,"mtime":1609921336065,"results":"383","hashOfConfig":"194"},{"size":56016,"mtime":1609921336069,"results":"384","hashOfConfig":"194"},{"size":2580,"mtime":1609921336069,"results":"385","hashOfConfig":"194"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},"1fhprp1",{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"388"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"388"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"388"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"388"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"388"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"388"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"388"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"388"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"388"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"388"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"388"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"388"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"388"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"388"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"388"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"388"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"388"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"388"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"388"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"388"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"388"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"388"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"388"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"388"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"388"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"388"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"388"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"388"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"388"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"388"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"388"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"388"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"388"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"388"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"388"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"388"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"388"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"388"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"388"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"388"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"388"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"388"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"388"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"388"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"388"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"388"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"388"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"388"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"388"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"388"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"388"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"388"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"388"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"388"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"388"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"388"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"388"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"388"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"388"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"388"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"388"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656","usedDeprecatedRules":"388"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"388"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"388"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"388"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"388"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"388"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"388"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"388"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"388"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"388"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"388"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"388"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"716","usedDeprecatedRules":"388"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"388"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780","usedDeprecatedRules":"388"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"783","usedDeprecatedRules":"388"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"786","usedDeprecatedRules":"388"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"388"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794","usedDeprecatedRules":"388"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"388"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"802","usedDeprecatedRules":"388"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805","usedDeprecatedRules":"388"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"808","usedDeprecatedRules":"388"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"813","usedDeprecatedRules":"388"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"388"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"827","usedDeprecatedRules":"388"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"830","usedDeprecatedRules":"388"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"833","usedDeprecatedRules":"388"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"388"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"388"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"388"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"847","usedDeprecatedRules":"388"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852","usedDeprecatedRules":"388"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"388"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"860","usedDeprecatedRules":"388"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"863","messages":"864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/vhosts/satis-macro/client/satis-client/src/index.js",[],["867","868"],"/var/vhosts/satis-macro/client/satis-client/src/AppContainer.js",[],"/var/vhosts/satis-macro/client/satis-client/src/serviceWorker.js",[],"/var/vhosts/satis-macro/client/satis-client/src/store/reducers/languageReducer.js",[],"/var/vhosts/satis-macro/client/satis-client/src/store/reducers/IdentityReducer.js",[],"/var/vhosts/satis-macro/client/satis-client/src/store/reducers/authReducer.js",["869"],"import {LOGOUT_USER, UPDATE_USER} from \"../actions/authActions\";\nimport {logout} from \"../../helpers/function\";\n\nconst initialState = {\n    user: {},\n    token: \"\",\n};\n\nexport default function (state = initialState, action) {\n    let newState = {};\n    switch (action.type) {\n        case LOGOUT_USER:\n            logout();\n            break;\n        case UPDATE_USER:\n            newState = {\n                user: JSON.parse(localStorage.getItem('userData')),\n                staff: localStorage.getItem('staffData'),\n                isLogin: localStorage.getItem('isLogin'),\n                token: localStorage.getItem('token'),\n                refresh_token: localStorage.getItem('refresh_token'),\n                expire_in: localStorage.getItem('expire_in')\n            };\n            return newState;\n        default:\n            return state;\n    }\n}\n","/var/vhosts/satis-macro/client/satis-client/src/store/reducers/planReducer.js",[],"/var/vhosts/satis-macro/client/satis-client/src/store/reducers/treatmentReducer.js",[],"/var/vhosts/satis-macro/client/satis-client/src/routeApp.js",[],"/var/vhosts/satis-macro/client/satis-client/src/NatureAppChoice.js",[],"/var/vhosts/satis-macro/client/satis-client/src/store/actions/planAction.js",[],"/var/vhosts/satis-macro/client/satis-client/src/constants/token.js",[],"/var/vhosts/satis-macro/client/satis-client/src/store/actions/languageAction.js",[],"/var/vhosts/satis-macro/client/satis-client/src/store/actions/IdentityAction.js",[],"/var/vhosts/satis-macro/client/satis-client/src/store/actions/authActions.js",[],"/var/vhosts/satis-macro/client/satis-client/src/store/actions/treatmentAction.js",[],"/var/vhosts/satis-macro/client/satis-client/src/config/appConfig.js",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/Loader.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/helpers/function.js",[],"/var/vhosts/satis-macro/client/satis-client/src/modules/login/views/Pages/LoginPage.jsx",["870","871","872"],"import React, {useEffect, useState} from \"react\";\nimport {loadCss, loadScript} from \"../../../../helpers/function\";\nimport appConfig from \"../../../../config/appConfig\";\nimport axios from \"axios\";\nimport {connect} from 'react-redux';\nimport {ToastBottomEnd} from \"../../../../views/components/Toast\";\nimport {\n    toastConnectErrorMessageConfig,\n    toastConnectSuccessMessageConfig\n} from \"../../../../config/toastConfig\";\nimport {listConnectData} from \"../../../../constants/userClient\";\nimport Loader from \"../../../../views/components/Loader\";\nloadCss(\"/assets/css/pages/login/login-1.css\");\nloadScript(\"/assets/js/pages/custom/login/login-1.js\");\n\n\nconst LoginPage = (props) => {\n\n    const defaultError = {\n        username: [],\n        password: [],\n        // grant_type:[],\n        // client_id: [],\n        // client_secret:[]\n    };\n    const [load, setLoad] = useState(true);\n    const [username, setUserName] = useState(\"\");\n    const [data, setData] = useState(null);\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n        let mounted = true;\n        async function fetchData() {\n            await axios.get(appConfig.apiDomaine + \"/components/retrieve-by-name/connection\")\n                .then(response => {\n                    setData(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        fetchData();\n        return () => mounted = false;\n    }, []);\n\n    const onChangeUserName = (e) => {\n        setUserName(e.target.value)\n    };\n    const onChangePassword = (e) => {\n        setPassword(e.target.value)\n    };\n    const onClickConnectButton = async (e) => {\n        e.preventDefault(e);\n        setStartRequest(true);\n        const formData = {\n            grant_type: listConnectData[props.plan].grant_type,\n            client_id: listConnectData[props.plan].client_id,\n            client_secret: listConnectData[props.plan].client_secret,\n            username: username,\n            password: password\n        };\n        await axios.post(appConfig.apiDomaine + `/oauth/token`, formData)\n            .then(response => {\n                const token = response.data.access_token;\n                const refresh_token = response.data.refresh_token;\n                const expire_in = response.data.expires_in;\n                axios.get(appConfig.apiDomaine + `/login`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                    }\n                }).then(response => {\n                    setError(defaultError);\n                    setStartRequest(false);\n                    ToastBottomEnd.fire(toastConnectSuccessMessageConfig);\n                    const user = response.data;\n                    localStorage.setItem(\"userData\", JSON.stringify(response.data));\n                    localStorage.setItem(\"staffData\", response.data.staff.identite_id);\n                    localStorage.setItem('token', token);\n                    localStorage.setItem('expire_in', expire_in);\n                    var date = new Date();\n                    date.setSeconds(date.getSeconds() + expire_in - 180);\n                    localStorage.setItem('date_expire', date);\n                    localStorage.setItem('refresh_token', refresh_token);\n                    window.location.href = \"/dashboard\";\n                });\n\n            })\n            .catch(error => {\n                setStartRequest(false);\n                ToastBottomEnd.fire(toastConnectErrorMessageConfig);\n            })\n        ;\n    };\n    return (\n        load ? (\n            <Loader/>\n        ) : (\n            <div className=\"kt-grid kt-grid--ver kt-grid--root kt-page\">\n                <div className=\"kt-grid kt-grid--hor kt-grid--root  kt-login kt-login--v1\" id=\"kt_login\">\n                    <div\n                        className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--desktop kt-grid--ver-desktop kt-grid--hor-tablet-and-mobile\">\n\n                        <div className=\"kt-grid kt-grid--ver kt-grid--root kt-page\">\n                            <div className=\"kt-grid kt-grid--hor kt-grid--root  kt-login kt-login--v1\"\n                                 id=\"kt_login\">\n                                <div\n                                    className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--desktop kt-grid--ver-desktop kt-grid--hor-tablet-and-mobile\">\n\n                                    <div\n                                        className=\"kt-grid__item kt-grid__item--order-tablet-and-mobile-2 kt-grid kt-grid--hor kt-login__aside\"\n                                        style={{backgroundImage: `url(${data ? appConfig.apiDomaine + data.params.fr.background.value.url : \" \"})`}}>\n                                        <div className=\"kt-grid__item\">\n                                            <span className=\"kt-login__logo\">\n                                                <img src={data ? appConfig.apiDomaine + data.params.fr.logo.value.url : null}/>\n                                                <span style={{\n                                                    color: \"white\",\n                                                    fontSize: \"1.5em\",\n                                                    paddingLeft: \"5px\"\n                                                }}>\n                                                {data ? data.params.fr.version.value : props.plan + appConfig.version}\n                                            </span>\n                                            </span>\n                                        </div>\n                                        <div className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--ver\">\n                                            <div className=\"kt-grid__item kt-grid__item--middle\">\n                                                <h3 className=\"kt-login__title\"> {data ? data.params.fr.header.value + \" \" + data.params.fr.version.value : null}</h3>\n                                                <h4 className=\"kt-login__subtitle\"> {data ? data.params.fr.description.value + \" \" : null}</h4>\n                                            </div>\n                                        </div>\n                                        <div className=\"kt-grid__item\">\n                                            <div className=\"kt-login__info\">\n                                                <div className=\"kt-login__copyright\">\n                                                    &copy {appConfig.appFullName(props.plan)}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div\n                                        className=\"kt-grid__item kt-grid__item--fluid kt-grid__item--order-tablet-and-mobile-1  kt-login__wrapper\">\n                                        <div className=\"kt-login__body\">\n\n\n                                            <div className=\"kt-login__form\">\n                                                <div className=\"kt-login__title\" style={{marginTop: '175px'}}>\n                                                    <h3> {data ? data.params.fr.title.value : \"\"}</h3>\n                                                </div>\n\n                                                <form className=\"kt-form\" id=\"kt_login__form\"\n                                                      style={{marginBottom: '142px'}}>\n                                                    <div\n                                                        className={error.username.length ? \"form-group row validated\" : \"form-group row\"}>\n\n                                                        <input\n                                                            className={error.username.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                            type=\"email\"\n                                                            placeholder=\"Votre Email\"\n                                                            name=\"username\"\n                                                            onChange={(e) => onChangeUserName(e)}\n                                                            value={username}\n                                                        />\n\n                                                        {\n                                                            error.username.length ? (\n                                                                error.username.map((error, index) => (\n                                                                    <div key={index}\n                                                                         className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n                                                    <div\n                                                        className={error.password.length ? \"form-group row validated\" : \"form-group row\"}>\n\n                                                        <input\n                                                            className={error.password.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                            type=\"password\"\n                                                            placeholder=\"Votre Mot de Passe\"\n                                                            name=\"password\"\n                                                            onChange={(e) => onChangePassword(e)}\n                                                            value={password}\n                                                        />\n                                                        {\n                                                            error.password.length ? (\n                                                                error.password.map((error, index) => (\n                                                                    <div key={index}\n                                                                         className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n\n                                                    <div className=\"kt-login__actions\">\n                                                        {\n                                                            !startRequest ? (\n                                                                <button type=\"submit\"\n                                                                        id=\"kt_login_signin_submit\"\n                                                                        className=\"btn btn-primary btn-elevate kt-login__btn-primary\"\n                                                                        onClick={onClickConnectButton}> Se\n                                                                    connecter</button>\n                                                            ) : (\n                                                                <button\n                                                                    className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                                    type=\"button\" disabled>\n                                                                    Chargement...\n                                                                </button>\n                                                            )\n                                                        }\n\n                                                    </div>\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        plan: state.plan.plan\n    };\n};\n\nexport default connect(mapStateToProps)(LoginPage);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/ConfirmationAlert.js",[],"/var/vhosts/satis-macro/client/satis-client/src/config/confirmConfig.js",[],"/var/vhosts/satis-macro/client/satis-client/src/views/layouts/App.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/constants/channel.js",[],"/var/vhosts/satis-macro/client/satis-client/src/helpers/permission.js",[],"/var/vhosts/satis-macro/client/satis-client/src/constants/userClient.js",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/Toast.js",[],"/var/vhosts/satis-macro/client/satis-client/src/config/toastConfig.js",[],"/var/vhosts/satis-macro/client/satis-client/src/views/includes/HeaderMobile.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/includes/Footer.jsx",["873"],"import React from \"react\";\n\nconst Footer = () => {\n    return (\n        <div className=\"kt-footer kt-grid__item\" id=\"kt_footer\">\n            <div className=\"kt-container  kt-container--fluid \">\n                <div className=\"kt-footer__wrapper\">\n                    <div className=\"kt-footer__copyright\">\n                        {new Date().getFullYear()}&nbsp;&copy;&nbsp;<a href=\"http://www.dmdconsult.com/\" target=\"_blank\" className=\"kt-link\">SATIS SARL</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Error401.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/includes/Body.jsx",["874"],"import React from \"react\";\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport Mail from \"../pages/Mail\";\nimport PerformanceIndicator from \"../pages/PerformanceIndicator\";\nimport UnitType from \"../pages/UnitType\";\nimport Unit from \"../pages/Unit\";\nimport Position from \"../pages/Position\";\nimport Staff from \"../pages/Staff\";\nimport ClaimCategory from \"../pages/ClaimCategory\";\nimport ClaimObject from \"../pages/ClaimObject\";\nimport FAQs from \"../pages/FAQs\";\nimport FAQsPage from \"../pages/FAQsPage\";\nimport CategoryFAQs from \"../pages/CategoryFAQs\";\nimport Institution from \"../pages/Institution\";\nimport CategoryFaqsForm from \"../components/CategoryFaqsForm\";\nimport FaqsForm from \"../components/FaqsForm.jsx\";\nimport CategoryClient from \"../pages/CategoryClient\";\nimport TypeClient from \"../pages/TypeClient\";\nimport CategoryClientForm from \"../components/CategoryClientForm\";\nimport TypeClientForm from \"../components/TypeClientForm\";\nimport Clients from \"../pages/Clients\";\nimport ClientForm from \"../components/Clients/ClientForm\";\nimport SeverityLevel from \"../pages/SeverityLevel\";\nimport UnitTypeForm from \"../components/UnitTypeForm\";\nimport PerformanceIndicatorForm from \"../components/PerformanceIndicatorForm\";\nimport UnitForm from \"../components/UnitForm\";\nimport PositionForm from \"../components/PositionForm\";\nimport ClaimCategoryForm from \"../components/ClaimCategoryForm\";\nimport ClaimObjectForm from \"../components/ClaimObjectForm\";\nimport StaffForm from \"../components/staff/StaffForm\";\nimport SeverityLevelForm from \"../components/SeverityLevelForm\";\nimport InstitutionForm from \"../components/Institutions/InstitutionForm\";\nimport FilialeInstitutionForm from \"../../APP_MACRO/Filiale/FilialeInstitutionForm\";\nimport Currency from \"../pages/Currency\";\nimport CurrencyForm from \"../components/CurrencyForm\";\nimport Channel from \"../pages/Channel\";\nimport ChannelForm from \"../components/ChannelForm\";\nimport ClaimAdd from \"../pages/ClaimAdd\";\nimport ConfigRequirements from \"../pages/ConfigRequirements\";\nimport HoldingClientForm from \"../../APP_MACRO/Holding/HoldingClientForm\";\nimport RelationShip from \"../pages/RelationShip\";\nimport RelationShipForm from \"../components/RelationShipForm\";\nimport IncompleteClaims from \"../pages/IncompleteClaims\";\nimport IncompleteClaimsEdit from \"../components/IncompleteClaimsEdit\";\nimport ConfigProcessingCircuit from \"../pages/ConfigProcessingCircuit\";\nimport ClaimAssign from \"../pages/ClaimAssign\";\nimport ClaimAssignDetail from \"../pages/ClaimAssignDetail\";\nimport ClaimList from \"../pages/ClaimList\";\nimport ClaimAssignToStaff from \"../pages/ClaimAssignToStaff\";\nimport ClaimToValidatedList from \"../pages/ClaimToValidatedList\";\nimport ClaimMonitoring from \"../pages/ClaimMonitoring\";\nimport ClaimReporting from \"../pages/ClaimReporting\";\nimport Dashboards from \"../pages/Dashboards\";\nimport SatisfactionMeasure from \"../pages/SatisfactionMeasure\";\nimport ClaimsArchived from \"../pages/ClaimsArchived\";\nimport ConfigNotification from \"../pages/ConfigNotification\";\nimport Chats from \"../pages/Discussions/Chats\";\nimport AddChatsForm from \"../pages/Discussions/AddChatsForm\";\nimport AddMemberForm from \"../pages/Discussions/AddMemberForm\";\nimport Participants from \"../pages/Discussions/Participants\";\nimport RemoveChats from \"../pages/Discussions/RemoveChats\";\nimport StaffChannels from \"../components/StaffChannels\";\nimport ConfigRapportAuto from \"../pages/ConfigRapportAuto\";\nimport MessageApi from \"../pages/MessageApi\";\nimport MessageAPIForm from \"../components/MessageAPIForm\";\nimport InstitutionMessageApi from \"../pages/InstitutionMessageApi\";\nimport ConfigRapportAutoForm from \"../components/ConfigRapportAutoForm\";\nimport ClaimListDetail from \"../pages/ClaimListDetail\";\nimport ClaimAssignToStaffDetail from \"../pages/ClaimAssignToStaffDetail\";\nimport ClaimToValidatedListDetail from \"../pages/ClaimToValidatedListDetail\";\nimport SatisfactionMeasureDetail from \"../pages/SatisfactionMeasureDetail\";\nimport ClaimsArchivedDetail from \"../pages/ClaimsArchivedDetail\";\nimport User from \"../pages/User\";\nimport UserAdd from \"../pages/UserAdd\";\nimport QualificationPeriod from \"../pages/QualificationPeriod\";\nimport TreatmentPeriod from \"../pages/TreatmentPeriod\";\nimport QualificationPeriodAdd from \"../pages/QualificationPeriodAdd\";\nimport TreatmentPeriodAdd from \"../pages/TreatmentPeriodAdd\";\nimport ParametersComponent from \"../pages/ParametersComponent\";\n// import ParametersComponentForm from \"../components/ParametersComponentForm\";\nimport ParametersComponentEdit from \"../components/ParametersComponentEdit\";\nimport UserEdit from \"../pages/UserEdit\";\nimport ConfigCoefficient from \"../components/ConfigCoefficient\";\nimport ImportClientForm from \"../components/Clients/ImportClientForm\";\nimport ImportInstitutionForm from \"../components/Institutions/ImportInstitutionForm\";\nimport HistoricClaimsAdd from \"../pages/HistoricClaimsAdd\";\nimport HistoricClaimsTraetment from \"../pages/HistoricClaimsTraetment\";\nimport ClaimObjectImportPage from \"../pages/ClaimObjectImportPage\";\nimport StaffImportPage from \"../pages/StaffImportPage\";\nimport ClaimCategoryImportPage from \"../pages/ClaimCategoryImportPage\";\nimport ActivatePilotPage from \"../pages/ActivatePilotPage\";\nimport RulePage from \"../pages/RulePage\";\nimport RuleAddPage from \"../pages/RuleAddPage\";\nimport RuleEditPage from \"../pages/RuleEditPage\";\nimport ProfilePage from \"../pages/ProfilePage\";\nimport ClaimImportPage from \"../pages/ClaimImportPage\";\nimport RecurencePage from \"../pages/RecurencePage\";\nimport RejectLimitPage from \"../pages/RejectLimitPage\";\nimport PercentageMinFusion from \"../pages/PercentageMinFusion\";\n\nconst Body = () => {\n    return (\n        <Switch>\n            {/*<Route exact path=\"/settings/sms\">\n                <SMS/>\n            </Route>*/}\n            <Route exact path=\"/settings/config\">\n                <ParametersComponent/>\n            </Route>\n\n            <Route exact path=\"/historic/claims/add\">\n                <HistoricClaimsAdd/>\n            </Route>\n\n            <Route exact path=\"/historic/claims/treat\">\n                <HistoricClaimsTraetment/>\n            </Route>\n\n            <Route exact path=\"/settings/config/edit/:id\">\n                <ParametersComponentEdit/>\n            </Route>\n\n            <Route exact path=\"/settings/clients/category\">\n                <CategoryClient/>\n            </Route>\n\n            <Route exact path=\"/settings/clients/category/add\">\n                <CategoryClientForm/>\n            </Route>\n\n            <Route exact path=\"/settings/clients/type\">\n                <TypeClient/>\n            </Route>\n\n            <Route exact path=\"/settings/clients/type/add\">\n                <TypeClientForm/>\n            </Route>\n\n            <Route exact path=\"/settings/faqs/add\">\n                <FAQs/>\n            </Route>\n\n            <Route exact path=\"/settings/faqs/list\">\n                <FAQsPage/>\n            </Route>\n\n            <Route exact path=\"/settings/faqs/faq/add\">\n                <FaqsForm/>\n            </Route>\n\n            <Route exact path=\"/settings/faqs/category\">\n                <CategoryFAQs/>\n            </Route>\n\n            <Route exact path=\"/settings/faqs/category/add\">\n                <CategoryFaqsForm/>\n            </Route>\n\n            <Route exact path=\"/settings/mail\">\n                <Mail/>\n            </Route>\n\n            <Route exact path=\"/settings/institution\">\n                <Institution/>\n            </Route>\n\n            <Route exact path=\"/settings/clients\">\n                <Clients/>\n            </Route>\n\n            <Route exact path=\"/settings/importClients\">\n                <ImportClientForm/>\n            </Route>\n\n            <Route exact path=\"/settings/importInstitutions\">\n                <ImportInstitutionForm/>\n            </Route>\n\n            <Route exact path=\"/settings/relationship\">\n                <RelationShip/>\n            </Route>\n\n            <Route exact path=\"/settings/relationship/add\">\n                <RelationShipForm/>\n            </Route>\n\n            <Route exact path=\"/settings/relationship/edit/:id\">\n                <RelationShipForm/>\n            </Route>\n\n            <Route exact path=\"/settings/clients/add\">\n                <ClientForm/>\n            </Route>\n\n            <Route exact path=\"/settings/any/clients/add\">\n                <HoldingClientForm/>\n            </Route>\n\n            <Route exact path=\"/settings/any/clients/edit/:id\">\n                <HoldingClientForm/>\n            </Route>\n\n            <Route exact path=\"/settings/institution/add\">\n                <InstitutionForm/>\n            </Route>\n\n            <Route exact path=\"/settings/institution/edit\">\n                <FilialeInstitutionForm/>\n            </Route>\n\n            <Route exact path=\"/settings/institution/edit/:id\">\n                <InstitutionForm/>\n            </Route>\n\n            <Route exact path=\"/settings/relance\">\n                <ConfigCoefficient/>\n            </Route>\n\n            <Route exact path=\"/settings/faqs/category/edit/:id\">\n                <CategoryFaqsForm/>\n            </Route>\n\n            <Route exact path=\"/settings/faqs/faq/edit/:editfaqid\">\n                <FaqsForm/>\n            </Route>\n\n            <Route exact path=\"/settings/clients/type/edit/:edittypeid\">\n                <TypeClientForm/>\n            </Route>\n\n            <Route exact path=\"/settings/clients/category/edit/:editcategoryid\">\n                <CategoryClientForm/>\n            </Route>\n\n            <Route exact path=\"/settings/performance_indicator\">\n                <PerformanceIndicator/>\n            </Route>\n\n            <Route excat path=\"/settings/performance_indicator/add\">\n                <PerformanceIndicatorForm/>\n            </Route>\n\n            <Route excat path=\"/settings/performance_indicator/:id/edit\">\n                <PerformanceIndicatorForm/>\n            </Route>\n\n            <Route exact path=\"/settings/unit_type\">\n                <UnitType/>\n            </Route>\n\n            <Route exact path=\"/settings/unit_type/add\">\n                <UnitTypeForm/>\n            </Route>\n\n            <Route exact path=\"/settings/unit_type/:id/edit\">\n                <UnitTypeForm/>\n            </Route>\n\n            <Route exact path=\"/settings/unit\">\n                <Unit/>\n            </Route>\n\n            <Route exact path=\"/settings/unit/add\">\n                <UnitForm/>\n            </Route>\n\n            <Route exact path=\"/settings/unit/:id/edit\">\n                <UnitForm/>\n            </Route>\n\n            <Route exact path=\"/settings/positions\">\n                <Position/>\n            </Route>\n\n            <Route exact path=\"/settings/positions/add\">\n                <PositionForm/>\n            </Route>\n\n            <Route exact path=\"/settings/positions/:id/edit\">\n                <PositionForm/>\n            </Route>\n\n            <Route exact path=\"/settings/positions\">\n                <Position/>\n            </Route>\n\n            <Route exact path=\"/settings/positions/add\">\n                <PositionForm/>\n            </Route>\n\n            <Route exact path=\"/settings/positions/:id/edit\">\n                <PositionForm/>\n            </Route>\n\n            <Route exact path=\"/settings/claim_categories\">\n                <ClaimCategory/>\n            </Route>\n\n            <Route exact path=\"/settings/claim_category/import\">\n                <ClaimCategoryImportPage/>\n            </Route>\n\n            <Route exact path=\"/settings/claim_categories/add\">\n                <ClaimCategoryForm/>\n            </Route>\n\n            <Route exact path=\"/settings/claim_categories/:id/edit\">\n                <ClaimCategoryForm/>\n            </Route>\n\n            <Route exact path=\"/settings/claim_objects\">\n                <ClaimObject/>\n            </Route>\n\n            <Route exact path=\"/settings/claim_objects/add\">\n                <ClaimObjectForm/>\n            </Route>\n\n            <Route exact path=\"/settings/claim_objects/:id/edit\">\n                <ClaimObjectForm/>\n            </Route>\n\n            <Route exact path=\"/settings/claim_objects/import\">\n                <ClaimObjectImportPage/>\n            </Route>\n\n            <Route exact path=\"/settings/staffs\">\n                <Staff/>\n            </Route>\n\n            <Route exact path=\"/settings/staffs/add\">\n                <StaffForm/>\n            </Route>\n\n            <Route exact path=\"/settings/staffs/:id/edit\">\n                <StaffForm/>\n            </Route>\n\n            <Route exact path=\"/settings/staffs/import\">\n                <StaffImportPage/>\n            </Route>\n\n            <Route exact path=\"/settings/severities\">\n                <SeverityLevel/>\n            </Route>\n\n            <Route exact path=\"/settings/severities/add\">\n                <SeverityLevelForm/>\n            </Route>\n\n            <Route exact path=\"/settings/severities/:id/edit\">\n                <SeverityLevelForm/>\n            </Route>\n\n            <Route exact path=\"/settings/currencies\">\n                <Currency/>\n            </Route>\n\n            <Route exact path=\"/settings/currencies/add\">\n                <CurrencyForm/>\n            </Route>\n\n            <Route exact path=\"/settings/currencies/:id/edit\">\n                <CurrencyForm/>\n            </Route>\n\n            <Route exact path=\"/settings/channels\">\n                <Channel/>\n            </Route>\n\n            <Route exact path=\"/settings/channels/add\">\n                <ChannelForm/>\n            </Route>\n\n            <Route exact path=\"/settings/channels/:id/edit\">\n                <ChannelForm/>\n            </Route>\n\n            <Route exact path=\"/process/claims/add\">\n                <ClaimAdd/>\n            </Route>\n\n            <Route exact path=\"/process/claims/import\">\n                <ClaimImportPage/>\n            </Route>\n\n            <Route exact path=\"/process/incomplete_claims\">\n                <IncompleteClaims/>\n            </Route>\n\n            <Route exact path=\"/process/incomplete_claims/edit/:id\">\n                <IncompleteClaimsEdit/>\n            </Route>\n\n            <Route exact path=\"/settings/requirement\">\n                <ConfigRequirements/>\n            </Route>\n\n            <Route exact path=\"/settings/processing-circuit\">\n                <ConfigProcessingCircuit/>\n            </Route>\n\n            <Route exact path=\"/process/claim-assign\">\n                <ClaimAssign/>\n            </Route>\n\n            <Route exact path=\"/process/claim-assign/:id/detail\">\n                <ClaimAssignDetail/>\n            </Route>\n\n            <Route exact path=\"/process/claim-assign/to-staff\">\n                <ClaimAssignToStaff/>\n            </Route>\n\n            <Route exact path=\"/process/claim-assign/to-staff/:id/detail\">\n                <ClaimAssignToStaffDetail/>\n            </Route>\n\n            <Route exact path=\"/process/unit-claims\">\n                <ClaimList/>\n            </Route>\n\n            <Route exact path=\"/process/claim-list-detail/:id/detail\">\n                <ClaimListDetail/>\n            </Route>\n\n            <Route exact path=\"/process/claim-to-validated\">\n                <ClaimToValidatedList/>\n            </Route>\n\n            <Route exact path=\"/process/claim-to-validated/:id/detail\">\n                <ClaimToValidatedListDetail/>\n            </Route>\n\n            <Route exact path=\"/monitoring/claims/monitoring\">\n                <ClaimMonitoring/>\n            </Route>\n\n            <Route exact path=\"/monitoring/claims/reporting\">\n                <ClaimReporting/>\n            </Route>\n\n            <Route exact path=\"/process/claim_measure\">\n                <SatisfactionMeasure/>\n            </Route>\n\n            <Route exact path=\"/process/claim_measure/:id/detail\">\n                <SatisfactionMeasureDetail/>\n            </Route>\n\n            <Route exact path=\"/process/claim_archived\">\n                <ClaimsArchived/>\n            </Route>\n\n            <Route exact path=\"/process/claim_archived/:id/detail\">\n                <ClaimsArchivedDetail/>\n            </Route>\n\n            <Route exact path=\"/settings/notification\">\n                <ConfigNotification/>\n            </Route>\n\n            <Route exact path=\"/chat\">\n                <Chats/>\n            </Route>\n\n            <Route exact path=\"/treatment/chat/add\">\n                <AddChatsForm/>\n            </Route>\n\n            <Route exact path=\"/treatment/chat/contributor/:id\">\n                <Participants/>\n            </Route>\n\n            <Route exact path=\"/treatment/chat/remove_chat\">\n                <RemoveChats/>\n            </Route>\n\n            <Route exact path=\"/treatment/chat/add_user/:id\">\n                <AddMemberForm/>\n            </Route>\n\n            <Route exact path=\"/settings/message-apis\">\n                <MessageApi/>\n            </Route>\n\n            <Route exact path=\"/settings/message-apis/add\">\n                <MessageAPIForm/>\n            </Route>\n\n            <Route exact path=\"/settings/message-apis/:id/edit\">\n                <MessageAPIForm/>\n            </Route>\n\n            <Route exact path=\"/settings/institutions/:id/message-apis\">\n                <InstitutionMessageApi/>\n            </Route>\n\n            <Route exact path=\"/settings/institution-message-apis\">\n                <InstitutionMessageApi/>\n            </Route>\n\n            <Route exact path=\"/dashboard\">\n                <Dashboards/>\n            </Route>\n\n            <Route exact path=\"/feedback-channels\">\n                <StaffChannels/>\n            </Route>\n\n            <Route exact path=\"/settings/rapport-auto\">\n                <ConfigRapportAuto/>\n            </Route>\n\n            <Route exact path=\"/settings/rapport/add\">\n                <ConfigRapportAutoForm/>\n            </Route>\n\n            <Route exact path=\"/settings/rapport/edit/:id\">\n                <ConfigRapportAutoForm/>\n            </Route>\n\n            <Route exact path=\"/settings/users\">\n                <User/>\n            </Route>\n\n            <Route exact path=\"/settings/users/add\">\n                <UserAdd/>\n            </Route>\n\n            <Route exact path=\"/settings/users/:id/edit\">\n                <UserEdit/>\n            </Route>\n\n            <Route exact path=\"/settings/rules\">\n                <RulePage/>\n            </Route>\n\n            <Route exact path=\"/settings/rules/add\">\n                <RuleAddPage/>\n            </Route>\n\n            <Route exact path=\"/settings/rules/:id/edit\">\n                <RuleAddPage/>\n            </Route>\n\n            <Route exact path=\"/settings/qualification-period\">\n                <QualificationPeriod/>\n            </Route>\n\n            <Route exact path=\"/settings/qualification-period/add\">\n                <QualificationPeriodAdd/>\n            </Route>\n\n            <Route exact path=\"/settings/treatment-period\">\n                <TreatmentPeriod/>\n            </Route>\n\n            <Route exact path=\"/settings/treatment-period/add\">\n                <TreatmentPeriodAdd/>\n            </Route>\n\n            <Route exact path=\"/settings/activate-pilot\">\n                <ActivatePilotPage/>\n            </Route>\n\n            <Route exact path=\"/settings/account\">\n                <ProfilePage/>\n            </Route>\n\n            <Route exact path=\"/settings/account/personal-information\">\n                <ProfilePage/>\n            </Route>\n\n            <Route exact path=\"/settings/account/change-password\">\n                <ProfilePage/>\n            </Route>\n\n            <Route exact path=\"/settings/recurence\">\n                <RecurencePage/>\n            </Route>\n\n            <Route exact path=\"/settings/reject-limit\">\n                <RejectLimitPage/>\n            </Route>\n\n            <Route exact path=\"/settings/percentage-min-fusion\">\n                <PercentageMinFusion/>\n            </Route>\n\n            <Route path={\"*\"}>\n                <Redirect to={\"/dashboard\"}/>\n            </Route>\n        </Switch>\n    );\n};\n\nexport default Body;\n","/var/vhosts/satis-macro/client/satis-client/src/views/includes/Nav.jsx",["875","876","877","878","879","880","881","882"],"import React, {useCallback, useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport 'moment/locale/fr';\nimport * as LanguageAction from \"../../store/actions/languageAction\";\nimport * as authActions from \"../../store/actions/authActions\";\nimport appConfig from \"../../config/appConfig\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {EventNotification, EventNotificationPath, RelaunchNotification} from \"../../constants/notification\";\nimport EmptyNotification from \"../components/EmptyNotification\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastSuccessMessageWithParameterConfig} from \"../../config/toastConfig\";\nimport {debug} from \"../../helpers/function\";\nimport Loader from \"../components/Loader\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst Nav = (props) => {\n    const [eventNotification, setEventNotification] = useState([]);\n    const [relaunchNotification, setRelaunchNotification] = useState([]);\n    const [startRead, setStartRead] = useState(false);\n\n    const filterEventNotification = useCallback((notification) => {\n        let notificationList;\n        notificationList =  notification.filter(\n            n => EventNotification.includes(n.type.substr(39, n.type.length))\n        );\n        localStorage.setItem(\"eventNotification\", JSON.stringify(notificationList));\n        return notificationList;\n    }, [EventNotification]);\n\n    const filterRelaunchNotification = useCallback((notification) => {\n        return notification.filter(\n            n => RelaunchNotification.includes(n.type.substr(39, n.type.length))\n\n        );\n    }, [RelaunchNotification]);\n\n    const fetchData = async () => {\n        if (verifyTokenExpire()) {\n            await axios.get(`${appConfig.apiDomaine}/unread-notifications`)\n                .then(response => {\n                    setEventNotification(filterEventNotification(response.data));\n                    setRelaunchNotification(filterRelaunchNotification(response.data));\n                })\n                .catch(error => {\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        if (props.user) {\n            window.Echo.private(`Satis2020.ServicePackage.Models.Identite.${props.user.identite_id}`)\n                .notification((notification) => {\n                    if (notification.type.substr(39, notification.type.length) === \"PostDiscussionMessage\") {\n                        debug(notification, \"notification\");\n                        if (window.location.pathname !== \"chat#messageList\")\n                            ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(notification.text.length > 40 ? notification.text.substr(0, 40)+\"...\" : notification.text));\n                    } else {\n                        fetchData();\n                    }\n                })\n            ;\n        }\n    }, [props.user.identite]);\n\n    const onClickLanguage = useCallback((e, lang) => {\n        e.preventDefault();\n        props.changeLanguage(lang);\n    }, [props.changeLanguage]);\n\n    const onClickLogoutLink = useCallback((e) => {\n        e.preventDefault();\n        props.logoutUser();\n    }, [props.logoutUser]);\n\n    const getNotificationLink = useCallback((type, data) => {\n        return type !== \"RegisterAClaim\"\n            ? EventNotificationPath[type](data.claim.id)\n            : EventNotificationPath[type][data.claim.status](data.claim.id);\n    });\n\n    const readAllNotification = async (readNotification, path) => {\n        if (verifyTokenExpire()) {\n            await axios.put(`${appConfig.apiDomaine}/unread-notifications`, readNotification)\n                .then(({data}) => {\n                    debug(data, \"data\");\n                    setStartRead(false);\n                    if (data.canReload) {\n                        window.location.href = path;\n                    } else {\n                        setEventNotification(filterEventNotification(data.unreadNotifications));\n                        setRelaunchNotification(filterRelaunchNotification(data.unreadNotifications));\n                    }\n                })\n                .catch(({response}) => {console.log(\"Something is wrong\")})\n            ;\n        }\n    };\n\n    const showDetailNotification = useCallback((e, path, idNotification, relaunchNotification = false, notification = null) => {\n        e.preventDefault();\n        if (!startRead) {\n            setStartRead(true);\n            const readNotification = {\n                \"notifications\": [\n                    idNotification\n                ]\n            };\n\n            if (!relaunchNotification) {\n                readAllNotification(readNotification, path);\n            } else {\n                if (!path) {\n                    readAllNotification(readNotification, path);\n                }\n            }\n        }\n    });\n\n    const notificationCount = eventNotification.length + relaunchNotification.length;\n\n    return (\n        <div id=\"kt_header\" className=\"kt-header kt-grid__item  kt-header--fixed \" data-ktheader-minimize=\"on\"\n             style={{position: \"sticky\", top: 0, zIndex: 2}}>\n            <div className=\"kt-container  kt-container--fluid \">\n                <div className=\"kt-header__brand \" id=\"kt_header_brand\">\n                    <div className=\"kt-header__brand-logo\">\n                        <a href=\"index.html\">\n                            <img alt=\"Logo\" src=\"/assets/images/satisLogo.png\" width={\"100\"} height={\"34\"}/>\n                            <span className=\"mx-2 text-white font-weight-bolder\">{props.plan}</span>\n                        </a>\n                    </div>\n                </div>\n\n                <div className=\"kt-header__topbar\">\n                    <div className=\"kt-header__topbar-item dropdown\">\n                        <div className=\"kt-header__topbar-wrapper\" data-toggle=\"dropdown\" data-offset=\"10px,0px\">\n                            <span className=\"kt-header__topbar-icon\">\n                                <i className=\"flaticon2-bell-alarm-symbol\"/>\n                                {\n                                    notificationCount > 0 ? (\n                                        <div className=\"kt-badge kt-badge__pics\">\n                                    <span\n                                        className=\"kt-badge__pic  kt-badge__pic--last\"\n                                        style={{\n                                            backgroundColor: \"#FEB2B2\",\n                                            color: \"#C53030\",\n                                            width: \"25px\",\n                                            height: \"25px\",\n                                            position: \"relative\",\n                                            bottom: \"10px\",\n                                            left: \"5px\"\n                                        }}\n                                    >\n                                        {\n                                            (notificationCount) > 9 ? \"+9\" : notificationCount\n                                        }\n                                    </span>\n                                        </div>\n                                    ) : null\n                                }\n                            </span>\n                            <span className=\"kt-hidden kt-badge kt-badge--danger\"/>\n                        </div>\n                        <div\n                            className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-xl\">\n                            <form>\n                                <div className=\"kt-head kt-head--skin-light kt-head--fit-x kt-head--fit-b\">\n                                    <h3 className=\"kt-head__title\">\n                                        Notifications\n                                        &nbsp;\n                                        <span\n                                            className=\"btn btn-label-primary btn-sm btn-bold btn-font-md\">{notificationCount} nouveau</span>\n                                    </h3>\n                                    <ul className=\"nav nav-tabs nav-tabs-line nav-tabs-bold nav-tabs-line-3x nav-tabs-line-brand  kt-notification-item-padding-x\"\n                                        role=\"tablist\">\n                                        <li className=\"nav-item\">\n                                            <a className=\"nav-link active show\" data-toggle=\"tab\"\n                                               href=\"#topbar_notifications_notifications\" role=\"tab\"\n                                               aria-selected=\"true\">Alertes</a>\n                                        </li>\n                                        <li className=\"nav-item\">\n                                            <a className=\"nav-link\" data-toggle=\"tab\"\n                                               href=\"#topbar_notifications_events\" role=\"tab\"\n                                               aria-selected=\"false\">Relances</a>\n                                        </li>\n                                    </ul>\n                                </div>\n\n                                <div className=\"tab-content\">\n                                    <div className=\"tab-pane active show\" id=\"topbar_notifications_notifications\"\n                                         role=\"tabpanel\">\n                                        {\n                                            eventNotification.length ? (\n                                                <div className=\"kt-notification kt-margin-t-10 kt-margin-b-10 kt-scroll\"\n                                                     data-scroll=\"true\" data-height=\"300\" data-mobile-height=\"200\"\n                                                     style={eventNotification.length >= 4 ? {\n                                                         height: \"380px\",\n                                                         overflowY: \"auto\"\n                                                     } : {}}>\n                                                    {\n                                                        eventNotification.map((n, index) => (\n                                                            <a\n                                                                href={getNotificationLink(n.type.substr(39, n.type.length), n.data)}\n                                                                key={index}\n                                                                className=\"kt-notification__item\"\n                                                                onClick={e => showDetailNotification(e, getNotificationLink(n.type.substr(39, n.type.length), n.data), n.id, false, n)}\n                                                            >\n                                                                <div className=\"kt-notification__item-icon\">\n                                                                    <i className=\"flaticon2-line-chart kt-font-success\"/>\n                                                                </div>\n                                                                <div className=\"kt-notification__item-details\">\n                                                                    <div className=\"kt-notification__item-title\"\n                                                                         style={{textOverflow: \"ellipsis\"}}>\n                                                                        {n.data.text.length >= 87 ? n.data.text.substring(0, 88) + \"...\" : n.data.text.substring(0, 86)}\n                                                                    </div>\n                                                                    <div className=\"kt-notification__item-time\">\n                                                                        {moment(new Date(n.created_at)).fromNow()}\n                                                                    </div>\n                                                                </div>\n                                                                {\n                                                                    startRead ? (\n                                                                        <Loader/>\n                                                                    ) : null\n                                                                }\n                                                            </a>\n                                                        ))\n                                                    }\n                                                </div>\n                                            ) : (\n                                                <EmptyNotification/>\n                                            )\n                                        }\n                                    </div>\n                                    <div className=\"tab-pane\" id=\"topbar_notifications_events\" role=\"tabpanel\">\n                                        {\n                                            relaunchNotification.length ? (\n                                                <div className=\"kt-notification kt-margin-t-10 kt-margin-b-10 kt-scroll\"\n                                                     data-scroll=\"true\" data-height=\"300\" data-mobile-height=\"200\"\n                                                     style={relaunchNotification.length >= 4 ? {\n                                                         height: \"380px\",\n                                                         overflowY: \"auto\"\n                                                     } : {}}>\n                                                    {\n                                                        relaunchNotification.map(((n, index) => (\n                                                            <a\n                                                                key={index}\n                                                                href={`/read-notification-${index}`}\n                                                                onClick={e => showDetailNotification(e, ``, n.id, true)}\n                                                                className=\"kt-notification__item\"\n                                                            >\n                                                                <div className=\"kt-notification__item-icon\">\n                                                                    <i className=\"flaticon2-line-chart kt-font-success\"/>\n                                                                </div>\n                                                                <div className=\"kt-notification__item-details\">\n                                                                    <div className=\"kt-notification__item-title\"\n                                                                         style={{textOverflow: \"ellipsis\"}}>\n                                                                        {n.data.text.length >= 87 ? n.data.text.substring(0, 85) + \"...\" : n.data.text.substring(0, 86)}\n                                                                    </div>\n                                                                    <div className=\"kt-notification__item-time\">\n                                                                        {moment(new Date(n.created_at)).fromNow()}\n                                                                    </div>\n                                                                </div>\n                                                                {\n                                                                    startRead ? (\n                                                                        <Loader/>\n                                                                    ) : null\n                                                                }\n                                                            </a>\n                                                        )))\n                                                    }\n                                                </div>\n                                            ) : (\n                                                <EmptyNotification/>\n                                            )\n                                        }\n\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                    <div className=\"kt-header__topbar-item kt-header__topbar-item--langs\">\n                        <div className=\"kt-header__topbar-wrapper\" data-toggle=\"dropdown\" data-offset=\"10px,0px\">\n                        <span className=\"kt-header__topbar-icon\">\n                            <img className=\"\" src={props.language.countryLanguageImage[props.language.languageSelected]}\n                                 alt=\"\"/>\n                        </span>\n                        </div>\n                        <div className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-anim\">\n                            <ul className=\"kt-nav kt-margin-t-10 kt-margin-b-10\">\n                                <li className=\"kt-nav__item kt-nav__item--active\">\n                                    <a href=\"#link\" onClick={(e) => onClickLanguage(e, \"en\")} className=\"kt-nav__link\">\n                                        <span className=\"kt-nav__link-icon\">\n                                            <img src=\"/assets/media/flags/226-united-states.svg\" alt=\"\"/></span>\n                                        <span className=\"kt-nav__link-text\">English</span>\n                                    </a>\n                                </li>\n                                <li className=\"kt-nav__item\">\n                                    <a href=\"#link\" onClick={(e) => onClickLanguage(e, \"sp\")} className=\"kt-nav__link\">\n                                        <span className=\"kt-nav__link-icon\">\n                                            <img src=\"/assets/media/flags/128-spain.svg\" alt=\"\"/>\n                                        </span>\n                                        <span className=\"kt-nav__link-text\">Spanish</span>\n                                    </a>\n                                </li>\n                                <li className=\"kt-nav__item\">\n                                    <a href=\"#link\" onClick={(e) => onClickLanguage(e, \"gm\")} className=\"kt-nav__link\">\n                                        <span className=\"kt-nav__link-icon\">\n                                            <img src=\"/assets/media/flags/162-germany.svg\" alt=\"\"/>\n                                        </span>\n                                        <span className=\"kt-nav__link-text\">German</span>\n                                    </a>\n                                </li>\n\n                                <li className=\"kt-nav__item\">\n                                    <a href=\"#link\" onClick={(e) => onClickLanguage(e, \"fr\")} className=\"kt-nav__link\">\n                                        <span className=\"kt-nav__link-icon\">\n                                            <img src=\"/personal/img/france.svg\" alt=\"\"/>\n                                        </span>\n                                        <span className=\"kt-nav__link-text\">Francais</span>\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div className=\"kt-header__topbar-item kt-header__topbar-item--user\">\n                        <div className=\"kt-header__topbar-wrapper\" data-toggle=\"dropdown\" data-offset=\"10px,0px\">\n                            <span className=\"kt-header__topbar-welcome kt-visible-desktop\">Salut,</span>\n                            <span className=\"kt-header__topbar-username kt-visible-desktop\">\n                                {props.user.firstName}\n                            </span>\n                            <img alt=\"Pic\" src=\"/assets/media/users/default.jpg\"/>\n                            <span className=\"kt-header__topbar-icon kt-bg-brand kt-hidden\"><b>S</b></span>\n                        </div>\n                        <div\n                            className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-xl\">\n                            <div className=\"kt-user-card kt-user-card--skin-light kt-notification-item-padding-x\">\n                                <div className=\"kt-user-card__avatar\">\n                                    <img className=\"kt-hidden-\" alt=\"Pic\" src=\"/assets/media/users/default.jpg\"/>\n                                    <span\n                                        className=\"kt-badge kt-badge--username kt-badge--unified-success kt-badge--lg kt-badge--rounded kt-badge--bold kt-hidden\">S</span>\n                                </div>\n                                <div className=\"kt-user-card__name\">\n                                    {props.user.lastName + \" \" + props.user.firstName}\n                                </div>\n                                {/*<div className=\"kt-user-card__badge\">*/}\n                                {/*    <span*/}\n                                {/*        className=\"btn btn-label-primary btn-sm btn-bold btn-font-md\">23 messages</span>*/}\n                                {/*</div>*/}\n                            </div>\n\n                            <div className=\"kt-notification\">\n                                {/*    <a href=\"custom/apps/user/profile-1/personal-information.html\" className=\"kt-notification__item\">*/}\n                                {/*        <div className=\"kt-notification__item-icon\">*/}\n                                {/*            <i className=\"flaticon2-calendar-3 kt-font-success\"></i>*/}\n                                {/*        </div>*/}\n                                {/*        <div className=\"kt-notification__item-details\">*/}\n                                {/*            <div className=\"kt-notification__item-title kt-font-bold\">*/}\n                                {/*                My Profile*/}\n                                {/*            </div>*/}\n                                {/*            <div className=\"kt-notification__item-time\">*/}\n                                {/*                Account settings and more*/}\n                                {/*            </div>*/}\n                                {/*        </div>*/}\n                                {/*    </a>*/}\n\n                                {\n                                    verifyPermission(props.userPermissions, 'list-my-discussions') ||\n                                    verifyPermission(props.userPermissions, 'contribute-discussion') ? (\n                                            <Link to={\"/chat\"} className=\"kt-notification__item\">\n                                                <div className=\"kt-notification__item-icon\">\n                                                    <i className=\"flaticon2-mail kt-font-warning\"></i>\n                                                </div>\n                                                <div className=\"kt-notification__item-details\">\n                                                    <div className=\"kt-notification__item-title kt-font-bold\">\n                                                        Mes Disccussions\n                                                    </div>\n                                                    <div className=\"kt-notification__item-time\">\n                                                        Acceder à la liste\n                                                    </div>\n                                                </div>\n                                            </Link>\n                                        )\n                                        : null\n                                }\n\n                                {/*<Link to={\"/feedback-channels\"} className=\"kt-notification__item\">*/}\n                                {/*    <div className=\"kt-notification__item-icon\">*/}\n                                {/*        <i className=\"flaticon2-hourglass kt-font-brand\"></i>*/}\n                                {/*    </div>*/}\n                                {/*    <div className=\"kt-notification__item-details\">*/}\n                                {/*        <div className=\"kt-notification__item-title kt-font-bold\">*/}\n                                {/*            Mes Canaux*/}\n                                {/*        </div>*/}\n                                {/*        <div className=\"kt-notification__item-time\">*/}\n                                {/*           Les canaux du personnel*/}\n                                {/*        </div>*/}\n                                {/*    </div>*/}\n                                {/*</Link>*/}\n                                <NavLink to={\"/settings/account\"}\n                                   className=\"kt-notification__item\">\n                                    <div className=\"kt-notification__item-icon\">\n                                        <i className=\"flaticon2-calendar-3 kt-font-success\"></i>\n                                    </div>\n                                    <div className=\"kt-notification__item-details\">\n                                        <div className=\"kt-notification__item-title kt-font-bold\">\n                                            Mon profile\n                                        </div>\n                                        <div className=\"kt-notification__item-time\">\n                                            Paramètres de compte et plus\n                                        </div>\n                                    </div>\n                                </NavLink>\n                                <div className=\"kt-notification__custom kt-space-between\">\n                                    <a href=\"/logout\" onClick={onClickLogoutLink} target=\"_blank\"\n                                       className=\"btn btn-label btn-label-brand btn-sm btn-bold\">Déconnexion</a>\n                                    {/*<a href=\"custom/user/login-v2.html\" target=\"_blank\"*/}\n                                    {/*   className=\"btn btn-clean btn-sm btn-bold\">Upgrade Plan</a>*/}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions,\n        language: state.language,\n        plan: state.plan.plan,\n        user: {\n            lastName: state.user.user.data.identite.lastname,\n            firstName: state.user.user.data.identite.firstname,\n            identite_id: state.user.user.data.identite.id\n        }\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeLanguage: (language) => {\n            dispatch(LanguageAction.changeLanguage(language))\n        },\n        logoutUser: () => dispatch(authActions.logoutUser()),\n\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","/var/vhosts/satis-macro/client/satis-client/src/views/includes/Aside.jsx",["883","884","885","886","887","888","889","890"],"import React from \"react\";\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {seeCollect, seeHistorique, seeMonitoring, seeParameters, seeTreatment} from \"../../helpers/function\";\n\nconst Aside = (props) => {\n    return (\n        <div className=\"kt-aside  kt-aside--fixed  kt-grid__item kt-grid kt-grid--desktop kt-grid--hor-desktop\"\n             id=\"kt_aside\">\n            <div className=\"kt-aside-menu-wrapper kt-grid__item kt-grid__item--fluid\" id=\"kt_aside_menu_wrapper\">\n                <div id=\"kt_aside_menu\" className=\"kt-aside-menu \" data-ktmenu-vertical=\"1\" data-ktmenu-scroll=\"1\">\n                    <ul className=\"kt-menu__nav \">\n                        <li className=\"kt-menu__item \" aria-haspopup=\"true\">\n                            <NavLink exact to=\"/dashboard\" className=\"kt-menu__link\" activeClassName=\"kt-menu__item--active\">\n                                <i className=\"kt-menu__link-icon flaticon2-architecture-and-city\"/>\n                                <span className=\"kt-menu__link-text\">Tableau de bord</span>\n                            </NavLink>\n                        </li>\n\n                        {\n                            seeCollect(props.userPermissions) || seeTreatment(props.userPermissions) ? (\n                                <li className=\"kt-menu__section \">\n                                    <h4 className=\"kt-menu__section-text\">Processus</h4>\n                                    <i className=\"kt-menu__section-icon flaticon-more-v2\"/>\n                                </li>\n                            ) : null\n                        }\n\n                        {\n                            !seeCollect(props.userPermissions) ? null : (\n                                <li className=\"kt-menu__item  kt-menu__item--submenu\" aria-haspopup=\"true\"\n                                    data-ktmenu-submenu-toggle=\"hover\">\n                                    <a href=\"#collecte\" onClick={e => e.preventDefault()}\n                                       className=\"kt-menu__link kt-menu__toggle\">\n                                        <i className=\"kt-menu__link-icon flaticon2-telegram-logo\"/>\n                                        <span className=\"kt-menu__link-text\">Collecte</span>\n                                        <i className=\"kt-menu__ver-arrow la la-angle-right\"/>\n                                    </a>\n                                    <div className=\"kt-menu__submenu \">\n                                        <span className=\"kt-menu__arrow\"/>\n                                        <ul className=\"kt-menu__subnav\">\n                                            <li className=\"kt-menu__item  kt-menu__item--parent\" aria-haspopup=\"true\">\n                                                <span className=\"kt-menu__link\">\n                                                    <span className=\"kt-menu__link-text\">Collecte</span>\n                                                </span>\n                                            </li>\n\n                                            {\n                                                verifyPermission(props.userPermissions, 'store-claim-against-any-institution') || verifyPermission(props.userPermissions, \"store-claim-against-my-institution\") || verifyPermission(props.userPermissions, \"store-claim-without-client\") ? (\n                                                    <NavLink exact to=\"/process/claims/add\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                        <li className=\"kt-menu__link \">\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                            <span className=\"kt-menu__link-text\">Enregistrer réclamation</span>\n                                                        </li>\n                                                    </NavLink>\n                                                ) : null\n                                            }\n                                            {\n                                                verifyPermission(props.userPermissions, 'list-claim-incomplete-against-any-institution') ||\n                                                verifyPermission(props.userPermissions, \"list-claim-incomplete-against-my-institution\")||\n                                                verifyPermission(props.userPermissions, \"list-claim-incomplete-without-client\")? (\n                                                    <NavLink exact to=\"/process/incomplete_claims\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                        <li className=\"kt-menu__link \">\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                            <span className=\"kt-menu__link-text\">Réclamation incomplète</span>\n                                                        </li>\n                                                    </NavLink>\n                                                ) : null\n                                            }\n\n                                        </ul>\n                                    </div>\n                                </li>\n                            )\n                        }\n\n                        {\n                            !seeTreatment(props.userPermissions) ? null : (\n                                <li className=\"kt-menu__item  kt-menu__item--submenu\" aria-haspopup=\"true\" data-ktmenu-submenu-toggle=\"hover\">\n                                    <a href=\"#treatement\" onClick={e => e.preventDefault()}\n                                       className=\"kt-menu__link kt-menu__toggle\">\n                                        <i className=\"kt-menu__link-icon flaticon-network\"/>\n                                        <span className=\"kt-menu__link-text\">Traitement</span>\n                                        <i className=\"kt-menu__ver-arrow la la-angle-right\"/>\n                                    </a>\n                                    <div className=\"kt-menu__submenu \">\n                                        <span className=\"kt-menu__arrow\"/>\n                                        <ul className=\"kt-menu__subnav\">\n                                            <li className=\"kt-menu__item  kt-menu__item--parent\" aria-haspopup=\"true\">\n                                                <span className=\"kt-menu__link\">\n                                                    <span className=\"kt-menu__link-text\">Traitement</span>\n                                                </span>\n                                            </li>\n\n                                            {\n                                                verifyPermission(props.userPermissions, \"show-claim-awaiting-assignment\") && props.activePilot ? (\n                                                    <NavLink exact to=\"/process/claim-assign\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                        <li className=\"kt-menu__link \">\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                            <span className=\"kt-menu__link-text\">Réclamations à tranférer</span>\n                                                        </li>\n                                                    </NavLink>\n                                                ) : null\n                                            }\n\n                                            {\n                                                verifyPermission(props.userPermissions, 'list-claim-awaiting-treatment') ? (\n                                                    <NavLink exact to=\"/process/unit-claims\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                        <li className=\"kt-menu__link \">\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                            <span className=\"kt-menu__link-text\">Liste des réclamations</span>\n                                                        </li>\n                                                    </NavLink>\n                                                ) : null\n                                            }\n\n                                            {\n                                                verifyPermission(props.userPermissions,\"list-claim-assignment-to-staff\") ? (\n                                                    <NavLink exact to=\"/process/claim-assign/to-staff\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                        <li className=\"kt-menu__link \">\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                            <span className=\"kt-menu__link-text\">Réclamations à traiter</span>\n                                                        </li>\n                                                    </NavLink>\n                                                ) : null\n                                            }\n\n                                            {\n                                                (verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-my-institution') || verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-any-institution')) && props.activePilot ? (\n                                                    <NavLink exact to=\"/process/claim-to-validated\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                        <li className=\"kt-menu__link \">\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                            <span className=\"kt-menu__link-text\">Réclamations à valider</span>\n                                                        </li>\n                                                    </NavLink>\n                                                ) : null\n                                            }\n                                            {\n                                                verifyPermission(props.userPermissions, 'list-satisfaction-measured-any-claim')||\n                                                verifyPermission(props.userPermissions, 'list-satisfaction-measured-my-claim')?(\n                                                    <NavLink exact to=\"/process/claim_measure\" className=\"kt-menu__item \"\n                                                             activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                        <li className=\"kt-menu__link \">\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                            <span className=\"kt-menu__link-text\">Mesure Satisfaction</span>\n                                                        </li>\n                                                    </NavLink>\n                                                ) : null\n                                            }\n                                            {\n                                                verifyPermission(props.userPermissions, 'list-any-claim-archived')||\n                                                verifyPermission(props.userPermissions, 'list-my-claim-archived')?(\n                                                    <NavLink exact to=\"/process/claim_archived\" className=\"kt-menu__item \"\n                                                             activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                        <li className=\"kt-menu__link \">\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                            <span className=\"kt-menu__link-text\">Archivage</span>\n                                                        </li>\n                                                    </NavLink>\n                                                ) : null\n                                            }\n                                            {\n                                                verifyPermission(props.userPermissions, 'list-my-discussions')||\n                                                verifyPermission(props.userPermissions, 'contribute-discussion')?(\n                                                    <NavLink exact to=\"/chat\" className=\"kt-menu__item \"\n                                                             activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                        <li className=\"kt-menu__link \">\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                            <span className=\"kt-menu__link-text\">Discussions</span>\n                                                        </li>\n                                                    </NavLink>\n                                                ) : null\n                                            }\n\n\n\n                                        </ul>\n                                    </div>\n                                </li>\n                            )\n                        }\n\n                        {\n                            !seeMonitoring(props.userPermissions) ? null : (\n                                <>\n                                    <li className=\"kt-menu__section \">\n                                        <h4 className=\"kt-menu__section-text\">Monitoring</h4>\n                                        <i className=\"kt-menu__section-icon flaticon-more-v2\"/>\n                                    </li>\n\n                                    {\n                                        verifyPermission(props.userPermissions, 'list-monitoring-claim-any-institution') || verifyPermission(props.userPermissions, 'list-monitoring-claim-my-institution') ? (\n                                            <NavLink exact to=\"/monitoring/claims/monitoring\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                <li className=\"kt-menu__link \">\n                                                    <i className=\"kt-menu__link-icon flaticon2-heart-rate-monitor\"/>\n                                                    <span className=\"kt-menu__link-text\">Suivi des réclamations</span>\n                                                </li>\n                                            </NavLink>\n                                        ) : null\n                                    }\n\n                                    {\n                                        verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\n                                            <NavLink exact to=\"/monitoring/claims/reporting\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                <li className=\"kt-menu__link \">\n                                                    <i className=\"kt-menu__link-icon flaticon2-heart-rate-monitor\"/>\n                                                    <span className=\"kt-menu__link-text\">Reporting</span>\n                                                </li>\n                                            </NavLink>\n                                        ) : null\n                                    }\n                                </>\n                            )\n                        }\n\n                        {/*{*/}\n                        {/*    !seeHistorique(props.userPermissions) ? null : (*/}\n                        {/*        <>*/}\n                        {/*            <li className=\"kt-menu__section \">*/}\n                        {/*                <h4 className=\"kt-menu__section-text\">Historiques</h4>*/}\n                        {/*                <i className=\"kt-menu__section-icon flaticon-more-v2\"/>*/}\n                        {/*            </li>*/}\n                        {/*            <li className=\"kt-menu__item  kt-menu__item--submenu\" aria-haspopup=\"true\"*/}\n                        {/*                data-ktmenu-submenu-toggle=\"hover\">*/}\n                        {/*                <a href=\"#historique\" onClick={e => e.preventDefault()}*/}\n                        {/*                   className=\"kt-menu__link kt-menu__toggle\">*/}\n                        {/*                    <i className=\"kt-menu__link-icon flaticon2-telegram-logo\"/>*/}\n                        {/*                    <span className=\"kt-menu__link-text\">Historiques</span>*/}\n                        {/*                    <i className=\"kt-menu__ver-arrow la la-angle-right\"/>*/}\n                        {/*                </a>*/}\n                        {/*                <div className=\"kt-menu__submenu \">*/}\n                        {/*                    <span className=\"kt-menu__arrow\"/>*/}\n                        {/*                    <ul className=\"kt-menu__subnav\">*/}\n                        {/*                        <li className=\"kt-menu__item  kt-menu__item--parent\" aria-haspopup=\"true\">*/}\n                        {/*                        <span className=\"kt-menu__link\">*/}\n                        {/*                            <span className=\"kt-menu__link-text\">Historiques</span>*/}\n                        {/*                        </span>*/}\n                        {/*                        </li>*/}\n\n                        {/*                        {*/}\n                        {/*                            verifyPermission(props.userPermissions, 'history-list-create-claim')? (*/}\n                        {/*                                <NavLink exact to=\"/historic/claims/add\" className=\"kt-menu__item \"*/}\n                        {/*                                         activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">*/}\n                        {/*                                    <li className=\"kt-menu__link \">*/}\n                        {/*                                        <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>*/}\n                        {/*                                        <span className=\"kt-menu__link-text\">Réclamations créées</span>*/}\n                        {/*                                    </li>*/}\n                        {/*                                </NavLink>*/}\n                        {/*                            ) : null*/}\n                        {/*                        }*/}\n                        {/*                        {*/}\n                        {/*                            verifyPermission(props.userPermissions, \"history-list-treat-claim\")? (*/}\n                        {/*                                <NavLink exact to=\"/historic/claims/treat\" className=\"kt-menu__item \"*/}\n                        {/*                                         activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">*/}\n                        {/*                                    <li className=\"kt-menu__link \">*/}\n                        {/*                                        <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>*/}\n                        {/*                                        <span className=\"kt-menu__link-text\">Réclamations traitées</span>*/}\n                        {/*                                    </li>*/}\n                        {/*                                </NavLink>*/}\n                        {/*                            ) : null*/}\n                        {/*                        }*/}\n\n                        {/*                    </ul>*/}\n                        {/*                </div>*/}\n                        {/*            </li>*/}\n                        {/*        </>*/}\n                        {/*    )*/}\n                        {/*}*/}\n\n\n                        {\n                            !seeParameters(props.userPermissions) ? null : (\n                                <>\n                                    <li className=\"kt-menu__section \">\n                                        <h4 className=\"kt-menu__section-text\">Paramètres</h4>\n                                        <i className=\"kt-menu__section-icon flaticon-more-v2\"/>\n                                    </li>\n                                    <li className=\"kt-menu__item  kt-menu__item--submenu\" aria-haspopup=\"true\" data-ktmenu-submenu-toggle=\"hover\">\n                                        <a href=\"#parameter\" onClick={e => e.preventDefault()}\n                                           className=\"kt-menu__link kt-menu__toggle\">\n                                            <i className=\"kt-menu__link-icon flaticon-settings\"/>\n                                            <span className=\"kt-menu__link-text\">Paramètres</span>\n                                            <i className=\"kt-menu__ver-arrow la la-angle-right\"/>\n                                        </a>\n                                        <div className=\"kt-menu__submenu \"><span className=\"kt-menu__arrow\"/>\n                                            <ul className=\"kt-menu__subnav\">\n                                                <li className=\"kt-menu__item  kt-menu__item--parent\" aria-haspopup=\"true\">\n                                                    <span className=\"kt-menu__link\">\n                                                        <span className=\"kt-menu__link-text\">Paramètres</span>\n                                                    </span>\n                                                </li>\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"update-components-parameters\")?(\n                                                        <NavLink exact to=\"/settings/config\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Configuration</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ):null\n\n                                                }\n\n                                                {/*{\n                                                    verifyPermission(props.userPermissions, \"update-sms-parameters\") ? (\n                                                        <NavLink exact to=\"/settings/sms\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">SMS</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }*/}\n\n                                                {\n                                                    verifyPermission(props.userPermissions, 'update-mail-parameters') ? (\n                                                        <NavLink exact to=\"/settings/mail\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Envoie de mail</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"list-any-institution\") ?\n                                                        <NavLink to=\"/settings/institution\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Institution</span>\n                                                            </li>\n                                                        </NavLink>\n                                                        : null\n                                                }\n                                                {\n                                                    verifyPermission(props.userPermissions, \"update-my-institution\") ?\n                                                        <NavLink to=\"/settings/institution/edit\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">My Institution</span>\n                                                            </li>\n                                                        </NavLink>\n                                                        : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"update-claim-object-requirement\") ?\n                                                        <NavLink to=\"/settings/requirement\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\"> Exigences</span>\n                                                            </li>\n                                                        </NavLink>\n                                                        : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, 'update-processing-circuit-my-institution') ||\n                                                    verifyPermission(props.userPermissions, \"update-processing-circuit-any-institution\") ||\n                                                    verifyPermission(props.userPermissions, \"update-processing-circuit-without-institution\")?\n                                                        (\n                                                            <NavLink to=\"/settings/processing-circuit\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                                <li className=\"kt-menu__link \">\n                                                                    <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                    <span className=\"kt-menu__link-text\"> Entités de Traitement</span>\n                                                                </li>\n                                                            </NavLink>\n                                                        ): null\n\n                                                }\n                                                {\n                                                    verifyPermission(props.userPermissions, \"config-reporting-claim-any-institution\")||\n                                                    verifyPermission(props.userPermissions, \"config-reporting-claim-my-institution\")?\n                                                        <NavLink to=\"/settings/rapport-auto\" className=\"kt-menu__item \"\n                                                             activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                        <li className=\"kt-menu__link \">\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                            <span className=\"kt-menu__link-text\"> Rapport Automatique</span>\n                                                        </li>\n                                                    </NavLink>:null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"update-relance-parameters\")?(\n                                                        <NavLink to=\"/settings/relance\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Configuration de Relance</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ): null\n                                                }\n\n                                                        {/*<NavLink to=\"/settings/faqs/list\" className=\"kt-menu__item \"*/}\n                                                        {/*         activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">*/}\n                                                        {/*    <li className=\"kt-menu__link \">*/}\n                                                        {/*        <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>*/}\n                                                        {/*        <span className=\"kt-menu__link-text\">FAQs</span>*/}\n                                                        {/*    </li>*/}\n                                                        {/*</NavLink>*/}\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"list-faq\")?\n                                                        <NavLink exact to=\"/settings/faqs/add\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Editer FAQs</span>\n                                                            </li>\n                                                        </NavLink> :null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"list-faq-category\")?\n                                                    <NavLink exact to=\"/settings/faqs/category\" className=\"kt-menu__item \"\n                                                             activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                        <li className=\"kt-menu__link \">\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                            <span className=\"kt-menu__link-text\">Catégorie FAQs</span>\n                                                        </li>\n                                                    </NavLink>\n                                                :null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, 'list-any-institution-type-role') || verifyPermission(props.userPermissions, 'list-my-institution-type-role') ? (\n                                                        <NavLink exact to=\"/settings/rules\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Role</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"list-user-my-institution\") || verifyPermission(props.userPermissions, \"list-user-any-institution\") ? (\n                                                        <NavLink exact to=\"/settings/users\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Utilisateur</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"list-client-from-any-institution\") || verifyPermission(props.userPermissions, \"list-client-from-my-institution\") ? (\n                                                        <NavLink exact to=\"/settings/clients\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Clients</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"list-relationship\") ?\n                                                        <NavLink exact to=\"/settings/relationship\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Type de relation client</span>\n                                                            </li>\n                                                        </NavLink>\n                                                        : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, 'update-category-client') ?\n                                                        <NavLink to=\"/settings/clients/category\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Catégorie Clients </span>\n                                                            </li>\n                                                        </NavLink>\n                                                        : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"list-type-client\") ?\n                                                        <NavLink to=\"/settings/clients/type\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Type Clients </span>\n                                                            </li>\n                                                        </NavLink>\n                                                        : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"list-performance-indicator\") ? (\n                                                        <NavLink exact to=\"/settings/performance_indicator\"\n                                                                 className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\"\n                                                                 aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span\n                                                                    className=\"kt-menu__link-text\">Indicateur de performance</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, 'list-unit-type') ? (\n                                                        <NavLink exact to=\"/settings/unit_type\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Type d'unité</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, 'list-any-unit') || verifyPermission(props.userPermissions, 'list-my-unit') || verifyPermission(props.userPermissions, 'list-without-link-unit') ? (\n                                                        <NavLink exact to=\"/settings/unit\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Unité</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, 'list-position') ? (\n                                                        <NavLink exact to=\"/settings/positions\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Fonctions</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, 'list-claim-category') ? (\n                                                        <NavLink exact to=\"/settings/claim_categories\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Catégorie de réclamation</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, 'list-claim-object') ? (\n                                                        <NavLink exact to=\"/settings/claim_objects\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Objet de réclamation</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"list-staff-from-any-unit\") || verifyPermission(props.userPermissions, 'list-staff-from-my-unit') || verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit') ? (\n                                                        <NavLink exact to=\"/settings/staffs\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Agent</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, 'list-severity-level') ? (\n                                                        <NavLink exact to=\"/settings/severities\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Niveau de gravité</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, 'list-currency') ? (\n                                                        <NavLink exact to=\"/settings/currencies\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Devise</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, 'list-channel') ? (\n                                                        <NavLink exact to=\"/settings/channels\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Canaux</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"update-notifications\") ? (\n                                                        <NavLink exact to=\"/settings/notification\" className=\"kt-menu__item \"\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Notification</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"list-message-apis\") ? (\n                                                        <NavLink exact to=\"/settings/message-apis\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Message API</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"update-my-institution-message-api\") ? (\n                                                        <NavLink exact to=\"/settings/institution-message-apis\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Institution Message API</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"list-delai-qualification-parameters\") ? (\n                                                        <NavLink exact to=\"/settings/qualification-period\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Delai qualification</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"list-delai-treatment-parameters\") ? (\n                                                        <NavLink exact to=\"/settings/treatment-period\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Delai traitement</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"update-active-pilot\") && props.activePilot ? (\n                                                        <NavLink exact to=\"/settings/activate-pilot\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Pilote actif</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"update-recurrence-alert-settings\") ? (\n                                                        <NavLink exact to=\"/settings/recurence\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Configuration des alerts de recurences</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"update-reject-unit-transfer-parameters\") ? (\n                                                        <NavLink exact to=\"/settings/reject-limit\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Configuration limitation rejet</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n\n                                                {\n                                                    verifyPermission(props.userPermissions, \"update-min-fusion-percent-parameters\") ? (\n                                                        <NavLink exact to=\"/settings/percentage-min-fusion\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\n                                                            <li className=\"kt-menu__link \">\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\n                                                                <span className=\"kt-menu__link-text\">Configuration pourcentage minimum fusion</span>\n                                                            </li>\n                                                        </NavLink>\n                                                    ) : null\n                                                }\n                                            </ul>\n                                        </div>\n                                    </li>\n                                </>\n                            )\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions,\n        activePilot: state.user.user.staff.is_active_pilot\n    };\n};\n\nexport default connect(mapStateToProps)(Aside);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/FaqsForm.jsx",["891","892","893"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link,\n    useParams\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport {formatSelectOption} from \"../../helpers/function\";\nimport Select from \"react-select\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {connect} from \"react-redux\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\n\nconst FaqsForm = (props) => {\n\n    const defaultData = {\n        faq_category_id: \"\",\n        question: \"\",\n        answer: \"\",\n    };\n    const defaultError = {\n        faq_category_id: [],\n        question: [],\n        answer: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [categorieData, setCategorieData] = useState([]);\n    const [category, setCategory] = useState([]);\n    const [startRequest, setStartRequest] = useState(false);\n    const {editfaqid} = useParams();\n\n    if (!editfaqid) {\n        if (!verifyPermission(props.userPermissions, 'store-faq'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'update-faq'))\n            window.location.href = ERROR_401;\n    }\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + '/faq-categories')\n                .then(response => {\n                    setCategorieData(response.data)\n                });\n            if (editfaqid) {\n                axios.get(appConfig.apiDomaine + `/faqs/${editfaqid}`)\n                    .then(response => {\n                        const newFaq = {\n                            faq_category_id: response.data.faq_category.id,\n                            question: response.data.question[\"fr\"],\n                            answer: response.data.answer[\"fr\"]\n                        };\n                        setData(newFaq);\n                        setCategory({value: response.data.faq_category.id, label: response.data.faq_category.name.fr});\n                    })\n            }\n        }\n    }, []);\n    const onChangeCategory = (selected) => {\n        const newData = {...data};\n        newData.faq_category_id = selected.value;\n        setCategory(selected);\n        setData(newData);\n    };\n\n    const onChangeQuiz = (e) => {\n        const newData = {...data};\n        newData.question = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeAnswers = (e) => {\n        const newData = {...data};\n        newData.answer = e.target.value;\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            if(editfaqid){\n                axios.put(appConfig.apiDomaine + `/faqs/${editfaqid}`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError({...defaultError,...error.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }else {\n                axios.post(appConfig.apiDomaine + `/faqs`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError({...defaultError,...error.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n    const printJsx = () => {\n        return(\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/faqs/faq\" className=\"kt-subheader__breadcrumbs-link\">\n                                    FAQs\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                    {\n                                        editfaqid ? \"Modification\" : \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                editfaqid?\" Modifier une FAQ\" :\"Ajout de FAQs\"\n\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-portlet__body\">\n                                        <div className=\"tab-content\">\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\n                                                <div className=\"kt-form kt-form--label-right\">\n                                                    <div className=\"kt-form__body\">\n                                                        <div className=\"kt-section kt-section--first\">\n                                                            <div className=\"kt-section__body\">\n                                                                <div\n                                                                    className={error.faq_category_id.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                           htmlFor=\"exampleSelect1\">Catégorie</label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                                        {categorieData ? (\n                                                                            <Select\n                                                                                value={category}\n                                                                                onChange={onChangeCategory}\n                                                                                options={formatSelectOption(categorieData, 'name', \"fr\")}\n                                                                            />\n                                                                        ) : ''\n                                                                        }\n\n                                                                        {\n                                                                            error.faq_category_id.length ? (\n                                                                                error.faq_category_id.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : null\n                                                                        }\n                                                                    </div>\n                                                                </div>\n\n                                                                <div\n                                                                    className={error.question.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                           htmlFor=\"quiz\">Question</label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                                        <input\n                                                                            id=\"quiz\"\n                                                                            type=\"text\"\n                                                                            className={error.question.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                            placeholder=\"Veillez entrer la question\"\n                                                                            value={data.question}\n                                                                            onChange={(e) => onChangeQuiz(e)}\n                                                                        />\n                                                                        {\n                                                                            error.question.length ? (\n                                                                                error.question.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : null\n                                                                        }\n                                                                    </div>\n                                                                </div>\n\n                                                                <div\n                                                                    className={error.answer.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                           htmlFor=\"answer\">Réponse</label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                                <textarea\n                                                                    id=\"answer\"\n                                                                    className={error.answer.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                    placeholder=\"Veillez entrer la réponse\"\n                                                                    cols=\"30\"\n                                                                    rows=\"5\"\n                                                                    value={data.answer}\n                                                                    onChange={(e) => onChangeAnswers(e)}\n                                                                />\n                                                                        {\n                                                                            error.answer.length ? (\n                                                                                error.answer.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : null\n                                                                        }\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"kt-portlet__foot\">\n                                                                <div className=\"kt-form__actions text-right\">\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <button type=\"submit\"\n                                                                                    onClick={(e) => onSubmit(e)}\n                                                                                    className=\"btn btn-primary\">Envoyer</button>\n                                                                        ) : (\n                                                                            <button\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                                                type=\"button\" disabled>\n                                                                                Loading...\n                                                                            </button>\n                                                                        )\n                                                                    }\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <Link to=\"/settings/faqs/add\"\n                                                                                  className=\"btn btn-secondary mx-2\">\n                                                                                Quitter\n                                                                            </Link>\n                                                                        ) : (\n                                                                            <Link to=\"/settings/faqs/add\"\n                                                                                  className=\"btn btn-secondary mx-2\"\n                                                                                  disabled>\n                                                                                Quitter\n                                                                            </Link>\n                                                                        )\n                                                                    }\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return (\n        editfaqid ?\n            verifyPermission(props.userPermissions, 'update-faq') ? (\n                printJsx()\n            ) : null\n            : verifyPermission(props.userPermissions, 'store-faq') ? (\n                printJsx()\n            ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    }\n};\n\nexport default connect(mapStateToProps)(FaqsForm);\n","/var/vhosts/satis-macro/client/satis-client/src/middleware/verifyToken.js",[],"/var/vhosts/satis-macro/client/satis-client/src/constants/notification.js",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/FAQsPage.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/Dashboards.jsx",["894"],"import React from 'react';\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport DashboardClaimsAll from \"../../APP_MACRO/Holding/DashboardClaimsAll\";\nimport DashboardClaimsMy from \"../components/DashboardForm/DashboardClaimsMy\";\nimport DashboardClaimsUnit from \"../components/DashboardForm/DashboardClaimsUnit\";\nimport DashboardSummaryReport from \"../components/DashboardForm/DashboardSummaryReport\";\nimport DashboardStatClaim from \"../components/DashboardForm/DashboardStatClaim\";\nimport DashboardStatistic from \"../components/DashboardForm/DashboardStatistic\";\nimport GraphChannel from \"../components/DashboardForm/GraphChannel\";\nimport DashboardClaimsActivity from \"../components/DashboardForm/DashboardClaimsActivity\";\nimport ClaimToInstitution from \"../components/DashboardForm/ClaimToInstitution\";\nimport ClaimToPointOfServices from \"../components/DashboardForm/ClaimToPointOfServices\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {connect} from \"react-redux\";\n\n\nconst Dashboards = (props) => {\n    document.title = \"Satis client - Dashboard\";\n\n    return (\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            Tableau de bord\n                        </h3>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                {/*<InfirmationTable information={\"Représentation graphique des statiques des collectes et traitements des réclamations sur les 30 derniers jours\"} />*/}\n                <div>\n                    {\n                        verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ?\n                            <div className=\"kt-portlet\">\n                                <DashboardClaimsAll/>\n                            </div>:null\n                    }\n\n                    {\n                        verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\") ?\n                            <div className=\"kt-portlet\">\n                                <DashboardClaimsMy/>\n                            </div>:null\n                    }\n\n                    {\n                        verifyPermission(props.userPermissions, \"show-dashboard-data-my-unit\") ?\n                            <div className=\"kt-portlet\">\n                                <DashboardClaimsUnit/>\n                            </div>:null\n                    }\n\n                    {\n                        verifyPermission(props.userPermissions, \"show-dashboard-data-my-activity\") ?\n                        <div className=\"kt-portlet\">\n                            <DashboardClaimsActivity/>\n                        </div>:null\n                    }\n\n                    <div>\n                        <DashboardSummaryReport/>\n                    </div>\n\n                    <div>\n                        <GraphChannel/>\n                    </div>\n\n                    <div>\n                        <DashboardStatClaim/>\n                    </div>\n\n                    <div>\n                        <DashboardStatistic/>\n                    </div>\n\n                    <div>\n                        {\n                            verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") &&\n                            (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\n                                <div className=\"kt-portlet\">\n                                    <ClaimToInstitution/>\n                                </div> : null\n                        }\n                        {\n                            !verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") &&\n                            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\") ?\n                                <div className=\"kt-portlet\">\n                                    <ClaimToPointOfServices/>\n                                </div> : null\n                        }\n\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n    );\n\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(Dashboards);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/PercentageMinFusion.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/RejectLimitPage.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/CategoryFaqsForm.jsx",["895","896","897"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link,\n    useParams\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {connect} from \"react-redux\";\nimport InputRequire from \"./InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\n\nconst CategoryFaqsForm = (props) => {\n    const {id}=useParams();\n\n    if (!id) {\n        if (!verifyPermission(props.userPermissions, 'store-faq-category'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'update-faq-category'))\n            window.location.href = ERROR_401;\n    }\n\n    const defaultData = {\n        name: \"\",\n    };\n    const defaultError = {\n        name: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n        if (id){\n            if (verifyTokenExpire()) {\n                axios.get(appConfig.apiDomaine+`/faq-categories/${id}`)\n                    .then(response => {\n\n                        const newCategory={\n                            name:response.data.name.fr,\n                        };\n                        setData(newCategory)\n                    })\n                ;\n            }\n        }\n    }, []);\n\n    const onChangeName = (e) => {\n        const newData = {...data};\n        newData.name = e.target.value;\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            if(id){\n                axios.put(appConfig.apiDomaine+`/faq-categories/${id}`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError({...defaultError,...error.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }else{\n                axios.post(appConfig.apiDomaine+`/faq-categories`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError({...defaultError,...error.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/faqs/category\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Categorie FAQ\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                    {\n                                        id ? \"Modification\" : \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                id?\n                                                    \"Modification des catégories de FAQ\":\" Ajout des catégories de FAQ\"\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-portlet__body\">\n\n                                        <div className={error.name.length ? \"form-group  validated\" : \"form-group\"}>\n                                            <label htmlFor=\"name\">Libellé <InputRequire/></label>\n                                            <div className=\"col-md-6 mb-3\">\n                                                <input\n                                                    id=\"name\"\n                                                    type=\"text\"\n                                                    className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez entrer le nom\"\n                                                    value={data.name}\n                                                    onChange={(e) => onChangeName(e)}\n                                                />\n                                                {\n                                                    error.name.length ? (\n                                                        error.name.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"kt-portlet__foot\">\n                                        <div className=\"kt-form__actions\">\n                                            {\n                                                !startRequest ? (\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id?\"Modifier\":\"Enregistrer\"}</button>\n                                                ) : (\n                                                    <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                                        Chargement...\n                                                    </button>\n                                                )\n                                            }\n                                            {\n                                                !startRequest ? (\n                                                    <Link to=\"/settings/faqs/category\" className=\"btn btn-secondary mx-2\">\n                                                        Quitter\n                                                    </Link>\n                                                ) : (\n                                                    <Link to=\"/settings/faqs/category\" className=\"btn btn-secondary mx-2\" disabled>\n                                                        Quitter\n                                                    </Link>\n                                                )\n                                            }\n\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n    return (\n        id ?\n            verifyPermission(props.userPermissions, 'update-faq-category') ? (\n                printJsx()\n            ) : null\n            : verifyPermission(props.userPermissions, 'store-faq-category') ? (\n                printJsx()\n            ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    }\n};\n\nexport default connect(mapStateToProps)(CategoryFaqsForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/RelationShipForm.jsx",["898"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link, useParams\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport InputRequire from \"./InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\n\n\nconst RelationShipForm = (props) => {\n    const {id} = useParams();\n    if (!id) {\n        if (!verifyPermission(props.userPermissions, 'store-relationship'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'update-relationship'))\n            window.location.href = ERROR_401;\n    }\n    const defaultData = {\n        name: \"\",\n        description: \"\",\n    };\n    const defaultError = {\n        name: [],\n        description: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            if (id) {\n                axios.get(appConfig.apiDomaine + `/relationships/${id}`)\n                    .then(response => {\n                        console.log(response.data, 'DATA');\n                        const newType = {\n                            name: response.data.name.fr,\n                            description: response.data.description?response.data.description.fr:null\n                        };\n                        setData(newType);\n                    })\n                ;\n            }\n        }\n    },[appConfig.apiDomaine, id]);\n\n    const onChangeName = (e) => {\n        const newData = {...data};\n        newData.name = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeDescription = (e) => {\n        const newData = {...data};\n        newData.description = e.target.value;\n        setData(newData);\n    };\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            if (id) {\n                axios.put(appConfig.apiDomaine + `/relationships/${id}`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError({...defaultError});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            } else {\n                axios.post(appConfig.apiDomaine + `/relationships`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(({response}) => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/relationship\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Relation client\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                    {\n                                        id ? \"Modification\" : \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                id ?\n                                                    \"Modification d'un type de relation client\" : \" Ajout de relation client\"\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-portlet__body\">\n                                        <div className=\"tab-content\">\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\n                                                <div className=\"kt-form kt-form--label-right\">\n                                                    <div className=\"kt-form__body\">\n                                                        <div className=\"kt-section kt-section--first\">\n                                                            <div className=\"kt-section__body\">\n\n                                                                <div\n                                                                    className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Relation <InputRequire/></label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                                        <input\n                                                                            id=\"name\"\n                                                                            type=\"text\"\n                                                                            className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                            placeholder=\"Veillez entrer le nom de la relation\"\n                                                                            value={data.name}\n                                                                            onChange={(e) => onChangeName(e)}\n                                                                        />\n                                                                        {\n                                                                            error.name.length ? (\n                                                                                error.name.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : null\n                                                                        }\n                                                                    </div>\n                                                                </div>\n\n                                                                <div\n                                                                    className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description <InputRequire/></label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                                        <textarea\n                                                                            id=\"description\"\n                                                                            className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                            placeholder=\"Veillez entrer la description\"\n                                                                            cols=\"30\"\n                                                                            rows=\"5\"\n                                                                            value={data.description}\n                                                                            onChange={(e) => onChangeDescription(e)}\n                                                                        />\n                                                                        {\n                                                                            error.description.length ? (\n                                                                                error.description.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : null\n                                                                        }\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"kt-portlet__foot\">\n                                                                <div className=\"kt-form__actions text-right\">\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <button type=\"submit\"\n                                                                                    onClick={(e) => onSubmit(e)}\n                                                                                    className=\"btn btn-primary\">Envoyer</button>\n                                                                        ) : (\n                                                                            <button\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                                                type=\"button\" disabled>\n                                                                                Loading...\n                                                                            </button>\n                                                                        )\n                                                                    }\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <Link to=\"/settings/relationship\"\n                                                                                  className=\"btn btn-secondary mx-2\">\n                                                                                Quitter\n                                                                            </Link>\n                                                                        ) : (\n                                                                            <Link to=\"/settings/relationship\"\n                                                                                  className=\"btn btn-secondary mx-2\"\n                                                                                  disabled>\n                                                                                Quitter\n                                                                            </Link>\n                                                                        )\n                                                                    }\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n    return (\n        id ?\n            verifyPermission(props.userPermissions, 'update-relationship') ? (\n                printJsx()\n            ) : null\n            : verifyPermission(props.userPermissions, 'store-relationship') ? (\n                printJsx()\n            ) : null\n    );\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    }\n};\n\nexport default connect(mapStateToProps)(RelationShipForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/StaffChannels.jsx",["899"],"import React, {useEffect, useState} from 'react';\nimport HeaderTablePage from \"./HeaderTablePage\";\nimport axios from \"axios\";\nimport appConfig from \"../../config/appConfig\";\nimport {Link} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {toastAddErrorMessageConfig, toastAddSuccessMessageConfig} from \"../../config/toastConfig\";\nimport LoadingTable from \"./LoadingTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nconst StaffChannels = () => {\n    const defaultData = {\n        feedback_preferred_channels: []\n    };\n\n    const [data, setData] = useState(defaultData);\n    const [listChannels, setListChannels] = useState(\"\");\n    const [startRequest, setStartRequest] = useState(false);\n    const [load, setLoad] = useState(true);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + \"/feedback-channels\")\n                .then(response => {\n                    const newChannel={...data};\n                    if (response.data.staff.feedback_preferred_channels!==null){\n                        newChannel.feedback_preferred_channels=response.data.staff.feedback_preferred_channels;\n                        setData(newChannel);\n                    }\n                    setListChannels(response.data);\n                    setLoad(false)\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, []);\n\n    const onChangeOption = (e, channel) => {\n        const newData = {...data};\n        console.log(e.target.checked, \"OPTION\");\n        if (e.target.checked === true) {\n            newData.feedback_preferred_channels.push(channel)\n        } else newData.feedback_preferred_channels = newData.feedback_preferred_channels.filter(item => item !== channel);\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            axios.put(appConfig.apiDomaine + \"/feedback-channels\", data)\n                .then(response => {\n                    console.log(response.data);\n                    setStartRequest(false);\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                })\n                .catch(error => {\n                    setStartRequest(false);\n                    console.log(\"something is wrong\");\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                })\n            ;\n        }\n    };\n\n    return (\n\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            Canaux\n                        </h3>\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\n                        <div className=\"kt-subheader__breadcrumbs\">\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                className=\"flaticon2-shelter\"/></a>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\n                               className=\"kt-subheader__breadcrumbs-link\">\n                                Canaux du Personnel\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                <div className=\"col-md-6\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            title={\"Les canaux du personnel\"}\n                        />\n\n                        <div className=\"kt-portlet__body\">\n                            <form className=\"kt-form\">\n                                {/*{console.log(data, \"DATA\")}*/}\n                                {\n                                    load ? (\n                                        <LoadingTable/>\n                                    ) : (\n                                    listChannels.channels ?\n                                        listChannels.channels.map((channel, index) => (\n                                            <div className=\"form-group row\" key={index}>\n                                                <label className=\"col col-form-label \">{channel}</label>\n                                                <div className=\"col\">\n                                                    <span className=\"kt-switch kt-switch--sm kt-switch--outline kt-switch--icon kt-switch--success \">\n                                                    <label>\n                                                        {data.feedback_preferred_channels.length ?\n                                                            data.feedback_preferred_channels.map((feedback, i) => (\n                                                                feedback === channel ?\n\n                                                                    <input\n                                                                        key={i}\n                                                                        type=\"checkbox\"\n                                                                        onChange={(e) => onChangeOption(e, channel)}\n                                                                        checked={\"checked\"}\n                                                                        name={channel}\n                                                                    />\n                                                                    :\n                                                                    <input\n                                                                        key={i}\n                                                                        type=\"checkbox\"\n                                                                        onChange={(e) => onChangeOption(e, channel)}\n                                                                        name={channel}\n                                                                    />\n                                                            ))\n                                                        :\n                                                            <input\n                                                                type=\"checkbox\"\n                                                                onChange={(e) => onChangeOption(e, channel)}\n                                                                name={channel}\n                                                            />\n\n                                                        }\n                                                        <span/>\n                                                    </label>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        )) : null\n                                    )\n                                }\n                                <div className=\"kt-portlet__foot\">\n                                    <div className=\"kt-form__actions text-right\">\n                                        {\n                                            !startRequest ? (\n                                                <button type=\"submit\" onClick={(e) => onSubmit(e)}\n                                                        className=\"btn btn-primary\">Enregistrer</button>\n                                            ) : (\n                                                <button\n                                                    className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                    type=\"button\" disabled>\n                                                    Chargement...\n                                                </button>\n                                            )\n                                        }\n                                        {\n                                            !startRequest ? (\n                                                <Link to=\"/dashbord\" className=\"btn btn-secondary mx-2\">\n                                                    Quitter\n                                                </Link>\n                                            ) : (\n                                                <Link to=\"/dashbord\" className=\"btn btn-secondary mx-2\" disabled>\n                                                    Quitter\n                                                </Link>\n                                            )\n                                        }\n                                    </div>\n                                </div>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    );\n\n};\n\nexport default StaffChannels;\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimsArchivedDetail.jsx",["900","901"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {loadCss, loadScript} from \"../../helpers/function\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport appConfig from \"../../config/appConfig\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport ClientButton from \"../components/ClientButton\";\nimport ClaimButton from \"../components/ClaimButton\";\nimport AttachmentsButton from \"../components/AttachmentsButton\";\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\nimport TreatmentButtonDetail from \"../components/TreatmentButtonDetail\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\n\nconst ClaimArchivedDetail = (props) => {\n    document.title = \"Satis client - Détail plainte\";\n    const {id} = useParams();\n\n    const [claim, setClaim] = useState(null);\n\n    const endPointConfig = {\n        PRO: {\n            plan: \"PRO\",\n            list: `${appConfig.apiDomaine}/my/claim-archived`,\n        },\n        MACRO: {\n            holding: {\n                list: `${appConfig.apiDomaine}/any/claim-archived`,\n            },\n            filial: {\n                list: `${appConfig.apiDomaine}/my/claim-archived`,\n            }\n        },\n        HUB: {\n            plan: \"HUB\",\n            list: `${appConfig.apiDomaine}/any/claim-archived`,\n        }\n    };\n\n    if (!(verifyPermission(props.userPermissions, 'show-any-claim-archived') ||\n        verifyPermission(props.userPermissions, \"show-my-claim-archived\")))\n        window.location.href = ERROR_401;\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'show-any-claim-archived'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'show-my-claim-archived'))\n            endPoint = endPointConfig[props.plan].filial\n    } else\n        endPoint = endPointConfig[props.plan];\n\n    useEffect(() => {\n        async function fetchData() {\n            await axios.get(endPoint.list + `/${id}`)\n                .then(response => {\n                    setClaim(response.data);\n                })\n                .catch(error => console.log(\"Something is wrong\"))\n            ;\n        }\n\n        if (verifyTokenExpire())\n            fetchData();\n    }, []);\n\n    return (\n        verifyPermission(props.userPermissions, \"show-any-claim-archived\") ||\n        verifyPermission(props.userPermissions, \"show-my-claim-archived\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Processus\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\n                                    Traitement\n                                </a>\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                        className=\"flaticon2-shelter\"/></a>\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                    <Link to=\"/process/claim_archived\" className=\"kt-subheader__breadcrumbs-link\">\n                                        Archivage\n                                    </Link>\n                                </div>\n                            </div>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\n                                    <i className=\"flaticon2-shelter\"/>\n                                </a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    {claim?claim.reference: 'Detail'}\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\n                                 data-ktwizard-state=\"step-first\">\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\n                                    <div className=\"kt-wizard-v2__nav\">\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\n                                            <ClientButton/>\n\n                                            <ClaimButton/>\n\n                                            <AttachmentsButton claim={claim}/>\n\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\n                                                <div className=\"kt-wizard-v2__nav-body\">\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\n                                                        <i className=\"flaticon-list\"/>\n                                                    </div>\n                                                    <div className=\"kt-wizard-v2__nav-label\">\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\n                                                            Traitement Effectué\n                                                        </div>\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\n                                                            Détails du traitement effectué\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\n                                    <form className=\"kt-form\" id=\"kt_form\">\n                                        <ClientButtonDetail claim={claim}/>\n\n                                        <ClaimButtonDetail claim={claim}/>\n\n                                        <AttachmentsButtonDetail claim={claim}/>\n\n                                        <TreatmentButtonDetail archive={true} claim={claim}/>\n\n                                        <div className=\"kt-form__actions\">\n                                            <button\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\n                                                data-ktwizard-type=\"action-prev\">\n                                                PRÉCÉDENT\n                                            </button>\n\n                                            <button\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\n                                                data-ktwizard-type=\"action-next\">\n                                                SUIVANTE\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        lead: state.user.user.staff.is_lead,\n        plan: state.plan.plan,\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimArchivedDetail);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/RecurencePage.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/EmptyNotification.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/CategoryClientForm.jsx",["902"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    Link,\n    useParams\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport InputRequire from \"./InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\n\n\nconst CategoryClientForm = (props) => {\n    const {editcategoryid} = useParams();\n\n    if (!editcategoryid) {\n        if (!verifyPermission(props.userPermissions, 'store-category-client'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'update-category-client'))\n            window.location.href = ERROR_401;\n    }\n    const defaultData = {\n        name: \"\",\n        description: \"\",\n    };\n    const defaultError = {\n        name: [],\n        description: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n\n        if (editcategoryid) {\n            if (verifyTokenExpire()) {\n                axios.get(appConfig.apiDomaine + `/category-clients/${editcategoryid}`)\n                    .then(response => {\n                        const newCategory = {\n                            name: response.data.name.fr,\n                            description: response.data.description.fr\n                        };\n                        setData(newCategory);\n                    })\n                ;\n            }\n        }\n\n    },[]);\n\n    const onChangeName = (e) => {\n        const newData = {...data};\n        newData.name = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeDescription = (e) => {\n        const newData = {...data};\n        newData.description = e.target.value;\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n\n        if (verifyTokenExpire()) {\n            if (editcategoryid) {\n                axios.put(appConfig.apiDomaine + `/category-clients/${editcategoryid}`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError({...defaultError,...error.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            } else {\n                axios.post(appConfig.apiDomaine + `/category-clients`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError({...defaultError,...error.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n    const printJsx = () => {\n        return (\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            Paramètres\n                        </h3>\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\n                        <div className=\"kt-subheader__breadcrumbs\">\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                className=\"flaticon2-shelter\"/></a>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <Link to=\"/settings/clients/category\" className=\"kt-subheader__breadcrumbs-link\">\n                                Catégorie Client\n                            </Link>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                {\n                                    editcategoryid ? \"Modification\" : \"Ajout\"\n                                }\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"kt-portlet\">\n                            <div className=\"kt-portlet__head\">\n                                <div className=\"kt-portlet__head-label\">\n                                    <h3 className=\"kt-portlet__head-title\">\n                                        {\n                                            editcategoryid ? \"Modification Catégorie Client\" : \"Ajout de Catégorie Client\"\n                                        }\n                                    </h3>\n                                </div>\n                            </div>\n\n                            <form method=\"POST\" className=\"kt-form\">\n                                <div className=\"kt-portlet__body\">\n                                    <div className=\"tab-content\">\n                                        <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\n                                            <div className=\"kt-form kt-form--label-right\">\n                                                <div className=\"kt-form__body\">\n                                                    <div className=\"kt-section kt-section--first\">\n                                                        <div className=\"kt-section__body\">\n\n                                                            <div\n                                                                className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                       htmlFor=\"name\">Libellé <InputRequire/></label>\n                                                                <div className=\"col-lg-9 col-xl-6\">\n                                                                    <input\n                                                                        id=\"name\"\n                                                                        type=\"text\"\n                                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                        placeholder=\"Veillez entrer le nom\"\n                                                                        value={data.name}\n                                                                        onChange={(e) => onChangeName(e)}\n                                                                    />\n                                                                    {\n                                                                        error.name.length ? (\n                                                                            error.name.map((error, index) => (\n                                                                                <div key={index}\n                                                                                     className=\"invalid-feedback\">\n                                                                                    {error}\n                                                                                </div>\n                                                                            ))\n                                                                        ) : null\n                                                                    }\n                                                                </div>\n                                                            </div>\n\n                                                            <div\n                                                                className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                       htmlFor=\"description\">Description </label>\n                                                                <div className=\"col-lg-9 col-xl-6\">\n                                                                <textarea\n                                                                    id=\"description\"\n                                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                    placeholder=\"Veillez entrer la description\"\n                                                                    cols=\"30\"\n                                                                    rows=\"5\"\n                                                                    value={data.description}\n                                                                    onChange={(e) => onChangeDescription(e)}\n                                                                />\n                                                                    {\n                                                                        error.description.length ? (\n                                                                            error.description.map((error, index) => (\n                                                                                <div key={index}\n                                                                                     className=\"invalid-feedback\">\n                                                                                    {error}\n                                                                                </div>\n                                                                            ))\n                                                                        ) : null\n                                                                    }\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"kt-portlet__foot\">\n                                                            <div className=\"kt-form__actions text-right\">\n                                                                {\n                                                                    !startRequest ? (\n                                                                        <button type=\"submit\"\n                                                                                onClick={(e) => onSubmit(e)}\n                                                                                className=\"btn btn-primary\">Enregistrer</button>\n                                                                    ) : (\n                                                                        <button\n                                                                            className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                                            type=\"button\" disabled>\n                                                                            Loading...\n                                                                        </button>\n                                                                    )\n                                                                }\n                                                                {\n                                                                    !startRequest ? (\n                                                                        <Link to=\"/settings/clients/category\"\n                                                                              className=\"btn btn-secondary mx-2\">\n                                                                            Quitter\n                                                                        </Link>\n                                                                    ) : (\n                                                                        <Link to=\"/settings/clients/category\"\n                                                                              className=\"btn btn-secondary mx-2\"\n                                                                              disabled>\n                                                                            Quitter\n                                                                        </Link>\n                                                                    )\n                                                                }\n\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n    };\n\n    return (\n        editcategoryid ?\n            verifyPermission(props.userPermissions, 'update-category-client') ? (\n                printJsx()\n            ) : null\n            : verifyPermission(props.userPermissions, 'store-category-client') ? (\n                printJsx()\n            ) : null\n    );\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    }\n};\n\nexport default connect(mapStateToProps)(CategoryClientForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/TypeClientForm.jsx",["903"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link, useParams\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\n\n\nconst TypeClientForm = (props) => {\n    const {edittypeid} = useParams();\n    if (!edittypeid) {\n        if (!verifyPermission(props.userPermissions, 'store-type-client'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'update-type-client'))\n            window.location.href = ERROR_401;\n    }\n    const defaultData = {\n        name: \"\",\n        description: \"\",\n    };\n    const defaultError = {\n        name: [],\n        description: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n        if (edittypeid) {\n            if (verifyTokenExpire()) {\n                axios.get(appConfig.apiDomaine + `/type-clients/${edittypeid}`)\n                    .then(response => {\n                        console.log(response.data, 'DATA');\n                        const newType = {\n                            name: response.data.name.fr,\n                            description: response.data.description.fr\n                        };\n                        setData(newType);\n                    })\n                ;\n            }\n        }\n    },[]);\n\n    const onChangeName = (e) => {\n        const newData = {...data};\n        newData.name = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeDescription = (e) => {\n        const newData = {...data};\n        newData.description = e.target.value;\n        setData(newData);\n    };\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            if (edittypeid) {\n                axios.put(appConfig.apiDomaine + `/type-clients/${edittypeid}`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError({...defaultError});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            } else {\n                axios.post(appConfig.apiDomaine + `/type-clients`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError({...defaultError});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/clients/type\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Type Client\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                    {\n                                        edittypeid ? \"Modification\" : \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                edittypeid ?\n                                                    \"Modification de Type Client\" : \" Ajout de Type Client\"\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-portlet__body\">\n                                        <div className=\"tab-content\">\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\n                                                <div className=\"kt-form kt-form--label-right\">\n                                                    <div className=\"kt-form__body\">\n                                                        <div className=\"kt-section kt-section--first\">\n                                                            <div className=\"kt-section__body\">\n\n                                                                <div\n                                                                    className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                           htmlFor=\"name\">Le Nom</label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                                        <input\n                                                                            id=\"name\"\n                                                                            type=\"text\"\n                                                                            className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                            placeholder=\"Veillez entrer le nom\"\n                                                                            value={data.name}\n                                                                            onChange={(e) => onChangeName(e)}\n                                                                        />\n                                                                        {\n                                                                            error.name.length ? (\n                                                                                error.name.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : null\n                                                                        }\n                                                                    </div>\n                                                                </div>\n\n                                                                <div\n                                                                    className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                           htmlFor=\"description\">La Description</label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                        <textarea\n                                            id=\"description\"\n                                            className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\n                                            placeholder=\"Veillez entrer la description\"\n                                            cols=\"30\"\n                                            rows=\"5\"\n                                            value={data.description}\n                                            onChange={(e) => onChangeDescription(e)}\n                                        />\n                                                                        {\n                                                                            error.description.length ? (\n                                                                                error.description.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : null\n                                                                        }\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"kt-portlet__foot\">\n                                                                <div className=\"kt-form__actions text-right\">\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <button type=\"submit\"\n                                                                                    onClick={(e) => onSubmit(e)}\n                                                                                    className=\"btn btn-primary\">Envoyer</button>\n                                                                        ) : (\n                                                                            <button\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                                                type=\"button\" disabled>\n                                                                                Loading...\n                                                                            </button>\n                                                                        )\n                                                                    }\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <Link to=\"/settings/clients/type\"\n                                                                                  className=\"btn btn-secondary mx-2\">\n                                                                                Quitter\n                                                                            </Link>\n                                                                        ) : (\n                                                                            <Link to=\"/settings/clients/type\"\n                                                                                  className=\"btn btn-secondary mx-2\"\n                                                                                  disabled>\n                                                                                Quitter\n                                                                            </Link>\n                                                                        )\n                                                                    }\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n    return (\n        edittypeid ?\n            verifyPermission(props.userPermissions, 'update-type-client') ? (\n                printJsx()\n            ) : null\n            : verifyPermission(props.userPermissions, 'store-type-client') ? (\n                printJsx()\n            ) : null\n    );\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    }\n};\n\nexport default connect(mapStateToProps)(TypeClientForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/PositionForm.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/ClaimCategoryForm.jsx",["904"],"import React, {useState, useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n    toastEditErrorMessageConfig,\n    toastEditSuccessMessageConfig\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport InputRequire from \"./InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nconst ClaimCategoryForm = (props) => {\n    const {id} = useParams();\n    if (id) {\n        if (!verifyPermission(props.userPermissions, 'update-claim-category'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'store-claim-category'))\n            window.location.href = ERROR_401;\n    }\n\n    const defaultData = {\n        name: \"\",\n    };\n    const defaultError = {\n        name: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n        async function fetchData () {\n            if (id) {\n                await axios.get(`${appConfig.apiDomaine}/claim-categories/${id}`)\n                    .then(response => {\n                        const newData = {\n                            name: response.data.name.fr,\n                        };\n                        setData(newData);\n                    })\n                    .catch(error => {\n                        console.log(\"Something is wrong\");\n                    })\n                ;\n            }\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [id, appConfig.apiDomaine]);\n\n    const onChangeName = (e) => {\n        const newData = {...data};\n        newData.name = e.target.value;\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            if (id) {\n                axios.put(`${appConfig.apiDomaine}/claim-categories/${id}`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                    })\n                ;\n            } else {\n                axios.post(`${appConfig.apiDomaine}/claim-categories`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/claim_categories\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Catégorie de réclamation\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    {\n                                        id ? \"Modification\" : \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                id ? \"Modification de catégorie de réclamation\" : \"Ajout de catégorie de réclamation\"\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-form kt-form--label-right\">\n                                        <div className=\"kt-portlet__body\">\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Catégorie <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <input\n                                                        id=\"name\"\n                                                        type=\"text\"\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        placeholder=\"Nom de la catégorie\"\n                                                        value={data.name}\n                                                        onChange={(e) => onChangeName(e)}\n                                                    />\n                                                    {\n                                                        error.name.length ? (\n                                                            error.name.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"kt-portlet__foot\">\n                                            <div className=\"kt-form__actions text-right\">\n                                                {\n                                                    !startRequest ? (\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\n                                                    ) : (\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                                            Chargement...\n                                                        </button>\n                                                    )\n                                                }\n                                                {\n                                                    !startRequest ? (\n                                                        <Link to=\"/settings/claim_categories\" className=\"btn btn-secondary mx-2\">\n                                                            Quitter\n                                                        </Link>\n                                                    ) : (\n                                                        <Link to=\"/settings/claim_categories\" className=\"btn btn-secondary mx-2\" disabled>\n                                                            Quitter\n                                                        </Link>\n                                                    )\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        id ? (\n            verifyPermission(props.userPermissions, 'update-claim-category') ? (\n                printJsx()\n            ) : null\n        ) : (\n            verifyPermission(props.userPermissions, 'store-claim-category') ? (\n                printJsx()\n            ) : null\n        )\n    );\n};\n\nconst mapDispatchToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions,\n        language: state.language\n    }\n};\n\nexport default connect(mapDispatchToProps)(ClaimCategoryForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/ChannelForm.jsx",["905"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport axios from \"axios\";\nimport appConfig from \"../../config/appConfig\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n    toastEditErrorMessageConfig,\n    toastEditSuccessMessageConfig\n} from \"../../config/toastConfig\";\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport InputRequire from \"./InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst ChannelForms = (props) => {\n    const {id} = useParams();\n    if (id) {\n        if (!verifyPermission(props.userPermissions, 'update-channel'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'store-channel'))\n            window.location.href = ERROR_401;\n    }\n\n    const defaultData = {\n        name: \"\",\n        is_response: 0,\n    };\n    const defaultError = {\n        name: [],\n        is_response: [],\n    };\n\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n        async function fetchData () {\n            if (id) {\n                axios.get(`${appConfig.apiDomaine}/channels/${id}`)\n                    .then(response => {\n                        const newData = {\n                            name: response.data.name[\"fr\"],\n                            is_response: response.data.is_response\n                        };\n                        setData(newData);\n                    })\n                    .catch(error => {\n                        console.log(\"Something is wrong\");\n                    })\n                ;\n            }\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine, id]);\n\n    const onChangeName = (e) => {\n        const newData = {...data};\n        newData.name = e.target.value;\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            if (id) {\n                axios.put(`${appConfig.apiDomaine}/channels/${id}`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                    })\n                ;\n            } else {\n                axios.post(`${appConfig.apiDomaine}/channels`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        redirectError401Page(errorRequest.response.data.code);\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/channels\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Canal\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    {\n                                        id ? \"Modification\" : \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                id ? \"Modification d'un canal\" : \"Ajout d'un canal\"\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-form kt-form--label-right\">\n                                        <div className=\"kt-portlet__body\">\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Canal <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <input\n                                                        id=\"name\"\n                                                        type=\"text\"\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        placeholder=\"Veillez entrer le nom du Canal\"\n                                                        value={data.name}\n                                                        onChange={(e) => onChangeName(e)}\n                                                    />\n                                                    {\n                                                        error.name.length ? (\n                                                            error.name.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"kt-portlet__foot\">\n                                            <div className=\"kt-form__actions text-right\">\n                                                {\n                                                    !startRequest ? (\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\n                                                    ) : (\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                                            Chargement...\n                                                        </button>\n                                                    )\n                                                }\n                                                {\n                                                    !startRequest ? (\n                                                        <Link to=\"/settings/channels\" className=\"btn btn-secondary mx-2\">\n                                                            Quitter\n                                                        </Link>\n                                                    ) : (\n                                                        <Link to=\"/settings/channels\" className=\"btn btn-secondary mx-2\" disabled>\n                                                            Quitter\n                                                        </Link>\n                                                    )\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        id ?\n            verifyPermission(props.userPermissions, 'update-channel') ? (\n                printJsx()\n            ) : null\n            : verifyPermission(props.userPermissions, 'store-channel') ? (\n                printJsx()\n            ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n    };\n};\n\nexport default connect(mapStateToProps)(ChannelForms);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/RelationShip.jsx",["906","907","908","909","910"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {filterDataTableBySearchValue, forceRound, loadCss, loadScript} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nconst RelationShip = (props) => {\n    document.title = \"Satis client - Paramètre Type relation client\";\n    if (!verifyPermission(props.userPermissions, \"list-relationship\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [relation, setRelation] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [search, setSearch] = useState(false);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + \"/relationships\")\n                .then(response => {\n                    console.log(response.data,\"DATA\")\n                    setRelation(response.data);\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setNumberPage(forceRound(response.data.length / NUMBER_ELEMENT_PER_PAGE));\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n        } else {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n            setSearch(false);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(relation.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(relation.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(relation.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                relation.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                relation.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteTypeClient = (relationId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (result.value) {\n                    if (verifyTokenExpire()) {\n                        axios.delete(appConfig.apiDomaine + `/relationships/${relationId}`)\n                            .then(response => {\n                                console.log(response, \"OK\");\n                                const newType = [...relation];\n                                newType.splice(index, 1);\n                                setRelation(newType);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newType.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newType.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (typeRelation, index) => {\n        return (\n            <tr className=\"d-flex justify-content-center align-content-center odd\" key={index} role=\"row\"\n                className=\"odd\">\n                <td>{typeRelation.name.fr}</td>\n                <td>{typeRelation.description?typeRelation.description.fr:null}</td>\n                <td style={{textAlign:\"center\"}}>\n                    {\n                        verifyPermission(props.userPermissions, 'show-relationship')?\n                            <Link to={`/settings/relationship/edit/${typeRelation.id}`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                            :\"\"\n                    }\n\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-relationship') ?\n                            <button\n                                onClick={(e) => deleteTypeClient(typeRelation.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                            : null\n                    }\n\n                </td>\n            </tr>\n        )\n    };\n\n    return (\n        verifyPermission(props.userPermissions, \"list-relationship\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                    Relation client\n                                </a>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={\"store-relationship\"}\n                            title={\"Type de relation client\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/relationship/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\"\n                                                               onKeyUp={(e) => searchElement(e)}\n                                                               className=\"form-control form-control-sm\" placeholder=\"\"\n                                                               aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{width: \"952px\"}}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"200px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                            aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        relation.length ? (\n                                                            search ? (\n                                                                relation.map((type, index) => (\n                                                                    printBodyTable(type, index)\n                                                                ))\n                                                            ) : (\n                                                                showList.map((type, index) => (\n                                                                    printBodyTable(type, index)\n                                                                ))\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr></tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">\n                                                    {relation.length ?\n                                                        `Affichage de 1 à ${numberPerPage} sur ${relation.length} données`\n                                                        :\n                                                        \"Affichage de 0 page\"\n                                                    }\n\n                                                </div>\n                                            </div>\n                                            {\n                                                !search ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\nexport default connect(mapStateToProps)(RelationShip);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ConfigNotification.jsx",["911"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport appConfig from \"../../config/appConfig\";\nimport {notificationConfig} from \"../../constants/notification\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastEditErrorMessageConfig,\n    toastSuccessMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport InputRequire from \"../components/InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst ConfigNotification = (props) => {\n    if (!verifyPermission(props.userPermissions, \"update-notifications\"))\n        window.location.href = ERROR_401;\n    const [data, setData] = useState([]);\n    const [error, setError] = useState({\n        \"notifications.acknowledgment-of-receipt\": [],\n        \"notifications.register-a-claim\": [],\n        \"notifications.complete-a-claim\": [],\n        \"notifications.transferred-to-targeted-institution\": [],\n        \"notifications.transferred-to-unit\": [],\n        \"notifications.assigned-to-staff\": [],\n        \"notifications.reject-a-claim\": [],\n        \"notifications.treat-a-claim\": [],\n        \"notifications.invalidate-a-treatment\": [],\n        \"notifications.validate-a-treatment\": [],\n        \"notifications.communicate-the-solution\": [],\n        \"notifications.communicate-the-solution-unfounded\": [],\n        \"notifications.add-contributor-to-discussion\": [],\n        \"notifications.post-discussion-message\": [],\n        \"notifications.reminder-before-deadline\": [],\n        \"notifications.reminder-after-deadline\": [],\n        \"notifications.recurrence-alert\": [],\n    });\n    const [load, setLoad] = useState(true);\n    const [startUpdate, setStartUpdate] = useState(false);\n\n    useEffect(() => {\n        async function fetchData() {\n            await axios.get(`${appConfig.apiDomaine}/notifications/edit`)\n                .then(({data}) => {\n                    console.log(\"data:\", data);\n                    setData(data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"something is wrong\")\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine]);\n\n    const handleTextChange = (e, index) => {\n        const newData = [...data];\n        newData[index].text = e.target.value;\n        setData(newData);\n    };\n\n    const formatUpdateData = () => {\n        const updateData = {};\n        for (const key in data)\n            updateData[data[key].event] = data[key].text;\n        return updateData;\n    };\n\n    const updateConfig = () => {\n        setStartUpdate(true);\n        const updateData = {\n            \"notifications\": formatUpdateData(),\n        };\n\n        if (verifyTokenExpire()) {\n            axios.put(`${appConfig.apiDomaine}/notifications`, updateData)\n                .then(({data}) => {\n                    setStartUpdate(false);\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Succès de la modification\"));\n                })\n                .catch(({response}) => {\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                    setError({...error, ...response.data.error});\n                    setStartUpdate(false);\n                    console.log(\"error\", response.data.error)\n                })\n            ;\n        }\n    };\n\n    return (\n        verifyPermission(props.userPermissions, \"update-notifications\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Notification\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            title={\"Configuration notification\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div>\n                                            <strong>\n                                                Légende: <br/> <br/>\n                                            </strong>\n                                            <div className=\"row\">\n                                                <div className=\"col-6\">{\"{claim_reference}\"} {\"<===>\"} Référence de la reclamation</div>\n                                                <div className=\"col-6\">{\"{claim_object}\"} {\"<===>\"} Objet de la reclamtion</div>\n                                                <br/> <br/>\n                                                <div className=\"col-6\">{\"{claim_status}\"} {\"<===>\"} Status de la réclamaion</div>\n                                                <div className=\"col-6\">{\"{responsible_staff}\"} {\"<===>\"} Staff en charge du traitement</div>\n                                                <br/> <br/>\n                                                <div className=\"col-6\">{\"{solution_communicated}\"} {\"<===>\"} Solution à communiquer</div>\n                                                <div className=\"col-6\">{\"{created_by}\"} {\"<===>\"} Celui qui à enregister la réclamation</div>\n                                                <br/> <br/>\n                                                <div className=\"col-6\">{\"{discussion_name}\"} {\"<===>\"} Nom de la discussion</div>\n                                                <div className=\"col-6\">{\"{posted_by}\"} {\"<===>\"} Celui qui à poster la réclamation</div>\n                                            </div>\n                                            <br/><br/>\n                                        </div>\n                                        <div className=\"row\">\n                                            {\n                                                data.map((el, index) => (\n                                                    <div key={index} className={error[`notifications.${el.event}`].length ? \"col-6 form-group validated\" : \"col-6 form-group\"}>\n                                                        <label htmlFor={el.event}>{notificationConfig[el.event]} <InputRequire/></label>\n                                                        <textarea\n                                                            id={el.event}\n                                                            cols=\"30\"\n                                                            rows=\"3\"\n                                                            className={ error[`notifications.${el.event}`].length ? \"form-control is-invalid\" :  \"form-control\"}\n                                                            value={el.text}\n                                                            onChange={e => handleTextChange(e, index)}\n                                                        />\n\n                                                        {\n                                                            error[`notifications.${el.event}`].length ? (\n                                                                error[`notifications.${el.event}`].map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n                                                ))\n                                            }\n\n                                            <div className=\"col-12 form-group text-center\">\n                                                {\n                                                    !startUpdate ? (\n                                                        <button onClick={updateConfig} className=\"btn btn-primary\">Modifier</button>\n                                                    ) : (\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                                            Chargement...\n                                                        </button>\n                                                    )\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(ConfigNotification);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimAssignToStaffDetail.jsx",["912","913"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {loadCss, loadScript} from \"../../helpers/function\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport appConfig from \"../../config/appConfig\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport UnfoundedModal from \"../components/UnfoundedModal\";\nimport TreatmentForm from \"../components/TreatmentForm\";\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\nimport ClientButton from \"../components/ClientButton\";\nimport ClaimButton from \"../components/ClaimButton\";\nimport AttachmentsButton from \"../components/AttachmentsButton\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\n\n\nconst ClaimAssignToStaffDetail = (props) => {\n    document.title = \"Satis client - Détail réclamation\";\n    const {id} = useParams();\n\n    if (!verifyPermission(props.userPermissions, \"show-claim-assignment-to-staff\"))\n        window.location.href = ERROR_401;\n\n    const [claim, setClaim] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            await axios.get(`${appConfig.apiDomaine}/claim-assignment-staff/${id}`)\n                .then(response => {\n                    setClaim(response.data);\n                })\n                .catch(error => console.log(\"Something is wrong\"));\n        }\n\n        if (verifyTokenExpire())\n            fetchData();\n    }, []);\n\n    return (\n        verifyPermission(props.userPermissions, \"show-claim-assignment-to-staff\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Processus\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\n                                    Traitement\n                                </a>\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                    <Link to=\"/process/claim-assign/to-staff\" className=\"kt-subheader__breadcrumbs-link\">\n                                        Réclamations à traitrer\n                                    </Link>\n                                </div>\n                            </div>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\n                                    <i className=\"flaticon2-shelter\"/>\n                                </a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    {claim?claim.reference: 'Detail'}\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\n                                 data-ktwizard-state=\"step-first\">\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\n                                    <div className=\"kt-wizard-v2__nav\">\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\n                                            <ClientButton/>\n\n                                            <ClaimButton/>\n\n                                            <AttachmentsButton claim={claim}/>\n\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\n                                                <div className=\"kt-wizard-v2__nav-body\">\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\n                                                        <i className=\"flaticon-clipboard\"/>\n                                                    </div>\n                                                    <div className=\"kt-wizard-v2__nav-label\">\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\n                                                            Traitement de la réclamtion\n                                                        </div>\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\n                                                            Procédez au traitement de la réclamation\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\n                                    <form className=\"kt-form\" id=\"kt_form\">\n\n                                        <div className=\"d-flex justify-content-end\">\n                                            <button type=\"button\"\n                                                    data-toggle=\"modal\" data-target=\"#exampleModal\"\n                                                    className=\"btn btn-success\">\n                                                NON FONDÉ\n                                            </button>\n                                            {\n                                                claim ? (\n                                                    <UnfoundedModal\n                                                        activeTreatment={\n                                                            claim.active_treatment ? (\n                                                                claim.active_treatment\n                                                            ) : null\n                                                        }\n                                                        getId={`${id}`}\n                                                    />\n                                                ) : (\n                                                    <UnfoundedModal\n                                                        getId={`${id}`}\n                                                    />\n                                                )\n                                            }\n\n                                        </div>\n\n                                        <ClientButtonDetail claim={claim}/>\n\n                                        <ClaimButtonDetail claim={claim}/>\n\n                                        <AttachmentsButtonDetail claim={claim}/>\n\n                                        <div className=\"kt-wizard-v2__content\"\n                                             data-ktwizard-type=\"step-content\">\n                                            <div className=\"kt-heading kt-heading--md\">Traitement de la\n                                                réclamation\n                                            </div>\n                                            {\n                                                claim ? (\n                                                    claim.active_treatment ? (\n                                                        claim.active_treatment.validated_at && claim.active_treatment.invalidated_reason ? (\n                                                            <div className=\"kt-wizard-v2__review-item mb-4\">\n                                                                <div className=\"kt-wizard-v2__review-title\">\n                                                                    <h5><strong className=\"text-danger\">Traitement rejeté</strong></h5>\n                                                                </div>\n                                                                <div className=\"kt-wizard-v2__review-content\">\n                                                                    <strong>Motif</strong>: <span className=\"mx-2\">{claim.active_treatment.invalidated_reason ? claim.active_treatment.invalidated_reason : \"Pas de raison\"}</span><br/>\n                                                                    <hr/>\n                                                                </div>\n                                                            </div>\n                                                        ) : null\n                                                    ) : null\n                                                ) : null\n                                            }\n                                            <div className=\"kt-form__section kt-form__section--first\">\n                                                <div className=\"kt-wizard-v2__review\">\n                                                    <div className=\"kt-wizard-v2__review-content\">\n                                                        {console.log(claim ,\"claim_treatment\" )}\n                                                        {\n                                                            claim ? (\n                                                                <TreatmentForm\n                                                                    amount_disputed={claim?claim.amount_disputed:null}\n                                                                    activeTreatment={\n                                                                        claim.active_treatment ? (\n                                                                            claim.active_treatment\n                                                                        ) : null\n                                                                    }\n                                                                    getId={`${id}`}\n                                                                />\n                                                            ) : (\n                                                                <TreatmentForm\n                                                                    amount_disputed={claim?claim.amount_disputed:null}\n                                                                    getId={`${id}`}\n                                                                />\n                                                            )\n                                                        }\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n\n                                        <div className=\"kt-form__actions\">\n                                            <button\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\n                                                data-ktwizard-type=\"action-prev\">\n                                                PRÉCÉDENT\n                                            </button>\n\n                                            <button\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\n                                                data-ktwizard-type=\"action-next\">\n                                                SUIVANTE\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        lead: state.user.user.staff.is_lead,\n        plan: state.plan.plan\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimAssignToStaffDetail);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/SatisfactionMeasureDetail.jsx",["914","915"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {loadCss, loadScript} from \"../../helpers/function\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport appConfig from \"../../config/appConfig\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport ReasonSatisfaction from \"../components/ReasonSatisfaction\";\nimport ClientButton from \"../components/ClientButton\";\nimport ClaimButton from \"../components/ClaimButton\";\nimport AttachmentsButton from \"../components/AttachmentsButton\";\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\nimport TreatmentButtonDetail from \"../components/TreatmentButtonDetail\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        edit: `${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\n    },\n    MACRO: {\n        holding: {\n            edit: `${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\n        },\n        filial: {\n            edit: `${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\n        }\n    },\n    HUB: {\n        plan: \"HUB\",\n        edit: `${appConfig.apiDomaine}/any/claim-satisfaction-measured`,\n    }\n};\n\n\nconst SatisfactionMeasureDetail = (props) => {\n    document.title = \"Satis client - Détail plainte\";\n    const {id} = useParams();\n\n    if (!(verifyPermission(props.userPermissions, 'update-satisfaction-measured-any-claim') ||\n        verifyPermission(props.userPermissions, \"update-satisfaction-measured-my-claim\")))\n        window.location.href = ERROR_401;\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'update-satisfaction-measured-my-claim'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'update-satisfaction-measured-my-claim'))\n            endPoint = endPointConfig[props.plan].filial\n    } else\n        endPoint = endPointConfig[props.plan];\n\n    const [claim, setClaim] = useState(null);\n\n    useEffect(() => {\n        async function fetchData() {\n            await axios.get(endPoint.edit + `/${id}`)\n                .then(response => {\n                    setClaim(response.data);\n                })\n                .catch(error => console.log(\"Something is wrong\"));\n        }\n\n        if (verifyTokenExpire()) {\n            fetchData();\n        }\n    }, []);\n\n    return (\n        verifyPermission(props.userPermissions, \"update-satisfaction-measured-any-claim\") ||\n        verifyPermission(props.userPermissions, \"update-satisfaction-measured-my-claim\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Processus\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\n                                    Traitement\n                                </a>\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                        className=\"flaticon2-shelter\"/></a>\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                    <Link to=\"/process/claim_measure\" className=\"kt-subheader__breadcrumbs-link\">\n                                        Mesure de Satisfaction\n                                    </Link>\n                                </div>\n                            </div>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\n                                    <i className=\"flaticon2-shelter\"/>\n                                </a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    {claim ? claim.reference : 'Detail'}\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\n                                 data-ktwizard-state=\"step-first\">\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\n                                    <div className=\"kt-wizard-v2__nav\">\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\n                                            <ClientButton/>\n\n                                            <ClaimButton/>\n\n                                            <AttachmentsButton claim={claim}/>\n\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\n                                                <div className=\"kt-wizard-v2__nav-body\">\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\n                                                        <i className=\"flaticon-list\"/>\n                                                    </div>\n                                                    <div className=\"kt-wizard-v2__nav-label\">\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\n                                                            Traitement Effectué\n                                                        </div>\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\n                                                            Détails du traitement effectué\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\n                                                <div className=\"kt-wizard-v2__nav-body\">\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\n                                                        <i className=\"flaticon-list\"/>\n                                                    </div>\n                                                    <div className=\"kt-wizard-v2__nav-label\">\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\n                                                            Mesure de Satisfaction\n                                                        </div>\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\n                                                            Mesurer la satisfaction du client\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\n                                    <form className=\"kt-form\" id=\"kt_form\">\n                                        <ClientButtonDetail claim={claim}/>\n\n                                        <ClaimButtonDetail claim={claim}/>\n\n                                        <AttachmentsButtonDetail claim={claim}/>\n\n                                        <TreatmentButtonDetail claim={claim}/>\n\n                                        <div className=\"kt-wizard-v2__content\"\n                                             data-ktwizard-type=\"step-content\">\n                                            <div className=\"kt-heading kt-heading--md\">Mesure de Satisfaction\n                                            </div>\n                                            <div className=\"kt-form__section kt-form__section--first\">\n                                                <div className=\"kt-wizard-v2__review\">\n                                                    <div className=\"kt-wizard-v2__review-content\">\n\n                                                        <ReasonSatisfaction\n                                                            getId={`${id}`}\n                                                            getEndPoint={endPoint.edit}\n                                                        />\n\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                        </div>\n\n                                        <div className=\"kt-form__actions\">\n                                            <button\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\n                                                data-ktwizard-type=\"action-prev\">\n                                                PRÉCÉDENT\n                                            </button>\n\n                                            <button\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\n                                                data-ktwizard-type=\"action-next\">\n                                                SUIVANTE\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        lead: state.user.user.staff.is_lead,\n        plan: state.plan.plan,\n    };\n};\n\nexport default connect(mapStateToProps)(SatisfactionMeasureDetail);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/SeverityLevelForm.jsx",["916"],"import React, {useState, useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n    toastEditErrorMessageConfig,\n    toastEditSuccessMessageConfig, toastErrorMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport InputRequire from \"./InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        store: `${appConfig.apiDomaine}/severity-levels`,\n        update: id => `${appConfig.apiDomaine}/severity-levels/${id}`,\n        create: `${appConfig.apiDomaine}/severity-levels/create`,\n        edit: id => `${appConfig.apiDomaine}/severity-levels/${id}/edit`\n    },\n    MACRO: {\n        plan: \"MACRO\",\n        store: `${appConfig.apiDomaine}/severity-levels`,\n        update: id => `${appConfig.apiDomaine}/severity-levels/${id}`,\n        create: `${appConfig.apiDomaine}/severity-levels/create`,\n        edit: id => `${appConfig.apiDomaine}/severity-levels/${id}/edit`\n    },\n    HUB: {\n        plan: \"HUB\",\n        store: `${appConfig.apiDomaine}/severity-levels`,\n        update: id => `${appConfig.apiDomaine}/severity-levels/${id}`,\n        create: `${appConfig.apiDomaine}/severity-levels/create`,\n        edit: id => `${appConfig.apiDomaine}/severity-levels/${id}/edit`,\n    }\n};\n\nconst SeverityLevelForm = (props) => {\n    const {id} = useParams();\n    if (!id) {\n        if (!verifyPermission(props.userPermissions, 'store-severity-level'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'update-severity-level'))\n            window.location.href = ERROR_401;\n    }\n\n    const endpoint = endPointConfig[props.plan];\n\n    const defaultData = {\n        name: \"\",\n        color: \"#000000\",\n        description: \"\",\n    };\n\n    const defaultError = {\n        name: [],\n        color: [],\n        description: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n        async function fetchData () {\n            if (id) {\n                await axios.get(`${appConfig.apiDomaine}/severity-levels/${id}`)\n                    .then(response => {\n                        const newData = {\n                            name: response.data.name[\"fr\"],\n                            color: response.data.color,\n                            description: response.data.description[\"fr\"],\n                        };\n                        setData(newData);\n                    })\n                    .catch(error => {\n                        console.log(\"Something is wrong\");\n                    })\n                ;\n            }\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine, id]);\n\n    const onChangeName = (e) => {\n        const newData = {...data};\n        newData.name = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeColor = (e) => {\n        const newData = {...data};\n        newData.color = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeDescription = (e) => {\n        const newData = {...data};\n        newData.description = e.target.value;\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            if (id) {\n                axios.put(endpoint.update(id), data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                    })\n                ;\n            } else {\n                axios.post(endpoint.store, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        console.log(errorRequest.response.data);\n                        setStartRequest(false);\n                        if (errorRequest.response.data.code === 422) {\n                            setError({...defaultError, ...errorRequest.response.data.error});\n                            ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                        } else {\n                            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(errorRequest.response.data.error));\n                        }\n\n                    })\n                ;\n            }\n        }\n    };\n\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/severities\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Niveau de gravité\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    {\n                                        id ? \"Modification\" : \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                id ? \"Modification d'un niveau de gravité\" : \"Ajout d'un niveau de gravité\"\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-form kt-form--label-right\">\n                                        <div className=\"kt-portlet__body\">\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Niveau de gravité <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <input\n                                                        id=\"name\"\n                                                        type=\"text\"\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        placeholder=\"Veillez entrer le nom de la gravité\"\n                                                        value={data.name}\n                                                        onChange={(e) => onChangeName(e)}\n                                                    />\n                                                    {\n                                                        error.name.length ? (\n                                                            error.name.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n\n                                            <div className={error.color.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"color\">Couleur <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <input\n                                                        id=\"color\"\n                                                        type=\"color\"\n                                                        className={error.color.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        placeholder=\"Veillez choisir la couleur représentative du niveau de gravité\"\n                                                        value={data.color}\n                                                        onChange={(e) => onChangeColor(e)}\n                                                    />\n                                                    {\n                                                        error.color.length ? (\n                                                            error.color.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n\n                                            <div className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description</label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                <textarea\n                                                    id=\"description\"\n                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez entrer la description\"\n                                                    cols=\"30\"\n                                                    rows=\"5\"\n                                                    value={data.description}\n                                                    onChange={(e) => onChangeDescription(e)}\n                                                />\n                                                    {\n                                                        error.description.length ? (\n                                                            error.description.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"kt-portlet__foot\">\n                                            <div className=\"kt-form__actions text-right\">\n                                                {\n                                                    !startRequest ? (\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\n                                                    ) : (\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                                            Chargement...\n                                                        </button>\n                                                    )\n                                                }\n                                                {\n                                                    !startRequest ? (\n                                                        <Link to=\"/settings/severities\" className=\"btn btn-secondary mx-2\">\n                                                            Quitter\n                                                        </Link>\n                                                    ) : (\n                                                        <Link to=\"/settings/severities\" className=\"btn btn-secondary mx-2\" disabled>\n                                                            Quitter\n                                                        </Link>\n                                                    )\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        id ? (\n            verifyPermission(props.userPermissions, 'update-severity-level') ? (\n                printJsx()\n            ) : null\n        ) : (\n            verifyPermission(props.userPermissions, 'store-severity-level') ? (\n                printJsx()\n            ) : null\n        )\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan\n    }\n};\n\nexport default connect(mapStateToProps)(SeverityLevelForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/CurrencyForm.jsx",["917"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport appConfig from \"../../config/appConfig\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n    toastEditErrorMessageConfig,\n    toastEditSuccessMessageConfig\n} from \"../../config/toastConfig\";\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport currencies from \"../../constants/currencyContry\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport InputRequire from \"./InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst CurrencyForm = () => {\n    const {id} = useParams();\n    if (id) {\n        if (!verifyPermission([\"update-currency\"], 'update-currency'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission([\"store-currency\"], 'store-currency'))\n            window.location.href = ERROR_401;\n    }\n\n    const [listCurrency, setListCurrency] = useState(currencies);\n    const [currency, setCurrency] = useState(null);\n\n    const defaultData = {\n        name: \"\",\n        iso_code: \"\",\n    };\n    const defaultError = {\n        name: [],\n        iso_code: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n        async function fetchData () {\n            if (id) {\n                await axios.get(`${appConfig.apiDomaine}/currencies/${id}`)\n                    .then(({data}) => {\n                        const newData = {\n                            name: data.currency.name[\"fr\"],\n                            iso_code: data.currency.iso_code\n                        };\n                        setData(newData);\n                        setListCurrency(filterCurrency(data.currencies));\n                    })\n                    .catch(error => {\n                        console.log(\"Something is wrong\");\n                    })\n                ;\n            } else {\n                await axios.get(`${appConfig.apiDomaine}/currencies`)\n                    .then(({data}) => {\n                        setListCurrency(filterCurrency(data));\n                    })\n                    .catch(error => {\n                        console.log(\"Something is wrong\");\n                    })\n            }\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine, id]);\n\n    const filterCurrency = (removeElement) => {\n        let newCurrencyList = [...listCurrency];\n\n        for (let i = 0; i < removeElement.length; i++) {\n            newCurrencyList = newCurrencyList.filter(e => e.iso_code !== removeElement[i].iso_code);\n        }\n\n        return newCurrencyList;\n    };\n\n    const onChangeCurrency = (selected) => {\n        if (error.iso_code.length || error.name.length)\n            setError(defaultError);\n        const newData = {...data};\n        newData.iso_code = selected ? selected.iso_code : null;\n        newData.name = selected ? selected.label : null;\n        setCurrency(selected);\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            if (id) {\n                axios.put(`${appConfig.apiDomaine}/currencies/${id}`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setCurrency(null);\n                        setError(defaultError);\n                        setListCurrency(filterCurrency([data]));\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                    })\n                ;\n            } else {\n                axios.post(`${appConfig.apiDomaine}/currencies`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        setCurrency(null);\n                        setListCurrency(filterCurrency([data]));\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        redirectError401Page(errorRequest.response.data.code);\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/unit_type\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Devise\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    {\n                                        id ? \"Modification\" : \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                id ? \"Modification de la devise\" : \"Ajout de la devise\"\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-form kt-form--label-right\">\n                                        <div className=\"kt-portlet__body\">\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Devise <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <Select\n                                                        isClearable\n                                                        value={currency}\n                                                        placeholder={\"Veillez selectioner la devise\"}\n                                                        onChange={onChangeCurrency}\n                                                        options={listCurrency}\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Nom <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <input\n                                                        disabled={true}\n                                                        id=\"name\"\n                                                        type=\"text\"\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        placeholder=\"\"\n                                                        value={data.name}\n                                                    />\n                                                    {\n                                                        error.name.length ? (\n                                                            error.name.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n\n                                            <div className={error.iso_code.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"iso_code\">ISO code <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <input\n                                                        disabled={true}\n                                                        id=\"iso_code\"\n                                                        type=\"text\"\n                                                        className={error.iso_code.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        placeholder=\"\"\n                                                        value={data.iso_code}\n                                                    />\n                                                    {\n                                                        error.iso_code.length ? (\n                                                            error.iso_code.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"kt-portlet__foot\">\n                                            <div className=\"kt-form__actions text-right\">\n                                                {\n                                                    !startRequest ? (\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Enregistrer</button>\n                                                    ) : (\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                                            Chargement...\n                                                        </button>\n                                                    )\n                                                }\n                                                {\n                                                    !startRequest ? (\n                                                        <Link to=\"/settings/currencies\" className=\"btn btn-secondary mx-2\">\n                                                            Quitter\n                                                        </Link>\n                                                    ) : (\n                                                        <Link to=\"/settings/currencies\" className=\"btn btn-secondary mx-2\" disabled>\n                                                            Quitter\n                                                        </Link>\n                                                    )\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        id ?\n            verifyPermission([\"update-currency\"], 'update-currency') ? (\n                printJsx()\n            ) : null\n            : verifyPermission([\"store-currency\"], 'store-currency') ? (\n                printJsx()\n            ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n    };\n};\n\nexport default connect(mapStateToProps)(CurrencyForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/AddChatsForm.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/AddMemberForm.jsx",["918"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    Link,\n    useParams\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"../../components/Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n} from \"../../../config/toastConfig\";\nimport appConfig from \"../../../config/appConfig\";\nimport Select from \"react-select\";\nimport {ERROR_401} from \"../../../config/errorPage\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nconst AddMemberForm = (props) => {\nconst {id}=useParams();\n    if (!verifyPermission(props.userPermissions, 'add-discussion-contributor'))\n        window.location.href = ERROR_401;\n\n    const defaultData = {\n        staff_id: [],\n    };\n    const defaultError = {\n        staff_id: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n    const [staffId, setStaffId] = useState([]);\n    const [staffIdData, setStaffIdData] = useState([]);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(`${appConfig.apiDomaine}/discussions/${id}/staff/create`)\n                .then(response => {\n                    console.log(response.data, \"PARTICIPANT\");\n                    let newStaffs=Object.values(response.data.staff).map(staff=>(\n                        {value:staff.id, label:staff.identite.lastname+\" \"+staff.identite.firstname}\n                    ));\n                    setStaffIdData(newStaffs);\n                })\n                .catch(error => {\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, []);\n\n    const onChangeClaim = (e,selected) => {\n        const newData = {...data};\n        newData.staff_id = e?e.map(sel => sel.value):\"\";\n        setStaffId(selected);\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            axios.post(appConfig.apiDomaine + `/discussions/${id}/staff`, data)\n                .then(response => {\n                    setStartRequest(false);\n                    // setError(defaultError);\n                    // setData(defaultData);\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    window.location.href=\"/chat\";\n                })\n                .catch(error => {\n                    setStartRequest(false);\n                    setError({...defaultError,...error.response.data.error});\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig)\n                })\n            ;\n        }\n    };\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Traitement\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/treatment/chat\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Chat\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    {\n                                        \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                \"Ajout des Participants\"\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-portlet__body\">\n                                        <div className=\"tab-content\">\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\n                                                <div className=\"kt-form kt-form--label-right\">\n                                                    <div className=\"kt-form__body\">\n                                                        <div className=\"kt-section kt-section--first\">\n                                                            <div className=\"kt-section__body\">\n                                                                <div\n                                                                    className={error.staff_id.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                           htmlFor=\"exampleSelect1\">Participants</label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                                        {staffIdData ? (\n                                                                            <Select\n                                                                                value={staffId}\n                                                                                onChange={(e) => onChangeClaim(e)}\n                                                                                options={staffIdData}\n                                                                                isMulti\n                                                                            />\n                                                                        ) : ''\n                                                                        }\n\n\n                                                                        {\n                                                                            error.staff_id.length ? (\n                                                                                error.staff_id.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : null\n                                                                        }\n                                                                    </div>\n                                                                </div>\n\n                                                            </div>\n                                                            <div className=\"kt-portlet__foot\">\n                                                                <div className=\"kt-form__actions text-right\">\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <button type=\"submit\"\n                                                                                    onClick={(e) => onSubmit(e)}\n                                                                                    className=\"btn btn-primary\">Ajouter</button>\n                                                                        ) : (\n                                                                            <button\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                                                type=\"button\" disabled>\n                                                                                Chargement...\n                                                                            </button>\n                                                                        )\n                                                                    }\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <Link to=\"/chat\"\n                                                                                  className=\"btn btn-secondary mx-2\">\n                                                                                Quitter\n                                                                            </Link>\n                                                                        ) : (\n                                                                            <Link to=\"/chat\"\n                                                                                  className=\"btn btn-secondary mx-2\"\n                                                                                  disabled>\n                                                                                Quitter\n                                                                            </Link>\n                                                                        )\n                                                                    }\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'add-discussion-contributor') ? (\n            printJsx()\n        ) : null\n    );\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    }\n};\n\nexport default connect(mapStateToProps)(AddMemberForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/MessageAPIForm.jsx",["919"],"import React, {useEffect, useState} from \"react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport Select from \"react-select\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\nimport appConfig from \"../../config/appConfig\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n    toastEditErrorMessageConfig,\n    toastEditSuccessMessageConfig\n} from \"../../config/toastConfig\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport InputRequire from \"./InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst MessageAPIForm = props => {\n    const {id} = useParams();\n    if (id) {\n        if (!verifyPermission(props.userPermissions, 'update-message-apis'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'store-message-apis'))\n            window.location.href = ERROR_401;\n    }\n\n    const defaultData = {\n        name: \"\",\n    };\n    const defaultError = {\n        name: [],\n        method: [],\n    };\n\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n    const [method, setMethod] = useState(null);\n    const [methods, setMethods] = useState([]);\n\n    const formatMethodOptions = ({methods}) => {\n        const methodOptions = [];\n        methods.map((method, index) => methodOptions.push({value: index, label: method}) );\n        return methodOptions;\n    };\n\n    const formatSelectMethod = (methods, option) => {\n        let formatOption;\n        formatOption = methods.filter(el => el.label === option);\n        return formatOption[0];\n    };\n\n    useEffect(() => {\n        async function fetchData () {\n            if (id) {\n                await axios.get(`${appConfig.apiDomaine}/message-apis/${id}/edit`)\n                    .then(response => {\n                        const newData = {\n                            name: response.data.messageApi.name,\n                        };\n                        setData(newData);\n                        setMethod(formatSelectMethod(formatMethodOptions(response.data), response.data.messageApi.method));\n                        setMethods(formatMethodOptions(response.data));\n                    })\n                    .catch(error => {\n                        console.log(\"Something is wrong\");\n                    })\n                ;\n            } else {\n                await axios.get(`${appConfig.apiDomaine}/message-apis/create`)\n                    .then(({data}) => {\n                        setMethods(formatMethodOptions(data));\n                    })\n                    .catch(({response}) => {\n                        console.log(\"Something is wrong\");\n                    })\n                ;\n            }\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine, id]);\n\n    const onChangeName = (e) => {\n        const newData = {...data};\n        newData.name = e.target.value;\n        setData(newData);\n    };\n\n    const handleMethodChange = (selected) => {\n        setMethod(selected);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        const submitData = {name: data.name, method: method ? method.label : \"\"};\n        if (verifyTokenExpire()) {\n            if (id) {\n                axios.put(`${appConfig.apiDomaine}/message-apis/${id}`, submitData)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                    })\n                ;\n            } else {\n                axios.post(`${appConfig.apiDomaine}/message-apis`, submitData)\n                    .then(response => {\n                        setStartRequest(false);\n                        const oldMethod = method;\n                        let newMethods = [...methods];\n                        newMethods = newMethods.filter(el => el.label !== oldMethod.label );\n                        setMethod(null);\n                        setMethods(newMethods);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        redirectError401Page(errorRequest.response.data.code);\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/message-apis\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Message API\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    {\n                                        id ? \"Modification\" : \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                id ? \"Modification d'un méssage API\" : \"Ajout d'un méssage API\"\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-form kt-form--label-right\">\n                                        <div className=\"kt-portlet__body\">\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Méssage API <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <input\n                                                        id=\"name\"\n                                                        type=\"text\"\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        placeholder=\"Veillez entrer le nom du Méssage API\"\n                                                        value={data.name}\n                                                        onChange={(e) => onChangeName(e)}\n                                                    />\n                                                    {\n                                                        error.name.length ? (\n                                                            error.name.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n\n                                            <div className={error.method.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Méthode <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <Select\n                                                        isClearable\n                                                        value={method}\n                                                        placeholder=\"Veillez selectionner la méthod\"\n                                                        onChange={handleMethodChange}\n                                                        options={methods}\n                                                    />\n                                                    {\n                                                        error.method.length ? (\n                                                            error.method.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"kt-portlet__foot\">\n                                            <div className=\"kt-form__actions text-right\">\n                                                {\n                                                    !startRequest ? (\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\n                                                    ) : (\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                                            Chargement...\n                                                        </button>\n                                                    )\n                                                }\n                                                {\n                                                    !startRequest ? (\n                                                        <Link to=\"/settings/message-apis\" className=\"btn btn-secondary mx-2\">\n                                                            Quitter\n                                                        </Link>\n                                                    ) : (\n                                                        <Link to=\"/settings/message-apis\" className=\"btn btn-secondary mx-2\" disabled>\n                                                            Quitter\n                                                        </Link>\n                                                    )\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        id ?\n            verifyPermission(props.userPermissions, 'update-message-apis') ? (\n                printJsx()\n            ) : null\n            : verifyPermission(props.userPermissions, 'store-message-apis') ? (\n                printJsx()\n            ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n    };\n};\n\nexport default connect(mapStateToProps)(MessageAPIForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/InstitutionMessageApi.jsx",["920","921"],"import React, {useEffect, useState} from \"react\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport appConfig from \"../../config/appConfig\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastEditErrorMessageConfig,\n    toastEditSuccessMessageConfig, toastErrorMessageWithParameterConfig,\n} from \"../../config/toastConfig\";\nimport {Link, useParams} from \"react-router-dom\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport Select from \"react-select\";\nimport {debug} from \"../../helpers/function\";\nimport InputRequire from \"../components/InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst InstitutionMessageApi = props => {\n    const {id} = useParams();\n    if (id) {\n        if (!verifyPermission(props.userPermissions, 'update-institution-message-api'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'update-my-institution-message-api'))\n            window.location.href = ERROR_401;\n    }\n\n    const [defaultData, setDefaultData] = useState({});\n    const [defaultError, setDefaultError] = useState({});\n\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n    const [messageApis, setMessageApis] = useState([]);\n    const [messageApi, setMessageApi] = useState(null);\n    const [editData, setEditData] = useState(null);\n\n    const formatMessageApiOptions = (messageApis) => {\n        const messageApiOptions = [];\n        messageApis.map(messageApi => messageApiOptions.push({value: messageApi.id, label: messageApi.method, params: messageApi.params}));\n        return messageApiOptions;\n    };\n\n    const formatState = (params, paramData = null) => {\n        const newState = {};\n        const newError = {};\n        console.log(paramData,\"PARAMS\");\n        params.map(param => {\n            if (param !== \"to\" && param !== \"text\") {\n                newState[param] = paramData ? paramData[param] : \"\";\n                newError[`params.${param}`] = [];\n            }\n        });\n        setData(newState);\n        setDefaultData(newState);\n        setError(newError);\n        setDefaultError(newError);\n    };\n\n    const initialState = (stateData) => {\n        setEditData({...stateData.params, value: stateData.message_api.id});\n        formatState(stateData.message_api.params, stateData.params);\n        setMessageApi({\n            value: stateData.message_api.id,\n            label: stateData.message_api.method,\n            params: stateData.message_api.params\n        });\n    };\n\n    useEffect(() => {\n        async function fetchData () {\n            if (id) {\n                await axios.get(`${appConfig.apiDomaine}/any/institutions/${id}/message-apis/create`)\n                    .then(({data}) => {\n                        setMessageApis(formatMessageApiOptions(data.messageApis));\n                        if (data.institutionMessageApi) {\n                            initialState(data.institutionMessageApi);\n                        }\n                    })\n                    .catch(error => {\n                        console.log(\"Something is wrong\");\n                    })\n                ;\n            } else {\n                await axios.get(`${appConfig.apiDomaine}/my/institutions/message-apis/create`)\n                    .then(({data}) => {\n                        debug(data, \"data\");\n                        setMessageApis(formatMessageApiOptions(data.messageApis));\n                        if (data.institutionMessageApi) {\n                            initialState(data.institutionMessageApi);\n                        }\n                    })\n                    .catch(({response}) => {\n                        console.log(\"Something is wrong\");\n                    })\n                ;\n            }\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, []);\n\n    const handleMessageApiChange = (selected) => {\n        if (selected)\n            formatState(selected.params, editData ? selected.value === editData.value ? editData : null : null);\n        else {\n            setData({});\n            setDefaultData({});\n            setError({});\n            setDefaultError({});\n        }\n        setMessageApi(selected);\n    };\n\n    const handleChange = (e, param) => {\n        const newData = {...data};\n        newData[param] = e.target.value;\n        setData(newData);\n    };\n\n    const executeSave = (url, saveData) => {\n        if (verifyTokenExpire()) {\n            axios.post(url, saveData)\n                .then(() => {\n                    setStartRequest(false);\n                    setError(defaultError);\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                })\n                .catch(errorRequest => {\n                    setStartRequest(false);\n                    setError({...defaultError, ...errorRequest.response.data.error});\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                })\n            ;\n        }\n    };\n\n    const saveData = (e) => {\n        e.preventDefault();\n        const sendData = {\n            \"message_api_id\": messageApi ? messageApi.value : \"\",\n            \"params\": data\n        };\n        debug(!sendData.message_api_id.length, \"sendData\");\n        if (sendData.message_api_id.length) {\n            setStartRequest(true);\n            if (id)\n                executeSave(`${appConfig.apiDomaine}/any/institutions/${id}/message-apis`, sendData);\n            else\n                executeSave(`${appConfig.apiDomaine}/my/institutions/message-apis`, sendData);\n        } else\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Veillez renseigner les informations\"));\n    };\n\n\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                    Fournisseur SMS\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            Modification Fournisseur SMS\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-form kt-form--label-right\">\n                                        <div className=\"kt-portlet__body\">\n\n                                            <div className={\"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Fournisseur SMS <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <Select\n                                                        isClearable\n                                                        value={messageApi}\n                                                        placeholder=\"oceanique\"\n                                                        onChange={handleMessageApiChange}\n                                                        options={messageApis}\n                                                    />\n                                                </div>\n                                            </div>\n\n                                            {\n                                                Object.keys(error).length ? (\n                                                    Object.keys(data).map((param, index) => (\n                                                        <div key={index} className={ error[Object.keys(error)[index]].length ? \"form-group row validated\" : \"form-group row\"}>\n                                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={Object.keys(data)[index]}>{Object.keys(data)[index]} <InputRequire/></label>\n                                                            <div className=\"col-lg-9 col-xl-6\">\n                                                                <input\n                                                                    id={Object.keys(data)[index]}\n                                                                    type={Object.keys(data)[index] === \"password\" ? \"password\" : \"text\"}\n                                                                    className={error[Object.keys(error)[index]].length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                    placeholder={Object.keys(data)[index]}\n                                                                    value={data[Object.keys(data)[index]]}\n                                                                    onChange={(e) => handleChange(e, param)}\n                                                                />\n                                                                {\n                                                                    error[Object.keys(error)[index]].length ? (\n                                                                        error[Object.keys(error)[index]].map((error, index) => (\n                                                                            <div key={index} className=\"invalid-feedback\">\n                                                                                {error}\n                                                                            </div>\n                                                                        ))\n                                                                    ) : null\n                                                                }\n                                                            </div>\n                                                        </div>\n                                                    ))\n                                                ) : null\n                                            }\n                                        </div>\n                                        <div className=\"kt-portlet__foot\">\n                                            <div className=\"kt-form__actions text-right\">\n                                                {\n                                                    !startRequest ? (\n                                                        <button type=\"submit\" onClick={(e) => saveData(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\n                                                    ) : (\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                                            Chargement...\n                                                        </button>\n                                                    )\n                                                }\n                                                {\n                                                    !startRequest ? (\n                                                        <Link to=\"/settings/institution\" className=\"btn btn-secondary mx-2\">\n                                                            Quitter\n                                                        </Link>\n                                                    ) : (\n                                                        <Link to=\"/settings/institution\" className=\"btn btn-secondary mx-2\" disabled>\n                                                            Quitter\n                                                        </Link>\n                                                    )\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        id ?\n            verifyPermission(props.userPermissions, 'update-institution-message-api') ? (\n                printJsx()\n            ) : null\n            : verifyPermission(props.userPermissions, 'update-my-institution-message-api') ? (\n                printJsx()\n            ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(InstitutionMessageApi);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Position.jsx",["922"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\"\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst Position = (props) => {\n    if (!verifyPermission(props.userPermissions, \"list-position\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [positions, setPositions] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData () {\n            await axios.get(`${appConfig.apiDomaine}/positions`)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setPositions(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newPositions = [...positions];\n        newPositions = newPositions.filter(el => (\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0\n        ));\n\n        return newPositions;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(positions.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(positions.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(positions.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(positions.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(positions.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                positions.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                positions.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deletePosition = (positionId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (verifyTokenExpire()) {\n                    if (result.value) {\n                        axios.delete(`${appConfig.apiDomaine}/positions/${positionId}`)\n                            .then(response => {\n                                const newPositions = [...positions];\n                                newPositions.splice(index, 1);\n                                setPositions(newPositions);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newPositions.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newPositions.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (position, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{position.name[\"fr\"]}</td>\n                <td>\n                    {\n                        verifyPermission(props.userPermissions, 'update-position') ? (\n                            <Link to={`/settings/positions/${position.id}/edit`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                        ) : null\n                    }\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-position') ? (\n                            <button\n                                onClick={(e) => deletePosition(position.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, \"list-position\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Fonctions\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable information={\"Liste des fonctions occupés\"}/>\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={\"store-position\"}\n                            title={\"Fonctions\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/positions/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\"><label>\n                                                    Recherche:\n                                                    <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                </label>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        positions.length ? (\n                                                            showList.length ? (\n                                                                showList.map((position, index) => (\n                                                                    printBodyTable(position, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {positions.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(Position);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/CategoryFAQs.jsx",["923","924","925","926","927","928"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {connect} from \"react-redux\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst CategoryFAQs = (props) => {\n    document.title = \"Satis client - Paramètre Categorie FAQs\";\n\n    if (!verifyPermission(props.userPermissions, \"list-faq-category\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [categoryFaqs, setCategoryFaqs] = useState(undefined);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(10);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine+\"/faq-categories\")\n                .then(response => {\n                    setLoad(false);\n                    setCategoryFaqs(response.data);\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, []);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newCategoryfaqs = [...categoryFaqs];\n        newCategoryfaqs = newCategoryfaqs.filter(el => (\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\n            getLowerCaseString(el.slug[\"fr\"]).indexOf(value) >= 0\n        ));\n\n        return newCategoryfaqs;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(categoryFaqs.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(categoryFaqs.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(categoryFaqs.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(categoryFaqs.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(categoryFaqs.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                categoryFaqs.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                categoryFaqs.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteCategoryFaqs = (categoryId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (verifyTokenExpire()) {\n                    if (result.value) {\n                        axios.delete(appConfig.apiDomaine+`/faq-categories/${categoryId}`)\n                            .then(response => {\n                                console.log(response, \"OK\");\n                                const newCategory = [setCategoryFaqs];\n                                newCategory.splice(index, 1);\n                                setCategoryFaqs(newCategory);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newCategory.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newCategory.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (category, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{category.name.fr}</td>\n                <td >{category.slug.fr}</td>\n                <td className=\"d-flex justify-content-center\">\n                    <Link to={`/settings/faqs/category/edit/${category.id}`}\n                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                          title=\"Modifier\">\n                        <i className=\"la la-edit\"/>\n                    </Link>\n\n                </td>\n            </tr>\n        )\n    };\n\n    return (\n        verifyPermission(props.userPermissions, \"list-faq-category\") ? (\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            Paramètres\n                        </h3>\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\n                        <div className=\"kt-subheader__breadcrumbs\">\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                FAQs\n                            </a>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                    Categorie FAQs\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                <InfirmationTable\n                    information={\"Liste des catégories de FAQs\"}/>\n\n                <div className=\"kt-portlet\">\n\n                    <HeaderTablePage\n                        addPermission={\"store-faq-category\"}\n                        title={\"Catégorie FAQ\"}\n                        addText={\"Ajouter une Catégorie FAQ\"}\n                        addLink={\"/settings/faqs/category/add\"}\n                    />\n\n                    {\n                        load ? (\n                            <LoadingTable/>\n                        ) : (\n                            <div className=\"kt-portlet__body\">\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-6 text-left\">\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                <label>\n                                                    Recherche:\n                                                    <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)}\n                                                           className=\"form-control form-control-sm\" placeholder=\"\"\n                                                           aria-controls=\"kt_table_1\"/>\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12\">\n                                            <table\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                style={{ width: \"952px\" }}>\n                                                <thead>\n                                                <tr role=\"row\">\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{ width: \"150px\" }}\n                                                        aria-label=\"Country: activate to sort column ascending\">Libellé\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{ width: \"200px\" }}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Slug\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                        Action\n                                                    </th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                {\n                                                    categoryFaqs?\n                                                        categoryFaqs.length ? (\n                                                        showList.length ? (\n                                                            showList.map((category, index) => (\n                                                                printBodyTable(category, index)\n                                                            ))\n                                                        ) : (\n                                                            <EmptyTable search={true}/>\n                                                        )\n                                                    ) : (\n                                                        <EmptyTable/>\n                                                    ):null\n                                                }\n                                                </tbody>\n                                                <tfoot>\n                                                <tr/>\n                                                </tfoot>\n                                            </table>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12 col-md-5\">\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                 aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {categoryFaqs?categoryFaqs.length:0} données\n                                            </div>\n                                        </div>\n                                        {\n                                            showList.length ? (\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                    <Pagination\n                                                        numberPerPage={numberPerPage}\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\n                                                        activeNumberPage={activeNumberPage}\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                        pages={pages}\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\n                                                        numberPage={numberPage}\n                                                        onClickNextPage={e => onClickNextPage(e)}\n                                                    />\n                                                </div>\n                                            ) : null\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n        ): null\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(CategoryFAQs);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/UnitTypeForm.jsx",["929"],"import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n    toastEditErrorMessageConfig,\n    toastEditSuccessMessageConfig\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport InputRequire from \"./InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst UnitTypeForm = (props) => {\n    const {id} = useParams();\n    if (id) {\n        if (!verifyPermission(props.userPermissions, 'update-unit-type'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'store-unit-type'))\n            window.location.href = ERROR_401;\n    }\n    const defaultData = {\n        name: \"\",\n        can_be_target: false,\n        can_treat: false,\n        description: \"\",\n    };\n    const defaultError = {\n        name: [],\n        can_be_target: [],\n        can_treat: [],\n        description: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n        async function fetchData () {\n            if (id) {\n                await axios.get(`${appConfig.apiDomaine}/unit-types/${id}/edit`)\n                    .then(({data}) => {\n                        const newData = {\n                            name: data.unitType.name ? data.unitType.name.fr : \"\",\n                            can_be_target: data.unitType.can_be_target === 1,\n                            can_treat: data.unitType.can_treat === 1,\n                            description: data.unitType.description ? data.unitType.description.fr : \"\",\n                        };\n                        setData(newData);\n                    })\n                    .catch(error => {\n                        console.log(\"Something is wrong\");\n                    })\n                ;\n            }\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [id, appConfig.apiDomaine]);\n\n    const onChangeName = (e) => {\n        const newData = {...data};\n        newData.name = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeDescription = (e) => {\n        const newData = {...data};\n        newData.description = e.target.value;\n        setData(newData);\n    };\n\n    const handleCanBeTargetChange = e => {\n        const newData = {...data, can_be_target: e.target.checked};\n        setData(newData);\n    };\n\n    const handleCanTreatChange = e => {\n        const newData = {...data, can_treat: e.target.checked};\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            if (id) {\n                axios.put(`${appConfig.apiDomaine}/unit-types/${id}`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                    })\n                ;\n            } else {\n                axios.post(`${appConfig.apiDomaine}/unit-types`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        redirectError401Page(errorRequest.response.data.code);\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/unit_type\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Type d'unité\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    {\n                                        id ? \"Modification\" : \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                id ? \"Modification de type d'unité\" : \"Ajout d'un type d'unité\"\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-form kt-form--label-right\">\n                                        <div className=\"kt-portlet__body\">\n                                            <div className={error.can_be_target.length || error.can_treat.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Unité <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <div className=\"kt-checkbox-inline\">\n                                                        <label className=\"kt-checkbox\">\n                                                            <input type=\"checkbox\" checked={data.can_be_target} onChange={handleCanBeTargetChange}/> Peut-être visé par une réclamation ?\n                                                            <span/>\n                                                            {\n                                                                error.can_be_target.length ? (\n                                                                    error.can_be_target.map((error, index) => (\n                                                                        <div key={index} className=\"invalid-feedback\">\n                                                                            {error}\n                                                                        </div>\n                                                                    ))\n                                                                ) : null\n                                                            }\n                                                        </label>\n                                                        <label className=\"kt-checkbox\">\n                                                            <input type=\"checkbox\" checked={data.can_treat} onChange={handleCanTreatChange}/> Peut résoudre une réclamation ?\n                                                            <span/>\n                                                            {\n                                                                error.can_treat.length ? (\n                                                                    error.can_treat.map((error, index) => (\n                                                                        <div key={index} className=\"invalid-feedback\">\n                                                                            {error}\n                                                                        </div>\n                                                                    ))\n                                                                ) : null\n                                                            }\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Unité <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <input\n                                                        id=\"name\"\n                                                        type=\"text\"\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        placeholder=\"Veillez entrer le nom du type d'unité\"\n                                                        value={data.name}\n                                                        onChange={(e) => onChangeName(e)}\n                                                    />\n                                                    {\n                                                        error.name.length ? (\n                                                            error.name.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n\n                                            <div className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description</label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                <textarea\n                                                    id=\"description\"\n                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez entrer la description\"\n                                                    cols=\"30\"\n                                                    rows=\"5\"\n                                                    value={data.description}\n                                                    onChange={(e) => onChangeDescription(e)}\n                                                />\n                                                    {\n                                                        error.description.length ? (\n                                                            error.description.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"kt-portlet__foot\">\n                                            <div className=\"kt-form__actions text-right\">\n                                                {\n                                                    !startRequest ? (\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Envoyer</button>\n                                                    ) : (\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                                            Chargement...\n                                                        </button>\n                                                    )\n                                                }\n                                                {\n                                                    !startRequest ? (\n                                                        <Link to=\"/settings/unit_type\" className=\"btn btn-secondary mx-2\">\n                                                            Quitter\n                                                        </Link>\n                                                    ) : (\n                                                        <Link to=\"/settings/unit_type\" className=\"btn btn-secondary mx-2\" disabled>\n                                                            Quitter\n                                                        </Link>\n                                                    )\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        id ?\n            verifyPermission(props.userPermissions, 'update-unit-type') ? (\n                printJsx()\n            ) : null\n        : verifyPermission(props.userPermissions, 'store-unit-type') ? (\n                printJsx()\n            ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n    };\n};\n\nexport default connect(mapStateToProps)(UnitTypeForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/PerformanceIndicatorForm.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimList.jsx",["930"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\"\nimport {verifyPermission} from \"../../helpers/permission\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport Pagination from \"../components/Pagination\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport axios from \"axios\";\nimport appConfig from \"../../config/appConfig\";\nimport {filterDataTableBySearchValue, forceRound, formatDateToTimeStampte, loadCss} from \"../../helpers/function\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst ClaimList = (props) => {\n    if (!verifyPermission(props.userPermissions, \"list-claim-awaiting-treatment\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [claims, setClaims] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(10);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [search, setSearch] = useState(false);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData () {\n            axios.get(`${appConfig.apiDomaine}/claim-awaiting-treatment`)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/numberPerPage));\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setClaims(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, []);\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n        } else {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n            setSearch(false);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(claims.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(claims.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                claims.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                claims.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (claim, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{claim.reference}</td>\n                <td>{`${claim.claimer.lastname} ${claim.claimer.firstname}`}</td>\n                <td>{formatDateToTimeStampte(claim.created_at)}</td>\n                <td>{claim.claim_object.name[\"fr\"]}</td>\n                {/*<td>{claim.active_treatment.responsible_staff?`${claim.active_treatment.responsible_staff.identite.lastname} ${claim.active_treatment.responsible_staff.identite.firstname}`:\"\"}</td>*/}\n                <td>{claim.institution_targeted.name}</td>\n                {/*<td>{claim.unit_targeted_id ? claim.unit_targeted.name[\"fr\"]  : \"-\"}</td>*/}\n                {\n                    verifyPermission(props.userPermissions, \"assignment-claim-awaiting-treatment\") ? (\n                        <td>\n                            <a href={`/process/claim-list-detail/${claim.id}/detail`}\n                               className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                               title=\"Détail\">\n                                <i className=\"la la-eye\"/>\n                            </a>\n                        </td>\n                    ) : <td/>\n                }\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-claim-awaiting-treatment') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Processus\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Traitement\n                                </a>\n                            </div>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Liste des réclamations\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable information={\"Cette page vous présente la liste des réclamations transférées à votre unité et qui sont en attente d'affectetion\"}/>\n\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            title={\"Liste des réclamations\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Référence\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Date de réception\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Objet\n                                                        </th>\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"*/}\n                                                        {/*    colSpan=\"1\" style={{ width: \"70.25px\" }}*/}\n                                                        {/*    aria-label=\"Country: activate to sort column ascending\">Agent*/}\n                                                        {/*</th>*/}\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Institution concernée\n                                                        </th>\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"*/}\n                                                        {/*    colSpan=\"1\" style={{ width: \"70.25px\" }}*/}\n                                                        {/*    aria-label=\"Country: activate to sort column ascending\">Unité*/}\n                                                        {/*</th>*/}\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        claims.length ? (\n                                                            search ? (\n                                                                claims.map((claim, index) => (\n                                                                    printBodyTable(claim, index)\n                                                                ))\n                                                            ) : (\n                                                                showList.map((claim, index) => (\n                                                                    printBodyTable(claim, index)\n                                                                ))\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Date de réception</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objet </th>\n                                                        {/*<th rowSpan=\"1\" colSpan=\"1\">Agent</th>*/}\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Institution concernée</th>\n                                                        {/*<th rowSpan=\"1\" colSpan=\"1\">Unité</th>*/}\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {claims.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                !search ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimList);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/SatisfactionMeasure.jsx",["931"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {loadCss, filterDataTableBySearchValue, forceRound} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        list:`${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\n    },\n    MACRO: {\n        holding: {\n            list:`${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\n        },\n        filial: {\n            list:`${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\n        }\n    },\n    HUB: {\n        plan: \"HUB\",\n        list:`${appConfig.apiDomaine}/any/claim-satisfaction-measured`,\n    }\n};\n\nconst SatisfactionMeasure = (props) => {\n    document.title = \"Satis client - Mesure satisfaction\";\n\n    if (!(verifyPermission(props.userPermissions, 'list-satisfaction-measured-my-claim') ||\n        verifyPermission(props.userPermissions, \"list-satisfaction-measured-any-claim\")))\n        window.location.href = ERROR_401;\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'list-satisfaction-measured-my-claim'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'list-satisfaction-measured-my-claim'))\n            endPoint = endPointConfig[props.plan].filial\n    } else\n        endPoint = endPointConfig[props.plan];\n\n    const [load, setLoad] = useState(true);\n    const [satisfactionMeasure, setSatisfactionMeasure] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(5);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [search, setSearch] = useState(false);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(endPoint.list)\n                .then(response => {\n                    setLoad(false);\n                    setSatisfactionMeasure(response.data);\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, []);\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n        } else {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n            setSearch(false);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(satisfactionMeasure.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(satisfactionMeasure.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(satisfactionMeasure.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                satisfactionMeasure.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                satisfactionMeasure.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (measure, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{measure.reference === null ? \"\" : measure.reference}</td>\n                <td>{`${measure.claimer.lastname} ${measure.claimer.firstname}`}</td>\n                <td>{measure.description === null ? \"\" : measure.description}</td>\n                <td>{measure.active_treatment.solution === null ? \"\" : measure.active_treatment.solution}</td>\n                {\n                    verifyPermission(props.userPermissions, \"update-satisfaction-measured-my-claim\") ||\n                    verifyPermission(props.userPermissions, \"update-satisfaction-measured-any-claim\") ? (\n                        <td style={{textAlign: 'center'}}>\n                            <a href={`/process/claim_measure/${measure.id}/detail`}\n                               className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                               title=\"Détail\">\n                                <i className=\"la la-eye\"/>\n                            </a>\n\n                        </td>\n                    ): null\n                }\n\n            </tr>\n        )\n    };\n\n\n    return (\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            Processus\n                        </h3>\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\n                        <div className=\"kt-subheader__breadcrumbs\">\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                className=\"flaticon2-shelter\"/></a>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\n                               className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\n                                Traitement\n                            </a>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Mesure de Satisfaction\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                <InfirmationTable information={\"La liste des réclamations à mésurer la satisfaction\"}/>\n\n                <div className=\"kt-portlet\">\n\n                    <HeaderTablePage\n                        title={\"Mesure de Satisfaction\"}\n                    />\n                    {\n                        load ? (\n                            <LoadingTable/>\n                        ) : (\n                            <div className=\"kt-portlet__body\">\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-6 text-left\">\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                <label>\n                                                    Rechercher:\n                                                    <input id=\"myInput\" type=\"text\"\n                                                           onKeyUp={(e) => searchElement(e)}\n                                                           className=\"form-control form-control-sm\"\n                                                           placeholder=\"\"\n                                                           aria-controls=\"kt_table_1\"/>\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12\">\n                                            <table\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                style={{width: \"952px\"}}>\n                                                <thead>\n                                                <tr role=\"row\">\n\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"50px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Référence\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"100px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Réclamant\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"150px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Description\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"150px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Solutions proposées\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                        aria-label=\"Type: activate to sort column ascending\">\n                                                        Action\n                                                    </th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                {\n                                                    satisfactionMeasure.length ? (\n                                                        search ? (\n                                                            satisfactionMeasure.map((measure, index) => (\n                                                                printBodyTable(measure, index)\n                                                            ))\n                                                        ) : (\n                                                            showList.map((measure, index) => (\n                                                                printBodyTable(measure, index)\n                                                            ))\n                                                        )\n                                                    ) : (\n                                                        <EmptyTable/>\n                                                    )\n                                                }\n                                                </tbody>\n                                                <tfoot>\n                                                <tr>\n\n                                                </tr>\n                                                </tfoot>\n                                            </table>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12 col-md-5\">\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                 aria-live=\"polite\">Affichage de 1\n                                                à {numberPerPage} sur {satisfactionMeasure.length} données\n                                            </div>\n                                        </div>\n                                        {\n                                            !search ? (\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                    <Pagination\n                                                        numberPerPage={numberPerPage}\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\n                                                        activeNumberPage={activeNumberPage}\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                        pages={pages}\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\n                                                        numberPage={numberPage}\n                                                        onClickNextPage={e => onClickNextPage(e)}\n                                                    />\n                                                </div>\n                                            ) : null\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n\n    )\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan,\n    };\n};\n\nexport default connect(mapStateToProps)(SatisfactionMeasure);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Mail.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/PerformanceIndicator.jsx",["932"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst PerformanceIndicator = (props) => {\n    if (!verifyPermission(props.userPermissions, \"list-performance-indicator\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [performances, setPerformances] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n       async function fetchData () {\n           await axios.get(`${appConfig.apiDomaine}/performance-indicators`)\n               .then(response => {\n                   setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                   setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                   setPerformances(response.data);\n                   setLoad(false);\n               })\n               .catch(error => {\n                   setLoad(false);\n                   console.log(\"Something is wrong\");\n               })\n           ;\n       }\n       if (verifyTokenExpire())\n           fetchData();\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newPerformances = [...performances];\n        newPerformances = newPerformances.filter(el => (\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\n            getLowerCaseString(el.description[\"fr\"]).indexOf(value) >= 0 ||\n            getLowerCaseString(el.value).indexOf(value) >= 0 ||\n            getLowerCaseString(el.mesure_unit).indexOf(value) >= 0\n        ));\n\n        return newPerformances;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(performances.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(performances.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(performances.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(performances.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(performances.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                performances.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                performances.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deletePerformanceIndicator = (performanceId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (result.value) {\n                    if (verifyTokenExpire()) {\n                        axios.delete(`${appConfig.apiDomaine}/performance-indicators/${performanceId}`)\n                            .then(response => {\n                                const newPerformances = [...performances];\n                                newPerformances.splice(index, 1);\n                                setPerformances(newPerformances);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newPerformances.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newPerformances.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (performance, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{performance.name[\"fr\"]}</td>\n                <td style={{ textOverflow: \"ellipsis\", width: \"300px\" }}>{performance.description[\"fr\"]}</td>\n                <td>{performance.value}</td>\n                <td>{performance.mesure_unit}</td>\n                <td>\n                    {\n                        verifyPermission(props.userPermissions, \"update-performance-indicator\") ? (\n                            <Link to={`/settings/performance_indicator/${performance.id}/edit`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                        ) : null\n                    }\n                    {\n                        verifyPermission(props.userPermissions, \"destroy-performance-indicator\") ? (\n                            <button\n                                onClick={(e) => deletePerformanceIndicator(performance.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, \"list-performance-indicator\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#/icon\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#indicatorPerformance\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Indicateur de performance\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={\"store-performance-indicator\"}\n                            title={\"Indicateur de performance\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/performance_indicator/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"250px\" }}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"20px\" }}\n                                                            aria-label=\"Ship Address: activate to sort column ascending\">Value\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"15px\" }}\n                                                            aria-label=\"Company Agent: activate to sort column ascending\">Unité de mésure\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        performances.length ? (\n                                                            showList.length ? (\n                                                                showList.map((performance, index) => (\n                                                                    printBodyTable(performance, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Valeur</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Unité de mésure</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {performances.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(PerformanceIndicator);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/UnitType.jsx",["933"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastDeleteErrorMessageConfig,\n    toastDeleteSuccessMessageConfig, toastErrorMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst UnitType = (props) => {\n    document.title = \"Satis client - Paramètre type d'unité\";\n\n    if (!verifyPermission(props.userPermissions, \"list-unit-type\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [unitTypes, setUnitTypes] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData () {\n            await axios.get(`${appConfig.apiDomaine}/unit-types`)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setUnitTypes(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newUnitTypes = [...unitTypes];\n        newUnitTypes = newUnitTypes.filter(el => (\n            getLowerCaseString(el.name ? el.name[\"fr\"] : \"\").indexOf(value) >= 0 ||\n            getLowerCaseString(el.can_be_target ? \"Oui\" : \"Non\").indexOf(value) >= 0 ||\n            getLowerCaseString(el.can_treat ? \"Oui\" : \"Non\").indexOf(value) >= 0 ||\n            getLowerCaseString(el.description ? el.description[\"fr\"] : \"\").indexOf(value) >= 0\n        ));\n\n        return newUnitTypes;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(unitTypes.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(unitTypes.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(unitTypes.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(unitTypes.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(unitTypes.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                unitTypes.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                unitTypes.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteUnitType = (unitTypeId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (result.value) {\n                    if (verifyTokenExpire()) {\n                        axios.delete(`${appConfig.apiDomaine}/unit-types/${unitTypeId}`)\n                            .then(response => {\n                                const newUnitTypes = [...unitTypes];\n                                newUnitTypes.splice(index, 1);\n                                setUnitTypes(newUnitTypes);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newUnitTypes.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newUnitTypes.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                if (error.response.data.error)\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\n                                else\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (unitType, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{unitType.name ? unitType.name[\"fr\"] : \"-\"}</td>\n                <td>{unitType.can_be_target ? \"Oui\" : \"Non\"}</td>\n                <td>{unitType.can_treat ? \"Oui\" : \"Non\"}</td>\n                <td style={{ textOverflow: \"ellipsis\", width: \"300px\" }}>{unitType.description ? unitType.description[\"fr\"] : \"-\"}</td>\n                <td>\n                    {\n                        verifyPermission(props.userPermissions, 'update-unit-type') ? (\n                            <Link to={`/settings/unit_type/${unitType.id}/edit`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                        ) : null\n                    }\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-unit-type') ? (\n                            <button\n                                onClick={(e) => deleteUnitType(unitType.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-unit-type') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Type d'unité\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={\"store-unit-type\"}\n                            title={\"Type d'unité\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/unit_type/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Peut-être visé par une réclamation\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Peut traité une réclamation\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"300px\" }}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        unitTypes.length ? (\n                                                            showList.length ? (\n                                                                showList.map((unitType, index) => (\n                                                                    printBodyTable(unitType, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Peut-être visé par une réclamation</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Peut traité une réclamation</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {unitTypes.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(UnitType);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimCategory.jsx",["934"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastDeleteErrorMessageConfig,\n    toastDeleteSuccessMessageConfig, toastErrorMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport ExportButton from \"../components/ExportButton\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst ClaimCategory = (props) => {\n    if (!verifyPermission(props.userPermissions, 'list-claim-category'))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [claimCategories, setClaimCategories] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData () {\n            await axios.get(`${appConfig.apiDomaine}/claim-categories`)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setClaimCategories(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newClaimCategories = [...claimCategories];\n        newClaimCategories = newClaimCategories.filter(el => (\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0\n        ));\n\n        return newClaimCategories;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(claimCategories.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(claimCategories.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(claimCategories.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(claimCategories.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(claimCategories.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                claimCategories.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                claimCategories.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteClaimCategory = (claimCategoryId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (verifyTokenExpire()) {\n                    if (result.value) {\n                        axios.delete(`${appConfig.apiDomaine}/claim-categories/${claimCategoryId}`)\n                            .then(response => {\n                                const newClaimCategories = [...claimCategories];\n                                newClaimCategories.splice(index, 1);\n                                setClaimCategories(newClaimCategories);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newClaimCategories.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newClaimCategories.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                if (error.response.data.error)\n                                    ToastBottomEnd.fire(\n                                        toastErrorMessageWithParameterConfig(error.response.data.error)\n                                    );\n                                else\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (claimCategory, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{claimCategory.name[\"fr\"]}</td>\n                <td>\n                    {\n                        verifyPermission(props.userPermissions, 'update-claim-category') ? (\n                            <Link to={`/settings/claim_categories/${claimCategory.id}/edit`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                        ) : null\n                    }\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-claim-category') ? (\n                            <button\n                                onClick={(e) => deleteClaimCategory(claimCategory.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-claim-category') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Catégorie de réclamation\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={\"store-claim-category\"}\n                            title={\"Catégories de réclamation\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/claim_categories/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n\n                                            <ExportButton\n                                                downloadLink={`${appConfig.apiDomaine}/download-excel/categories`}\n                                                pageUrl={\"/settings/claim_category/import\"}\n                                            />\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        claimCategories.length ? (\n                                                            showList ? (\n                                                                showList.map((claimCategory, index) => (\n                                                                    printBodyTable(claimCategory, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {claimCategories.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions,\n        language: state.language.languageSelected\n    }\n};\n\nexport default connect(mapStateToProps)(ClaimCategory);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/FAQs.jsx",["935","936","937","938","939","940"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {connect} from \"react-redux\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst FAQs = (props) => {\n    document.title = \"Satis client - Paramètre FAQs\";\n\n    if (!verifyPermission(props.userPermissions, \"list-faq\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [faqs, setFaqs] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(10);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + \"/faqs\")\n                .then(response => {\n                    setLoad(false);\n                    setFaqs(response.data);\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n\n    }, []);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newFaqs = [...faqs];\n        newFaqs = newFaqs.filter(el => (\n            getLowerCaseString(el.faq_category.name[\"fr\"]).indexOf(value) >= 0 ||\n            getLowerCaseString(el.question[\"fr\"]).indexOf(value) >= 0 ||\n            getLowerCaseString(el.answer[\"fr\"]).indexOf(value) >= 0\n        ));\n\n        return newFaqs;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(faqs.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(faqs.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(faqs.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(faqs.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(faqs.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                faqs.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                faqs.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteFaqs = (faqId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (result.value) {\n                    if (verifyTokenExpire()) {\n                        axios.delete(appConfig.apiDomaine + `/faqs/${faqId}`)\n                            .then(response => {\n                                console.log(response, \"OK\");\n                                const newFaq = [...faqs];\n                                newFaq.splice(index, 1);\n                                setFaqs(newFaq);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newFaq.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newFaq.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n\n                }\n            })\n        ;\n    };\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (faq, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{faq.faq_category.name.fr}</td>\n                <td>{faq.question.fr}</td>\n                <td>{faq.answer.fr}</td>\n                <td className='d-flex justify-content-center'>\n                    <Link to={`/settings/faqs/faq/edit/${faq.id}`}\n                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                          title=\"Modifier\">\n                        <i className=\"la la-edit\"/>\n                    </Link>\n\n                </td>\n            </tr>\n        )\n    };\n\n    return (\n        verifyPermission(props.userPermissions, \"list-faq\")?(\n                <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                    <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                        <div className=\"kt-container  kt-container--fluid \">\n                            <div className=\"kt-subheader__main\">\n                                <h3 className=\"kt-subheader__title\">\n                                    Paramètres\n                                </h3>\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                    <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                        FAQs\n                                    </a>\n                                    <span className=\"kt-subheader__separator kt-hidden\"/>\n                                    <div className=\"kt-subheader__breadcrumbs\">\n                                        <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                        <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                        <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                            FAQ\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                        <InfirmationTable\n                            information={\"Liste de FAQs\"}/>\n\n                        <div className=\"kt-portlet\">\n                            <HeaderTablePage\n                                addPermission={\"store-faq\"}\n                                title={\"FAQs\"}\n                                addText={\"Ajouter un FAQs\"}\n                                addLink={\"/settings/faqs/faq/add\"}\n                            />\n\n                            {\n                                load ? (\n                                    <LoadingTable/>\n                                ) : (\n                                    <div className=\"kt-portlet__body\">\n                                        <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-6 text-left\">\n                                                    <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                        <label>\n                                                            Recherche:\n                                                            <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)}\n                                                                   className=\"form-control form-control-sm\" placeholder=\"\"\n                                                                   aria-controls=\"kt_table_1\"/>\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-12\">\n                                                    <table\n                                                        className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                        id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                        style={{width: \"952px\"}}>\n                                                        <thead>\n                                                        <tr role=\"row\">\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                                rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{width: \"100.25px\"}}\n                                                                aria-label=\"Country: activate to sort column ascending\">Catégorie\n                                                            </th>\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                                rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{width: \"150px\"}}\n                                                                aria-label=\"Ship City: activate to sort column ascending\">Question\n                                                            </th>\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                                rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{width: \"200px\"}}\n                                                                aria-label=\"Ship City: activate to sort column ascending\">Réponse\n                                                            </th>\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                                rowSpan=\"1\" colSpan=\"1\" style={{width: \"40.25px\"}}\n                                                                aria-label=\"Type: activate to sort column ascending\">\n                                                                Action\n                                                            </th>\n                                                        </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                        {\n                                                            faqs.length ? (\n                                                                showList.length ? (\n                                                                    showList.map((faq, index) => (\n                                                                        printBodyTable(faq, index)\n                                                                    ))\n                                                                ) : (\n                                                                    <EmptyTable search={true}/>\n                                                                )\n                                                            ) : (\n                                                                <EmptyTable/>\n                                                            )\n                                                        }\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-12 col-md-5\">\n                                                    <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                         aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {faqs.length} données\n                                                    </div>\n                                                </div>\n                                                {\n                                                    showList.length ? (\n                                                        <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                            <Pagination\n                                                                numberPerPage={numberPerPage}\n                                                                onChangeNumberPerPage={onChangeNumberPerPage}\n                                                                activeNumberPage={activeNumberPage}\n                                                                onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                                pages={pages}\n                                                                onClickPage={(e, number) => onClickPage(e, number)}\n                                                                numberPage={numberPage}\n                                                                onClickNextPage={e => onClickNextPage(e)}\n                                                            />\n                                                        </div>\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            ): null\n\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(FAQs);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/CategoryClient.jsx",["941"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst CategoryClient = (props) => {\n    document.title = \"Satis client - Paramètre categorie client\";\n    if (!verifyPermission(props.userPermissions, \"list-category-client\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [categoryClient, setCategoryClient] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(5);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + \"/category-clients\")\n                .then(response => {\n                    setLoad(false);\n                    setCategoryClient(response.data);\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    },[]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newCategoryClients = [...categoryClient];\n        newCategoryClients = newCategoryClients.filter(el => (\n            getLowerCaseString(el.name ? el.name[\"fr\"] : \"\").indexOf(value) >= 0 ||\n            getLowerCaseString(el.description ? el.description[\"fr\"] : \"\").indexOf(value) >= 0\n        ));\n\n        return newCategoryClients;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(categoryClient.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(categoryClient.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(categoryClient.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(categoryClient.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(categoryClient.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                categoryClient.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                categoryClient.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteCategoryClient = (categoryClientId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (result.value) {\n                    if (verifyTokenExpire()) {\n                        axios.delete(appConfig.apiDomaine + `/category-clients/${categoryClientId}`)\n                            .then(response => {\n                                const newCategory = [...categoryClient];\n                                newCategory.splice(index, 1);\n                                setCategoryClient(newCategory);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newCategory.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newCategory.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (category, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{category.name.fr===null?\"\":category.name.fr}</td>\n                <td>{category.description.fr===null?\"\":category.description.fr}</td>\n                <td style={{textAlign:'center'}}>\n                    {/*<Link to=\"/settings/clients/category/detail\"*/}\n                    {/*      className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"*/}\n                    {/*      title=\"Détail\">*/}\n                    {/*    <i className=\"la la-eye\"/>*/}\n                    {/*</Link>*/}\n\n                    {\n                        verifyPermission(props.userPermissions, 'show-category-client') ?\n                            <Link\n                                to={`/settings/clients/category/edit/${category.id}`}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                            : null\n                    }\n\n                    {\n                        verifyPermission(props.userPermissions, \"destroy-category-client\") ?\n                        <button\n                            onClick={(e) => deleteCategoryClient(category.id, index)}\n                            className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                            title=\"Supprimer\">\n                            <i className=\"la la-trash\"/>\n                        </button>\n                        : null\n                    }\n                </td>\n            </tr>\n        )\n    };\n\n    return (\n        verifyPermission(props.userPermissions, \"list-category-client\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Client\n                                </a>\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                        className=\"flaticon2-shelter\"/></a>\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\n                                       className=\"kt-subheader__breadcrumbs-link\">\n                                        Categorie Client\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable\n                        information={\"Liste des catégories client\"}/>\n\n                    <div className=\"kt-portlet\">\n\n                        <HeaderTablePage\n                            addPermission={\"store-category-client\"}\n                            title={\"Catégorie Client\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/clients/category/add\"}\n                        />\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\"\n                                                               onKeyUp={(e) => searchElement(e)}\n                                                               className=\"form-control form-control-sm\"\n                                                               placeholder=\"\"\n                                                               aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{width: \"952px\"}}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                            aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        categoryClient.length ? (\n                                                            showList.length ? (\n                                                                showList.map((category, index) => (\n                                                                    printBodyTable(category, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1\n                                                    à {numberPerPage} sur {categoryClient.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(CategoryClient);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/TypeClient.jsx",["942","943","944"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {filterDataTableBySearchValue, forceRound, loadCss, loadScript} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nconst TypeClient = (props) => {\n    document.title = \"Satis client - Paramètre Type client\";\n    if (!verifyPermission(props.userPermissions, \"list-type-client\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [typeClient, setTypeClient] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(10);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [search, setSearch] = useState(false);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + \"/type-clients\")\n                .then(response => {\n                    setLoad(false);\n                    setTypeClient(response.data);\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, []);\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n        } else {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n            setSearch(false);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(typeClient.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(typeClient.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(typeClient.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                typeClient.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                typeClient.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteTypeClient = (typeClientId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (result.value) {\n                    if (verifyTokenExpire()) {\n                        axios.delete(appConfig.apiDomaine + `/type-clients/${typeClientId}`)\n                            .then(response => {\n                                console.log(response, \"OK\");\n                                const newType = [...typeClient];\n                                newType.splice(index, 1);\n                                setTypeClient(newType);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newType.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newType.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (type, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{type.name.fr}</td>\n                <td>{type.description.fr}</td>\n                <td style={{textAlign:\"center\"}}>\n\n                    <Link to=\"/settings/clients/type/detail\"\n                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                          title=\"Détail\">\n                        <i className=\"la la-eye\"/>\n                    </Link>\n\n                    {\n                        verifyPermission(props.userPermissions, 'show-type-client')?\n                            <Link to={`/settings/clients/type/edit/${type.id}`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                            :\"\"\n                    }\n\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-type-client') ?\n                            <button\n                                onClick={(e) => deleteTypeClient(type.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                            : null\n                    }\n\n                </td>\n            </tr>\n        )\n    };\n\n    return (\n        verifyPermission(props.userPermissions, \"list-position\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                    Client\n                                </a>\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                        className=\"flaticon2-shelter\"/></a>\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\n                                       className=\"kt-subheader__breadcrumbs-link\">\n                                        Type Client\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable\n                        information={\"Liste des types client\"}/>\n\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={\"store-type-client\"}\n                            title={\"Type Client\"}\n                            addText={\"Ajouter un Type Client\"}\n                            addLink={\"/settings/clients/type/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\"\n                                                               onKeyUp={(e) => searchElement(e)}\n                                                               className=\"form-control form-control-sm\" placeholder=\"\"\n                                                               aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{width: \"952px\"}}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"200px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                            aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        typeClient.length ? (\n                                                            search ? (\n                                                                typeClient.map((type, index) => (\n                                                                    printBodyTable(type, index)\n                                                                ))\n                                                            ) : (\n                                                                showList.map((type, index) => (\n                                                                    printBodyTable(type, index)\n                                                                ))\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr></tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">\n                                                    {typeClient.length ?\n                                                        `Affichage de 1 à ${numberPerPage} sur ${typeClient.length} données`\n                                                        :\n                                                        \"Affichage de 0 page\"\n                                                    }\n\n                                                </div>\n                                            </div>\n                                            {\n                                                !search ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\nexport default connect(mapStateToProps)(TypeClient);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/SeverityLevel.jsx",["945","946","947"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastDeleteErrorMessageConfig,\n    toastDeleteSuccessMessageConfig, toastErrorMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        list: `${appConfig.apiDomaine}/severity-levels`,\n        destroy: unitId => `${appConfig.apiDomaine}/severity-levels/${unitId}`,\n    },\n    MACRO: {\n        plan: \"MACRO\",\n        list: `${appConfig.apiDomaine}/severity-levels`,\n        destroy: unitId => `${appConfig.apiDomaine}/severity-levels/${unitId}`,\n    },\n    HUB: {\n        plan: \"HUB\",\n        list: `${appConfig.apiDomaine}/severity-levels`,\n        destroy: unitId => `${appConfig.apiDomaine}/severity-levels/${unitId}`,\n    }\n};\n\nconst SeverityLevel = (props) => {\n    if (!verifyPermission(props.userPermissions, 'list-severity-level'))\n        window.location.href = ERROR_401;\n\n    const endPoint = endPointConfig[props.plan];\n\n    const [load, setLoad] = useState(true);\n    const [severityLevels, setSeverityLevels] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData () {\n            await axios.get(endPoint.list)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setSeverityLevels(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        fetchData();\n    }, [endPoint.list, NUMBER_ELEMENT_PER_PAGE]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newSeverityLeveles = [...severityLevels];\n        newSeverityLeveles = newSeverityLeveles.filter(el => (\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\n            getLowerCaseString(el.color ? `${el.color} ${el.color === \"#ffffff\" ? \" Blanc\" : \"\"}` : `-`).indexOf(value) >= 0 ||\n            getLowerCaseString(el.description ? el.description[\"fr\"] : \"\").indexOf(value) >= 0\n        ));\n\n        return newSeverityLeveles;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(severityLevels.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(severityLevels.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(severityLevels.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(severityLevels.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(severityLevels.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                severityLevels.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                severityLevels.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteSeverityLevel = (severityLevelId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (verifyTokenExpire()) {\n                    if (result.value) {\n                        axios.delete(endPoint.destroy(severityLevelId))\n                            .then(response => {\n                                const newSeverityLevels = [...severityLevels];\n                                newSeverityLevels.splice(index, 1);\n                                setSeverityLevels(newSeverityLevels);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newSeverityLevels.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newSeverityLevels.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                console.log(error.response.data);\n                                if (error.response.data.error)\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\n                                else\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (severityLevel, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{severityLevel.name[\"fr\"]}</td>\n                <td>\n                    <div className=\"p-2 text-center\" style={{backgroundColor: severityLevel.color, color: severityLevel.color === \"#ffffff\" ? \"black\" : \"white\"}}>\n                        {severityLevel.color ? `${severityLevel.color} ${severityLevel.color === \"#ffffff\" ? \" Blanc\" : ''}` : <strong style={{color: \"black\"}}>-</strong>}\n                    </div>\n                </td>\n                <td style={{ textOverflow: \"ellipsis\", width: \"300px\" }}>{severityLevel.description ? severityLevel.description[\"fr\"] : null}</td>\n                <td>\n                    {\n                        verifyPermission(props.userPermissions, 'update-severity-level') ? (\n                            <Link to={`/settings/severities/${severityLevel.id}/edit`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                        ) : null\n                    }\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-severity-level') ? (\n                            <button\n                                onClick={(e) => deleteSeverityLevel(severityLevel.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-severity-level') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Niveau de gravité\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={\"store-severity-level\"}\n                            title={\"Niveau de gravité\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/severities/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom du niveau\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Couleur\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"300px\" }}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        severityLevels.length ? (\n                                                            showList.length ? (\n                                                                showList.map((severityLevel, index) => (\n                                                                    printBodyTable(severityLevel, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom du niveau</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Couleur</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {severityLevels.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan\n    };\n};\n\nexport default connect(mapStateToProps)(SeverityLevel);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/ClaimObjectForm.jsx",["948"],"import React, {useState, useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n    toastEditErrorMessageConfig,\n    toastEditSuccessMessageConfig\n} from \"../../config/toastConfig\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport Select from \"react-select\";\nimport {formatSelectOption} from \"../../helpers/function\";\nimport appConfig from \"../../config/appConfig\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport InputRequire from \"./InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nconst ClaimObjectForm = (props) => {\n    const {id} = useParams();\n    if (id) {\n        if (!verifyPermission(props.userPermissions, 'update-claim-object'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'store-claim-object'))\n            window.location.href = ERROR_401;\n    }\n\n    const [claimCategories, setClaimCategories] = useState([]);\n    const [claimCategory, setClaimCategory] = useState(null);\n    const [severityLevels, setSeverityLevels] = useState([]);\n    const [severityLevel, setSeverityLevel] = useState(null);\n\n    const defaultData = {\n        name: \"\",\n        description: \"\",\n        claim_category_id: claimCategories.length ? claimCategories[0].id : \"\",\n        severity_levels_id: \"\",\n        time_limit: \"\",\n    };\n    const defaultError = {\n        name: [],\n        description: [],\n        claim_category_id: [],\n        severity_levels_id: [],\n        time_limit: []\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n        async function fetchData () {\n            if (id) {\n                await axios.get(`${appConfig.apiDomaine}/claim-objects/${id}/edit`)\n                    .then( response => {\n                        setClaimCategories(formatSelectOption(response.data.claimCategories, \"name\", \"fr\"));\n                        setSeverityLevels(formatSelectOption(response.data.severityLevels, \"name\", \"fr\"));\n                        const newData = {\n                            name: response.data.claimObject.name[\"fr\"],\n                            description: response.data.claimObject.description[\"fr\"],\n                            claim_category_id: response.data.claimObject.claim_category_id,\n                            severity_levels_id: response.data.claimObject.severity_levels_id === null ? \"\" : response.data.claimObject.severity_levels_id,\n                            time_limit: response.data.claimObject.time_limit === null ? 0 : response.data.claimObject.time_limit,\n                        };\n                        setData(newData);\n                        setClaimCategory({value: response.data.claimObject.claim_category_id, label: response.data.claimObject.claim_category.name[\"fr\"]});\n                        setSeverityLevel(\n                            response.data.claimObject.severity_levels_id === null ? {} : {value: response.data.claimObject.severity_levels_id, label: response.data.claimObject.severity_level.name[\"fr\"]}\n                        );\n                    })\n                    .catch(error => {\n                        console.log(\"Something is wrong\");\n                    })\n                ;\n            } else {\n                await axios.get(`${appConfig.apiDomaine}/claim-objects/create`)\n                    .then(response => {\n                        setClaimCategories(formatSelectOption(response.data.claimCategories, \"name\", \"fr\"));\n                        setSeverityLevels(formatSelectOption(response.data.severityLevels, \"name\", \"fr\"));\n                    })\n                    .catch(error => {\n                        console.log(\"something is wrong\");\n                    })\n                ;\n            }\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, []);\n\n    const onChangeName = (e) => {\n        const newData = {...data};\n        newData.name = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeDescription = (e) => {\n        const newData = {...data};\n        newData.description = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeClaimCategory = (selected) => {\n        const newData = {...data};\n        newData.claim_category_id = selected ? selected.value : \"\";\n        setClaimCategory(selected);\n        setData(newData);\n    };\n\n    const onChangeTimeLimit = (e) => {\n        const newData = {...data};\n        newData.time_limit = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeSeverityLevel = (selected) => {\n        const newData = {...data};\n        newData.severity_levels_id = selected ? selected.value : \"\";\n        setSeverityLevel(selected);\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            if (id) {\n                axios.put(`${appConfig.apiDomaine}/claim-objects/${id}`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                    })\n                ;\n            } else {\n                axios.post(`${appConfig.apiDomaine}/claim-objects`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setClaimCategory({});\n                        setSeverityLevel({});\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(errorRequest => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n\n    const printJsx = () => (\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            Paramètres\n                        </h3>\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\n                        <div className=\"kt-subheader__breadcrumbs\">\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <Link to=\"/settings/claim_objects\" className=\"kt-subheader__breadcrumbs-link\">\n                                Objet de réclamation\n                            </Link>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                {\n                                    id ? \"Modification\" : \"Ajout\"\n                                }\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"kt-portlet\">\n                            <div className=\"kt-portlet__head\">\n                                <div className=\"kt-portlet__head-label\">\n                                    <h3 className=\"kt-portlet__head-title\">\n                                        {\n                                            id ? \"Modification d'objet de réclamation\" : \"Ajout d'objet de réclamation\"\n                                        }\n                                    </h3>\n                                </div>\n                            </div>\n\n                            <form method=\"POST\" className=\"kt-form\">\n                                <div className=\"kt-form kt-form--label-right\">\n                                    <div className=\"kt-portlet__body\">\n                                        <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Objet de réclamation <InputRequire/></label>\n                                            <div className=\"col-lg-9 col-xl-6\">\n                                                <input\n                                                    id=\"name\"\n                                                    type=\"text\"\n                                                    className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Nom de l'objet de réclamation\"\n                                                    value={data.name}\n                                                    onChange={(e) => onChangeName(e)}\n                                                />\n                                                {\n                                                    error.name.length ? (\n                                                        error.name.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                        <div className={error.claim_category_id.length ? \"form-group row validated\" : \"form-group row\"}>\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"unit_type\">Catégorie de l'objet <InputRequire/></label>\n                                            <div className=\"col-lg-9 col-xl-6\">\n                                                <Select\n                                                    isClearable\n                                                    value={claimCategory}\n                                                    placeholder={\"Catégorie de l'objet de réclamation\"}\n                                                    onChange={onChangeClaimCategory}\n                                                    options={claimCategories}\n                                                />\n                                                {\n                                                    error.claim_category_id.length ? (\n                                                        error.claim_category_id.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                        <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"timeLimite\">Délai de traitement <InputRequire/></label>\n                                            <div className=\"col-lg-9 col-xl-6\">\n                                                <input\n                                                    id=\"timeLimite\"\n                                                    type=\"number\"\n                                                    className={error.time_limit.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Temps limite de l'objet\"\n                                                    value={data.time_limit}\n                                                    onChange={(e) => onChangeTimeLimit(e)}\n                                                />\n                                                {\n                                                    error.time_limit.length ? (\n                                                        error.time_limit.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                        <div className={error.severity_levels_id.length ? \"form-group row validated\" : \"form-group row\"}>\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"timeLimite\">Niveau de gravité <InputRequire/></label>\n                                            <div className=\"col-lg-9 col-xl-6\">\n                                                <Select\n                                                    isClearable\n                                                    value={severityLevel}\n                                                    placeholder={\"Selectioner le niveau de gravité\"}\n                                                    onChange={onChangeSeverityLevel}\n                                                    options={severityLevels}\n                                                />\n                                                {\n                                                    error.severity_levels_id.length ? (\n                                                        error.severity_levels_id.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                        <div className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description</label>\n                                            <div className=\"col-lg-9 col-xl-6\">\n                                                <textarea\n                                                    id=\"description\"\n                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Description\"\n                                                    cols=\"30\"\n                                                    rows=\"5\"\n                                                    value={data.description}\n                                                    onChange={(e) => onChangeDescription(e)}\n                                                />\n                                                {\n                                                    error.description.length ? (\n                                                        error.description.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"kt-portlet__foot\">\n                                        <div className=\"kt-form__actions text-right\">\n                                            {\n                                                !startRequest ? (\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\n                                                ) : (\n                                                    <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                                        Chargement...\n                                                    </button>\n                                                )\n                                            }\n                                            {\n                                                !startRequest ? (\n                                                    <Link to=\"/settings/claim_objects\" className=\"btn btn-secondary mx-2\">\n                                                        Quitter\n                                                    </Link>\n                                                ) : (\n                                                    <Link to=\"/settings/claim_objects\" className=\"btn btn-secondary mx-2\" disabled>\n                                                        Quitter\n                                                    </Link>\n                                                )\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n    return (\n        id ? (\n            verifyPermission(props.userPermissions, 'update-claim-object') ? (\n                printJsx()\n            ) : null\n        ) : (\n            verifyPermission(props.userPermissions, 'store-claim-object') ? (\n                printJsx()\n            ) : null\n        )\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimObjectForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Currency.jsx",["949","950"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport Pagination from \"../components/Pagination\";\nimport appConfig from \"../../config/appConfig\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastDeleteErrorMessageConfig,\n    toastDeleteSuccessMessageConfig,\n    toastErrorMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst Currency = (props) => {\n    if (!verifyPermission(props.userPermissions, \"list-currency\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [currencies, setCurrencies] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData () {\n            await axios.get(`${appConfig.apiDomaine}/currencies`)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setCurrencies(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newCurrencies = [...currencies];\n        newCurrencies = newCurrencies.filter(el => (\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\n            getLowerCaseString(el.iso_code).indexOf(value) >= 0\n        ));\n\n        return newCurrencies;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(currencies.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(currencies.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(currencies.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(currencies.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(currencies.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                currencies.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                currencies.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteCurrency = (currencyId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (verifyTokenExpire()) {\n                    if (result.value) {\n                        axios.delete(`${appConfig.apiDomaine}/currencies/${currencyId}`)\n                            .then(response => {\n                                const newCurrencies = [...currencies];\n                                newCurrencies.splice(index, 1);\n                                setCurrencies(newCurrencies);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newCurrencies.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newCurrencies.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                if (error.response.data.error)\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\n                                else\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (currency, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{currency.name[\"fr\"]}</td>\n                <td>{currency.iso_code}</td>\n                <td>\n                    {/*{\n                        verifyPermission(props.userPermissions, 'update-currency') ? (\n                            <Link to={`/settings/currencies/${currency.id}/edit`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                        ) : null\n                    }*/}\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-currency') ? (\n                            <button\n                                onClick={(e) => deleteCurrency(currency.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission([\"list-currency\"], 'list-currency') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Devise\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={\"store-currency\"}\n                            title={\"Devise\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/currencies/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Search:\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom de la devise\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">ISO\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        currencies.length ? (\n                                                            showList ? (\n                                                                showList.map((currency, index) => (\n                                                                    printBodyTable(currency, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom de la devise</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">ISO code</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {currencies.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(Currency);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Channel.jsx",["951"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport Pagination from \"../components/Pagination\";\nimport appConfig from \"../../config/appConfig\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastDeleteErrorMessageConfig,\n    toastDeleteSuccessMessageConfig,\n    toastErrorMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst Channel = (props) => {\n    if (!verifyPermission(props.userPermissions, \"list-channel\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [channels, setChannels] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(10);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData () {\n            axios.get(`${appConfig.apiDomaine}/channels`)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setChannels(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newChannels = [...channels];\n        newChannels = newChannels.filter(el => (\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\n            getLowerCaseString(el.is_response ? \"Oui\" : \"Non\").indexOf(value) >= 0\n        ));\n\n        return newChannels;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(channels.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(channels.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(channels.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(channels.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(channels.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                channels.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                channels.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteChannel = (channelId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (verifyTokenExpire()) {\n                    if (result.value) {\n                        axios.delete(`${appConfig.apiDomaine}/channels/${channelId}`)\n                            .then(response => {\n                                const newChannels = [...channels];\n                                newChannels.splice(index, 1);\n                                setChannels(newChannels);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newChannels.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newChannels.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                if (error.response.data.error)\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\n                                else\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (channel, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{channel.name[\"fr\"]}</td>\n                <td>{channel.is_response ? \"Oui\" : \"Non\"}</td>\n                <td>\n                    {\n                        verifyPermission(props.userPermissions, 'update-channel') && channel.is_editable ? (\n                            <Link to={`/settings/channels/${channel.id}/edit`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                        ) : null\n                    }\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-channel') && channel.is_editable ? (\n                            <button\n                                onClick={(e) => deleteChannel(channel.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-channel') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Canal\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={\"store-channel\"}\n                            title={\"Canal\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/channels/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input\n                                                            id=\"myInput\"\n                                                            type=\"text\"\n                                                            onKeyUp={(e) => searchElement(e)}\n                                                            className=\"form-control form-control-sm\"\n                                                            placeholder=\"\" aria-controls=\"kt_table_1\"\n                                                        />\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Canale de reponse\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        channels.length ? (\n                                                            showList.length ? (\n                                                                showList.map((channel, index) => (\n                                                                    printBodyTable(channel, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canale de reponse</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {channels.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(Channel);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ConfigRequirements.jsx",["952","953","954","955","956"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport {Link} from \"react-router-dom\";\nimport {\n    loadCss,\n    forceRound,\n    formatSelectOption,\n    getLowerCaseString, debug\n} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n     toastEditErrorMessageConfig, toastEditSuccessMessageConfig,\n} from \"../../config/toastConfig\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst ConfigRequirements = () => {\n    document.title = \"Satis client - Paramètre Exigence\";\n    const defaultData = {\n        objectData: {},\n        requirements: [],\n    };\n    const [load, setLoad] = useState(true);\n    const [requirement, setRequirement] = useState([]);\n    const [claimObject, setClaimObject] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(10);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [data, setData] = useState(defaultData);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + \"/claim-object-requirements\")\n                .then(response => {\n                    let newObjectData = [];\n                    response.data.claimCategories.map((claimCategory) => (\n                        claimCategory.claim_objects.map((claimObject) => (\n                            newObjectData[claimObject.id] = claimObject.requirements.map(requirement => (\n                                {value: requirement.id, label: requirement.description.fr})\n                            )\n                        ))\n                    ));\n\n                    setData(newObjectData);\n                    setLoad(false);\n                    setClaimObject(response.data.claimCategories);\n                    setRequirement(response.data.requirements);\n                    setShowList(response.data.claimCategories.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.claimCategories.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, []);\n\n    const matchRequirement = (requirement, value) => {\n        var match = false;\n        requirement.map(el => {\n            match = (\n                match ||\n                getLowerCaseString(el.description[\"fr\"]).indexOf(value) >= 0\n            )\n        });\n        return match;\n    };\n\n    const matchObject = (objects, value) => {\n        var match = false;\n        objects.map(el => {\n            match = (\n                match ||\n                getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\n                matchRequirement(el.requirements, value)\n            )\n        });\n        return match;\n    };\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newClaimObject = [...claimObject];\n        debug(newClaimObject, \"object\");\n        newClaimObject = newClaimObject.filter(el => (\n            getLowerCaseString(el.name.fr).indexOf(value) >= 0 ||\n            (!el.claim_objects.length ? false : matchObject(el.claim_objects, value))\n        ));\n\n        return newClaimObject;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(claimObject.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(claimObject.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(claimObject.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(claimObject.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(claimObject.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                claimObject.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                claimObject.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const onChangeExigence = (e, object_id) => {\n        let newData = {...data};\n        newData[object_id] = e?e.map(sel => ({value: sel.value, label: sel.label})):\"\";\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        let claimObjects = {...data};\n        let values = {};\n\n        for (const claim_object_id in claimObjects) {\n            let requirements = claimObjects[claim_object_id];\n            // console.log(requirements, 'requirement_for_' + claim_object_id);\n            values[claim_object_id] = requirements?requirements.map(requirement => (requirement.value)):null;\n        }\n        // console.log(values, 'values');\n\n        if (verifyTokenExpire()) {\n            axios.put(appConfig.apiDomaine + `/claim-object-requirements`, values)\n                .then(response => {\n                    setStartRequest(false);\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                })\n                .catch(error => {\n                    setStartRequest(false);\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                })\n            ;\n        }\n    };\n\n    const printBodyTable = (category, index) => {\n        return (\n\n            category.claim_objects ?\n                category.claim_objects.map((object, i) => (\n                    <tr key={i} role=\"row\" className=\"odd\">\n                        {\n                            i === 0 ?\n                                <td rowSpan={category.claim_objects.length}>{category.name.fr}</td>\n                                : null\n                        }\n                        <td>\n                            {object.name.fr}\n                        </td>\n                        <td>\n                            {requirement ? (\n                                <Select\n                                    value={data[object.id]}\n                                    onChange={(e) => onChangeExigence(e, object.id)}\n                                    options={formatSelectOption(requirement, 'description', \"fr\")}\n                                    isMulti\n                                    key={object.id}\n                                />\n                            ) : null\n                            }\n                        </td>\n                    </tr>\n                )) : null\n        )\n    };\n\n    return (\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            Paramètres\n                        </h3>\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\n                        <div className=\"kt-subheader__breadcrumbs\">\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Configuration des Exigences\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                <InfirmationTable\n                    information={\"Configuration des Exigences \"}\n                />\n\n                <div className=\"kt-portlet\">\n                    <HeaderTablePage\n                        addPermission={\"\"}\n                        title={\"Exigences\"}\n                        addText={\"Ajouter une Exigence\"}\n                        addLink={\"/settings/requirement\"}\n                    />\n\n                    {\n                        load ? (\n                            <LoadingTable/>\n                        ) : (\n                            <div className=\"kt-portlet__body\">\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-6 text-left\">\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                <label>\n                                                    Recherche:\n                                                    <input id=\"myInput\" type=\"text\"\n                                                           onKeyUp={(e) => searchElement(e)}\n                                                           className=\"form-control form-control-sm\"\n                                                           placeholder=\"\"\n                                                           aria-controls=\"kt_table_1\"/>\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12\">\n                                            <table\n                                                className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                style={{width: \"952px\"}}>\n                                                <thead>\n                                                <tr role=\"row\">\n\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"80px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Catégorie\n                                                        de plainte\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"100px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Objets\n                                                        de plainte\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"170px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Exigences\n                                                    </th>\n\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                {\n                                                    claimObject ? (\n                                                        showList.length ? (\n                                                            showList.map((category, index) => (\n                                                                printBodyTable(category, index)\n                                                            ))\n                                                        ) : <EmptyTable search={true}/>\n                                                    ) : (\n                                                        <EmptyTable/>\n                                                    )\n                                                }\n                                                </tbody>\n                                            </table>\n                                            <div className=\"kt-portlet__foot\">\n                                                <div className=\"kt-form__actions text-right\">\n                                                    {\n                                                        !startRequest ? (\n                                                            <button type=\"submit\"\n                                                                    onClick={(e) => onSubmit(e)}\n                                                                    className=\"btn btn-primary\">Enregistrer</button>\n                                                        ) : (\n                                                            <button\n                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                                type=\"button\" disabled>\n                                                                Loading...\n                                                            </button>\n                                                        )\n                                                    }\n                                                    {\n                                                        !startRequest ? (\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\">\n                                                                Quitter\n                                                            </Link>\n                                                        ) : (\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\"\n                                                                  disabled>\n                                                                Quitter\n                                                            </Link>\n                                                        )\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12 col-md-5\">\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                 aria-live=\"polite\">Affichage de 1\n                                                à {numberPerPage} sur {claimObject.length} données\n                                            </div>\n                                        </div>\n\n                                        {\n                                            showList.length ? (\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                    <Pagination\n                                                        numberPerPage={numberPerPage}\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\n                                                        activeNumberPage={activeNumberPage}\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                        pages={pages}\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\n                                                        numberPage={numberPage}\n                                                        onClickNextPage={e => onClickNextPage(e)}\n                                                    />\n                                                </div>\n                                            ) : null\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nexport default ConfigRequirements;\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimAssign.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimAssignToStaff.jsx",["957"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\"\nimport {verifyPermission} from \"../../helpers/permission\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport Pagination from \"../components/Pagination\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport axios from \"axios\";\nimport appConfig from \"../../config/appConfig\";\nimport {\n    forceRound,\n    formatDateToTimeStampte,\n    getLowerCaseString,\n    loadCss\n} from \"../../helpers/function\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst ClaimAssignToStaff = (props) => {\n    document.title = \"Satis client - Détail réclamation\";\n\n    if (!verifyPermission(props.userPermissions, \"list-claim-assignment-to-staff\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [claims, setClaims] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(5);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            axios.get(`${appConfig.apiDomaine}/claim-assignment-staff`)\n                .then(response => {\n                    console.log(response.data, \"DATA\");\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setClaims(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n\n        if (verifyTokenExpire())\n            fetchData();\n    }, []);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newClaims = [...claims];\n        newClaims = newClaims.filter(el => (\n            getLowerCaseString(`${el.reference} ${ el.isInvalidTreatment ? \"(R)\" : \"\"}`).indexOf(value) >= 0 ||\n            getLowerCaseString(`${el.claimer.lastname} ${el.claimer.firstname}`).indexOf(value) >= 0 ||\n            getLowerCaseString(formatDateToTimeStampte(el.created_at)).indexOf(value) >= 0 ||\n            getLowerCaseString(el.claim_object.name[\"fr\"]).indexOf(value) >= 0 ||\n            getLowerCaseString(`${el.active_treatment.responsible_staff ? el.active_treatment.responsible_staff.identite.lastname : \"\"} ${ el.active_treatment.responsible_staff ? el.active_treatment.responsible_staff.identite.firstname : \"\" }`).indexOf(value) >= 0 ||\n            getLowerCaseString(el.institution_targeted.name).indexOf(value) >= 0\n        ));\n\n        return newClaims;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(claims.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(claims.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(claims.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(claims.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                claims.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                claims.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (claim, index) => {\n        return (\n\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{claim.reference} {claim.isInvalidTreatment ? (<span className=\"kt-badge kt-badge--danger kt-badge--md\">R</span>) : null}</td>\n                <td>{`${claim.claimer.lastname} ${claim.claimer.firstname}`}</td>\n                <td>{formatDateToTimeStampte(claim.created_at)}</td>\n                <td>{claim.claim_object.name[\"fr\"]}</td>\n                <td>{`${claim.active_treatment.responsible_staff?claim.active_treatment.responsible_staff.identite.lastname:\"\"} ${claim.active_treatment.responsible_staff?claim.active_treatment.responsible_staff.identite.firstname:\"\"}`}</td>\n                <td>{claim.institution_targeted.name}</td>\n                {/*<td>{claim.unit_targeted_id ? claim.unit_targeted.name.fr : \"-\"}</td>*/}\n                <td>\n                    <a href={`/process/claim-assign/to-staff/${claim.id}/detail`}\n                       className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                       title=\"Détail\">\n                        <i className=\"la la-eye\"/>\n                    </a>\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-claim-assignment-to-staff') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Processus\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Traitement\n                                </a>\n                            </div>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Réclamations à traiter\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable information={(\n                        <div>\n                            Liste des réclamations qui vous sont assignés\n                            <br/>\n                            <span className=\"kt-badge kt-badge--danger kt-badge--md\">R</span> représente les traitements réjetés\n                        </div>\n                    )}/>\n\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            title={\"Réclamations à traiter\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{width: \"952px\"}}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Référence\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Date de réception\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Objet\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Agent\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Institution concernée\n                                                        </th>\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"*/}\n                                                        {/*    rowSpan=\"1\"*/}\n                                                        {/*    colSpan=\"1\" style={{width: \"70.25px\"}}*/}\n                                                        {/*    aria-label=\"Country: activate to sort column ascending\">Unité*/}\n                                                        {/*</th>*/}\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"40.25px\"}}\n                                                            aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        claims.length ? (\n                                                            showList.length ? (\n                                                                showList.map((claim, index) => (\n                                                                    printBodyTable(claim, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                        <tr>\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Date de réception</th>\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Objet</th>\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Agent</th>\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Institution concernée</th>\n                                                            {/*<th rowSpan=\"1\" colSpan=\"1\">Unité</th>*/}\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                        </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1\n                                                    à {numberPerPage} sur {claims.length} données\n                                                </div>\n                                            </div>\n\n                                            <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                <Pagination\n                                                    numberPerPage={numberPerPage}\n                                                    onChangeNumberPerPage={onChangeNumberPerPage}\n                                                    activeNumberPage={activeNumberPage}\n                                                    onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                    pages={pages}\n                                                    onClickPage={(e, number) => onClickPage(e, number)}\n                                                    numberPage={numberPage}\n                                                    onClickNextPage={e => onClickNextPage(e)}\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimAssignToStaff);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimToValidatedList.jsx",["958"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\"\nimport axios from \"axios\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport Pagination from \"../components/Pagination\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport appConfig from \"../../config/appConfig\";\nimport {filterDataTableBySearchValue, forceRound, formatDateToTimeStampte, loadCss} from \"../../helpers/function\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst ClaimToValidatedList = (props) => {\n    if (!((verifyPermission(props.userPermissions, \"list-claim-awaiting-validation-any-institution\") || verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-my-institution')) && props.activePilot))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [claims, setClaims] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(10);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [search, setSearch] = useState(false);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        let endpoint = \"\";\n        if (props.plan === \"MACRO\" || props.plan === \"PRO\")\n            endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-my-institution`;\n        else\n            endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-any-institution`;\n        async function fetchData () {\n            axios.get(endpoint)\n                .then(response => {\n                    console.log(response.data);\n                    setNumberPage(forceRound((Object.values(response.data)).length/numberPerPage));\n                    setShowList((Object.values(response.data)).slice(0, numberPerPage));\n                    setClaims(Object.values(response.data));\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, []);\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n        } else {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n            setSearch(false);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(claims.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(claims.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                claims.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                claims.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (claim, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{claim.reference}</td>\n                <td>{`${claim.claimer.lastname} ${claim.claimer.firstname}`}</td>\n                <td>{formatDateToTimeStampte(claim.created_at)}</td>\n                <td>{claim.claim_object.name[\"fr\"]}</td>\n                <td>{claim.active_treatment.responsible_staff?`${claim.active_treatment.responsible_staff.identite.lastname} ${claim.active_treatment.responsible_staff.identite.firstname}`:\"\"}</td>\n                <td>{claim.institution_targeted.name}</td>\n                {/*<td>{claim.unit_targeted_id ? claim.unit_targeted_id.name  : null}</td>*/}\n                {\n                    verifyPermission(props.userPermissions, \"show-claim-awaiting-validation-any-institution\") || verifyPermission(props.userPermissions, \"show-claim-awaiting-validation-my-institution\") ? (\n                        <td>\n                            <a href={`/process/claim-to-validated/${claim.id}/detail`}\n                               className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                               title=\"Détail\">\n                                <i className=\"la la-eye\"/>\n                            </a>\n                        </td>\n                    ) : <td/>\n                }\n            </tr>\n        );\n    };\n\n    return (\n        (verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-my-institution') || verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-any-institution')) && props.activePilot ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                               Processus\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                   Traitement\n                                </a>\n                            </div>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                    Réclamations à valider\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable information={\"Liste des réclamations à valider\"}/>\n\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            title={\"Liste des réclamations\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Search:\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                            {/*<ExportButton/>*/}\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Référence\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Date de réception\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Objet\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Agent\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Institution concernée\n                                                        </th>\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"*/}\n                                                        {/*    colSpan=\"1\" style={{ width: \"70.25px\" }}*/}\n                                                        {/*    aria-label=\"Country: activate to sort column ascending\">Unité*/}\n                                                        {/*</th>*/}\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        claims.length ? (\n                                                            search ? (\n                                                                claims.map((claim, index) => (\n                                                                    printBodyTable(claim, index)\n                                                                ))\n                                                            ) : (\n                                                                showList.map((claim, index) => (\n                                                                    printBodyTable(claim, index)\n                                                                ))\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Date de réception</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objet</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Agent</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Institution concernée</th>\n                                                        {/*<th rowSpan=\"1\" colSpan=\"1\">Unité</th>*/}\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {claims.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                !search ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        plan: state.plan.plan,\n        userPermissions: state.user.user.permissions,\n        activePilot: state.user.user.staff.is_active_pilot\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimToValidatedList);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimsArchived.jsx",["959","960"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {\n    loadCss,\n    forceRound,\n    getLowerCaseString,\n} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        list: `${appConfig.apiDomaine}/my/claim-archived`,\n    },\n    MACRO: {\n        holding: {\n            list: `${appConfig.apiDomaine}/any/claim-archived`,\n        },\n        filial: {\n            list: `${appConfig.apiDomaine}/my/claim-archived`,\n        }\n    },\n    HUB: {\n        plan: \"HUB\",\n        list: `${appConfig.apiDomaine}/any/claim-archived`,\n    }\n};\n\nconst ClaimsArchived = (props) => {\n    document.title = \"Satis client - Liste réclamations archivées\";\n\n    if (!(verifyPermission(props.userPermissions, 'list-any-claim-archived') ||\n        verifyPermission(props.userPermissions, \"list-my-claim-archived\")))\n        window.location.href = ERROR_401;\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'list-any-claim-archived'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'list-my-claim-archived'))\n            endPoint = endPointConfig[props.plan].filial\n    } else\n        endPoint = endPointConfig[props.plan];\n\n    const [load, setLoad] = useState(true);\n    const [claimsArchived, setClaimsArchived] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(10);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(endPoint.list)\n                .then(response => {\n                    setLoad(false);\n                    setClaimsArchived(response.data);\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, []);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newClaims = [...claimsArchived];\n        newClaims = newClaims.filter(el => (\n            getLowerCaseString(el.reference).indexOf(value) >= 0 ||\n            getLowerCaseString(`${el.claimer.lastname} ${el.claimer.firstname}`).indexOf(value) >= 0 ||\n            getLowerCaseString(el.description).indexOf(value) >= 0 ||\n            getLowerCaseString(el.active_treatment.solution === null ? \"-\" : el.active_treatment.solution).indexOf(value) >= 0\n        ));\n\n        return newClaims;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(claimsArchived.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(claimsArchived.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(claimsArchived.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(claimsArchived.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(claimsArchived.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                claimsArchived.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                claimsArchived.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (archived, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{archived.reference === null ? \"-\" : archived.reference}</td>\n                <td>{`${archived.claimer.lastname} ${archived.claimer.firstname}`}</td>\n                <td>{archived.description === null ? \"-\" : archived.description}</td>\n                <td>{archived.active_treatment.solution === null ? \"-\" : archived.active_treatment.solution}</td>\n                {\n                    verifyPermission(props.userPermissions, \"show-any-claim-archived\") ||\n                    verifyPermission(props.userPermissions, \"show-my-claim-archived\") ? (\n                        <td style={{textAlign: 'center'}}>\n                            <a href={`/process/claim_archived/${archived.id}/detail`}\n                               className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                               title=\"Détail\">\n                                <i className=\"la la-eye\"/>\n                            </a>\n                        </td>\n                    ) : null\n                }\n\n            </tr>\n        )\n    };\n\n\n    return (\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            Processus\n                        </h3>\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\n                        <div className=\"kt-subheader__breadcrumbs\">\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                className=\"flaticon2-shelter\"/></a>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\n                               className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\n                                Traitement\n                            </a>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\n                                    <i className=\"flaticon2-shelter\"/>\n                                </a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Archivage\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                <InfirmationTable\n                    information={\"Liste des réclamtions archivées\"}\n                />\n\n                <div className=\"kt-portlet\">\n\n                    <HeaderTablePage\n                        title={\"Réclamations Archivées\"}\n                    />\n                    {\n                        load ? (\n                            <LoadingTable/>\n                        ) : (\n                            <div className=\"kt-portlet__body\">\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-6 text-left\">\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                <label>\n                                                    Rechercher:\n                                                    <input id=\"myInput\" type=\"text\"\n                                                       onKeyUp={(e) => searchElement(e)}\n                                                       className=\"form-control form-control-sm\"\n                                                       placeholder=\"\"\n                                                       aria-controls=\"kt_table_1\"\n                                                    />\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12\">\n                                            <table\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                style={{width: \"952px\"}}>\n                                                <thead>\n                                                <tr role=\"row\">\n\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"50px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Référence\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"100px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Réclamant\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"150px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Description\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"150px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Solution\n                                                    </th>\n                                                    {\n                                                        verifyPermission(props.userPermissions, \"show-any-claim-archived\") ||\n                                                        verifyPermission(props.userPermissions, \"show-my-claim-archived\") ? (\n                                                            <th className=\"sorting\" tabIndex=\"0\"\n                                                                aria-controls=\"kt_table_1\"\n                                                                rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                                aria-label=\"Type: activate to sort column ascending\">\n                                                                Action\n                                                            </th>\n                                                        ) : null\n                                                    }\n\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                {\n                                                    claimsArchived.length ? (\n                                                        showList.length ? (\n                                                            showList.map((archived, index) => (\n                                                                printBodyTable(archived, index)\n                                                            ))\n                                                        ) : <EmptyTable search={true}/>\n                                                    ) : (\n                                                        <EmptyTable/>\n                                                    )\n                                                }\n                                                </tbody>\n                                                <tfoot>\n                                                <tr/>\n                                                </tfoot>\n                                            </table>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12 col-md-5\">\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                 aria-live=\"polite\">Affichage de 1\n                                                à {numberPerPage} sur {claimsArchived.length} données\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                            <Pagination\n                                                numberPerPage={numberPerPage}\n                                                onChangeNumberPerPage={onChangeNumberPerPage}\n                                                activeNumberPage={activeNumberPage}\n                                                onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                pages={pages}\n                                                onClickPage={(e, number) => onClickPage(e, number)}\n                                                numberPage={numberPage}\n                                                onClickNextPage={e => onClickNextPage(e)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    )\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan,\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimsArchived);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/RemoveChats.jsx",["961","962"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {loadCss, filterDataTableBySearchValue, forceRound} from \"../../../helpers/function\";\nimport LoadingTable from \"../../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../../config/confirmConfig\";\nimport appConfig from \"../../../config/appConfig\";\nimport Pagination from \"../../components/Pagination\";\nimport EmptyTable from \"../../components/EmptyTable\";\nimport ExportButton from \"../../components/ExportButton\";\nimport HeaderTablePage from \"../../components/HeaderTablePage\";\nimport InfirmationTable from \"../../components/InfirmationTable\";\nimport {ERROR_401} from \"../../../config/errorPage\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst RemoveChats = (props) => {\n    if (!verifyPermission(props.userPermissions, \"destroy-discussion\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [chats, setChats] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(5);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [search, setSearch] = useState(false);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + `/discussions`)\n                .then(response => {\n                    console.log(response.data, 'REMOVE');\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                    setChats(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    },[]);\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n        } else {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n            setSearch(false);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(chats.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(chats.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(chats.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                chats.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                chats.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteContributor = (chatsId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (result.value) {\n                    if (verifyTokenExpire()) {\n                        axios.delete(appConfig.apiDomaine + `/discussions/${chatsId}`)\n                            .then(response => {\n                                const newChats = [...chats];\n                                newChats.splice(index, 1);\n                                setChats(newChats);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newChats.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newChats.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (chat, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{chat.name}</td>\n                <td>{chat.claim.reference}</td>\n\n                <td style={{textAlign:'center'}}>\n\n                    {verifyPermission(props.userPermissions, \"destroy-discussion\") ?\n                        <button\n                            onClick={(e) => deleteContributor(chat.id, index)}\n                            className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                            title=\"Supprimer le Tchat\">\n                            <i className=\"la la-trash fa-2x\"/>\n                        </button>\n                        : null\n                    }\n                </td>\n            </tr>\n        )\n    };\n\n    return (\n        verifyPermission(props.userPermissions, \"list-my-discussions\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Traitement\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Chat\n                                </a>\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                        className=\"flaticon2-shelter\"/></a>\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\n                                       className=\"kt-subheader__breadcrumbs-link\">\n                                        Suppression\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable\n                        information={\"A common UI paradigm to use with interactive tables is to present buttons that will trigger some action. See official documentation\"}/>\n\n                    <div className=\"kt-portlet\">\n\n                        <HeaderTablePage\n                            title={\"Suppression de Discussion\"}\n                        />\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Search:\n                                                        <input id=\"myInput\" type=\"text\"\n                                                               onKeyUp={(e) => searchElement(e)}\n                                                               className=\"form-control form-control-sm\"\n                                                               placeholder=\"\"\n                                                               aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{width: \"952px\"}}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom du Chat\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Référence réclamation\n                                                        </th>\n\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"50px\"}}\n                                                            aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        chats.length ? (\n                                                            search ? (\n                                                                chats.map((chat, index) => (\n                                                                    printBodyTable(chat, index)\n                                                                ))\n                                                            ) : (\n                                                                showList.map((chat, index) => (\n                                                                    printBodyTable(chat, index)\n                                                                ))\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1\n                                                    à {numberPerPage} sur {chats.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                !search ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(RemoveChats);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ConfigRapportAuto.jsx",["963"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\n    },\n    MACRO: {\n        holding: {\n            list: `${appConfig.apiDomaine}/any/reporting-claim/config`,\n        },\n        filial: {\n            list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\n        }\n    },\n};\n\nconst ConfigRapportAuto = (props) => {\n    document.title = \"Satis rapport - Paramètre Configuration Rapport Automatique\";\n    if (!verifyPermission(props.userPermissions, \"config-reporting-claim-any-institution\")||\n        verifyPermission(props.userPermissions, \"config-reporting-claim-my-institution\"))\n        window.location.href = ERROR_401;\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'config-reporting-claim-my-institution'))\n            endPoint = endPointConfig[props.plan].filial\n    } else {\n        endPoint = endPointConfig[props.plan]\n    }\n\n    const [load, setLoad] = useState(true);\n    const [rapportAuto, setRapportAuto] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(5);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(endPoint.list)\n                .then(response => {\n                    setLoad(false);\n                    setRapportAuto(response.data);\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    },[]);\n\n    const getEmailString = (email) => {\n        let emailString = \"\";\n        email.map((mail, index) => (\n            index === email.length - 1 ? emailString + mail : emailString + mail  +\"/ \"\n        ));\n        return emailString;\n    };\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newRapportAuto = [...rapportAuto];\n        newRapportAuto = newRapportAuto.filter(el => (\n            getLowerCaseString(el.institution_targeted ? el.institution_targeted.name : \"\").indexOf(value) >= 0 ||\n            getLowerCaseString(el.period ? el.period_tag.label : \"\").indexOf(value) >= 0 ||\n            getLowerCaseString(getEmailString(el.email)).indexOf(value) >= 0 ||\n            getLowerCaseString(el.email ? el.email : \"\").indexOf(value) >= 0\n        ));\n\n        return newRapportAuto;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(rapportAuto.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(rapportAuto.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(rapportAuto.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(rapportAuto.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(rapportAuto.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                rapportAuto.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                rapportAuto.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteCategoryClient = (rapportAutoId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (verifyTokenExpire()) {\n                    if (result.value) {\n                        axios.delete(endPoint.list + `/${rapportAutoId}`)\n                            .then(response => {\n                                const newRapport = [...rapportAuto];\n                                newRapport.splice(index, 1);\n                                setRapportAuto(newRapport);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newRapport.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newRapport.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (rapport, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{rapport.institution_targeted?rapport.institution_targeted.name:\"\"}</td>\n                <td>{rapport.period===null?\"\":rapport.period_tag.label}</td>\n                <td>\n                    {rapport.email ?\n                        rapport.email.map((mail, index) => (\n                            index === rapport.email.length - 1 ? mail : mail  +\"/ \"\n                        )) : null\n                    }\n                </td>\n                {/*<td>{rapport.email===null?\"\":rapport.email}</td>*/}\n                <td style={{textAlign:'center'}}>\n\n                    {\n                        verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution') ?\n                            <Link\n                                to={`/settings/rapport/edit/${rapport.id}`}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                            : null\n                    }\n\n                    {verifyPermission(props.userPermissions, \"config-reporting-claim-any-institution\") ?\n                        <button\n                            onClick={(e) => deleteCategoryClient(rapport.id, index)}\n                            className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                            title=\"Supprimer\">\n                            <i className=\"la la-trash\"/>\n                        </button>\n                        : null\n                    }\n                </td>\n            </tr>\n        )\n    };\n\n    return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Rapport automatique\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable\n                        information={\"Liste des rapports automatiques\"}/>\n\n                    <div className=\"kt-portlet\">\n\n                        <HeaderTablePage\n                            addPermission={\"config-reporting-claim-any-institution\"}\n                            title={\"Rapport Automatique\"}\n                            addText={\"Ajouter une configuration\"}\n                            addLink={\"/settings/rapport/add\"}\n                        />\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\"\n                                                               onKeyUp={(e) => searchElement(e)}\n                                                               className=\"form-control form-control-sm\"\n                                                               placeholder=\"\"\n                                                               aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{width: \"952px\"}}>\n                                                    <thead>\n                                                    <tr role=\"row\" style={{textAlign:\"center\"}}>\n\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Institutions\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Périodes\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Emails\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                            aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        rapportAuto.length ? (\n                                                            showList ? (\n                                                                showList.map((rapport, index) => (\n                                                                    printBodyTable(rapport, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr style={{textAlign:\"center\"}}>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Institutions</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Périodes</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Emails</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1\n                                                    à {numberPerPage} sur {rapportAuto.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan,\n    };\n};\n\nexport default connect(mapStateToProps)(ConfigRapportAuto);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/MessageApi.jsx",["964"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport axios from \"axios\";\nimport appConfig from \"../../config/appConfig\";\nimport {forceRound, getLowerCaseString} from \"../../helpers/function\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastDeleteErrorMessageConfig,\n    toastDeleteSuccessMessageConfig,\n    toastErrorMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport {Link} from \"react-router-dom\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport Pagination from \"../components/Pagination\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst MessageApi = props => {\n    if (!verifyPermission(props.userPermissions, \"list-message-apis\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [messageAPIs, setMessageAPIs] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData () {\n            axios.get(`${appConfig.apiDomaine}/message-apis`)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setMessageAPIs(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newMessageApis = [...messageAPIs];\n        newMessageApis = newMessageApis.filter(el => (\n            getLowerCaseString(el.name).indexOf(value) >= 0 ||\n            getLowerCaseString(el.method).indexOf(value) >= 0\n        ));\n\n        return newMessageApis;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(messageAPIs.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(messageAPIs.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(messageAPIs.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(messageAPIs.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(messageAPIs.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                messageAPIs.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                messageAPIs.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteMessageAPI = (messageAPIid, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (verifyTokenExpire()) {\n                    if (result.value) {\n                        axios.delete(`${appConfig.apiDomaine}/message-apis/${messageAPIid}`)\n                            .then(response => {\n                                const newMessageAPIs = [...messageAPIs];\n                                newMessageAPIs.splice(index, 1);\n                                setMessageAPIs(newMessageAPIs);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newMessageAPIs.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newMessageAPIs.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                if (error.response.data.error)\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\n                                else\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (messageAPI, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{messageAPI.name}</td>\n                <td>{messageAPI.method}</td>\n                <td>\n                    {\n                        verifyPermission(props.userPermissions, 'update-message-apis') ? (\n                            <Link to={`/settings/message-apis/${messageAPI.id}/edit`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                        ) : null\n                    }\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-message-apis') ? (\n                            <button\n                                onClick={(e) => deleteMessageAPI(messageAPI.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-message-apis') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Message API\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={\"store-message-apis\"}\n                            title={\"Message API\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/message-apis/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input\n                                                            id=\"myInput\"\n                                                            type=\"text\"\n                                                            onKeyUp={(e) => searchElement(e)}\n                                                            className=\"form-control form-control-sm\"\n                                                            placeholder=\"\"\n                                                            aria-controls=\"kt_table_1\"\n                                                        />\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Méthode\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        messageAPIs.length ? (\n                                                            showList.length ? (\n                                                                showList.map((messageAPI, index) => (\n                                                                    printBodyTable(messageAPI, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Méthode</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {messageAPIs.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(MessageApi);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/ConfigRapportAutoForm.jsx",["965","966"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    Link,\n    useParams\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig, toastEditSuccessMessageConfig,\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport Select from \"react-select\";\nimport TagsInput from \"react-tagsinput\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\n    },\n    MACRO: {\n        holding: {\n            list: `${appConfig.apiDomaine}/any/reporting-claim/config`,\n        },\n        filial: {\n            list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\n        }\n    },\n\n};\n\nconst ConfigRapportAutoForm = (props) => {\n    const {id} = useParams();\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'config-reporting-claim-my-institution'))\n            endPoint = endPointConfig[props.plan].filial\n    } else {\n        endPoint = endPointConfig[props.plan]\n    }\n\n    const defaultData = {\n        institution_id: \"\",\n        period: \"\",\n        email: [],\n    };\n    const defaultError = {\n        institution_id: \"\",\n        period: [],\n        email: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [periodData, setPeriodData] = useState(null);\n    const [period, setPeriod] = useState(null);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n    const [disabledInput, setDisabledInput] = useState(false);\n    const [institution, setInstitution] = useState(null);\n    const [institutions, setInstitutions] = useState(null);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            if (id) {\n                axios.get(endPoint.list + `/${id}/edit`)\n                    .then(response => {\n                        console.log(response.data);\n                        const newRapport = {\n                            period: (response.data.reportingTask.period !== null) ? (response.data.reportingTask.period) : '',\n                            email: response.data.reportingTask.email,\n                            institution_id:response.data.reportingTask.institution_targeted_id!==null?response.data.reportingTask.institution_targeted_id:\"\"\n                        };\n\n                        setData(newRapport);\n\n                        if (response.data.reportingTask.period !== null) {\n                            setPeriodData(response.data.period);\n                            setPeriod(response.data.reportingTask.period_tag);\n                        }\n                        if (response.data.reportingTask.institution_targeted_id !== null) {\n                            setInstitutions(response.data.institutions);\n                            setInstitution({value: response.data.reportingTask.institution_targeted.id, label: response.data.reportingTask.institution_targeted.name});\n\n                        }\n                    })\n            }\n            axios.get(endPoint.list + `/create`)\n                .then(response => {\n                    let options =\n                        response.data.institutions.length ? response.data.institutions.map(institution => ({\n                            value: institution.id, label: institution.name\n                        })) : \"\"\n                    ;\n                    setInstitutions(options);\n                    setPeriodData(response.data.period)\n                })\n            ;\n        }\n    }, []);\n\n    const onChangePeriod = (selected) => {\n        const newData = {...data};\n        newData.period = selected.value;\n        setPeriod(selected);\n        setData(newData);\n    };\n\n    const onChangeEmail = (mail) => {\n        const newData = {...data};\n        newData.email = mail;\n        setData(newData);\n    };\n\n    const handleDisabledInputChange = () => {\n        setDisabledInput(!disabledInput);\n    };\n    const onChangeInstitution = (selected) => {\n        const newData = {...data};\n        if (selected) {\n            newData.institution_id = selected.value;\n            setInstitution(selected);\n        } else setInstitution(null);\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            if (id) {\n                axios.put(endPoint.list + `/${id}`, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                        window.location.href=\"/settings/rapport-auto\"\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...error.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            } else {\n                axios.post(endPoint.list, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...error.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/clients/category\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Rapport Automatique\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    {\n                                        id ? \"Modification\" : \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                id ? \"Modification des rapports automatiques\" : \"Ajout des rapports automatiques\"\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-portlet__body\">\n                                        <div className=\"tab-content\">\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\n                                                <div className=\"kt-form kt-form--label-right\">\n                                                    <div className=\"kt-form__body\">\n                                                        <div className=\"kt-section kt-section--first\">\n                                                            <div className=\"kt-section__body\">\n\n                                                                <div className=\"form-group row\">\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                           htmlFor=\"institution\">\n                                                                        <input\n                                                                            type=\"checkbox\"\n                                                                            value={disabledInput}\n                                                                            onChange={handleDisabledInputChange}/>\n                                                                        <span/>    Toutes les institutions<span/></label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                                        <Select\n                                                                            isClearable\n                                                                            isDisabled={disabledInput}\n                                                                            placeholder={\"Veuillez sélectionner une institution\"}\n                                                                            value={institution}\n                                                                            onChange={onChangeInstitution}\n                                                                            options={institutions?institutions.map(institution=>institution):\"\"}\n                                                                        />\n                                                                    </div>\n\n                                                                </div>\n                                                                <div\n                                                                    className={error.period.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                           htmlFor=\"exampleSelect1\">Période(s)</label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                                            <Select\n                                                                                value={period}\n                                                                                onChange={onChangePeriod}\n                                                                                options={periodData }\n                                                                            />\n                                                                        {\n                                                                            error.period.length ? (\n                                                                                error.period.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : null\n                                                                        }\n                                                                    </div>\n                                                                </div>\n\n                                                                <div\n                                                                    className={error.email.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                           htmlFor=\"email\">Votre Email(s)</label>\n                                                                    <div className=\" col-lg-9 col-xl-6\">\n                                                                        <TagsInput\n                                                                            value={data.email}\n                                                                            onChange={onChangeEmail}\n                                                                            inputProps={{\n                                                                                className: \"react-tagsinput-input\",\n                                                                                placeholder: \"Email(s)\"\n                                                                            }}\n                                                                        />\n                                                                        {\n                                                                            error.email.length ? (\n                                                                                error.email.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : null\n                                                                        }\n                                                                    </div>\n\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"kt-portlet__foot\">\n                                                                <div className=\"kt-form__actions text-right\">\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <button type=\"submit\"\n                                                                                    onClick={(e) => onSubmit(e)}\n                                                                                    className=\"btn btn-primary\">Enregistrer</button>\n                                                                        ) : (\n                                                                            <button\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                                                type=\"button\" disabled>\n                                                                                Loading...\n                                                                            </button>\n                                                                        )\n                                                                    }\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <Link to=\"/settings/rapport-auto\"\n                                                                                  className=\"btn btn-secondary mx-2\">\n                                                                                Quitter\n                                                                            </Link>\n                                                                        ) : (\n                                                                            <Link to=\"/settings/rapport-auto\"\n                                                                                  className=\"btn btn-secondary mx-2\"\n                                                                                  disabled>\n                                                                                Quitter\n                                                                            </Link>\n                                                                        )\n                                                                    }\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution') ? (\n            printJsx()\n        ) : null\n    );\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan,\n    }\n};\n\nexport default connect(mapStateToProps)(ConfigRapportAutoForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimListDetail.jsx",["967"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport Select from \"react-select\";\nimport {loadCss, loadScript} from \"../../helpers/function\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport appConfig from \"../../config/appConfig\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastAssignClaimSuccessMessageConfig\n} from \"../../config/toastConfig\";\nimport ReasonModal from \"../components/ReasonModal\";\nimport {AssignClaimConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmAssignConfig} from \"../../config/confirmConfig\";\nimport ClientButton from \"../components/ClientButton\";\nimport ClaimButton from \"../components/ClaimButton\";\nimport AttachmentsButton from \"../components/AttachmentsButton\";\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\n\n\nconst ClaimListDetail = (props) => {\n    document.title = \"Satis client - Détail réclamation\";\n    const {id} = useParams();\n\n    if (!verifyPermission(props.userPermissions, \"assignment-claim-awaiting-treatment\"))\n        window.location.href = ERROR_401;\n\n    const [claim, setClaim] = useState(null);\n    const [showReason, setShowReason] = useState(false);\n    const [reasonTitle, setReasonTitle] = useState(\"\");\n    const [reasonLabel, setReasonLabel] = useState(\"\");\n    const [action, setAction] = useState(\"\");\n    const [staffs, setStaffs] = useState([]);\n    const [errors, setErrors] = useState([]);\n    const [staff, setStaff] = useState(null);\n    const [startRequest, setStartRequest] = useState(false);\n\n    const formatStaffsOptions = (data) => {\n        const newData = [];\n        for (let i = 0; i < data.length; i++)\n            newData.push({value: data[i].id, label: `${data[i].identite.lastname} ${data[i].identite.firstname}`});\n        return newData;\n    };\n\n    useEffect(() => {\n        async function fetchData() {\n            await axios.get(`${appConfig.apiDomaine}/claim-awaiting-treatment/${id}/edit`)\n                .then(response => {\n                    setClaim(response.data.claim);\n                    setStaffs(formatStaffsOptions(response.data.staffs));\n                })\n                .catch(error => console.log(\"Something is wrong\"))\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [id]);\n\n    const onChangeStaff = (selected) => {\n        setStaff(selected);\n    };\n\n    const selfAssign = () => {\n        AssignClaimConfirmation.fire(confirmAssignConfig)\n            .then(response => {\n                if (verifyTokenExpire()) {\n                    if (response.value) {\n                        axios.put(`${appConfig.apiDomaine}/claim-awaiting-treatment/${id}/self-assignment`, {})\n                            .then(response => {\n                                ToastBottomEnd.fire(toastAssignClaimSuccessMessageConfig);\n                                window.location.href = \"/process/unit-claims\";\n                            })\n                            .catch(error => console.log(\"Something is wrong\"))\n                        ;\n                    }\n                }\n            })\n    };\n\n    const assignClaim = () => {\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            axios.put(`${appConfig.apiDomaine}/claim-awaiting-treatment/${id}/assignment`, {staff_id: staff ? staff.value : null})\n                .then(response => {\n                    ToastBottomEnd.fire(toastAssignClaimSuccessMessageConfig);\n                    setStartRequest(false);\n                    setStaff(null);\n                    setErrors([]);\n                    window.location.href = \"/process/unit-claims\";\n                })\n                .catch(error => {\n                    setStartRequest(false);\n                    setErrors(error.response.data.error.staff_id)\n                })\n            ;\n        }\n    };\n\n    const showReasonInput = async (type) => {\n        await setReasonTitle(\"Motif de rejet\");\n        await setReasonLabel(\"Le motif\");\n        await setAction(type);\n        await setShowReason(true);\n        document.getElementById(\"reason-modal\").click();\n    };\n\n    return (\n        verifyPermission(props.userPermissions, \"assignment-claim-awaiting-treatment\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Processus\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\n                                    Traitement\n                                </a>\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                    <Link to=\"/process/unit-claims\" className=\"kt-subheader__breadcrumbs-link\">\n                                        Liste des réclamations\n                                    </Link>\n                                </div>\n                            </div>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\n                                    <i className=\"flaticon2-shelter\"/>\n                                </a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"text\"}}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    {\n                                        claim ? claim.reference : \"Détail réclamation\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\n                                 data-ktwizard-state=\"step-first\">\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\n                                    <div className=\"kt-wizard-v2__nav\">\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\n                                            <ClientButton/>\n\n                                            <ClaimButton/>\n\n                                            <AttachmentsButton claim={claim}/>\n\n                                            {\n                                                props.lead ? (\n                                                    <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\n                                                        <div className=\"kt-wizard-v2__nav-body\">\n                                                            <div className=\"kt-wizard-v2__nav-icon\">\n                                                                <i className=\"flaticon-paper-plane\"/>\n                                                            </div>\n                                                            <div className=\"kt-wizard-v2__nav-label\">\n                                                                <div className=\"kt-wizard-v2__nav-label-title\">\n                                                                    Affectation de la réclamation\n                                                                </div>\n                                                                <div className=\"kt-wizard-v2__nav-label-desc\">\n                                                                    Affectez la réclamation à un agent\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\n                                    <form className=\"kt-form\" id=\"kt_form\">\n                                        <div className=\"d-flex justify-content-end\">\n                                            {\n                                                !props.lead ? (\n                                                    verifyPermission(props.userPermissions, \"self-assignment-claim-awaiting-treatment\") ? (\n                                                        <button className=\"btn btn-primary btn-sm mx-2\" onClick={selfAssign}>Auto-affectation</button>\n                                                    ) : null\n                                                ) : null\n                                            }\n                                            {\n                                                verifyPermission(props.userPermissions, \"rejected-claim-awaiting-treatment\") ? (\n                                                    <button\n                                                        className=\"btn btn-danger btn-sm\"\n                                                        onClick={() => showReasonInput(\"reject\")}>\n                                                        Rejeter la réclamation\n                                                    </button>\n                                                ) : null\n                                            }\n                                            <button id={\"reason-modal\"} style={{display: \"none\"}} type=\"button\"\n                                                    className=\"btn btn-bold btn-label-brand btn-sm\"\n                                                    data-toggle=\"modal\" data-target=\"#kt_modal_4_2\"/>\n                                        </div>\n\n                                        <ClientButtonDetail claim={claim}/>\n\n                                        <ClaimButtonDetail claim={claim}/>\n\n                                        <AttachmentsButtonDetail claim={claim}/>\n\n                                        {\n                                            props.lead ? (\n                                                <div className=\"kt-wizard-v2__content\"\n                                                     data-ktwizard-type=\"step-content\">\n                                                    <div className=\"kt-heading kt-heading--md\">Affectation de la\n                                                        réclamation\n                                                    </div>\n                                                    <div className=\"kt-form__section kt-form__section--first\">\n                                                        <div className=\"kt-wizard-v2__review\">\n                                                            <div className=\"kt-wizard-v2__review-content\">\n                                                                <div\n                                                                    className={errors.length ? \"form-group validated\" : \"form-group\"}>\n                                                                    <label>Agent</label>\n                                                                    <Select\n                                                                        isClearable\n                                                                        placeholder={\"Veillez selectioner l'agent\"}\n                                                                        value={staff}\n                                                                        onChange={onChangeStaff}\n                                                                        options={staffs}\n                                                                    />\n                                                                    {\n                                                                        errors.map((error, index) => (\n                                                                            <div key={index}\n                                                                                 className=\"invalid-feedback\">\n                                                                                {error}\n                                                                            </div>\n                                                                        ))\n                                                                    }\n                                                                </div>\n                                                                <div\n                                                                    className=\"form-group d-flex justify-content-between\">\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <button className=\"btn btn-primary\"\n                                                                                    onClick={assignClaim}>Affecter la\n                                                                                réclamation</button>\n                                                                        ) : (\n                                                                            <button\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                                                type=\"button\" disabled>\n                                                                                Chargement...\n                                                                            </button>\n                                                                        )\n                                                                    }\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            ) : null\n                                        }\n\n                                        <div className=\"kt-form__actions\">\n                                            <button\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\n                                                data-ktwizard-type=\"action-prev\">\n                                                PRÉCÉDENT\n                                            </button>\n\n                                            <button\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\n                                                data-ktwizard-type=\"action-next\">\n                                                SUIVANTE\n                                            </button>\n                                        </div>\n                                    </form>\n\n                                    {\n                                        showReason ? (\n                                            <ReasonModal\n                                                plan={props.plan}\n                                                id={id}\n                                                action={action}\n                                                reasonTitle={reasonTitle}\n                                                reasonLabel={reasonLabel}\n                                                onClose={() => setShowReason(false)}\n                                            />\n                                        ) : null\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        lead: state.user.user.staff.is_lead,\n        plan: state.plan.plan,\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimListDetail);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimToValidatedListDetail.jsx",["968","969","970","971"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {loadCss, loadScript, validatedClaimRule} from \"../../helpers/function\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport appConfig from \"../../config/appConfig\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport ReasonModal from \"../components/ReasonModal\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastErrorMessageWithParameterConfig} from \"../../config/toastConfig\";\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\nimport ClientButton from \"../components/ClientButton\";\nimport ClaimButton from \"../components/ClaimButton\";\nimport AttachmentsButton from \"../components/AttachmentsButton\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\n\n\nconst ClaimToValidatedListDetail = (props) => {\n    document.title = \"Satis client - Détail réclamation\";\n    const {id} = useParams();\n    const validation = validatedClaimRule(id);\n\n    if (!((verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-my-institution') ||\n        verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-any-institution')) && props.activePilot))\n        window.location.href = ERROR_401;\n\n    const [claim, setClaim] = useState(null);\n    const [showReason, setShowReason] = useState(false);\n    const [reasonTitle, setReasonTitle] = useState(\"\");\n    const [reasonLabel, setReasonLabel] = useState(\"\");\n    const [action, setAction] = useState(\"\");\n    const [startRequest, setStartRequest] = useState(true);\n\n    useEffect(() => {\n        async function fetchData() {\n            let endpoint = \"\";\n            if (verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-my-institution'))\n                endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-my-institution/${id}`;\n            else if (verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-any-institution'))\n                endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-any-institution/${id}`;\n\n            await axios.get(endpoint)\n                .then(response => {\n                    setStartRequest(false);\n                    setClaim(response.data);\n                })\n                .catch(({response}) => {\n                    setStartRequest(false);\n                    if (response.data && response.data.code === 409)\n                        ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(response.data.error));\n                    else\n                        console.log(\"Something is wrong\")\n                });\n        }\n        if (verifyTokenExpire()) {\n            fetchData();\n        }\n    }, [id]);\n\n    const showReasonInput = async (type) => {\n        if (type === \"validateReject\") {\n            await setReasonTitle('Motif de rejet');\n            await setReasonLabel('Le motif');\n        } else if (type === \"validateSolution\") {\n            await setReasonTitle('Solution à communiquer au client');\n            await setReasonLabel('Solution');\n        }\n        await setAction(type);\n        await setShowReason(true);\n        document.getElementById(\"reason-modal\").click();\n    };\n\n    return (\n        (verifyPermission(props.userPermissions, \"show-claim-awaiting-validation-my-institution\") ||\n        verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-any-institution') && props.activePilot) ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Processus\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\n                                    Traitement\n                                </a>\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                    <Link to=\"/process/claim-to-validated\" className=\"kt-subheader__breadcrumbs-link\">\n                                        Réclamations à valider\n                                    </Link>\n                                </div>\n                            </div>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\n                                    <i className=\"flaticon2-shelter\"/>\n                                </a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Détail réclamation\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\n                                 data-ktwizard-state=\"step-first\">\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\n                                    <div className=\"kt-wizard-v2__nav\">\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\n                                            <ClientButton/>\n\n                                            <ClaimButton/>\n\n                                            <AttachmentsButton claim={claim}/>\n\n                                            {\n                                                verifyPermission(props.userPermissions, validation[props.plan].permission) ? (\n                                                    <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\n                                                        <div className=\"kt-wizard-v2__nav-body\">\n                                                            <div className=\"kt-wizard-v2__nav-icon\">\n                                                                <i className=\"flaticon-list\"/>\n                                                            </div>\n                                                            <div className=\"kt-wizard-v2__nav-label\">\n                                                                <div className=\"kt-wizard-v2__nav-label-title\">\n                                                                    Validation du traitement\n                                                                </div>\n                                                                <div className=\"kt-wizard-v2__nav-label-desc\">\n                                                                    Valider du traitement de l'agent\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\n                                    <form className=\"kt-form\" id=\"kt_form\">\n                                        <ClientButtonDetail claim={claim}/>\n\n                                        <ClaimButtonDetail claim={claim}/>\n\n                                        <AttachmentsButtonDetail claim={claim}/>\n\n                                        {\n                                            verifyPermission(props.userPermissions, validation[props.plan].permission) ? (\n                                                <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\">\n                                                    <div className=\"kt-heading kt-heading--md\">\n                                                        Validation du traitement\n                                                    </div>\n                                                    <div className=\"kt-form__section kt-form__section--first\">\n                                                        <div className=\"kt-wizard-v2__review\">\n                                                            {\n                                                                !startRequest ? (\n                                                                    claim ? (\n                                                                        <div className=\"kt-wizard-v2__review-item\">\n                                                                            {\n                                                                                claim.active_treatment.solved_at !== null ? (\n                                                                                    <>\n                                                                                        <div className=\"kt-wizard-v2__review-item\">\n                                                                                            <div className=\"kt-wizard-v2__review-title\">\n                                                                                                <h5><strong>Traitement</strong></h5>\n                                                                                            </div>\n                                                                                            <div className=\"kt-wizard-v2__review-content\">\n                                                                                                <strong>Statut</strong>: <span className=\"mx-2\">Traité</span><br/>\n                                                                                                <strong>Montant retourné</strong>: <span className=\"mx-2\">{claim.active_treatment.amount_returned ? claim.active_treatment.amount_returned : \"Pas de montant\"}</span><br/>\n                                                                                                <strong>Solution</strong>: <span className=\"mx-2\">{claim.active_treatment.solution ? claim.active_treatment.solution : \"Pas de solution\"}</span><br/>\n                                                                                                <strong>Commentaires</strong>: <span className=\"mx-2\">{claim.active_treatment.comments ? claim.active_treatment.comments : \"Pas de commentaire\"}</span><br/>\n                                                                                                <strong>Mésures préventives</strong>: <span className=\"mx-2\">{claim.active_treatment.preventive_measures ? claim.active_treatment.preventive_measures : \"Pas de mésures préventives\"}</span><br/>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                        <div\n                                                                                            className=\"kt-widget__action\">\n                                                                                            {\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-my-institution\") ||\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-any-institution\") ? (\n                                                                                                    <button\n                                                                                                        type=\"button\"\n                                                                                                        className=\"btn btn-label-danger btn-sm btn-upper\"\n                                                                                                        onClick={() => showReasonInput(\"validateReject\")}>\n                                                                                                        Rejeter\n                                                                                                    </button>\n                                                                                                ) : null\n                                                                                            }\n\n                                                                                            &nbsp;\n                                                                                            {\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-my-institution\") ||\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-any-institution\") ? (\n                                                                                                    <button\n                                                                                                        type=\"button\"\n                                                                                                        className=\"btn btn-brand btn-sm btn-upper\"\n                                                                                                        onClick={() => showReasonInput(\"validateSolution\")}>\n                                                                                                        Valider\n                                                                                                    </button>\n                                                                                                ) : null\n                                                                                            }\n\n                                                                                        </div>\n                                                                                    </>\n                                                                                ) : null\n                                                                            }\n\n                                                                            {\n                                                                                claim.active_treatment.declared_unfounded_at !== null ? (\n                                                                                    <>\n                                                                                        <div className=\"kt-wizard-v2__review-item\">\n                                                                                            <div className=\"kt-wizard-v2__review-title\">\n                                                                                                <h5><strong>Traitement</strong></h5>\n                                                                                            </div>\n                                                                                            <div className=\"kt-wizard-v2__review-content\">\n                                                                                                <strong>Statut</strong>: <span className=\"mx-2\">Non fondé</span>\n                                                                                                <br/>\n                                                                                                <strong>Motif</strong>: <span className=\"mx-2\">{claim.active_treatment.unfounded_reason ? claim.active_treatment.unfounded_reason : \"Pas de motif\"}</span>\n                                                                                                <br/>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                        <div className=\"kt-widget__action\">\n                                                                                            <button type=\"button\" className=\"btn btn-label-danger btn-sm btn-upper\" onClick={() => showReasonInput(\"validateReject\")}>\n                                                                                                Rejeter\n                                                                                            </button>\n                                                                                            &nbsp;\n                                                                                            <button type=\"button\" className=\"btn btn-brand btn-sm btn-upper\" onClick={() => showReasonInput(\"validateSolution\")}>\n                                                                                                Valider\n                                                                                            </button>\n                                                                                        </div>\n                                                                                    </>\n                                                                                ) : null\n                                                                            }\n                                                                            <button id={\"reason-modal\"}\n                                                                                    style={{display: \"none\"}} type=\"button\"\n                                                                                    className=\"btn btn-bold btn-label-brand btn-sm\"\n                                                                                    data-toggle=\"modal\"\n                                                                                    data-target=\"#kt_modal_4_2\"/>\n                                                                        </div>\n                                                                    ) : null\n                                                                ) : null\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            ) : null\n                                        }\n\n                                        <div className=\"kt-form__actions\">\n                                            <button\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\n                                                data-ktwizard-type=\"action-prev\">\n                                                PRÉCÉDENT\n                                            </button>\n\n                                            <button\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\n                                                data-ktwizard-type=\"action-next\">\n                                                SUIVANTE\n                                            </button>\n                                        </div>\n                                    </form>\n\n                                    {\n                                        showReason ? (\n                                            <ReasonModal\n                                                plan={props.plan}\n                                                id={id}\n                                                action={action}\n                                                reasonTitle={reasonTitle}\n                                                reasonLabel={reasonLabel}\n                                                onClose={() => setShowReason(false)}\n                                            />\n                                        ) : null\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        lead: state.user.user.staff.is_lead,\n        plan: state.plan.plan,\n        activePilot: state.user.user.staff.is_active_pilot\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimToValidatedListDetail);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/IncompleteClaims.jsx",["972"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {loadCss, filterDataTableBySearchValue, forceRound} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        list: `${appConfig.apiDomaine}/my/claims-incompletes`,\n        destroy: claimId => `${appConfig.apiDomaine}/my/claims-incompletes/${claimId}`,\n    },\n    MACRO: {\n        holding: {\n            list: `${appConfig.apiDomaine}/any/claims-incompletes`,\n            destroy: claimId => `${appConfig.apiDomaine}/any/claims-incompletes/${claimId}`,\n        },\n        filial: {\n            list: `${appConfig.apiDomaine}/my/claims-incompletes`,\n            destroy: claimId => `${appConfig.apiDomaine}/my/claims-incompletes/${claimId}`,\n        }\n    },\n    HUB: {\n        plan: \"HUB\",\n        list: `${appConfig.apiDomaine}/without-client/claims-incompletes `,\n        destroy: claimId => `${appConfig.apiDomaine}/without-client/claims-incompletes/${claimId}`,\n    }\n};\n\nconst IncompleteClaims = (props) => {\n    document.title = \"Satis client - Liste plaintes incomplètes\";\n    if (!(verifyPermission(props.userPermissions, \"list-claim-incomplete-against-any-institution\") ||\n        verifyPermission(props.userPermissions, \"list-claim-incomplete-against-my-institution\") ||\n        verifyPermission(props.userPermissions, \"list-claim-incomplete-without-client\")))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [incompleteClaims, setIncompleteClaims] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(5);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [search, setSearch] = useState(false);\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'list-claim-incomplete-against-any-institution'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'list-claim-incomplete-against-my-institution'))\n            endPoint = endPointConfig[props.plan].filial\n    } else\n        endPoint = endPointConfig[props.plan];\n\n    useEffect(() => {\n\n        if (verifyTokenExpire()) {\n            axios.get(endPoint.list)\n                .then(response => {\n                    console.log(response.data, 'Incomplete_Data');\n                    setLoad(false);\n                    setIncompleteClaims(response.data);\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, []);\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n        } else {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n            setSearch(false);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(incompleteClaims.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(incompleteClaims.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(incompleteClaims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                incompleteClaims.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                incompleteClaims.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (claim, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{claim.claimer.lastname}&ensp;{claim.claimer.firstname}</td>\n                <td>{claim.institution_targeted.name}</td>\n                <td>{claim.claim_object.name.fr}</td>\n                <td>{claim.description}</td>\n                <td style={{textAlign: 'center'}}>\n                    {/*<Link to=\"/settings/clients/claim/detail\"\n                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                          title=\"Détail\">\n                        <i className=\"la la-eye\"/>\n                    </Link>*/}\n\n                    {\n                        verifyPermission(props.userPermissions, 'show-claim-incomplete-against-any-institution') ||\n                        verifyPermission(props.userPermissions, 'show-claim-incomplete-against-my-institution') ||\n                        verifyPermission(props.userPermissions, \"show-claim-incomplete-without-client\")?\n                            <Link\n                                to={`/process/incomplete_claims/edit/${claim.id}`}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                            : null\n                    }\n\n                </td>\n            </tr>\n        )\n    };\n\n    return (\n        (\n            verifyPermission(props.userPermissions, \"list-claim-incomplete-against-any-institution\") ||\n            verifyPermission(props.userPermissions, \"list-claim-incomplete-against-my-institution\") ||\n            verifyPermission(props.userPermissions, \"list-claim-incomplete-without-client\")\n        ) ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader  kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid\">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Collecte\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                        className=\"flaticon2-shelter\"/></a>\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\n                                       className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\n                                        Réclamations Incomplètes\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable\n                        information={\"Liste des réclamations imcomplètes\"}/>\n\n                    <div className=\"kt-portlet\">\n\n                        <HeaderTablePage\n                            addPermission={\"\"}\n                            title={\"Réclamtions Imcomplètes\"}\n                            addText={\"Ajouter de réclamations\"}\n                            addLink={\"/settings/claims/add\"}\n                        />\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"text-left col-sm-6\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Rechercher:\n                                                        <input id=\"myInput\" type=\"text\"\n                                                               onKeyUp={(e) => searchElement(e)}\n                                                               className=\"form-control form-control-sm\"\n                                                               placeholder=\"\"\n                                                               aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{width: \"952px\"}}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"85px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Réclamant\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"85px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Institution\n                                                            concernée\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"85px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">\n                                                            Objet\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                            aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        incompleteClaims.length ? (\n                                                            search ? (\n                                                                incompleteClaims.map((claim, index) => (\n                                                                    printBodyTable(claim, index)\n                                                                ))\n                                                            ) : (\n                                                                showList.map((claim, index) => (\n                                                                    printBodyTable(claim, index)\n                                                                ))\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1\n                                                    à {numberPerPage} sur {incompleteClaims.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                !search ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan,\n    };\n};\n\nexport default connect(mapStateToProps)(IncompleteClaims);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Unit.jsx",["973","974","975","976"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        list: `${appConfig.apiDomaine}/my/units`,\n        destroy: unitId => `${appConfig.apiDomaine}/my/units/${unitId}`,\n    },\n    MACRO: {\n        holding: {\n            list: `${appConfig.apiDomaine}/any/units`,\n            destroy: unitId => `${appConfig.apiDomaine}/any/units/${unitId}`,\n        },\n        filial: {\n            list: `${appConfig.apiDomaine}/my/units`,\n            destroy: unitId => `${appConfig.apiDomaine}/my/units/${unitId}`,\n        }\n    },\n    HUB: {\n        plan: \"HUB\",\n        list: `${appConfig.apiDomaine}/without-link/units`,\n        destroy: unitId => `${appConfig.apiDomaine}/without-link/units/${unitId}`,\n    }\n};\n\nconst Unit = (props) => {\n    if (!(verifyPermission(props.userPermissions, 'list-any-unit') || verifyPermission(props.userPermissions, 'list-my-unit') || verifyPermission(props.userPermissions, 'list-without-link-unit')))\n        window.location.href = ERROR_401;\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'list-any-unit'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'list-my-unit'))\n            endPoint = endPointConfig[props.plan].filial\n    } else {\n        endPoint = endPointConfig[props.plan]\n    }\n    const [load, setLoad] = useState(true);\n    const [units, setUnits] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData () {\n            await axios.get(endPoint.list)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setUnits(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [endPoint.list, NUMBER_ELEMENT_PER_PAGE]);\n\n    {/*<tr key={index} role=\"row\" className=\"odd\">\n        {\n            verifyPermission(props.userPermissions, 'list-any-unit') ? (\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{unit.institution ? unit.institution.name : null}</td>\n            ) : : null\n        }\n    </tr>*/}\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newUnits = [...units];\n        newUnits = newUnits.filter(el => (\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\n            getLowerCaseString(el.unit_type.name[\"fr\"]).indexOf(value) >= 0 ||\n            getLowerCaseString(el.lead ? el.lead.identite ? el.lead.identite.lastname+\" \"+el.lead.identite.firstname : \"Pas d'identite\" : \"Pas de responsable\").indexOf(value) >= 0 ||\n            getLowerCaseString(verifyPermission(props.userPermissions, \"list-any-unit\") ? el.institution ? el.institution.name : \"\" : \"\").indexOf(value) >= 0\n        ));\n\n        return newUnits;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(units.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(units.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(units.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(units.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(units.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                units.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                units.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteUnit = (unitId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (verifyTokenExpire()) {\n                    if (result.value) {\n                        axios.delete(endPoint.destroy(unitId))\n                            .then(response => {\n                                const newUnits = [...units];\n                                newUnits.splice(index, 1);\n                                setUnits(newUnits);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newUnits.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newUnits.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (unit, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{unit.name[\"fr\"]}</td>\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{unit.unit_type.name[\"fr\"]}</td>\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>\n                    {\n                        unit.lead ?\n                            unit.lead.identite ? unit.lead.identite.lastname+\" \"+unit.lead.identite.firstname : \"Pas d'identité\"\n                            : \"Pas de responsable\"\n                    }\n                </td>\n                {\n                    verifyPermission(props.userPermissions, 'list-any-unit') ? (\n                        <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{unit.institution ? unit.institution.name : null}</td>\n                    ) : null\n                }\n                <td>\n                    {\n                        verifyPermission(props.userPermissions, 'update-any-unit') || verifyPermission(props.userPermissions, 'update-my-unit') || verifyPermission(props.userPermissions, 'update-without-link-unit') ? (\n                            <Link to={`/settings/unit/${unit.id}/edit`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                        ) : null\n                    }\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-any-unit') || verifyPermission(props.userPermissions, 'destroy-my-unit') || verifyPermission(props.userPermissions, 'destroy-without-link-unit') ? (\n                            <button\n                                onClick={(e) => deleteUnit(unit.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-any-unit') || verifyPermission(props.userPermissions, 'list-my-unit') || verifyPermission(props.userPermissions, 'list-without-link-unit') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Unité\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable information={\"Liste des services, agences, etc...\"}/>\n\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={['store-any-unit', 'store-my-unit', 'store-without-link-unit']}\n                            title={\"Unité\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/unit/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\"><label>\n                                                    Recherche:\n                                                    <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom Unité\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Type Unité\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Responsable\n                                                        </th>\n                                                        {\n                                                            verifyPermission(props.userPermissions, 'list-any-unit') ? (\n                                                                <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                    colSpan=\"1\" style={{ width: \"70px\" }}\n                                                                    aria-label=\"Country: activate to sort column ascending\">Institution\n                                                                </th>\n                                                            ) : <th style={{display: \"none\"}}/>\n                                                        }\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        units.length ? (\n                                                            showList.length ? (\n                                                                showList.map((unit, index) => (\n                                                                    printBodyTable(unit, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom Unité</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Type Unité</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Responsable</th>\n                                                        {\n                                                            verifyPermission(props.userPermissions, 'list-any-unit') ? (\n                                                                <th rowSpan=\"1\" colSpan=\"1\">Institution</th>\n                                                            ) : <th style={{display: \"none\"}}/>\n                                                        }\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {units.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan,\n    };\n};\n\nexport default connect(mapStateToProps)(Unit);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimObject.jsx",["977"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {forceRound, loadCss} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport ExportButton from \"../components/ExportButton\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst ClaimObject = (props) => {\n    if (!verifyPermission(props.userPermissions, 'list-claim-object'))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [claimObjects, setClaimObjects] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData () {\n            await axios.get(`${appConfig.apiDomaine}/claim-objects`)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setClaimObjects(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\n\n    const filterShowListBySearchValue = (value) => {\n        let newClaimObjects = [...claimObjects];\n        newClaimObjects = newClaimObjects.filter(el => {\n            if (el.description[\"fr\"]) {\n                return (el.name[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.description[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.claim_category.name[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.time_limit.toString().indexOf(value.toString()) >= 0);\n            } else {\n                return (el.name[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.claim_category.name[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.time_limit.toString().indexOf(value.toString()) >= 0);\n            }\n        });\n\n        return newClaimObjects;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(claimObjects.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(claimObjects.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(claimObjects.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(claimObjects.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(claimObjects.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                claimObjects.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                claimObjects.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteClaimObject = (claimObjectId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (verifyTokenExpire()) {\n                    if (result.value) {\n                        axios.delete(`${appConfig.apiDomaine}/claim-objects/${claimObjectId}`)\n                            .then(response => {\n                                const newClaimObjects = [...claimObjects];\n                                newClaimObjects.splice(index, 1);\n                                setClaimObjects(newClaimObjects);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newClaimObjects.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newClaimObjects.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (claimObject, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{claimObject.name[\"fr\"]}</td>\n                <td style={{ textOverflow: \"ellipsis\", width: \"200px\" }}>{claimObject ? claimObject.description[\"fr\"] : null}</td>\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{claimObject.claim_category.name[props.language]}</td>\n                <td style={{ textOverflow: \"ellipsis\", width: \"50px\" }}>{claimObject.severity_level ? claimObject.time_limit : null}</td>\n                <td>\n                    {\n                        claimObject.severity_level ? (\n                            <div className=\"p-2 text-center\" style={{backgroundColor: claimObject.severity_level.color, color: claimObject.severity_level.color === \"#ffffff\" ? \"black\" : \"white\"}}>\n                                {\n                                    claimObject.severity_level.color ? (\n                                            `${claimObject.severity_level.color} ${claimObject.severity_level.color === \"#ffffff\" ? \" Blanc\" : ''}`\n                                        )\n                                        : (\n                                            <strong style={{color: \"black\"}}>-</strong>\n                                        )\n                                }\n                            </div>\n                        ) : null\n                    }\n                </td>\n                <td>\n                    {\n                        verifyPermission(props.userPermissions, 'update-claim-category') ? (\n                            <Link to={`/settings/claim_objects/${claimObject.id}/edit`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                        ) : null\n                    }\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-claim-category') ? (\n                            <button\n                                onClick={(e) => deleteClaimObject(claimObject.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-claim-category') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Objet de réclamation\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={\"store-claim-object\"}\n                            title={\"Objet de réclamation\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/claim_objects/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n\n                                            <ExportButton\n                                                downloadLink={`${appConfig.apiDomaine}/download-excel/objects`}\n                                                pageUrl={\"/settings/claim_objects/import\"}\n                                            />\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                        <tr role=\"row\">\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\">Nom\n                                                            </th>\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"250px\" }}\n                                                                aria-label=\"Ship City: activate to sort column ascending\">Description\n                                                            </th>\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70px\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\">Nom de la catégorie\n                                                            </th>\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70px\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\">Temps limite\n                                                            </th>\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70px\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\">Niveau de gravité\n                                                            </th>\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                                Action\n                                                            </th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        claimObjects.length ? (\n                                                            showList.length ? (\n                                                                showList.map((claimObject, index) => (\n                                                                    printBodyTable(claimObject, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom de la catégorie</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Temps limite</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Niveau de gravité</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {claimObjects.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions,\n        language: state.language.languageSelected\n    }\n};\n\nexport default connect(mapStateToProps)(ClaimObject);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Institution.jsx",["978","979"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport ExportButton from \"../components/ExportButton\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst Institution = (props) => {\n    document.title = \"Satis client - Paramètre Institution\";\n\n    if (!verifyPermission(props.userPermissions, \"list-any-institution\")) {\n        window.location.href = ERROR_401;\n    }\n    const [load, setLoad] = useState(true);\n    const [institutions, setInstitution] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(10);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + \"/any/institutions\")\n                .then(response => {\n                    setLoad(false);\n                    setInstitution(response.data);\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, []);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newInstitutions = [...institutions];\n        newInstitutions = newInstitutions.filter(el => (\n            getLowerCaseString(el.institution_type ? el.institution_type.name : \"\").indexOf(value) >= 0 ||\n            getLowerCaseString(el.name).indexOf(value) >= 0 ||\n            getLowerCaseString(el.acronyme).indexOf(value) >= 0 ||\n            getLowerCaseString(el.iso_code).indexOf(value) >= 0\n        ));\n\n        return newInstitutions;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(institutions.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(institutions.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(institutions.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(institutions.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(institutions.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                institutions.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                institutions.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteInstitution = (institutionId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (result.value) {\n                    if (verifyTokenExpire()) {\n                        axios.delete(appConfig.apiDomaine + `/any/institutions/${institutionId}`)\n                            .then(response => {\n                                const newInstitution = [...institutions];\n                                newInstitution.splice(index, 1);\n                                setInstitution(newInstitution);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newInstitution.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newInstitution.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (institution, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td style={{textAlign: 'center'}}>\n                    {institution.logo?(\n                        <img id=\"Image1\" src={institution.logo} alt=\"logo\" style={{maxWidth: \"35px\", maxHeight: \"35px\", textAlign: 'center'}}/>)\n                        :\"\"\n                    }\n                </td>\n                <td>{institution.institution_type?institution.institution_type.name:\"\"}</td>\n                <td>{institution.name}</td>\n                <td>{institution.acronyme}</td>\n                <td>{institution.iso_code}</td>\n                <td style={{textAlign:\"center\"}}>\n                    {\n                        verifyPermission(props.userPermissions, \"update-institution-message-api\") ? (\n                            <Link to={`/settings/institutions/${institution.id}/message-apis`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Parametrer message API\">\n                                <i className=\"la flaticon-multimedia-2\"/>\n                            </Link>\n                        ) : null\n                    }\n\n                    {\n                        verifyPermission(props.userPermissions, \"show-any-institution\") ?\n                            <Link to={`/settings/institution/edit/${institution.id}`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                            : verifyPermission(props.userPermissions, \"update-my-institution\") ?\n                            <Link to={`/settings/institution/edit`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                            : null\n                    }\n\n                    {/*{*/}\n                    {/*    verifyPermission(props.userPermissions, \"destroy-any-institution\") ?*/}\n                    {/*        <button*/}\n                    {/*            onClick={(e) => deleteInstitution(institution.id, index)}*/}\n                    {/*            className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"*/}\n                    {/*            title=\"Supprimer\">*/}\n                    {/*            <i className=\"la la-trash\"/>*/}\n                    {/*        </button>*/}\n                    {/*        : null*/}\n                    {/*}*/}\n\n                </td>\n            </tr>\n        )\n    };\n\n    return (\n        verifyPermission(props.userPermissions,\"list-any-institution\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Institution\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={\"store-any-institution\"}\n                            title={\"Institution\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/institution/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\"\n                                                               onKeyUp={(e) => searchElement(e)}\n                                                               className=\"form-control form-control-sm\"\n                                                               placeholder=\"\"\n                                                               aria-controls=\"kt_table_1\"\n                                                        />\n                                                    </label>\n                                                </div>\n                                            </div>\n                                            <ExportButton pageUrl={\"/settings/importInstitutions\"} downloadLink={`${appConfig.apiDomaine}/download-excel/institutions`}/>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{width: \"952px\"}}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"40px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Logo\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Type\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Acronyme\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"80px\"}}\n                                                            aria-label=\"Ship Address: activate to sort column ascending\">Iso_Code\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                            aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        institutions.length ? (\n                                                            showList.length ? (\n                                                                showList.map((institution, index) => (\n                                                                    printBodyTable(institution, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr style={{textAlign:\"center\"}}>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Logo</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Type</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Acronyme</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Iso_Code</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1\n                                                    à {numberPerPage} sur {institutions.length} données\n                                                </div>\n                                            </div>\n\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(Institution);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Clients.jsx",["980","981","982","983","984","985","986","987"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport ExportButton from \"../components/ExportButton\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        list: `${appConfig.apiDomaine}/my/clients`,\n        destroy: clientId => `${appConfig.apiDomaine}/my/clients/${clientId}`,\n    },\n    MACRO: {\n        holding: {\n            list: `${appConfig.apiDomaine}/any/clients`,\n            destroy: clientId => `${appConfig.apiDomaine}/any/clients/${clientId}`,\n        },\n        filial: {\n            list: `${appConfig.apiDomaine}/my/clients`,\n            destroy: clientId => `${appConfig.apiDomaine}/my/clients/${clientId}`,\n        }\n    },\n\n};\n\nconst Clients = (props) => {\n    document.title = \"Satis client - Paramètre Client\";\n    if (!(verifyPermission(props.userPermissions, \"list-client-from-my-institution\") || verifyPermission(props.userPermissions, \"list-client-from-any-institution\"))) {\n        window.location.href = ERROR_401;\n    }\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'list-client-from-any-institution') || verifyPermission(props.userPermissions, 'store-client-from-any-institution'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'list-client-from-my-institution') || verifyPermission(props.userPermissions, 'store-client-from-my-institution'))\n            endPoint = endPointConfig[props.plan].filial\n    } else {\n        endPoint = endPointConfig[props.plan]\n    }\n\n    const [load, setLoad] = useState(true);\n    const [clients, setClients] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(10);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(endPoint.list)\n                .then(response => {\n                    setLoad(false);\n                    setClients(response.data);\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                })\n            ;\n        }\n    }, []);\n\n    const matchByAttribute = (accountNumbers, value, attribute) => {\n        var match = false;\n        accountNumbers.map(el => {\n            match = (\n                match ||\n                getLowerCaseString(attribute === \"number\" ? el[attribute] : el).indexOf(value) >= 0\n            )\n        });\n        return match;\n    };\n\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newClients = [...clients];\n        newClients = newClients.filter(el => (\n            getLowerCaseString(el.client.identite.lastname + \" \" + el.client.identite.firstname).indexOf(value) >= 0 ||\n            matchByAttribute(el.accounts, value, \"number\") ||\n            matchByAttribute(el.client.identite.telephone, value, \"telephone\") ||\n            matchByAttribute(el.client.identite.email, value, \"email\")\n        ));\n\n        return newClients;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length / NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(clients.length / NUMBER_ELEMENT_PER_PAGE));\n            setShowList(clients.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(clients.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(clients.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(clients.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                clients.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                clients.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteClient = (clientId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (result.value) {\n                    if (verifyTokenExpire()) {\n                        axios.delete(endPoint.destroy(clientId))\n                            .then(response => {\n                                const newClient = [...clients];\n                                newClient.splice(index, 1);\n                                setClients(newClient);\n\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newClient.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newClient.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (client, index) => {\n        return (\n            client.accounts ?\n                client.accounts.map((account, i) => (\n                    <tr key={i} role=\"row\" className=\"odd\">\n\n                        {\n                            i === 0 ?\n                                <td rowSpan={client.accounts.length}>{client.client.identite.lastname} &ensp; {client.client.identite.firstname}</td> : null\n                        }\n\n                        {\n                            i === 0 ?\n                                <td rowSpan={client.accounts.length}>\n                                    {\n                                        client.client.identite.telephone.length ?\n                                            client.client.identite.telephone.map((tel, index) => (\n                                                index === client.client.identite.telephone.length - 1 ? tel : tel + \" \" + \"/ \" + \" \"\n                                            )) : null\n                                    }\n                                </td>\n                                : null\n                        }\n                         {\n                            i === 0 ?\n                                <td rowSpan={client.accounts.length}>\n                                    {client.client.identite.email ?\n                                        client.client.identite.email.map((mail, index) => (\n                                            index === client.client.identite.email.length - 1 ? mail : mail + \" \" + \"/ \" + \" \"\n                                        )) : null\n                                    }\n                                </td>\n                                : null\n                        }\n\n                        <td>\n                            {account.number}\n                        </td>\n\n                        <td className=\"d-flex justify-content-center\">\n\n                            {\n                                verifyPermission(props.userPermissions, \"update-client-from-any-institution\") ||\n                                verifyPermission(props.userPermissions, \"update-client-from-my-institution\") ?\n                                    <Link to={`/settings/any/clients/edit/${account.id}`}\n                                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                          title=\"Modifier\">\n                                        <i className=\"la la-edit\"/>\n                                    </Link>\n                                    : null\n                            }\n\n                            {\n                                verifyPermission(props.userPermissions, \"destroy-client-from-my-institution\") ||\n                                verifyPermission(props.userPermissions, \"destroy-client-from-any-institution\") ?\n                                    <button\n                                        onClick={(e) => deleteClient(client.id, index)}\n                                        className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                        title=\"Supprimer\">\n                                        <i className=\"la la-trash\"/>\n                                    </button>\n                                    : null\n                            }\n                        </td>\n                    </tr>\n                )) : null\n        )\n    };\n\n    return (\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            Paramètres\n                        </h3>\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\n                        <div className=\"kt-subheader__breadcrumbs\">\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                className=\"flaticon2-shelter\"/></a>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                Client\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                <InfirmationTable\n                    information={\"Liste des clients\"}/>\n\n                <div className=\"kt-portlet\">\n                    {\n                        verifyPermission(props.userPermissions, \"store-client-from-my-institution\") ?\n                            (\n                                <HeaderTablePage\n                                    addPermission={\"store-client-from-my-institution\"}\n                                    title={\"Client\"}\n                                    addText={\"Ajouter\"}\n                                    addLink={\"/settings/any/clients/add\"}\n                                />\n                            ) : (\n                                verifyPermission(props.userPermissions, \"store-client-from-any-institution\") ?\n                                    <HeaderTablePage\n                                        addPermission={\"store-client-from-any-institution\"}\n                                        title={\"Client\"}\n                                        addText={\"Ajouter\"}\n                                        addLink={\"/settings/any/clients/add\"}\n                                    /> : null\n                            )\n                    }\n\n\n                    {\n                        load ? (\n                            <LoadingTable/>\n                        ) : (\n                            <div className=\"kt-portlet__body\">\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-6 text-left\">\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                <label>\n                                                    Recherche:\n                                                    <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)}\n                                                           className=\"form-control form-control-sm\" placeholder=\"\"\n                                                           aria-controls=\"kt_table_1\"/>\n                                                </label>\n                                            </div>\n                                        </div>\n                                        <ExportButton pageUrl={\"/settings/importClients\"} downloadLink={`${appConfig.apiDomaine}/download-excel/clients`}/>\n                                    </div>\n                                    <div className=\"row table-responsive\">\n                                        <div className=\"col-sm-12 \">\n                                            <table\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline table\"\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                style={{width: \"100%\"}}>\n                                                <thead>\n                                                <tr role=\"row\">\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"30%\"}}\n                                                        aria-label=\"Country: activate to sort column ascending\">Nom\n                                                    </th>\n\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                        style={{width: \"15%\"}}\n                                                        aria-label=\"Ship Address: activate to sort column ascending\">Téléphone(s)\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                        style={{width: \"20%\"}}\n                                                        aria-label=\"Ship Address: activate to sort column ascending\">Email(s)\n                                                    </th>\n\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                        style={{width: \"20%\"}}\n                                                        aria-label=\"Ship Address: activate to sort column ascending\">Numero de compte\n                                                    </th>\n\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\n                                                        style={{width: \"15%\"}}\n                                                        aria-label=\"Type: activate to sort column ascending\">\n                                                        Action\n                                                    </th>\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n\n                                                {\n                                                    clients.length ? (\n                                                        showList.length ? (\n                                                            showList.map((client, index) => (\n                                                                printBodyTable(client, index)\n                                                            ))\n                                                        ) : (\n                                                            <EmptyTable search={true}/>\n                                                        )\n                                                    ) : (\n                                                        <EmptyTable/>\n                                                    )\n                                                }\n                                                </tbody>\n                                                <tfoot>\n                                                <tr style={{textAlign: \"center\"}}>\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Numero de Compte</th>\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Téléphone</th>\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Emails</th>\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                </tr>\n                                                </tfoot>\n                                            </table>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12 col-md-5\">\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                 aria-live=\"polite\">Affichage de 1\n                                                à {numberPerPage} sur {clients.length} données\n                                            </div>\n                                        </div>\n                                        {\n                                            showList.length ? (\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                    <Pagination\n                                                        numberPerPage={numberPerPage}\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\n                                                        activeNumberPage={activeNumberPage}\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                        pages={pages}\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\n                                                        numberPage={numberPage}\n                                                        onClickNextPage={e => onClickNextPage(e)}\n                                                    />\n                                                </div>\n                                            ) : null\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan,\n    };\n};\n\nexport default connect(mapStateToProps)(Clients);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/Clients/ClientForm.jsx",["988","989","990","991"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link,\n    useParams\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"../Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n    toastErrorMessageWithParameterConfig,\n} from \"../../../config/toastConfig\";\nimport appConfig from \"../../../config/appConfig\";\nimport '../staff/react-tagsinput.css'\nimport IdentityForm from \"../IdentityForm\";\nimport Select from \"react-select\";\nimport {formatSelectOption} from \"../../../helpers/function\";\nimport {connect} from \"react-redux\";\nimport {addIdentity} from \"../../../store/actions/IdentityAction\";\nimport {AUTH_TOKEN} from \"../../../constants/token\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport {ERROR_401} from \"../../../config/errorPage\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst EditClients = (props) => {\n    const {id} = useParams();\n    if (!id) {\n        if (!verifyPermission(props.userPermissions, 'store-client-from-my-institution'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'update-client-from-my-institution'))\n            window.location.href = ERROR_401;\n    }\n    const defaultData = {\n        account_type_id: \"\",\n        number: \"\",\n        category_client_id: \"\",\n\n\n    };\n    const defaultError = {\n        account_type_id: [],\n        number: [],\n        category_client_id: [],\n\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n    const [identity, setIdentity] = useState(undefined);\n    const [accountType, setAccountTypes] = useState(undefined);\n    const [categoryClient, setCategoryClient] = useState(undefined);\n    const [type, setType] = useState([]);\n    const [category, setCategory] = useState([]);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + '/my/clients/create')\n                .then(response => {\n                    setAccountTypes(response.data.AccountTypes);\n                    setCategoryClient(response.data.clientCategories);\n                })\n            ;\n\n            if (id) {\n                axios.get(appConfig.apiDomaine + `/my/clients/${id}/edit`)\n                    .then(response => {\n                        const newClient = {\n                            number: response.data.client_institution.accounts[0].number,\n                            account_type_id: response.data.client_institution.accounts[0].account_type_id,\n                            category_client_id: response.data.client_institution.category_client_id,\n\n                        };\n                        setData(newClient);\n                        const newIdentity = {\n                            firstname: response.data.client_institution.client.identite.firstname,\n                            lastname: response.data.client_institution.client.identite.lastname,\n                            sexe: response.data.client_institution.client.identite.sexe,\n                            telephone: response.data.client_institution.client.identite.telephone,\n                            email: response.data.client_institution.client.identite.email,\n                            ville: response.data.client_institution.client.identite.ville === null ? \"\" : response.data.client_institution.client.identite.ville,\n                        };\n                        setIdentity(newIdentity);\n                        props.addIdentite(newIdentity);\n                        setType({\n                            value: response.data.client_institution.accounts[0].account_type.id,\n                            label: response.data.client_institution.accounts[0].account_type.name.fr\n                        });\n                        setCategory({\n                            value: response.data.client_institution.category_client.id,\n                            label: response.data.client_institution.category_client.name.fr\n                        });\n\n                    });\n            }\n        }\n    }, []);\n\n    const onChangeAccountType = (selected) => {\n        const newData = {...data};\n        newData.account_type_id = selected.value;\n        setType(selected);\n        setData(newData);\n    };\n    const onChangeAccount = (e) => {\n        const newData = {...data};\n        newData.number = e.target.value;\n        setData(newData);\n\n    };\n\n    const onChangeCategoryClient = (selected) => {\n        const newData = {...data};\n        newData.category_client_id = selected.value;\n        setCategory(selected);\n        setData(newData);\n    };\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        {\n            console.log(...props.identite, \"props\")\n        }\n        const formData = {...props.identite, ...data};\n        console.log(formData, \"FORM_DATA\");\n        if (verifyTokenExpire()) {\n            if (id) {\n                axios.put(appConfig.apiDomaine + `/my/clients/${id}`, formData)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch((errorRequest) => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\n                            errorRequest.response.data.identite.lastname + \" \" + errorRequest.response.data.identite.firstname + \": \" + errorRequest.response.data.message)\n                        );\n                    })\n                ;\n            } else {\n                console.log(props.identite.client_id, \"CLIENT_ID\");\n                if (props.identite.client_id) {\n                    axios.post(appConfig.apiDomaine + `/my/accounts/${props.identite.client_id}/clients`, formData)\n                        .then(response => {\n                            setStartRequest(false);\n                            setError(defaultError);\n                            setData(defaultData);\n                            setType({});\n                            setCategory({});\n                            setIdentity({});\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                        })\n                        .catch((errorRequest) => {\n                            setStartRequest(false);\n                            setError({...defaultError, ...errorRequest.response.data.error});\n                            ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                        })\n                    ;\n                } else {\n                    axios.post(appConfig.apiDomaine + `/my/clients`, formData)\n                        .then(response => {\n                            setStartRequest(false);\n                            setError(defaultError);\n                            setData(defaultData);\n                            setType({});\n                            setCategory({});\n                            setIdentity({});\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                        })\n                        .catch(async (errorRequest) => {\n\n                            console.log(errorRequest.response.data.identite, 'ERROR');\n\n                            if (errorRequest.response.data.identite) {\n                                await axios.post(appConfig.apiDomaine + `/my/identites/${errorRequest.response.data.identite.id}/client`, formData)\n                                    .then(response => {\n                                        setStartRequest(false);\n                                        setError(defaultError);\n                                        setData(defaultData);\n                                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                                    })\n                            } else if (errorRequest.response.data.client) {\n                                setStartRequest(false);\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\n                                    errorRequest.response.data.client.identite.lastname + \" \" + errorRequest.response.data.client.identite.firstname + \": \" + errorRequest.response.data.message)\n                                );\n                            } else {\n                                setStartRequest(false);\n                                setError({...defaultError, ...errorRequest.response.data.error});\n                                ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                            }\n                        });\n                }\n            }\n        }\n    };\n\n    return (\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            Paramètres\n                        </h3>\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\n                        <div className=\"kt-subheader__breadcrumbs\">\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                className=\"flaticon2-shelter\"/></a>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <Link to=\"/settings/clients\" className=\"kt-subheader__breadcrumbs-link\">\n                                Client\n                            </Link>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                {\n                                    id ? \"Modification\" : \"Ajout\"\n                                }\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"kt-portlet\">\n                            <div className=\"kt-portlet__head\">\n                                <div className=\"kt-portlet__head-label\">\n                                    <h3 className=\"kt-portlet__head-title\">\n                                        {\n                                            id ?\n                                                \"Modification de Clients\" : \" Ajout de Clients\"\n                                        }\n                                    </h3>\n                                </div>\n                            </div>\n                            <form method=\"POST\" className=\"kt-form\">\n\n                                <div className=\"kt-portlet\">\n\n                                    {\n\n                                        !id ? (\n                                            <IdentityForm/>\n\n                                        ) : (\n                                            identity ?\n                                                <IdentityForm\n                                                    getIdentite={identity}\n                                                    getLoading={true}\n                                                />\n                                                : null\n                                        )\n                                    }\n\n                                    <div className=\"kt-portlet__body\">\n                                        <div className=\"kt-section kt-section--first\">\n                                            <h5 className=\"kt-section__title kt-section__title-lg\">\n                                                Informations Techniques\n                                            </h5>\n\n                                            <div className=\"form-group row\">\n                                                <div className={error.account_type_id.length ? \"col validated\" : \"col\"}>\n                                                    <label htmlFor=\"exampleSelect1\">Type de Compte</label>\n                                                    {accountType ? (\n                                                        <Select\n                                                            value={type}\n                                                            onChange={onChangeAccountType}\n                                                            placeholder={\"Veillez selectionner le type de compte\"}\n                                                            options={formatSelectOption(accountType, 'name', 'fr')}\n                                                        />\n                                                    ) : (<select name=\"typeClient\"\n                                                                 className={error.account_type_id.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                 id=\"typeClient\">\n                                                        <option value=\"\"/>\n                                                    </select>)\n                                                    }\n\n                                                    {\n                                                        error.account_type_id.length ? (\n                                                            error.account_type_id.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                                <div\n                                                    className={error.category_client_id.length ? \"col validated\" : \"col\"}>\n                                                    <label htmlFor=\"exampleSelect1\">Catégorie Client</label>\n\n                                                    {categoryClient ? (\n                                                        <Select\n                                                            value={category}\n                                                            onChange={onChangeCategoryClient}\n                                                            placeholder={\"Veillez selectionner la catégorie client\"}\n                                                            options={formatSelectOption(categoryClient, 'name', 'fr')}\n                                                        />\n                                                    ) : (<select name=\"category\"\n                                                                 className={error.category_client_id.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                 id=\"category\">\n                                                        <option value=\"\"/>\n                                                    </select>)\n                                                    }\n\n                                                    {\n                                                        error.category_client_id.length ? (\n                                                            error.category_client_id.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n\n                                            <div className=\"form-group row\">\n\n                                                <div className={error.number.length ? \"col validated\" : \"col\"}>\n                                                    <label htmlFor=\"number\">Numero de Compte</label>\n                                                    <input\n                                                        id=\"number\"\n                                                        type=\"text\"\n                                                        className={error.number.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        placeholder=\"Veillez entrer le numero de compte\"\n                                                        value={data.number}\n                                                        onChange={(e) => onChangeAccount(e)}\n                                                    />\n                                                    {\n                                                        error.number.length ? (\n                                                            error.number.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"kt-portlet__foot\">\n                                    <div className=\"kt-form__actions text-right\">\n                                        {\n                                            !startRequest ? (\n                                                <button type=\"submit\" onClick={(e) => onSubmit(e)}\n                                                        className=\"btn btn-primary\">Envoyer</button>\n                                            ) : (\n                                                <button\n                                                    className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                    type=\"button\" disabled>\n                                                    Loading...\n                                                </button>\n                                            )\n                                        }\n                                        {\n                                            !startRequest ? (\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\">\n                                                    Quitter\n                                                </Link>\n                                            ) : (\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\"\n                                                      disabled>\n                                                    Quitter\n                                                </Link>\n                                            )\n                                        }\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps = state => {\n    return {\n        identite: state.identity,\n        userPermissions: state.user.user.permissions\n    }\n};\n\nexport default connect(mapStateToProps, {addIdentite: addIdentity})(EditClients);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/UnitForm.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/Participants.jsx",["992"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    useParams\n} from \"react-router-dom\";\nimport {loadCss, filterDataTableBySearchValue, forceRound} from \"../../../helpers/function\";\nimport LoadingTable from \"../../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../../config/confirmConfig\";\nimport appConfig from \"../../../config/appConfig\";\nimport Pagination from \"../../components/Pagination\";\nimport EmptyTable from \"../../components/EmptyTable\";\nimport HeaderTablePage from \"../../components/HeaderTablePage\";\nimport InfirmationTable from \"../../components/InfirmationTable\";\nimport {ERROR_401} from \"../../../config/errorPage\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst Participants = (props) => {\n    const {id} = useParams();\n    if (!verifyPermission(props.userPermissions, \"list-discussion-contributors\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [contributor, setContributor] = useState([]);\n    const [responseData, setResponseData] = useState(null);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(5);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [search, setSearch] = useState(false);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + `/discussions/${id}/staff`)\n                .then(response => {\n                    console.log(response.data, 'DONNEES');\n                    setLoad(false);\n                    setResponseData(response.data);\n                    setContributor(response.data.staff);\n                    setShowList(response.data.staff.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.staff.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, []);\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n        } else {\n            await setSearch(true);\n            filterDataTableBySearchValue(e);\n            setSearch(false);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(contributor.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(contributor.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(contributor.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                contributor.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                contributor.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteContributor = (contributorId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (result.value) {\n                    if (verifyTokenExpire()) {\n                        axios.delete(appConfig.apiDomaine + `/discussions/${id}/staff/${contributorId}`)\n                            .then(response => {\n                                const newContributor = [...contributor];\n                                newContributor.splice(index, 1);\n                                setContributor(newContributor);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newContributor.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newContributor.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (user, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{user.identite.lastname + \"  \" + user.identite.firstname}</td>\n                <td>{user.unit.name.fr}</td>\n                <td>{user.identite.email ?\n                    user.identite.email.map((mail, index) => (\n                        index === user.identite.email.length - 1 ? mail : mail + \" \" + <br/> + \" \"\n                    )) : null\n                }</td>\n\n                {\n                    verifyPermission(props.userPermissions, \"remove-discussion-contributor\") ?\n                    <td style={{textAlign: 'center'}}>\n                        {\n                            user.id === responseData.created_by.id?\n                        \"\":\n                            <button\n                                onClick={(e) => deleteContributor(user.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Retirer du Tchat\">\n                                <i className=\"la la-user-times fa-2x\"/>\n                            </button>\n                        }\n\n                    </td>\n                    : null\n                }\n\n            </tr>\n        )\n    };\n\n    return (\n        verifyPermission(props.userPermissions, \"list-discussion-contributors\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Traitement\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Tchat\n                                </a>\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                        className=\"flaticon2-shelter\"/></a>\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\n                                       className=\"kt-subheader__breadcrumbs-link\">\n                                        Liste des participants\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable\n                        information={\"A common UI paradigm to use with interactive tables is to present buttons that will trigger some action. See official documentation\"}/>\n\n                    <div className=\"kt-portlet\">\n\n                        <HeaderTablePage\n                            addPermission={\"add-discussion-contributor\"}\n                            addText={\"Ajouter\"}\n                            addLink={`/treatment/chat/add_user/${id}`}\n                            title={\"Liste des participants\"}\n                        />\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Search:\n                                                        <input id=\"myInput\" type=\"text\"\n                                                               onKeyUp={(e) => searchElement(e)}\n                                                               className=\"form-control form-control-sm\"\n                                                               placeholder=\"\"\n                                                               aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{width: \"952px\"}}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Participants\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Staff\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Email\n                                                        </th>\n                                                        {\n                                                            verifyPermission(props.userPermissions, \"remove-discussion-contributor\") ?\n                                                                <th className=\"sorting\" tabIndex=\"0\"\n                                                                    aria-controls=\"kt_table_1\"\n                                                                    rowSpan=\"1\" colSpan=\"1\" style={{width: \"50px\"}}\n                                                                    aria-label=\"Type: activate to sort column ascending\">\n                                                                    Action\n                                                                </th>\n                                                                :\"\"\n                                                        }\n\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        contributor.length ? (\n                                                            search ? (\n                                                                contributor.map((user, index) => (\n                                                                    printBodyTable(user, index)\n                                                                ))\n                                                            ) : (\n                                                                showList.map((user, index) => (\n                                                                    printBodyTable(user, index)\n                                                                ))\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1\n                                                    à {numberPerPage} sur {contributor.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                !search ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(Participants);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/User.jsx",["993","994"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmActivation} from \"../../config/confirmConfig\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastErrorMessageWithParameterConfig, toastSuccessMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst User = (props) => {\n    if (!(verifyPermission(props.userPermissions, \"list-user-any-institution\") || (verifyPermission(props.userPermissions, \"list-user-my-institution\"))))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [users, setUsers] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        let endpoint = \"\";\n        if (props.plan === \"MACRO\") {\n            if (verifyPermission(props.userPermissions, \"list-user-any-institution\"))\n                endpoint = `${appConfig.apiDomaine}/any/users`;\n            if (verifyPermission(props.userPermissions, \"list-user-my-institution\"))\n                endpoint = `${appConfig.apiDomaine}/my/users`;\n        }\n        else if(props.plan === \"HUB\")\n            endpoint = `${appConfig.apiDomaine}/any/users`;\n        else if(props.plan === \"PRO\")\n            endpoint = `${appConfig.apiDomaine}/my/users`;\n\n        async function fetchData () {\n            await axios.get(endpoint)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setUsers(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine, props.plan, NUMBER_ELEMENT_PER_PAGE]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newUsers = [...users];\n        newUsers = newUsers.filter(el => (\n            getLowerCaseString(`${el.identite.lastname} ${el.identite.firstname}`).indexOf(value) >= 0 ||\n            getLowerCaseString(el.username).indexOf(value) >= 0 ||\n            getLowerCaseString(printRole(el.roles)).indexOf(value) >= 0 ||\n            getLowerCaseString(el.disabled_at === null ? \"Active\" : \"Désactiver\").indexOf(value) >= 0\n        ));\n\n        return newUsers;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(users.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(users.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(users.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(users.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(users.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                users.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                users.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printRole = (roles) => {\n        const newRoles = [];\n        roles.map(r => newRoles.push(r.name));\n        return newRoles.join(' / ');\n    };\n\n    const activeAccount = (e, user, index, label) => {\n        e.preventDefault();\n        DeleteConfirmation.fire(confirmActivation(label))\n            .then(async (result) => {\n                if (result.value) {\n                    document.getElementById(`user-spinner-${user.id}`).style.display = \"block\";\n                    document.getElementById(`user-${user.id}`).style.display = \"none\";\n                    document.getElementById(`user-edit-${user.id}`).style.display = \"none\";\n\n                    let endpoint = \"\";\n                    if (props.plan === \"MACRO\") {\n                        if (verifyPermission(props.userPermissions, \"list-user-any-institution\"))\n                            endpoint = `${appConfig.apiDomaine}/any/users/${user.id}/enabled-desabled`;\n                        if (verifyPermission(props.userPermissions, \"list-user-my-institution\"))\n                            endpoint = `${appConfig.apiDomaine}/my/users/${user.id}/enabled-desabled`;\n                    }\n                    else if(props.plan === \"HUB\")\n                        endpoint = `${appConfig.apiDomaine}/any/users/${user.id}/enabled-desabled`;\n                    else if(props.plan === \"PRO\")\n                        endpoint = `${appConfig.apiDomaine}/my/users/${user.id}/enabled-desabled`;\n\n                    if (verifyTokenExpire()) {\n                        await axios.put(endpoint)\n                            .then(response => {\n                                const newUsers = [...users];\n                                newUsers[index].disabled_at = newUsers[index].disabled_at === null ? true : null;\n                                document.getElementById(`user-spinner-${user.id}`).style.display = \"none\";\n                                document.getElementById(`user-${user.id}`).style.display = \"block\";\n                                document.getElementById(`user-edit-${user.id}`).style.display = \"block\";\n                                setUsers(newUsers);\n                                ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Succes de l'opération\"));\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Echec de l'opération\"));\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const rulesInclude = (rules, ...rule) => {\n        let value = false;\n        rules.map(r => {\n            value = r.name === rule[0] || r.name === rule[1];\n        });\n\n        return value;\n    };\n\n    const printBodyTable = (user, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                {console.log('user:', user)}\n                <td>\n                    {`${user.identite.lastname} ${user.identite.firstname} `}\n                    {\n                        rulesInclude(user.roles, \"pilot-filial\", \"pilot-holding\") ?\n                            user.identite.staff ? (\n                                    user.identite.staff.is_active_pilot ? (\n                                        <span className=\"kt-badge kt-badge--success kt-badge--inline\">pilot actif</span>\n                                    ) : null\n                            ) : null\n                            : null\n                    }\n                </td>\n                <td>{user.username}</td>\n                <td>\n                    {printRole(user.roles)}\n                </td>\n                <td>\n                    {\n                        user.disabled_at === null ? (\n                            <span className=\"kt-badge kt-badge--success kt-badge--inline\">Active</span>\n                        ) : (\n                            <span className=\"kt-badge kt-badge--danger kt-badge--inline\">Désactiver</span>\n                        )\n                    }\n                </td>\n                <td className=\"d-flex justify-content-between align-items-center\">\n                    <div id={`user-spinner-${user.id}`} className=\"kt-spinner kt-spinner--lg kt-spinner--dark mt-2 mx-3\" style={{display: \"none\"}}/>\n                    <a\n                        className=\"mt-2\"\n                        id={`user-${user.id}`}\n                        href={user.disabled_at === null ? `desactive/${user.id}` : `reactive/${user.id}`}\n                        onClick={(e) => activeAccount(e, user, index, user.disabled_at === null ? \"désactiver\" : \"réactiver\")}\n                        title={user.disabled_at === null ? \"Désactiver\" : \"Réactiver\"}>\n                        {user.disabled_at === null ? \"Désactiver\" : \"Réactiver\"}\n                    </a>\n\n                    {\n                        verifyPermission(props.userPermissions, \"show-user-any-institution\") || verifyPermission(props.userPermissions, \"show-user-my-institution\") ? (\n                            <Link to={`/settings/users/${user.id}/edit`}\n                                  id={`user-edit-${user.id}`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md mx-3\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-user-any-institution') || verifyPermission(props.userPermissions, 'list-user-my-institution') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Utilisateur\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={[\"store-user-any-institution\", \"store-user-my-institution\"]}\n                            title={\"Utilisateur\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/users/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Email\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Role\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Statut\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"70.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        users.length ? (\n                                                            showList.length ? (\n                                                                showList.map((user, index) => (\n                                                                    printBodyTable(user, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Email</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">role</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Statut</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {users.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan,\n    };\n};\n\nexport default connect(mapStateToProps)(User);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Staff.jsx",["995","996"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport ExportButton from \"../components/ExportButton\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        list: `${appConfig.apiDomaine}/my/staff`,\n        destroy: unitId => `${appConfig.apiDomaine}/my/staff/${unitId}`,\n    },\n    MACRO: {\n        holding: {\n            list: `${appConfig.apiDomaine}/any/staff`,\n            destroy: unitId => `${appConfig.apiDomaine}/any/staff/${unitId}`,\n        },\n        filial: {\n            list: `${appConfig.apiDomaine}/my/staff`,\n            destroy: unitId => `${appConfig.apiDomaine}/my/staff/${unitId}`,\n        }\n    },\n    HUB: {\n        plan: \"HUB\",\n        list: `${appConfig.apiDomaine}/maybe/no/staff`,\n        destroy: unitId => `${appConfig.apiDomaine}/maybe/no/staff/${unitId}`,\n    }\n};\n\nconst   Staff = (props) => {\n    if (!(verifyPermission(props.userPermissions, 'list-staff-from-any-unit') || verifyPermission(props.userPermissions, 'list-staff-from-my-unit')|| verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit')) )\n        window.location.href = ERROR_401;\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'list-any-unit'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'list-my-unit'))\n            endPoint = endPointConfig[props.plan].filial\n    } else {\n        endPoint = endPointConfig[props.plan]\n    }\n\n    const [load, setLoad] = useState(true);\n    const [staffs, setStaffs] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            await axios.get(endPoint.list)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setStaffs(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                });\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [endPoint.list, NUMBER_ELEMENT_PER_PAGE]);\n\n    const separateStringByComa = (arrayString) => {\n        let generateString = \"\";\n        arrayString.map((t, index) => {\n            generateString = index + 1 !== arrayString.length ? generateString + t+\", \" : generateString + t\n        });\n        return generateString;\n    };\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newStaffs = [...staffs];\n        newStaffs = newStaffs.filter(el => (\n            getLowerCaseString(`${el.is_lead ? 'L' : ''} ${el.identite.lastname} ${el.identite.firstname}`).indexOf(value) >= 0 ||\n            getLowerCaseString(separateStringByComa(el.identite.telephone)).indexOf(value) >= 0 ||\n            getLowerCaseString(separateStringByComa(el.identite.email)).indexOf(value) >= 0 ||\n            getLowerCaseString(verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit') ? el.unit ? el.unit.name[\"fr\"] : '' : el.unit.name[\"fr\"]).indexOf(value) >= 0 ||\n            getLowerCaseString(verifyPermission(props.userPermissions, 'list-staff-from-any-unit') ?  el.institution.name[\"fr\"] : '').indexOf(value) >= 0 ||\n            getLowerCaseString(el.position.name[\"fr\"]).indexOf(value) >= 0\n        ));\n\n        return newStaffs;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(staffs.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(staffs.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(staffs.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(staffs.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(staffs.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                staffs.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                staffs.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteStaff = (staffId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (verifyTokenExpire()) {\n                    if (result.value) {\n                        axios.delete(endPoint.destroy(staffId))\n                            .then(response => {\n                                const newStaffs = [...staffs];\n                                newStaffs.splice(index, 1);\n                                setStaffs(newStaffs);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newStaffs.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newStaffs.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (staff, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{staff.is_lead ? (<span className=\"kt-badge kt-badge--success kt-badge--inline\">L</span>) : null} {staff.identite.lastname+\" \"+staff.identite.firstname}</td>\n                <td>\n                    {\n                        staff.identite.telephone.map((tel, index) => (\n                            index === staff.identite.telephone.length - 1 ? tel : tel+\", \"\n                        ))\n                    }\n\n                </td>\n                <td>\n                    {\n                        staff.identite.email.map((mail, index) => (\n                            index === staff.identite.email.length - 1 ? mail : mail+\", \"\n                        ))\n                    }\n                </td>\n                {\n                    verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit') ? (\n                        staff.unit ? (\n                            <td>{staff.unit.name[\"fr\"]}</td>\n                            ) : null\n                    ) : (\n                        <td>{staff.unit.name[\"fr\"]}</td>\n                    )\n                }\n                {\n                    verifyPermission(props.userPermissions, 'list-staff-from-any-unit') ? (\n                        <td>{staff.institution.name}</td>\n                    ) : null\n                }\n                <td>{staff.position.name[\"fr\"]}</td>\n                <td>\n                    {\n                        verifyPermission(props.userPermissions, \"update-staff-from-any-unit\") || verifyPermission(props.userPermissions, 'update-staff-from-my-unit') || verifyPermission(props.userPermissions, 'update-staff-from-maybe-no-unit') ? (\n                            <Link to={`/settings/staffs/${staff.id}/edit`}\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                  title=\"Modifier\">\n                                <i className=\"la la-edit\"/>\n                            </Link>\n                        ) : null\n                    }\n                    {\n                        verifyPermission(props.userPermissions, \"destroy-staff-from-any-unit\") || verifyPermission(props.userPermissions, 'destroy-staff-from-my-unit') || verifyPermission(props.userPermissions, 'destroy-staff-from-maybe-no-unit') ? (\n                            <button\n                                onClick={(e) => deleteStaff(staff.id, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-staff-from-any-unit') || verifyPermission(props.userPermissions, 'list-staff-from-my-unit') || verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Agent\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable information={(<><span className=\"kt-badge kt-badge--success kt-badge--inline\">L</span> : Responsable d'unité</>)}/>\n\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={[\"store-staff-from-any-unit\", \"store-staff-from-my-unit\", 'list-staff-from-maybe-no-unit']}\n                            title={\"Agent\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/staffs/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n\n                                            <ExportButton downloadLink={`${appConfig.apiDomaine}/download-excel/staffs`} pageUrl={\"/settings/staffs/import\"}/>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"50px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Téléphone\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"50px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Email\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Unité\n                                                        </th>\n                                                        {\n                                                            verifyPermission(props.userPermissions, 'list-staff-from-any-unit') ? (\n                                                                <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                    colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                                    aria-label=\"Country: activate to sort column ascending\">Institution\n                                                                </th>\n                                                            ) : <th style={{display: \"none\"}}/>\n                                                        }\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Position\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"53px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        staffs.length ? (\n                                                            showList ? (\n                                                                showList.map((staff, index) => (\n                                                                    printBodyTable(staff, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Téléphone</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Email</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Unité</th>\n                                                        {\n                                                            verifyPermission(props.userPermissions, 'list-staff-from-any-unit') ? (\n                                                                <th rowSpan=\"1\" colSpan=\"1\">Institution</th>\n                                                            ) : <th style={{display: \"none\"}}/>\n                                                        }\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Position</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {staffs.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan\n    };\n};\n\nexport default connect(mapStateToProps)(Staff);\n","/var/vhosts/satis-macro/client/satis-client/src/APP_MACRO/Filiale/FilialeInstitutionForm.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimAssignDetail.jsx",["997","998","999","1000"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport Select from \"react-select\";\nimport {formatSelectOption, loadCss, loadScript} from \"../../helpers/function\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport appConfig from \"../../config/appConfig\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport FusionClaim from \"../components/FusionClaim\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig, toastErrorMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport ClientButton from \"../components/ClientButton\";\nimport ClaimButton from \"../components/ClaimButton\";\nimport AttachmentsButton from \"../components/AttachmentsButton\";\nimport DoubleButton from \"../components/DoubleButton\";\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\nimport DoubleButtonDetail from \"../components/DoubleButtonDetail\";\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\nimport UnfoundedModal from \"../components/UnfoundedModal\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        edit: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\n        update: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\n    },\n    MACRO: {\n        plan: \"MACRO\",\n        edit: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\n        update: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\n\n    },\n    HUB: {\n        plan: \"HUB\",\n        edit: id => `${appConfig.apiDomaine}/transfer-claim-to-unit/${id}`,\n        update: id => `${appConfig.apiDomaine}/transfer-claim-to-unit/${id}`,\n    }\n};\n\n\nconst ClaimAssignDetail = (props) => {\n    document.title = \"Satis client - Détail réclamation\";\n    const {id} = useParams();\n\n    if (!(verifyPermission(props.userPermissions, \"show-claim-awaiting-assignment\") && props.activePilot))\n        window.location.href = ERROR_401;\n\n    let endPoint = endPointConfig[props.plan];\n\n    const defaultError = {\n        unit_id: [],\n    };\n    const [error, setError] = useState(defaultError);\n\n    const [claim, setClaim] = useState(null);\n    const [copyClaim, setCopyClaim] = useState(null);\n    const [dataId, setDataId] = useState(\"\");\n    const [data, setData] = useState({unit_id: null});\n    const [unitsData, setUnitsData] = useState({});\n    const [unit, setUnit] = useState(null);\n    const [startRequest, setStartRequest] = useState(false);\n    const [startRequestToUnit, setStartRequestToUnit] = useState(false);\n\n    useEffect(() => {\n        async function fetchData() {\n            if (verifyTokenExpire()) {\n                await axios.get(`${appConfig.apiDomaine}/claim-awaiting-assignment/${id}`)\n                    .then(response => {\n                        setClaim(response.data);\n                        setDataId(response.data.institution_targeted.name);\n                    })\n                    .catch(error => console.log(\"Something is wrong\"))\n                ;\n            }\n\n            if (verifyPermission(props.userPermissions, \"transfer-claim-to-circuit-unit\") || verifyPermission(props.userPermissions, \"transfer-claim-to-unit\")) {\n                if (verifyTokenExpire()) {\n                    await axios.get(endPoint.edit(`${id}`))\n                        .then(response => {\n                            let newUnit = Object.values(response.data.units);\n                            setUnitsData(formatSelectOption(newUnit, \"name\", \"fr\"))\n                        })\n                        .catch(error => console.log(\"Something is wrong\"))\n                    ;\n                }\n            }\n        }\n\n        fetchData();\n    }, []);\n\n    const onClickToTranfertInstitution = async (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            await axios.put(`${appConfig.apiDomaine}/transfer-claim-to-targeted-institution/${id}`)\n                .then(response => {\n                    setStartRequest(false);\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    window.location.href = \"/process/claim-assign\";\n                })\n                .catch(error => {\n                    setStartRequest(false);\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig)\n                })\n            ;\n        }\n    };\n\n    const onClickToTranfert = (e) => {\n        e.preventDefault();\n        setStartRequestToUnit(true);\n\n        async function fetchData() {\n            await axios.put(endPoint.update(`${id}`), data)\n                .then(response => {\n                    setStartRequestToUnit(false);\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    window.location.href = \"/process/claim-assign\";\n                })\n                .catch(error => {\n                    setStartRequestToUnit(false);\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig)\n                })\n            ;\n        }\n\n        if (verifyTokenExpire())\n            fetchData()\n    };\n\n    const onChangeUnits = (selected) => {\n        const newData = {...data};\n        newData.unit_id = selected ? selected.value : null;\n        setUnit(selected);\n        setData(newData);\n        console.log(newData.unit_id, \"UNIT\")\n    };\n\n    const onClickFusionButton = async (newClaim) => {\n        await setCopyClaim(newClaim);\n        document.getElementById(`modal-button`).click();\n    };\n\n    return (\n        verifyPermission(props.userPermissions, \"show-claim-awaiting-assignment\") && props.activePilot ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\"\n                 id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Traitement\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                        className=\"flaticon2-shelter\"/></a>\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                    <Link to=\"/process/claim-assign\"\n                                          className=\"kt-subheader__breadcrumbs-link\">\n                                        Réclamation à Transférer\n                                    </Link>\n                                </div>\n                            </div>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\n                                    <i className=\"flaticon2-shelter\"/>\n                                </a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#detail\" onClick={e => e.preventDefault()}\n                                   style={{cursor: \"default\"}}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Détail\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\n                                 data-ktwizard-state=\"step-first\">\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\n                                    <div className=\"kt-wizard-v2__nav\">\n                                        <div\n                                            className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\n                                            {\n                                                claim ? (\n                                                    claim.active_treatment && claim.active_treatment.rejected_reason && claim.active_treatment.rejected_at ? (\n                                                        <div className=\"d-flex justify-content-start\">\n                                                            <span className=\"kt-badge kt-badge--danger kt-badge--inline\"\n                                                                  style={{fontWeight: \"bold\"}}>RECLAMATION  REJETEE</span>\n                                                        </div>\n                                                    ) : null\n                                                ) : null\n                                            }<br/>\n\n                                            <ClientButton/>\n\n                                            <ClaimButton/>\n\n                                            <AttachmentsButton claim={claim}/>\n\n                                            <DoubleButton claim={claim}/>\n\n                                            <div className=\"kt-wizard-v2__nav-item\"\n                                                 data-ktwizard-type=\"step\">\n                                                <div className=\"kt-wizard-v2__nav-body\">\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\n                                                        <i className=\"flaticon-truck\"/>\n                                                    </div>\n                                                    <div className=\"kt-wizard-v2__nav-label\">\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\n                                                            Transfert\n                                                        </div>\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\n                                                            Transferer la réclamation\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\n                                    <form className=\"kt-form\" id=\"kt_form\">\n                                        {\n                                            verifyPermission(props.userPermissions, \"unfounded-claim-awaiting-assignment\") ? (\n                                                <div className=\"d-flex justify-content-md-end\">\n                                                    <button type=\"button\"\n                                                            data-toggle=\"modal\" data-target=\"#exampleModal\"\n                                                            className=\"btn btn-success\">\n                                                        NON FONDÉ\n                                                    </button>\n                                                    {\n                                                        claim ? (\n                                                            <UnfoundedModal\n                                                                activeTreatment={\n                                                                    claim.active_treatment ? (\n                                                                        claim.active_treatment\n                                                                    ) : null\n                                                                }\n                                                                getId={`${id}`}\n                                                            />\n                                                        ) : (\n                                                            <UnfoundedModal\n                                                                getId={`${id}`}\n                                                            />\n                                                        )\n                                                    }\n\n                                                </div>\n                                            ): null\n                                        }\n\n\n                                        <ClientButtonDetail claim={claim}/>\n\n                                        <ClaimButtonDetail claim={claim}\n                                                           rejected={claim && claim.active_treatment && claim.active_treatment.rejected_reason ? true : false}/>\n\n                                        <AttachmentsButtonDetail claim={claim}/>\n\n                                        <DoubleButtonDetail\n                                            claim={claim}\n                                            onClickFusionButton={onClickFusionButton}\n                                            userPermissions={props.userPermissions}\n                                        />\n\n                                        <div className=\"kt-wizard-v2__content\"\n                                             data-ktwizard-type=\"step-content\">\n                                            <div className=\"kt-heading kt-heading--md\">Transfert de la\n                                                réclamation\n                                            </div>\n                                            <div className=\"kt-form__section kt-form__section--first\">\n                                                <div className=\"kt-wizard-v2__review\">\n                                                    {\n                                                        verifyPermission(props.userPermissions, \"transfer-claim-to-targeted-institution\") ?\n                                                            <div className=\"kt-wizard-v2__review-item\">\n                                                                <div\n                                                                    className=\"kt-wizard-v2__review-content\"\n                                                                    style={{fontSize: \"15px\"}}>\n                                                                    <label\n                                                                        className=\"col-xl-6 col-lg-6 col-form-label\"><strong>Institution\n                                                                        concernée</strong></label>\n                                                                    <span\n                                                                        className=\"kt-widget__data\">{dataId}</span>\n                                                                </div>\n                                                                <div className=\"modal-footer\">\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <button\n                                                                                className=\"btn btn-outline-success\"\n                                                                                onClick={onClickToTranfertInstitution}>\n                                                                                TRANSFÉRER A L'INSTITUTION\n                                                                            </button>\n                                                                        ) : (\n                                                                            <button\n                                                                                className=\"btn btn-success kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                                                type=\"button\" disabled>\n                                                                                Chargement...\n                                                                            </button>\n                                                                        )\n                                                                    }\n\n                                                                </div>\n                                                            </div>\n                                                            : null\n                                                    }\n                                                    {\n                                                        (verifyPermission(props.userPermissions, \"transfer-claim-to-circuit-unit\") ||\n                                                            verifyPermission(props.userPermissions, \"transfer-claim-to-unit\")) ?\n                                                            <div className=\"kt-wizard-v2__review-item\">\n                                                                <div className=\"kt-wizard-v2__review-title\">\n                                                                    Tranferer à une unité\n                                                                </div>\n                                                                <div\n                                                                    className=\"kt-wizard-v2__review-content\">\n                                                                    <div\n                                                                        className={error.unit_id.length ? \"form-group validated\" : \"form-group\"}>\n                                                                        <label>Unité</label>\n                                                                        <Select\n                                                                            isClearable\n                                                                            value={unit}\n                                                                            onChange={onChangeUnits}\n                                                                            options={unitsData}\n                                                                            placeholder={\"Veuillez sélectionner l'unité de traitement\"}\n                                                                        />\n                                                                        {\n                                                                            error.unit_id.length ? (\n                                                                                error.unit_id.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : \"\"\n                                                                        }\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"modal-footer\">\n                                                                    {\n                                                                        !startRequestToUnit ? (\n                                                                            <button\n                                                                                className=\"btn btn-outline-success\"\n                                                                                onClick={onClickToTranfert}>\n                                                                                TRANSFÉRER A UNE UNITÉ\n                                                                            </button>\n                                                                        ) : (\n                                                                            <button\n                                                                                className=\"btn btn-success kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                                                type=\"button\" disabled>\n                                                                                Chargement...\n                                                                            </button>\n                                                                        )\n                                                                    }\n\n                                                                </div>\n                                                            </div>\n                                                            : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"kt-form__actions\">\n                                            <button\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\n                                                data-ktwizard-type=\"action-prev\">\n                                                PRÉCÉDENT\n                                            </button>\n\n                                            <button\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\n                                                data-ktwizard-type=\"action-next\">\n                                                SUIVANTE\n                                            </button>\n                                        </div>\n                                    </form>\n\n                                    {\n                                        verifyPermission(props.userPermissions, \"merge-claim-awaiting-assignment\") ? (\n                                            <div>\n                                                <button style={{display: \"none\"}} id={`modal-button`}\n                                                        type=\"button\"\n                                                        className=\"btn btn-bold btn-label-brand btn-sm\"\n                                                        data-toggle=\"modal\" data-target=\"#kt_modal_4\"/>\n                                                {\n                                                    copyClaim ? (\n                                                        <FusionClaim\n                                                            claim={claim}\n                                                            copyClaim={copyClaim}\n                                                            onCloseModal={() => setCopyClaim(null)}\n                                                        />\n                                                    ) : null\n                                                }\n                                            </div>\n                                        ) : null\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        lead: state.user.user.staff.is_lead,\n        plan: state.plan.plan,\n        activePilot: state.user.user.staff.is_active_pilot\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimAssignDetail);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/Institutions/InstitutionForm.jsx",["1001"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"../Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig, toastEditSuccessMessageConfig,\n} from \"../../../config/toastConfig\";\nimport appConfig from \"../../../config/appConfig\";\nimport Select from \"react-select\";\nimport {ERROR_401} from \"../../../config/errorPage\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport InputRequire from \"../InputRequire\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\n\nconst InstitutionForm = (props) => {\n    const {id} = useParams();\n    if (!id) {\n        if (!verifyPermission(props.userPermissions, 'store-any-institution'))\n            window.location.href = ERROR_401;\n    } else {\n        if (!verifyPermission(props.userPermissions, 'update-any-institution'))\n            window.location.href = ERROR_401;\n    }\n    const defaultData = {\n        institution_type_id: \"\",\n        name: \"\",\n        acronyme: \"\",\n        iso_code: \"\",\n        logo: \"/assets/media/users/Icon.png\",\n        default_currency_slug:\"\"\n    };\n    const defaultError = {\n        institution_type_id: [],\n        name: [],\n        acronyme: [],\n        iso_code: [],\n        logo: \"/assets/media/users/Icon.png\",\n        default_currency_slug:[]\n    };\n    const [data, setData] = useState(defaultData);\n    const [logo, setLogo] = useState(undefined);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n    const [defaultCurrency, setDefaultCurrency] = useState(null);\n    const [defaultCurrencyData, setDefaultCurrencyData] = useState([]);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            if (verifyPermission(props.userPermissions, 'store-any-institution')) {\n                axios.get(appConfig.apiDomaine + '/any/institutions/create')\n                    .then(response => {\n                        console.log(response.data, \"DEVISE\")\n                        setDefaultCurrencyData(response.data.currencies.length ?\n                            response.data.currencies.map((currencie) => ({\n                                value: currencie.slug,\n                                label: currencie.name.fr\n                            })) : null\n                        )\n                        // setDefaultCurrencyData(options);\n                    })\n                ;\n            }\n\n            if (id) {\n                axios.get(appConfig.apiDomaine + `/any/institutions/${id}`)\n                    .then(response => {\n                        console.log(response, \"GET_INSTITUTION\");\n                        const newInstitution = {\n                            default_currency_slug: (response.data.default_currency_slug !== null) ? (response.data.default_currency_slug) : '',\n                            name: response.data.name,\n                            acronyme: response.data.acronyme,\n                            iso_code: response.data.iso_code,\n                            logo: response.data.logo,\n                        };\n                        setData(newInstitution);\n                        if (response.data.default_currency_slug !== null) {\n                            setDefaultCurrency({\n                                value: response.data.default_currency.slug,\n                                label: response.data.default_currency.name.fr\n                            });\n                        }\n                    })\n                ;\n            }\n        }\n    }, []);\n\n    const onChangeName = (e) => {\n        const newData = {...data};\n        newData.name = e.target.value;\n        setData(newData);\n    };\n    const onChangeCurrencies = (selected) => {\n        const newData = {...data};\n        newData.default_currency_slug = selected.value;\n        setDefaultCurrency(selected);\n        setData(newData);\n    };\n\n    const onChangeAcronyme = (e) => {\n        const newData = {...data};\n        newData.acronyme = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeIsoCode = (e) => {\n        const newData = {...data};\n        newData.iso_code = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeFile = (e) => {\n        const newData = {...data};\n        newData.logo = e.target.files[0];\n        setData(newData);\n        setLogo(newData);\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            var image = document.getElementById('Image1');\n            console.log(image, 'image');\n            image.src = e.target.result;\n        };\n        reader.readAsDataURL(newData.logo);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        if (logo) {\n            formData.append('logo', data.logo);\n        }\n        formData.set('name', data.name);\n        formData.set('default_currency_slug', data.default_currency_slug);\n        formData.set('acronyme', data.acronyme);\n        formData.set('iso_code', data.iso_code);\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            if (id) {\n                formData.append(\"_method\", \"put\");\n                axios.post(appConfig.apiDomaine + `/any/institutions/${id}`, formData)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError({...defaultError});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            } else {\n                axios.post(appConfig.apiDomaine + `/any/institutions`, formData)\n                    .then(response => {\n                        setError(defaultError);\n                        setStartRequest(false);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(error => {\n                        setError({defaultError, ...error.response.data.error});\n                        setStartRequest(false);\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/institution\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Institution\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    {\n                                        id ? \"Modification\" : \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                id ?\n                                                    \"Modification d'une institution\" : \"Ajout d'une institution\"\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-portlet__body\">\n                                        <div className=\"tab-content\">\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\n                                                <div className=\"kt-form kt-form--label-right\">\n                                                    <div className=\"kt-form__body\">\n                                                        <div className=\"kt-section kt-section--first\">\n                                                            <div className=\"kt-section__body\">\n                                                                <div className=\"form-group row\">\n                                                                    <label\n                                                                        className=\"col-xl-3 col-lg-3 col-form-label\">Logo</label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                                        <div className=\"kt-avatar kt-avatar--outline\"\n                                                                             id=\"kt_user_add_avatar\">\n                                                                            <div className=\"kt-avatar__holder\"\n                                                                                 style={{textAlign: 'center'}}>\n                                                                                {\n                                                                                    data.logo?(\n                                                                                        <img\n                                                                                            id=\"Image1\"\n                                                                                            src={data.logo}\n                                                                                            alt=\"logo\"\n                                                                                            style={{\n                                                                                                maxWidth: \"115px\",\n                                                                                                maxHeight: \"115px\",\n                                                                                                textAlign: 'center'\n                                                                                            }}\n                                                                                        />\n                                                                                )\n                                                                                :(\n                                                                                            <img\n                                                                                                id=\"Image1\"\n                                                                                                src={\"/assets/media/users/Icon.png\"}\n                                                                                                alt=\"logo\"\n                                                                                                style={{\n                                                                                                    maxWidth: \"115px\",\n                                                                                                    maxHeight: \"115px\",\n                                                                                                    textAlign: 'center'\n                                                                                                }}\n                                                                                            />\n                                                                                        )}\n\n\n                                                                            </div>\n                                                                            <label className=\"kt-avatar__upload\"\n                                                                                   id=\"files\"\n                                                                                   data-toggle=\"kt-tooltip\"\n                                                                                   title=\"Change avatar\">\n                                                                                <i className=\"fa fa-pen\"/>\n                                                                                <input type=\"file\"\n                                                                                       id=\"file\"\n                                                                                       name=\"kt_user_add_user_avatar\"\n                                                                                       onChange={(e) => onChangeFile(e)}\n                                                                                />\n                                                                            </label>\n                                                                            <span className=\"kt-avatar__cancel\"\n                                                                                  data-toggle=\"kt-tooltip\"\n                                                                                  title=\"Cancel avatar\">\n                                                                            <i className=\"fa fa-times\"/>\n                                                                        </span>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                                {console.log(defaultCurrencyData,\"defaultCurrencyData\")}\n                                                                {defaultCurrencyData ? (\n                                                                    <div\n                                                                        className={error.default_currency_slug.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                        <label\n                                                                            className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                            htmlFor=\"exampleSelect1\">Devise</label>\n                                                                        <div className=\"col-lg-9 col-xl-6\">\n\n                                                                            <Select\n                                                                                value={defaultCurrency}\n                                                                                onChange={onChangeCurrencies}\n                                                                                options={defaultCurrencyData.length ? defaultCurrencyData.map(name => name) : ''}\n                                                                            />\n                                                                            {\n                                                                                error.default_currency_slug.length ? (\n                                                                                    error.default_currency_slug.map((error, index) => (\n                                                                                        <div key={index}\n                                                                                             className=\"invalid-feedback\">\n                                                                                            {error}\n                                                                                        </div>\n                                                                                    ))\n                                                                                ) : null\n                                                                            }\n                                                                        </div>\n                                                                    </div>\n                                                                ) : ''\n                                                                }\n                                                                <div\n                                                                    className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                           htmlFor=\"name\">Nom <InputRequire/></label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                                        <input\n                                                                            id=\"name\"\n                                                                            type=\"text\"\n                                                                            className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                            placeholder=\"Ex:  Satis\"\n                                                                            value={data.name}\n                                                                            onChange={(e) => onChangeName(e)}\n                                                                        />\n                                                                        {\n                                                                            error.name.length ? (\n                                                                                error.name.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : null\n                                                                        }\n                                                                    </div>\n                                                                </div>\n\n                                                                <div\n                                                                    className={error.acronyme.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                           htmlFor=\"Acronyme\">Acronyme <InputRequire/></label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                                        <input\n                                                                            id=\"Acronyme\"\n                                                                            className={error.acronyme.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                            placeholder=\"Ex:  Satis Acronyme\"\n                                                                            type=\"text\"\n                                                                            value={data.acronyme}\n                                                                            onChange={(e) => onChangeAcronyme(e)}\n                                                                        />\n                                                                        {\n                                                                            error.acronyme.length ? (\n                                                                                error.acronyme.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : null\n                                                                        }\n                                                                    </div>\n                                                                </div>\n\n                                                                <div\n                                                                    className={error.iso_code.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                           htmlFor=\"value\">Code Iso <InputRequire/></label>\n                                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                                        <input\n                                                                            id=\"value\"\n                                                                            type=\"text\"\n                                                                            className={error.iso_code.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                            placeholder=\"Ex: 0000-Satis\"\n                                                                            value={data.iso_code}\n                                                                            onChange={(e) => onChangeIsoCode(e)}\n                                                                        />\n                                                                        {\n                                                                            error.iso_code.length ? (\n                                                                                error.iso_code.map((error, index) => (\n                                                                                    <div key={index}\n                                                                                         className=\"invalid-feedback\">\n                                                                                        {error}\n                                                                                    </div>\n                                                                                ))\n                                                                            ) : null\n                                                                        }\n                                                                    </div>\n                                                                </div>\n\n                                                            </div>\n                                                            <div className=\"kt-portlet__foot\">\n                                                                <div className=\"kt-form__actions text-right\">\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <button type=\"submit\"\n                                                                                    onClick={(e) => onSubmit(e)}\n                                                                                    className=\"btn btn-primary\">Enregistrer</button>\n                                                                        ) : (\n                                                                            <button\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                                                type=\"button\" disabled>\n                                                                                Chargement...\n                                                                            </button>\n                                                                        )\n                                                                    }\n                                                                    {\n                                                                        !startRequest ? (\n                                                                            <Link to=\"/settings/institution\"\n                                                                                  className=\"btn btn-secondary mx-2\">\n                                                                                Quitter\n                                                                            </Link>\n                                                                        ) : (\n                                                                            <Link to=\"/settings/institution\"\n                                                                                  className=\"btn btn-secondary mx-2\"\n                                                                                  disabled>\n                                                                                Quitter\n                                                                            </Link>\n                                                                        )\n                                                                    }\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        id ?\n            verifyPermission(props.userPermissions, 'update-any-institution') ? (\n                printJsx()\n            ) : null\n            : verifyPermission(props.userPermissions, 'store-any-institution') ? (\n                printJsx()\n            ) : null\n    );\n\n};\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    }\n};\n\nexport default connect(mapStateToProps)(InstitutionForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/UserAdd.jsx",["1002"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport {Link} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n    toastSuccessMessageWithParameterConfig,\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport InputRequire from \"../components/InputRequire\";\nimport {formatSelectOption} from \"../../helpers/function\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst UserAdd = (props) => {\n    document.title = \"Satis client - Paramètre Envoie de mail\";\n    if (!(verifyPermission(props.userPermissions, 'store-user-any-institution') || verifyPermission(props.userPermissions, \"store-user-my-institution\")))\n        window.location.href = ERROR_401;\n\n    const optionOne = 1;\n    const optionTwo = 0;\n    const defaultData = {\n        identite_id: \"\",\n        roles: [],\n        activate: optionTwo,\n        institution_id: \"\",\n        password: \"\",\n        password_confirmation: \"\",\n    };\n    const defaultError = {\n        identite_id: [],\n        roles: [],\n        activate: [],\n        institution_id: [],\n        password: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n    const [institutions, setInstitutions] = useState([]);\n    const [institution, setInstitution] = useState(null);\n    const [identities, setIdentities] = useState([]);\n    const [identity, setIdentity] = useState(null);\n    const [roles, setRoles] = useState([]);\n    const [role, setRole] = useState([]);\n    const activePilot = institution ? institution.value === props.activeUserInstitution : \"\" === props.activeUserInstitution;\n\n    useEffect(() => {\n        async function fetchData () {\n            let endpoint = \"\";\n            if (props.plan === \"MACRO\") {\n                if (verifyPermission(props.userPermissions, \"store-user-any-institution\"))\n                    endpoint = `${appConfig.apiDomaine}/any/users/create`;\n                if (verifyPermission(props.userPermissions, \"store-user-my-institution\"))\n                    endpoint = `${appConfig.apiDomaine}/my/users/create`;\n            }\n            else if(props.plan === \"HUB\")\n                endpoint = `${appConfig.apiDomaine}/any/users/create`;\n            else if(props.plan === \"PRO\")\n                endpoint = `${appConfig.apiDomaine}/my/users/create`;\n\n            await axios.get(endpoint)\n                .then(({data}) => {\n                    if (verifyPermission(props.userPermissions, \"store-user-any-institution\"))\n                        setInstitutions(formatSelectOption(data, \"name\", false));\n                    else {\n                        setRoles(formatSelectOption(data.roles, \"name\", false, \"name\"));\n                        setIdentities(formatSelectOption(formatIdentities(data.identites), \"fullName\", false));\n                    }\n\n                })\n                .catch(error => {\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [props.plan, appConfig.apiDomaine]);\n\n    const handleIdentityChange = (selected) => {\n        const newData = {...data};\n        newData.identite_id = selected ? selected.value : \"\";\n        setIdentity(selected);\n        setData(newData);\n    };\n\n    const formatSelected = (selected) => {\n        const newSelected = [];\n        selected.map(s => newSelected.push(s.value));\n        return newSelected;\n    };\n\n    const handleRoleChange = (selected) => {\n        const newData = {...data};\n        newData.roles = selected ? formatSelected(selected) : [];\n        setRole(selected);\n        setData(newData);\n    };\n\n    const handleOptionChange = (e) => {\n        const newData = {...data};\n        newData.activate = parseInt(e.target.value);\n        setData(newData);\n    };\n\n    const handlePasswordChange = (e) => {\n        const newData = {...data};\n        newData.password = e.target.value;\n        setData(newData);\n    };\n\n    const handlePasswordConfirmationChange = (e) => {\n        const newData = {...data};\n        newData.password_confirmation = e.target.value;\n        setData(newData);\n    };\n\n    const formatStaff = function (options, labelKey, valueKey = \"id\") {\n        const newOptions = [];\n        for (let i = 0; i < options.length; i++) {\n            newOptions.push({value: (options[i])[valueKey], label: (options[i])[labelKey], staff_id: options[i].staff.id});\n        }\n        return newOptions;\n    };\n\n    const formatIdentities = (identityList) => {\n        for (let i = 0; i < identityList.length; i++)\n            identityList[i].fullName = `${identityList[i].lastname} ${identityList[i].firstname}`;\n        return identityList\n    };\n\n    const loadStaff = async (institutionId) => {\n        if (institutionId) {\n            if (verifyTokenExpire()) {\n                await axios.get(`${appConfig.apiDomaine}/any/users/${institutionId}/create`)\n                    .then(({data}) => {\n                        setRoles(formatSelectOption(data.roles, \"name\", false, \"name\"));\n                        setIdentities(formatStaff(formatIdentities(data.identites), \"fullName\"));\n                    })\n                    .catch(() => console.log(\"Something is wrong\"))\n                ;\n            }\n        }\n    };\n\n    const handleInstitutionChange = (selected) => {\n        const newData = {...defaultData, roles: []};\n        newData.institution_id = selected ? selected.value : \"\";\n        setInstitution(selected);\n        setRole(null);\n        setIdentity(null);\n        setData(newData);\n        loadStaff(selected ? selected.value : null);\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        setStartRequest(true);\n        let endpoint = \"\";\n        if (props.plan === \"MACRO\") {\n            if (verifyPermission(props.userPermissions, \"store-user-any-institution\"))\n                endpoint = `${appConfig.apiDomaine}/any/users`;\n            if (verifyPermission(props.userPermissions, \"store-user-my-institution\"))\n                endpoint = `${appConfig.apiDomaine}/my/users`;\n        }\n        else if(props.plan === \"HUB\")\n            endpoint = `${appConfig.apiDomaine}/any/users`;\n        else if(props.plan === \"PRO\")\n            endpoint = `${appConfig.apiDomaine}/my/users`;\n\n        if (verifyTokenExpire()) {\n            if ((data.roles.includes(\"pilot-filial\") || data.roles.includes('pilot-holding')) && activePilot) {\n                const addUser = await axios.post(endpoint, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        setRole(null);\n                        setInstitution(null);\n                        return true;\n                    })\n                    .catch(errorRequest => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                        return false;\n                    })\n                ;\n\n                if (addUser) {\n                    if (data.activate === 1) {\n                        setStartRequest(true);\n                        const active = await axios.put(`${appConfig.apiDomaine}/active-pilot/institutions/${data.institution_id}`, {staff_id: identity.staff_id})\n                            .then(({data}) => {\n                                setStartRequest(false);\n                                setIdentity(null);\n                                return true;\n                            })\n                            .catch(({response}) => {\n                                setStartRequest(false);\n                                setIdentity(null);\n                                return false;\n                            })\n                        ;\n\n                        if (addUser && active) {\n                            ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Utilisateur enregistré et désigné comme pilote\"));\n                        }\n\n                        if (addUser && !active) {\n                            ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Utilisateur enregistré mais non défini comme pilote actif\"));\n                        }\n                    } else {\n                        setIdentity(null);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig)\n                    }\n                }\n            } else {\n                const addUser = await axios.post(endpoint, data)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        setRole(null);\n                        setInstitution(null);\n                        return true;\n                    })\n                    .catch(errorRequest => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                        return false;\n                    })\n                ;\n\n                if (addUser) {\n                    setIdentity(null);\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig)\n                }\n            }\n        }\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'store-user-any-institution') || verifyPermission(props.userPermissions, \"store-user-my-institution\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètre\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/users\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Utilisateur\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Ajout\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            Utilisateur\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-form kt-form--label-right\">\n                                        <div className=\"kt-portlet__body\">\n                                            {\n                                                verifyPermission(props.userPermissions, \"store-user-any-institution\") ? (\n                                                    <div className={error.institution_id.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"institution\">Institution <InputRequire/></label>\n                                                        <div className=\"col-lg-9 col-xl-6\">\n                                                            <Select\n                                                                isClearable\n                                                                value={institution}\n                                                                placeholder={\"SATIS\"}\n                                                                onChange={handleInstitutionChange}\n                                                                options={institutions}\n                                                            />\n                                                            {\n                                                                error.institution_id.length ? (\n                                                                    error.institution_id.map((error, index) => (\n                                                                        <div key={index} className=\"invalid-feedback\">\n                                                                            {error}\n                                                                        </div>\n                                                                    ))\n                                                                ) : null\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                ) : null\n                                            }\n\n                                            <div className={error.identite_id.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"staff\">Agent<InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <Select\n                                                        isClearable\n                                                        value={identity}\n                                                        placeholder={\"HOUNSSOU Romaric\"}\n                                                        onChange={handleIdentityChange}\n                                                        options={identities}\n                                                    />\n                                                    {\n                                                        error.identite_id.length ? (\n                                                            error.identite_id.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n\n                                            <div className={error.roles.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={\"role\"}>Role <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <Select\n                                                        isClearable\n                                                        isMulti\n                                                        value={role}\n                                                        placeholder={\"admin-satis\"}\n                                                        onChange={handleRoleChange}\n                                                        options={roles}\n                                                    />\n                                                    {\n                                                        error.roles.length ? (\n                                                            error.roles.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n\n                                            {\n                                                (data.roles.includes(\"pilot-filial\") || data.roles.includes('pilot-holding')) && activePilot ? (\n                                                    <div className={error.activate.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={\"role\"}>Pilote actif <InputRequire/></label>\n                                                        <div className=\"col-lg-9 col-xl-6\">\n                                                            <div className=\"kt-radio-inline\">\n                                                                <label className=\"kt-radio\">\n                                                                    <input type=\"radio\" className={error.activate.length ? \"form-control is-invalid\" : \"form-control\"}  value={optionOne} onChange={handleOptionChange} checked={optionOne === data.activate}/> OUI<span/>\n                                                                </label>\n                                                                <label className=\"kt-radio\">\n                                                                    <input type=\"radio\" className={error.activate.length ? \"form-control is-invalid\" : \"form-control\"} value={optionTwo} onChange={handleOptionChange} checked={optionTwo === data.activate}/> NON<span/>\n                                                                </label>\n                                                            </div>\n                                                            {\n                                                                error.activate.length ? (\n                                                                    error.activate.map((error, index) => (\n                                                                        <div key={index} className=\"invalid-feedback\">\n                                                                            {error}\n                                                                        </div>\n                                                                    ))\n                                                                ) : null\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                ) : null\n                                            }\n\n                                            <div className={error.password.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password\">Mot de passe <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <input\n                                                        id=\"password\"\n                                                        type=\"password\"\n                                                        className={error.password.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        placeholder=\"************\"\n                                                        value={data.password}\n                                                        onChange={(e) => handlePasswordChange(e)}\n                                                    />\n                                                    {\n                                                        error.password.length ? (\n                                                            error.password.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n\n                                            <div className={\"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password_confirmation\">Confirmation <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <input\n                                                        id=\"password_confirmation\"\n                                                        type=\"password\"\n                                                        className={\"form-control\"}\n                                                        placeholder=\"************\"\n                                                        value={data.password_confirmation}\n                                                        onChange={(e) => handlePasswordConfirmationChange(e)}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"kt-portlet__foot\">\n                                            <div className=\"kt-form__actions text-right\">\n                                                {\n                                                    !startRequest ? (\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Enregistrer</button>\n                                                    ) : (\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                                            Chargement...\n                                                        </button>\n                                                    )\n                                                }\n\n                                                <Link to={\"/settings/users\"} className=\"btn btn-secondary mx-2\">Quitter</Link>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        activeUserInstitution: state.user.user.institution.id,\n        plan: state.plan.plan\n    };\n};\n\nexport default connect(mapStateToProps)(UserAdd);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ConfigProcessingCircuit.jsx",["1003","1004"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport Select from \"react-select\";\nimport {Link} from \"react-router-dom\";\nimport {\n    loadCss,\n    forceRound,\n    formatSelectOption,\n    getLowerCaseString, debug\n} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n} from \"../../config/toastConfig\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        list: `${appConfig.apiDomaine}/my/processing-circuits`,\n    },\n    MACRO: {\n        holding: {\n            list: `${appConfig.apiDomaine}/any/processing-circuits`,\n        },\n        filial: {\n            list: `${appConfig.apiDomaine}/my/processing-circuits`,\n        }\n    },\n    HUB: {\n        plan: \"HUB\",\n        list: `${appConfig.apiDomaine}/without-institution/processing-circuits`,\n    }\n};\n\n\nconst ConfigProcessingCircuit = (props) => {\n    document.title = \"Satis client - Paramètre Entités de traitement\";\n\n    if (!(verifyPermission(props.userPermissions, 'update-processing-circuit-my-institution') ||\n        verifyPermission(props.userPermissions, \"update-processing-circuit-any-institution\") ||\n        verifyPermission(props.userPermissions, \"update-processing-circuit-without-institution\")))\n        window.location.href = ERROR_401;\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'update-processing-circuit-any-institution'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'update-processing-circuit-my-institution'))\n            endPoint = endPointConfig[props.plan].filial\n    } else\n        endPoint = endPointConfig[props.plan];\n\n    const defaultData = {\n        institution_id: []\n    };\n\n    const [load, setLoad] = useState(true);\n    const [units, setUnits] = useState([]);\n    const [claimObject, setClaimObject] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(5);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [data, setData] = useState(undefined);\n    const [institutionId, setInstitutionId] = useState(undefined);\n    const [error] = useState(defaultData);\n    const [startRequest, setStartRequest] = useState(false);\n    const [institutionData, setInstitutionData] = useState(undefined);\n    const [institution, setInstitution] = useState([]);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            if (verifyPermission(props.userPermissions, 'update-processing-circuit-any-institution')) {\n                axios.get(endPoint.list)\n                    .then(response => {\n                        const options = [\n                            response.data.institutions.length ? response.data.institutions.map((institution) => ({\n                                value: institution.id,\n                                label: institution.name\n                            })) : null\n                        ];\n                        setInstitutionData(options);\n                    });\n            }\n\n            axios.get(endPoint.list)\n                .then(response => {\n                    let newObjectData = [];\n                    response.data.claimCategories.map((claimCategory) => (\n                        claimCategory.claim_objects.map((claimObject) => (\n                            newObjectData[claimObject.id] = claimObject.units.map(unit => (\n                                {value: unit.id, label: unit.name.fr})\n                            )\n                        ))\n                    ));\n\n                    setData(newObjectData);\n                    setLoad(false);\n                    setClaimObject(response.data.claimCategories);\n                    setUnits(response.data.units);\n                    setInstitutionId(response.data.institution_id);\n                    setShowList(response.data.claimCategories.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.claimCategories.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, [endPoint.list,numberPerPage, props.userPermissions]);\n\n    {/*<tr key={i} role=\"row\" className=\"odd\">\n        {\n            i === 0 ?\n                <td rowSpan={category.claim_objects.length}>{category.name.fr}</td>\n                : <td style={{display: \"none\"}}/>\n        }\n        <td>\n            {object.name.fr}\n        </td>\n        <td>\n            {units ? (\n                <Select\n                    value={data[object.id]}\n                    onChange={(e) => onChangeProcessing(e, object.id)}\n                    options={formatSelectOption(units, 'name', \"fr\")}\n                    isMulti\n                    placeholder={\"Veillez selectionez le circuit\"}\n                    key={object.id}\n                />\n            ) : null\n            }\n        </td>\n    </tr>*/}\n\n    const matchToClaimObjectOrEntity = (list, value) => {\n        let match = false;\n        list.map(el => {\n            match = (\n                match ||\n                getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\n                (el.units ? matchToClaimObjectOrEntity(el.units, value) : false)\n            )\n        });\n        return match;\n    };\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newClaimObject = [...claimObject];\n        debug(newClaimObject, \"all\");\n        newClaimObject = newClaimObject.filter(el => (\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\n            matchToClaimObjectOrEntity(el.claim_objects, value)\n        ));\n\n        return newClaimObject;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(claimObject.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(claimObject.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(claimObject.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(claimObject.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(claimObject.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                claimObject.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                claimObject.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const onChangeProcessing = (e, object_id) => {\n        let newData = {...data};\n        newData[object_id] = e?e.map(sel => ({value: sel.value, label: sel.label})):\"\";\n        setData(newData);\n    };\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        let claimObjects = {...data};\n        let values = {};\n\n        for (const claim_object_id in claimObjects) {\n            let processings = claimObjects[claim_object_id];\n\n            values[claim_object_id] = processings?processings.map(processing => (processing.value)):null;\n        }\n\n        let newEndPoint = '';\n        if (verifyPermission(props.userPermissions, 'update-processing-circuit-any-institution')){\n            newEndPoint = endPoint.list + `/${institutionId}`\n        } else {\n            newEndPoint = endPoint.list\n        }\n        // {console.log(values, 'valeur à enregistrer')}\n\n        if (verifyTokenExpire()) {\n            axios.put(newEndPoint, values)\n                .then(response => {\n                    setStartRequest(false);\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                })\n                .catch(error => {\n                    setStartRequest(false);\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                })\n            ;\n        }\n    };\n\n    const onChangeInstitution = (selected) => {\n        setInstitutionId(selected.value);\n        setInstitution(selected);\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + `/any/processing-circuits/${selected.value}`)\n                .then(response => {\n                    setUnits(response.data.units ? response.data.units.map((unit) => (unit)) : null);\n                    let newObjectData = [];\n                    response.data.claimCategories.map((claimCategory) => (\n                        claimCategory.claim_objects.map((claimObject) => (\n                            newObjectData[claimObject.id] = claimObject.units.map(unit => (\n                                {value: unit.id, label: unit.name.fr})\n                            )\n                        ))\n                    ));\n                    setData(newObjectData)\n                })\n            ;\n        }\n    };\n\n    const printBodyTable = (category, index) => {\n        return (\n\n            category.claim_objects ?\n                category.claim_objects.map((object, i) => (\n                    <tr key={i} role=\"row\" className=\"odd\">\n\n                        {\n                            i === 0 ?\n                                <td rowSpan={category.claim_objects.length}>{category.name.fr}</td>\n                                : <td style={{display: \"none\"}}/>\n                        }\n                        <td>\n                            {object.name.fr}\n                        </td>\n                        <td>\n                            {units ? (\n                                <Select\n                                    value={data[object.id]}\n                                    onChange={(e) => onChangeProcessing(e, object.id)}\n                                    options={formatSelectOption(units, 'name', \"fr\")}\n                                    isMulti\n                                    placeholder={\"Veillez selectionez le circuit\"}\n                                    key={object.id}\n                                />\n                            ) : null\n                            }\n                        </td>\n                    </tr>\n                )) : null\n        )\n    };\n\n    return (\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            Paramètres\n                        </h3>\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\n                        <div className=\"kt-subheader__breadcrumbs\">\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Configuration Entités de traitement\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                <InfirmationTable\n                    information={\"Paramètre de configuration des entités de traitement\"}/>\n\n                <div className=\"kt-portlet\">\n                    <HeaderTablePage\n                        addPermission={\"\"}\n                        title={\"Entités de Traitement\"}\n                        addText={\"Ajouter une entité de traitement\"}\n                        addLink={\"/settings/processing-circuit\"}\n                    />\n\n                    {\n                        load ? (\n                            <LoadingTable/>\n                        ) : (\n                            <div className=\"kt-portlet__body\">\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-6 text-left\">\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                <label>\n                                                    Recherche:\n                                                    <input id=\"myInput\" type=\"text\"\n                                                           onKeyUp={(e) => searchElement(e)}\n                                                           className=\"form-control form-control-sm\"\n                                                           placeholder=\"\"\n                                                           aria-controls=\"kt_table_1\"/>\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12\">\n                                            <br/>\n                                            <br/>\n                                            {\n                                                verifyPermission(props.userPermissions, \"update-processing-circuit-any-institution\") ?\n                                                    <div\n                                                        className={error.institution_id.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"exampleSelect1\">Sélectionnez une Institution</label>\n                                                        <div className=\"col-lg-9 col-xl-6\">\n                                                            {\n                                                                institutionData ? (\n                                                                    <Select\n                                                                        placeholder={\"Veillez selectionner l'institution\"}\n                                                                        value={institution}\n                                                                        onChange={onChangeInstitution}\n                                                                        options={institutionData.length ? institutionData[0].map(name => name) : null}\n                                                                    />\n\n                                                                ) : (<select name=\"category\"\n                                                                             className={error.institution_id.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                             id=\"category\">\n                                                                    <option value=\"\"/>\n                                                                </select>)\n                                                            }\n                                                        </div>\n                                                        {\n                                                            error.institution_id.length ? (\n                                                                error.institution_id.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n\n                                                    </div>\n                                                    : null\n                                            }\n\n\n                                            <table\n                                                className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                style={{width: \"952px\"}}>\n                                                <thead>\n                                                <tr role=\"row\">\n\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"80px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Catégorie\n                                                        de plainte\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"100px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Objets\n                                                        de plainte\n                                                    </th>\n                                                    <th className=\"sorting\" tabIndex=\"0\"\n                                                        aria-controls=\"kt_table_1\"\n                                                        rowSpan=\"1\"\n                                                        colSpan=\"1\" style={{width: \"170px\"}}\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Entités\n                                                        de traitement\n                                                    </th>\n\n                                                </tr>\n                                                </thead>\n                                                <tbody>\n                                                {/*{console.log(data,'data')}*/}\n                                                {\n                                                    claimObject ? (\n                                                        showList.length ? (\n                                                            showList.map((category, index) => (\n                                                                printBodyTable(category, index)\n                                                            ))\n                                                        ) : (\n                                                            <EmptyTable search={true}/>\n                                                        )\n                                                    ) : (\n                                                        <EmptyTable/>\n                                                    )\n                                                }\n                                                </tbody>\n\n                                            </table>\n                                            <div className=\"kt-portlet__foot\">\n                                                <div className=\"kt-form__actions text-right\">\n                                                    {\n                                                        !startRequest ? (\n                                                            <button type=\"submit\"\n                                                                    onClick={(e) => onSubmit(e)}\n                                                                    className=\"btn btn-primary\">Enregistrer</button>\n                                                        ) : (\n                                                            <button\n                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                                type=\"button\" disabled>\n                                                                Chargement...\n                                                            </button>\n                                                        )\n                                                    }\n                                                    {\n                                                        !startRequest ? (\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\">\n                                                                Quitter\n                                                            </Link>\n                                                        ) : (\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\"\n                                                                  disabled>\n                                                                Quitter\n                                                            </Link>\n                                                        )\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12 col-md-5\">\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                 aria-live=\"polite\">Affichage de 1\n                                                à {numberPerPage} sur {claimObject.length} données\n                                            </div>\n                                        </div>\n                                        {\n                                            showList.length ? (\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                    <Pagination\n                                                        numberPerPage={numberPerPage}\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\n                                                        activeNumberPage={activeNumberPage}\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                        pages={pages}\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\n                                                        numberPage={numberPage}\n                                                        onClickNextPage={e => onClickNextPage(e)}\n                                                    />\n                                                </div>\n                                            ) : null\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan,\n    };\n};\n\nexport default connect(mapStateToProps)(ConfigProcessingCircuit);\n","/var/vhosts/satis-macro/client/satis-client/src/config/errorPage.js",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimMonitoring.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimImportPage.jsx",["1005","1006","1007","1008","1009","1010","1011"],"import React, {useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastErrorMessageWithParameterConfig, toastSuccessMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport InputRequire from \"../components/InputRequire\";\nimport {Link} from \"react-router-dom\";\nimport ImportFileForm from \"../components/ImportFileForm\";\n\nconst ClaimImportPage = (props) => {\n    document.title = \"Satis client - Importation reclamation\";\n\n    let endpoint = \"\";\n    if (!(verifyPermission(props.userPermissions, 'store-claim-against-any-institution') || verifyPermission(props.userPermissions, \"store-claim-against-my-institution\") || verifyPermission(props.userPermissions, \"store-claim-without-client\")))\n        window.location.href = ERROR_401;\n\n    if (verifyPermission(props.userPermissions, 'store-claim-against-any-institution'))\n        endpoint = `${appConfig.apiDomaine}/any/import-claim`;\n    else if(verifyPermission(props.userPermissions, 'store-claim-against-my-institution'))\n        endpoint = `${appConfig.apiDomaine}/my/import-claim`;\n    else if(verifyPermission(props.userPermissions, 'store-claim-without-client'))\n        endpoint = `${appConfig.apiDomaine}/without-client/import-claim`;\n\n    return (\n        <ImportFileForm\n            submitEndpoint={endpoint}\n            pageTitleLink=\"/process/claims/add\"\n            pageTitle=\"Enregistrement reclamation\"\n            panelTitle=\"Importation de reclamation au format excel\"\n            claimImport={true}\n        />\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimImportPage);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/FaqListe.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimCategoryImportPage.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/Chats.jsx",["1012","1013","1014"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport appConfig from \"../../../config/appConfig\";\nimport {Link} from \"react-router-dom\";\nimport moment from \"moment\";\nimport {connect} from \"react-redux\";\nimport MessageList from \"./MessageList\";\nimport {ToastBottomEnd} from \"../../components/Toast\";\nimport {\n    toastDeleteErrorMessageConfig,\n    toastDeleteSuccessMessageConfig,\n    toastErrorMessageWithParameterConfig,\n} from \"../../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../../config/confirmConfig\";\nimport {filterDiscussionBySearchValue} from \"../../../helpers/function\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport {ERROR_401} from \"../../../config/errorPage\";\nimport LoadingTable from \"../../components/LoadingTable\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nconst Chats = (props) => {\n\n    if (!verifyPermission(props.userPermissions, \"list-my-discussions\"))\n        window.location.href = ERROR_401;\n\n    const defaultData = {\n        text: '',\n        files: [],\n        parent_id: \"\",\n    };\n    const defaultError = {\n        text: '',\n        files: [],\n        parent_id: \"\",\n    };\n    const [data, setData] = useState(defaultData);\n    const [listChat, setListChat] = useState(\"\");\n    const [listChatUsers, setListChatUsers] = useState([]);\n    const [listChatMessages, setListChatMessage] = useState([]);\n    const [idChat, setIdChat] = useState(null);\n    const [startRequest, setStartRequest] = useState(false);\n    const [messageTarget, setMessageTarget] = useState('');\n    const [search, setSearch] = useState(false);\n    const [load, setLoad] = useState(true);\n    const [activeChat, setActiveChat] = useState(false);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + \"/discussions\")\n                .then(response => {\n                    setListChat(response.data);\n                    setLoad(false)\n                })\n                .catch(error => {\n                    setLoad(false);\n                })\n            ;\n        }\n    }, []);\n\n    useEffect(() => {\n        if (localStorage.getItem(\"staffData\") && idChat) {\n            window.Echo.private(`Satis2020.ServicePackage.Models.Identite.${localStorage.getItem(\"staffData\")}`)\n                .notification((notification) => {\n                    if (notification.type.substr(39, notification.type.length) === \"PostDiscussionMessage\") {\n                        if (notification.discussion.id===idChat){\n                           setListChatMessage(notification.messages.reverse());\n                        }\n\n                    }\n                });\n        }\n    }, [localStorage.getItem(\"staffData\"),idChat]);\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            await setSearch(true);\n            filterDiscussionBySearchValue(e);\n        } else {\n            await setSearch(true);\n            filterDiscussionBySearchValue(e);\n            setSearch(false);\n        }\n    };\n\n    const onChangeText = (e) => {\n        let newData = {...data};\n        newData.text = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeFile = (e) => {\n        let newData = {...data};\n        newData.files = Object.values(e.target.files);\n        setData(newData);\n    };\n\n    const responseToMessage = (id, text) => {\n        const newData = {...data};\n        newData.parent_id = id;\n        setMessageTarget(text);\n        setData(newData);\n    };\n\n    const closeTag = () => {\n        const newData = {...data};\n        newData.parent_id = \"\";\n        newData.files = \"\";\n        setMessageTarget(\"\");\n        setData(newData);\n    };\n\n    const onChangeDiscussion = (id) => {\n\n        async function fetchData() {\n            await axios.get(appConfig.apiDomaine + `/discussions/${id}/staff`)\n                .then(response => {\n                    setActiveChat(true);\n                    setListChatUsers(response.data.staff);\n                    setIdChat(response.data.id);\n                })\n                .catch(error => {\n                    setActiveChat(false);\n                    setLoad(false);\n                });\n            await getListMessage(id)\n        }\n\n        if (verifyTokenExpire())\n            fetchData();\n    };\n\n    const getListMessage = (id) => {\n        async function fetchData() {\n            await axios.get(appConfig.apiDomaine + `/discussions/${id}/messages`)\n                .then(response => {\n                    setListChatMessage(response.data.reverse());\n                    document.getElementById('kt-scroll').scrollTo(0, 10000);\n                })\n                .catch(error => {\n                });\n        }\n\n        if (verifyTokenExpire())\n            fetchData();\n    };\n\n    const formatFormData = (newData) => {\n        const formData = new FormData();\n        formData.append(\"_method\", \"post\");\n        for (const key in newData) {\n            if (key === \"files\") {\n                for (let i = 0; i < (newData.files).length; i++)\n                    formData.append(\"files[]\", (newData[key])[i], ((newData[key])[i]).name);\n            } else\n                formData.set(key, newData[key]);\n        }\n        return formData;\n    };\n\n    const addItem = (e) => {\n\n        e.preventDefault();\n        let newData = {...data};\n        if (!newData.files.length)\n            delete newData.files;\n        if (newData.parent_id === \"\")\n            delete newData.parent_id;\n\n        if ((data.text !== '' && idChat) || (data.files !== [] && idChat)) {\n            setStartRequest(true);\n            if (verifyTokenExpire()) {\n                axios.post(appConfig.apiDomaine + `/discussions/${idChat}/messages`, formatFormData(newData))\n                    .then(response => {\n                        // getListMessage(idChat);\n                        const newItems = [...listChatMessages, response.data];\n                        setListChatMessage(newItems);\n                        setData(defaultError);\n                        getListMessage(idChat);\n                        setStartRequest(false);\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error.text));\n                    })\n                ;\n            }\n        }\n    };\n\n    const deletedItem = (key, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (result.value) {\n                    if (verifyTokenExpire()) {\n                        axios.delete(appConfig.apiDomaine + `/discussions/${idChat}/messages/${key}`)\n                            .then(response => {\n                                getListMessage(idChat);\n                                const filteredItems = listChatMessages.filter(item => item.key !== key);\n                                setListChatMessage(filteredItems);\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    return (\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            Traitement\n                        </h3>\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\n                        <div className=\"kt-subheader__breadcrumbs\">\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                className=\"flaticon2-shelter\"/></a>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\n                               className=\"kt-subheader__breadcrumbs-link\">\n                                TChats\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n\n                <div className=\"kt-grid kt-grid--desktop kt-grid--ver kt-grid--ver-desktop kt-app\">\n                    {\n                        load ? (\n                            <LoadingTable/>\n                        ) : (\n                            <div\n                                className=\"kt-grid__item kt-app__toggle kt-app__aside kt-app__aside--lg kt-app__aside--fit\"\n                                id=\"kt_chat_aside\">\n                                {\n                                    listChat ?\n                                        <div className=\"kt-portlet kt-portlet--last\">\n\n                                            <div className=\"kt-portlet__body\">\n                                                <div className=\"kt-searchbar\">\n                                                    <div className=\"input-group\">\n                                                        <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text\"\n                                                  id=\"basic-addon1\">\n                                            <svg\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\"\n                                                viewBox=\"0 0 24 24\" version=\"1.1\" className=\"kt-svg-icon\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<g stroke=\"none\" strokeWidth=\"1\" fill=\"none\"\n                                                                           fillRule=\"evenodd\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"24\"\n                                                                                  height=\"24\"></rect>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path\n                                                                                d=\"M14.2928932,16.7071068 C13.9023689,16.3165825 13.9023689,15.6834175 14.2928932,15.2928932 C14.6834175,14.9023689 15.3165825,14.9023689 15.7071068,15.2928932 L19.7071068,19.2928932 C20.0976311,19.6834175 20.0976311,20.3165825 19.7071068,20.7071068 C19.3165825,21.0976311 18.6834175,21.0976311 18.2928932,20.7071068 L14.2928932,16.7071068 Z\"\n                                                                                fill=\"#000000\" fillRule=\"nonzero\"\n                                                                                opacity=\"0.3\"></path>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path\n                                                                                d=\"M11,16 C13.7614237,16 16,13.7614237 16,11 C16,8.23857625 13.7614237,6 11,6 C8.23857625,6 6,8.23857625 6,11 C6,13.7614237 8.23857625,16 11,16 Z M11,18 C7.13400675,18 4,14.8659932 4,11 C4,7.13400675 7.13400675,4 11,4 C14.8659932,4 18,7.13400675 18,11 C18,14.8659932 14.8659932,18 11,18 Z\"\n                                                                                fill=\"#000000\"\n                                                                                fillRule=\"nonzero\"></path>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\n                                            </span>\n                                                        </div>\n                                                        <input id=\"myInput\" type=\"text\"\n                                                               onKeyUp={(e) => searchElement(e)}\n                                                               className=\"form-control\"\n                                                               placeholder=\"Search\"\n                                                               aria-controls=\"basic-addon1\"/>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"kt-widget kt-widget--users kt-mt-20\">\n                                                    <div className=\"kt-scroll kt-scroll--pull ps ps--active-y\"\n                                                         data-mobile-height=\"300\"\n                                                         style={{height: '250px', overflow: 'hidden'}}>\n                                                        <ul id=\"myUL\">\n                                                            {\n                                                                listChat.map((chat, i) => (\n                                                                    <li key={i}>\n\n                                                                        <div className=\"kt-widget__items\">\n\n\n                                                                            <div className=\"kt-widget__item\">\n                                                                                <i className=\"fa-2x flaticon2-chat-2\"></i>\n                                                                                <div className=\"kt-widget__info\">\n                                                                                    <div className=\"kt-widget__section\">\n                                                                                        <a href={\"#messageList\"}\n                                                                                           activeClassName=\"kt-menu__item--active\"\n                                                                                           aria-haspopup=\"true\"\n                                                                                           onClick={(e) => onChangeDiscussion(chat.id)}\n                                                                                           className=\"kt-widget__username\">{chat.name}\n                                                                                        </a>\n                                                                                        {\n                                                                                            activeChat && idChat === chat.id ?\n                                                                                                <span\n                                                                                                    className=\"kt-badge kt-badge--success kt-badge--dot\"></span>\n                                                                                                : \"\"\n                                                                                        }\n                                                                                    </div>\n\n                                                                                    <span className=\"kt-widget__desc\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{chat.claim.reference}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n                                                                                </div>\n                                                                                <div className=\"kt-widget__action\">\n                                                                <span\n                                                                    className=\"kt-widget__date\">{moment(chat.created_at).format('ll')}</span>\n                                                                                    {idChat === chat.id}\n                                                                                    {/*<span*/}\n                                                                                    {/*    className=\"kt-badge kt-badge--success kt-font-bold\">{listChatUsers.length}</span>*/}\n                                                                                    <div\n                                                                                        className=\"dropdown dropdown-inline\">\n                                                                                        <button type=\"button\"\n                                                                                                className=\"btn btn-clean btn-sm btn-icon btn-icon-md\"\n                                                                                                data-toggle=\"dropdown\"\n                                                                                                aria-haspopup=\"true\"\n                                                                                                aria-expanded=\"false\">\n                                                                                            <i className=\"flaticon2-menu-1\"></i>\n                                                                                        </button>\n\n                                                                                        <div\n                                                                                            className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-md\">\n\n                                                                                            <ul className=\"kt-nav\">\n\n                                                                                                <li className=\"kt-nav__item\">\n                                                                                                    <Link\n                                                                                                        to={chat.id ? `/treatment/chat/contributor/${chat.id}` : \"\"}\n                                                                                                        className=\"kt-nav__link\">\n                                                                                                        <i className=\"kt-nav__link-icon flaticon2-group\"></i>\n                                                                                                        <span\n                                                                                                            className=\"kt-nav__link-text\">Liste des Participants</span>\n\n                                                                                                        <span\n                                                                                                            className=\"kt-nav__link-badge\">\n                                                                                                        <span\n                                                                                                            className=\"kt-badge kt-badge--success  kt-badge--rounded-\">\n                                                                                                            {chat.staff ? chat.staff.length : 0}\n                                                                                                        </span>\n                                                                                                        </span>\n                                                                                                    </Link>\n                                                                                                </li>\n\n                                                                                                <li className=\"kt-nav__separator\"></li>\n\n                                                                                                {/*                                    <li className=\"kt-nav__item\">*/}\n                                                                                                {/*                                        <Link*/}\n                                                                                                {/*                                            to={chat.id ? `/treatment/chat/add_user/${chat.id}` : \"\"}*/}\n                                                                                                {/*                                            className=\"kt-nav__link\">*/}\n                                                                                                {/*                                            <i className=\"kt-nav__link-icon flaticon2-group\"></i>*/}\n                                                                                                {/*                                            <span*/}\n                                                                                                {/*                                                className=\"kt-nav__link-text\">Ajouter un Membre</span>*/}\n                                                                                                {/*                                            <span*/}\n                                                                                                {/*                                                className=\"kt-nav__link-badge\">*/}\n                                                                                                {/*    <span*/}\n                                                                                                {/*        className=\"kt-badge kt-badge--brand  kt-badge--rounded-\">{listChatUsers.length}</span>*/}\n                                                                                                {/*</span>*/}\n                                                                                                {/*                                        </Link>*/}\n                                                                                                {/*                                    </li>*/}\n\n                                                                                                <li className=\"kt-nav__item\">\n                                                                                                    <Link to={\"/treatment/chat/remove_chat\"}\n                                                                                                        className=\"kt-nav__link\">\n                                                                                                        <i className=\"kt-nav__link-icon flaticon-delete\"></i>\n                                                                                                        <span\n                                                                                                            className=\"kt-nav__link-text\">Supprimer un Tchat</span>\n                                                                                                    </Link>\n                                                                                                </li>\n\n                                                                                            </ul>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n\n                                                                        </div>\n                                                                    </li>\n                                                                ))\n                                                            }\n\n                                                        </ul>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        : \"\"\n                                }\n                            </div>\n                        )}\n\n                    <div className=\"kt-grid__item kt-grid__item--fluid kt-app__content\" id=\"messageList\">\n                        <div className=\"kt-chat\" id=\"kt-chat\">\n                            <div className=\"kt-portlet kt-portlet--head-lg- \">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-chat__head \">\n\n                                        <div className=\"kt-chat__left\"><span></span></div>\n                                        <div className=\"kt-chat__center\">\n                                            <h5>Discussions</h5>\n                                        </div>\n                                        {\n                                            verifyPermission(props.userPermissions, \"store-discussion\") ?\n                                                <div className=\"kt-chat__right\">\n                                                    <div className=\"dropdown dropdown-inline\">\n                                                        <button type=\"button\"\n                                                                className=\"btn btn-clean btn-sm btn-icon btn-icon-md\"\n                                                                data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                                                aria-expanded=\"false\">\n                                                            <i className=\"flaticon2-add-1\"></i>\n                                                        </button>\n\n                                                        <div\n                                                            className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-md\">\n\n                                                            <ul className=\"kt-nav\">\n                                                                {/*<li className=\"kt-nav__head\">*/}\n                                                                {/*    Messagerie*/}\n                                                                {/*    <Link*/}\n                                                                {/*        to={idChat ? `/treatment/chat/contributor/${idChat}` : \"\"}>*/}\n                                                                {/*        <i className=\"kt-nav__link-icon flaticon-eye\"></i>*/}\n                                                                {/*    </Link>*/}\n\n                                                                {/*</li>*/}\n                                                                {/*<li className=\"kt-nav__separator\"></li>*/}\n                                                                <li className=\"kt-nav__item\">\n                                                                    <Link to={\"/treatment/chat/add\"}\n                                                                          className=\"kt-nav__link\">\n                                                                        <i className=\"kt-nav__link-icon flaticon-chat-1\"></i>\n                                                                        <span\n                                                                            className=\"kt-nav__link-text\">Créer un Tchat</span>\n                                                                    </Link>\n                                                                </li>\n\n                                                                {/*    <li className=\"kt-nav__item\">*/}\n                                                                {/*        <Link to={\"treatment/chat/remove_chat\"}*/}\n                                                                {/*              className=\"kt-nav__link\">*/}\n                                                                {/*            <i className=\"kt-nav__link-icon flaticon-delete\"></i>*/}\n                                                                {/*            <span*/}\n                                                                {/*                className=\"kt-nav__link-text\">Supprimer un Tchat</span>*/}\n                                                                {/*        </Link>*/}\n                                                                {/*    </li>*/}\n\n                                                                {/*    <li className=\"kt-nav__separator\"></li>*/}\n\n                                                                {/*    <li className=\"kt-nav__item\">*/}\n                                                                {/*        <Link*/}\n                                                                {/*            to={idChat ? `/treatment/chat/add_user/${idChat}` : \"\"}*/}\n                                                                {/*            className=\"kt-nav__link\">*/}\n                                                                {/*            <i className=\"kt-nav__link-icon flaticon2-group\"></i>*/}\n                                                                {/*            <span*/}\n                                                                {/*                className=\"kt-nav__link-text\">Ajouter un Membre</span>*/}\n                                                                {/*            <span className=\"kt-nav__link-badge\">*/}\n                                                                {/*    <span*/}\n                                                                {/*        className=\"kt-badge kt-badge--brand  kt-badge--rounded-\">{listChatUsers.length}</span>*/}\n                                                                {/*</span>*/}\n                                                                {/*        </Link>*/}\n                                                                {/*    </li>*/}\n                                                                {/*    <li className=\"kt-nav__item\">*/}\n                                                                {/*        <Link*/}\n                                                                {/*            to={idChat ? `/treatment/chat/contributor/${idChat}` : \"\"}*/}\n                                                                {/*            className=\"kt-nav__link\">*/}\n                                                                {/*            <i className=\"kt-nav__link-icon flaticon-delete\"></i>*/}\n                                                                {/*            <span*/}\n                                                                {/*                className=\"kt-nav__link-text\">Retirer un Membre</span>*/}\n                                                                {/*        </Link>*/}\n                                                                {/*    </li>*/}\n                                                            </ul>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                :\n                                                <div className=\"kt-chat__right\"></div>\n                                        }\n\n                                    </div>\n                                </div>\n                                <div className=\"kt-portlet__body\">\n                                    <div className=\"kt-scroll kt-scroll--pull ps ps--active-y overflow-auto\"\n                                         id=\"kt-scroll\" data-mobile-height=\"350\"\n                                         style={{height: '250px', overflow: 'auto'}}>\n                                        <div className=\"message-list\">\n\n                                            {\n                                                listChatUsers && listChatMessages.length ?\n                                                    <MessageList\n                                                        idChat={idChat}\n                                                        load={load}\n                                                        getList={listChatUsers}\n                                                        getMessage={listChatMessages}\n                                                        deletedItem={deletedItem}\n                                                        responseItem={responseToMessage}/>\n                                                    :  \"\"\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"kt-portlet__foot\">\n                                    <div className=\"kt-chat__input\">\n\n                                        <input style={{display: \"none\"}}\n                                               id=\"parent_id\"\n                                               type=\"text\"\n                                               value={data.parent_id}\n                                               onChange={responseToMessage}\n                                        />\n\n                                        <div className=\"kt-chat__editor\">\n                                            {\n                                                data.parent_id ?\n                                                    <div className=\"message_target\">\n                                                        <i className=\"d-flex justify-content-end flaticon-close\"\n                                                           onClick={(e) => closeTag(e)}></i>\n                                                        <i className=\"la la-tags\"></i>\n                                                        <br/>\n                                                        <em>{messageTarget}</em>\n                                                    </div> : \"\"\n                                            }\n\n                                            {\n                                                data.files ?\n                                                    data.files.map((file, i) => (\n                                                        <div className=\"message_target\" key={i}>\n                                                            <i className=\"d-flex justify-content-end flaticon-close\"\n                                                               onClick={(e) => closeTag(e)}></i>\n                                                            <img src=\"/assets/media/users/file-icon.png\" alt=\"\"\n                                                                 style={{\n                                                                     maxWidth: \"55px\",\n                                                                     maxHeight: \"55px\",\n                                                                 }}/>\n                                                            {\n                                                                file.name\n                                                            }\n                                                        </div>\n                                                    ))\n                                                    : \"\"\n                                            }\n\n                                            <textarea\n                                                style={{height: \"35px\"}}\n                                                placeholder=\"Type here...\"\n                                                value={data.text}\n                                                onChange={(e) => onChangeText(e)}\n                                            />\n                                        </div>\n                                        <div className=\"kt-chat__toolbar\">\n                                            <div className=\"image-upload\">\n                                                <label htmlFor=\"file-input\"\n                                                       data-toggle=\"kt-tooltip\"\n                                                       title=\"Ajouter un fichier\">\n                                                    <i className=\"fas fa-paperclip\"></i>\n                                                </label>\n                                                <input id=\"file-input\"\n                                                       type=\"file\"\n                                                       onChange={onChangeFile}\n                                                       multiple={true}\n                                                />\n\n                                            </div>\n\n                                            <div className=\"kt_chat__actions\">\n                                                {\n                                                    !startRequest ? (\n                                                        <button type=\"button\"\n                                                                onClick={(e) => addItem(e)}\n                                                                className=\"btn btn-brand btn-md btn-upper btn-bold kt-chat__reply \">Répondre\n                                                        </button>\n                                                    ) : (\n                                                        <button\n                                                            className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                            type=\"button\" disabled>\n                                                            Chargement...\n                                                        </button>\n                                                    )\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(Chats);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ProfilePage.jsx",["1015","1016","1017","1018","1019","1020","1021"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport PersonalInfo from \"../components/profile/PersonalInfo\";\nimport UpdatePassword from \"../components/profile/UpdatePassword\";\nimport axios from \"axios\";\nimport appConfig from \"../../config/appConfig\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nconst ProfilePage = ({user}) => {\n    const defaultData = {\n        firstname: \"\",\n        lastname: \"\",\n        sexe: \"\",\n        telephone: [],\n        email: [],\n        ville: \"\"\n    };\n\n    const [data, setData] = useState(defaultData);\n\n    const username = user.data.username;\n    const formatRole = (rules) => {\n        const newRules = [];\n        rules.map(r => newRules.push(r.name));\n        return newRules.join(' / ');\n    };\n\n    const role = formatRole(user.data.roles);\n\n    useEffect(() => {\n        async function fetchData() {\n            await axios.get(`${appConfig.apiDomaine}/edit-profil`)\n                .then(({data}) => {\n                    setData({\n                        firstname: data.identite.firstname,\n                        lastname: data.identite.lastname,\n                        sexe: data.identite.sexe,\n                        telephone: data.identite.telephone,\n                        email: data.identite.email,\n                        ville: data.identite.ville ? data.identite.ville : \"\"\n                    });\n                })\n                .catch(({response}) => {\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, []);\n\n    const handleLastNameChange = (lastname) => {\n        setData({...data, lastname: lastname});\n    };\n\n    const handleFirstNameChange = (firstname) => {\n        setData({...data, firstname: firstname});\n    };\n\n    const handleTelephoneChange = (tags) => {\n        setData({...data, telephone: tags});\n    };\n\n    const handleEmailChange = (tags) => {\n        setData({...data, email: tags});\n    };\n\n    const handleVilleChange = (ville) => {\n        setData({...data, ville: ville});\n    };\n\n    return (\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            <button className=\"kt-subheader__mobile-toggle kt-subheader__mobile-toggle--left\" id=\"kt_subheader_mobile_toggle\">\n                                <span/>\n                            </button>\n                            Paramètre\n                        </h3>\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\n                        <div className=\"kt-subheader__breadcrumbs\">\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\n                                <i className=\"flaticon2-shelter\"/>\n                            </a>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <a href=\"\" style={{cursor: \"default\"}} onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                Profile\n                            </a>\n                    </div>\n                </div>\n                </div>\n            </div>\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n\n                <div className=\"kt-grid kt-grid--desktop kt-grid--ver kt-grid--ver-desktop kt-app\">\n\n                    <button className=\"kt-app__aside-close\" id=\"kt_user_profile_aside_close\">\n                        <i className=\"la la-close\"/>\n                    </button>\n\n                    <div className=\"kt-grid__item kt-app__toggle kt-app__aside\" id=\"kt_user_profile_aside\">\n                        <div className=\"kt-portlet \">\n                            <div className=\"kt-portlet__head  kt-portlet__head--noborder\">\n                                <div className=\"kt-portlet__head-label\">\n                                    <h3 className=\"kt-portlet__head-title\">\n                                    </h3>\n                                </div>\n                            </div>\n                            <div className=\"kt-portlet__body kt-portlet__body--fit-y\">\n                                <div className=\"kt-widget kt-widget--user-profile-1\">\n                                    <div className=\"kt-widget__head\">\n                                        <div className=\"kt-widget__media\">\n                                            <img src=\"/assets/media/users/default.jpg\" alt=\"image\"/>\n                                        </div>\n                                        <div className=\"kt-widget__content\">\n                                            <div className=\"kt-widget__section\">\n                                                <a href=\"#\" className=\"kt-widget__username\">\n                                                    {`${data.lastname} ${data.firstname}`}\n                                                </a>\n                                                {/*<span className=\"kt-widget__subtitle\">\n                                                    Head of Development\n                                                </span>*/}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"kt-widget__body\">\n                                        <div className=\"kt-widget__content\">\n                                            <div className=\"kt-widget__info\">\n                                                <span className=\"kt-widget__label\">Username:</span>\n                                                <a href=\"#\" className=\"kt-widget__data\">{username}</a>\n                                            </div>\n                                            <div className=\"kt-widget__info\">\n                                                <span className=\"kt-widget__label\">Téléphone:</span>\n                                                <a href=\"#\" className=\"kt-widget__data\">{data.telephone.join(\"/\")}</a>\n                                            </div>\n                                            <div className=\"kt-widget__info\">\n                                                <span className=\"kt-widget__label\">Roles:</span>\n                                                <span className=\"kt-widget__data\">{role}</span>\n                                            </div>\n                                        </div>\n                                        <div className=\"kt-widget__items\">\n                                            <NavLink to=\"/settings/account/personal-information\" className=\"kt-widget__item\" activeClassName=\"kt-widget__item--active\">\n                                                <span className=\"kt-widget__section\">\n                                                    <span className=\"kt-widget__icon\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0h24v24H0z\"/><path d=\"M12 11a4 4 0 110-8 4 4 0 010 8z\" fill=\"#000\" fillRule=\"nonzero\" opacity=\".3\"/><path d=\"M3 20.2c.388-4.773 4.262-7.2 8.983-7.2 4.788 0 8.722 2.293 9.015 7.2.012.195 0 .8-.751.8H3.727c-.25 0-.747-.54-.726-.8z\" fill=\"#000\" fillRule=\"nonzero\"/></g></svg>\n                                                    </span>\n                                                    <span className=\"kt-widget__desc\">\n                                                        Informations personnelles\n                                                    </span>\n                                                </span>\n                                            </NavLink>\n\n                                            <NavLink to=\"/settings/account/change-password\" className=\"kt-widget__item \" activeClassName=\"kt-widget__item--active\">\n                                                <span className=\"kt-widget__section\">\n                                                    <span className=\"kt-widget__icon\">\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0h24v24H0z\"/><path d=\"M4 4l7.631-1.43a2 2 0 01.738 0L20 4v9.283a8.51 8.51 0 01-4 7.217l-3.47 2.169a1 1 0 01-1.06 0L8 20.5a8.51 8.51 0 01-4-7.217V4z\" fill=\"#000\" opacity=\".3\"/><path d=\"M12 11a2 2 0 110-4 2 2 0 010 4zM7 16.5c.216-2.983 2.368-4.5 4.99-4.5 2.66 0 4.846 1.433 5.009 4.5.006.122 0 .5-.418.5H7.404c-.14 0-.415-.338-.404-.5z\" fill=\"#000\" opacity=\".3\"/></g></svg>\n                                                    </span>\n                                                    <span className=\"kt-widget__desc\">\n                                                        Changer le mot de passe\n                                                    </span>\n                                                </span>\n                                            </NavLink>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"kt-grid__item kt-grid__item--fluid kt-app__content\">\n                        <div className=\"row\">\n                            <div className=\"col-xl-12\">\n                                <Route exact path=\"/settings/account\">\n                                    <PersonalInfo\n                                        data={data}\n                                        handleLastNameChange={handleLastNameChange}\n                                        handleFirstNameChange={handleFirstNameChange}\n                                        handleTelephoneChange={handleTelephoneChange}\n                                        handleEmailChange={handleEmailChange}\n                                        handleVilleChange={handleVilleChange}\n                                    />\n                                </Route>\n\n                                <Route exact path=\"/settings/account/personal-information\">\n                                    <PersonalInfo\n                                        data={data}\n                                        handleLastNameChange={handleLastNameChange}\n                                        handleFirstNameChange={handleFirstNameChange}\n                                        handleTelephoneChange={handleTelephoneChange}\n                                        handleEmailChange={handleEmailChange}\n                                        handleVilleChange={handleVilleChange}\n                                    />\n                                </Route>\n\n                                <Route exact path=\"/settings/account/change-password\">\n                                    <UpdatePassword/>\n                                </Route>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user.user\n    };\n};\n\nexport default connect(mapStateToProps)(ProfilePage);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/staff/StaffForm.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/ActivatePilotPage.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/RuleEditPage.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/APP_MACRO/Holding/HoldingClientForm.jsx",["1022","1023","1024","1025"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link,\n    useParams\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"../../views/components/Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig, toastEditErrorMessageConfig, toastEditSuccessMessageConfig,\n    toastErrorMessageWithParameterConfig,\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport '../../views/components/staff/react-tagsinput.css';\nimport Select from \"react-select\";\nimport {formatSelectOption} from \"../../helpers/function\";\nimport {connect} from \"react-redux\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport TagsInput from \"react-tagsinput\";\nimport InputRequire from \"../../views/components/InputRequire\";\nimport WithoutCode from \"../../views/components/WithoutCode\";\nimport ConfirmClientSaveForm from \"../../views/components/Clients/ConfirmClientSaveForm\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        store: `${appConfig.apiDomaine}/my/clients`,\n        storeAccount: id=> `${appConfig.apiDomaine}/my/accounts/${id}/clients`,\n        update: id => `${appConfig.apiDomaine}/my/clients/${id}`,\n        create: `${appConfig.apiDomaine}/my/clients/create`,\n        edit: id => `${appConfig.apiDomaine}/my/clients/${id}/edit`\n    },\n    MACRO: {\n        holding: {\n            store: `${appConfig.apiDomaine}/any/clients`,\n            storeAccount: id=> `${appConfig.apiDomaine}/any/accounts/${id}/clients`,\n            update: id => `${appConfig.apiDomaine}/any/clients/${id}`,\n            create: `${appConfig.apiDomaine}/any/clients/create`,\n            edit: id => `${appConfig.apiDomaine}/any/clients/${id}/edit`\n        },\n        filial: {\n            store: `${appConfig.apiDomaine}/my/clients`,\n            storeAccount: id=> `${appConfig.apiDomaine}/my/accounts/${id}/clients`,\n            update: id => `${appConfig.apiDomaine}/my/clients/${id}`,\n            create: `${appConfig.apiDomaine}/my/clients/create`,\n            edit: id => `${appConfig.apiDomaine}/my/clients/${id}/edit`\n        }\n    },\n};\n\nconst HoldingClientForm = (props) => {\n\n    const {id} = useParams();\n\n    if (!id) {\n        if (!(verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'store-client-from-my-institution')))\n            window.location.href = ERROR_401;\n    } else {\n        if (!(verifyPermission(props.userPermissions, 'update-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-my-institution')))\n            window.location.href = ERROR_401;\n    }\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'store-client-from-my-institution') || verifyPermission(props.userPermissions, 'update-client-from-my-institution'))\n            endPoint = endPointConfig[props.plan].filial\n    } else\n        endPoint = endPointConfig[props.plan];\n\n    const defaultData = {\n        firstname: \"\",\n        lastname: \"\",\n        sexe: \"\",\n        ville: \"\",\n        telephone: [],\n        email: [],\n        client_id: \"\",\n        institution_id: [],\n        account_type_id: \"\",\n        number: [],\n        category_client_id: \"\",\n    };\n\n    const defaultError = {\n        firstname: [],\n        lastname: [],\n        sexe: [],\n        ville: [],\n        telephone: [],\n        email: [],\n        client_id: [],\n        institution_id: [],\n        account_type_id: [],\n        number: [],\n        category_client_id: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n    const [accountType, setAccountTypes] = useState(undefined);\n    const [categoryClient, setCategoryClient] = useState(undefined);\n    const [type, setType] = useState([]);\n    const [category, setCategory] = useState([]);\n    const [nameClient, setNameClient] = useState(undefined);\n    const [client, setClient] = useState([]);\n    const [institutionData, setInstitutionData] = useState(undefined);\n    const [institution, setInstitution] = useState([]);\n    const [disableInput, setDisableInput] = useState(true);\n    const [foundIdentity, setFoundIdentity] = useState(undefined);\n\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(endPoint.create)\n                .then(response => {\n                    // console.log(response.data,\"RESPONSE\")\n                    if (verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution')){\n                        const options =\n                            response.data.institutions.length ? response.data.institutions.map((institution) => ({\n                                value: institution.id,\n                                label: institution.name\n                            })) : \"\";\n                        setInstitutionData(options);\n                    }\n                    if (verifyPermission(props.userPermissions, 'store-client-from-my-institution') || verifyPermission(props.userPermissions, 'update-client-from-my-institution')) {\n                        const clientOptions =\n                            response.data.client_institutions ? response.data.client_institutions.map((client) => ({\n                                value: client.client_id,\n                                label: client.client.identite.firstname + ' ' + client.client.identite.lastname\n                            })) : \"\";\n                        setNameClient(clientOptions);\n                    }\n                    setAccountTypes(response.data.accountTypes);\n                    setCategoryClient(response.data.clientCategories);\n                })\n            ;\n\n            if (id) {\n                axios.get(endPoint.edit(id))\n                    .then(response => {\n                        console.log(response.data,\"DATA\")\n\n                        const newClient = {\n                            firstname: response.data.client_institution.client.identite.firstname,\n                            lastname: response.data.client_institution.client.identite.lastname,\n                            sexe: response.data.client_institution.client.identite.sexe,\n                            telephone: response.data.client_institution.client.identite.telephone,\n                            email: response.data.client_institution.client.identite.email,\n                            institution_id: response.data.client_institution.institution_id,\n                            ville: response.data.client_institution.client.identite.ville === null ? \"\" : response.data.client_institution.client.identite.ville,\n\n                            number: response.data.account.number,\n                            account_type_id: response.data.account.account_type_id,\n                            category_client_id: response.data.client_institution.category_client_id,\n                        };\n                        setData(newClient);\n                        setType({\n                            value: response.data.account.account_type?response.data.account.account_type.id:\"\",\n                            label: response.data.account.account_type?response.data.account.account_type.name.fr:\"\"\n                        });\n                        setCategory({\n                            value: response.data.client_institution.category_client ? response.data.client_institution.category_client.id : \"\",\n                            label: response.data.client_institution.category_client ? response.data.client_institution.category_client.name.fr : \"\"\n                        });\n\n                    })\n                ;\n            }\n        }\n    }, []);\n\n    const onChangeAccountType = (selected) => {\n        const newData = {...data};\n        newData.account_type_id = selected.value;\n        setType(selected);\n        setData(newData);\n    };\n    const onChangeAccount = (e) => {\n        const newData = {...data};\n        newData.number = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeCategoryClient = (selected) => {\n        const newData = {...data};\n        newData.category_client_id = selected.value;\n        setCategory(selected);\n        setData(newData);\n    };\n\n    const onChangeFirstName = (e) => {\n        const newData = {...data};\n        newData.firstname = e.target.value;\n        setData(newData);\n    };\n    const onChangeLastName = (e) => {\n        const newData = {...data};\n        newData.lastname = e.target.value;\n        setData(newData);\n    };\n    const onChangeTelephone = (tel) => {\n        const newData = {...data};\n        newData.telephone = tel;\n        setData(newData);\n    };\n    const onChangeSexe = (e) => {\n        const newData = {...data};\n        newData.sexe = e.target.value;\n        setData(newData);\n    };\n    const onChangeEmail = (mail) => {\n        const newData = {...data};\n        newData.email = mail;\n        setData(newData);\n    };\n    const onChangeVille = (e) => {\n        const newData = {...data};\n        newData.ville = e.target.value;\n        setData(newData);\n    };\n    const onChangeInstitution = (selected) => {\n        const newData = {...data};\n        if (selected) {\n            newData.institution_id = selected.value;\n            setInstitution(selected);\n            if (verifyTokenExpire()) {\n                axios.get(appConfig.apiDomaine + `/any/clients/${newData.institution_id}/institutions`)\n                    .then(response => {\n                        const options =\n                            response.data ? response.data.map((client) => ({\n                                value: client.client_id,\n                                label: client.client.identite.firstname + ' ' + client.client.identite.lastname\n                            })) : \"\";\n                        setNameClient(options);\n                    })\n                ;\n            }\n            setCategory([]);\n            setClient([]);\n            newData.firstname = \"\";\n            newData.lastname = \"\";\n            newData.sexe = \"\";\n            newData.telephone = [];\n            newData.email = [];\n            newData.ville = \"\";\n            newData.client_id = [];\n            newData.account_type_id = \"\";\n            newData.number = [];\n            newData.category_client_id = \"\";\n        }\n        setData(newData);\n        setDisableInput(false)\n    };\n\n    const onChangeClient = (selected) => {\n        const newData = {...data};\n        newData.client_id = selected.value;\n        setClient(selected);\n        if (newData.client_id) {\n            if (verifyTokenExpire()) {\n                axios.get(endPoint.update(`${newData.client_id}`))\n                    .then(response => {\n                        const newIdentity = {\n                            firstname: response.data.client.identite.firstname,\n                            lastname: response.data.client.identite.lastname,\n                            sexe: response.data.client.identite.sexe,\n                            telephone: response.data.client.identite.telephone,\n                            email: response.data.client.identite.email,\n                            ville: response.data.client.identite.ville === null ? \"\" : response.data.client.identite.ville,\n                            client_id: response.data.client_id,\n                            institution_id: response.data.institution_id,\n                            category_client_id: response.data.category_client_id\n                        };\n                        setData(newIdentity);\n                        setCategory({\n                            value: response.data.category_client ? response.data.category_client.id : \"\",\n                            label: response.data.category_client ? response.data.category_client.name.fr : \"\"\n                        });\n                    })\n                ;\n            }\n        }\n\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        let newData = {...data};\n        if (verifyTokenExpire()) {\n            if (!(verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution')))\n                delete newData.institution_id;\n\n            if (id) {\n                axios.put(endPoint.update(`${id}`), newData)\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                    })\n                    .catch((errorRequest) => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...errorRequest.response.data.error});\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                    })\n                ;\n            } else {\n\n                if (data.client_id.length !== 0) {\n                    axios.post(endPoint.storeAccount(`${data.client_id}`), data)\n\n                        .then(response => {\n                            setStartRequest(false);\n                            setError(defaultError);\n                            setData(defaultData);\n                            setInstitution(null);\n                            setType(null);\n                            setCategory(null);\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                        })\n                        .catch((errorRequest) => {\n                            setStartRequest(false);\n                            setError({...defaultError, ...errorRequest.response.data.error});\n                            ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                        })\n                    ;\n                } else {\n                    axios.post(endPoint.store, newData)\n                        .then(response => {\n                            setStartRequest(false);\n                            setError(defaultError);\n                            setData(defaultData);\n                            setType(null);\n                            setCategory(null);\n                            setInstitution(null);\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                        })\n                        .catch(async (errorRequest) => {\n\n                            if (errorRequest.response.data.error.identite) {\n                                await setFoundIdentity(errorRequest.response.data.error);\n                                await document.getElementById(\"confirmClientSaveForm\").click();\n                                await setInstitution(null);\n                                await setType(null);\n                                await setCategory(null);\n                                setStartRequest(false);\n                                setError(defaultError);\n                                setData(defaultData);\n                            } else if (errorRequest.response.data.client) {\n                                setStartRequest(false);\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\n                                    errorRequest.response.data.client.identite.lastname + \" \" + errorRequest.response.data.client.identite.firstname + \": \" + errorRequest.response.data.message)\n                                );\n                            } else {\n                                setStartRequest(false);\n                                setError({...defaultError, ...errorRequest.response.data.error});\n                                ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                            }\n                        });\n                }\n\n            }\n        }\n    };\n\n    return (\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                <div className=\"kt-container  kt-container--fluid \">\n                    <div className=\"kt-subheader__main\">\n                        <h3 className=\"kt-subheader__title\">\n                            Paramètres\n                        </h3>\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\n                        <div className=\"kt-subheader__breadcrumbs\">\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                className=\"flaticon2-shelter\"/></a>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <Link to=\"/settings/clients\" className=\"kt-subheader__breadcrumbs-link\">\n                                Client\n                            </Link>\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                            <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                {\n                                    id ? \"Modification\" : \"Ajout\"\n                                }\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"kt-portlet\">\n                            <div className=\"kt-portlet__head\">\n                                <div className=\"kt-portlet__head-label\">\n                                    <h3 className=\"kt-portlet__head-title\">\n                                        {\n                                            id ?\n                                                \"Modification de Clients\" : \" Ajout de Clients\"\n                                        }\n                                    </h3>\n                                </div>\n                            </div>\n                            <form method=\"POST\" className=\"kt-form\">\n                                <div className=\"kt-portlet__body\">\n                                    <div className=\"kt-section kt-section--first\">\n                                        <h5 className=\"kt-section__title kt-section__title-lg\">Identité:</h5>\n                                        {\n                                            !id ?\n                                                <div className=\"form-group row\">\n                                                    {\n                                                        verifyPermission(props.userPermissions, \"store-client-from-any-institution\") ?\n                                                            <div\n                                                                className={error.institution_id.length ? \"col validated\" : \"col\"}>\n                                                                <label htmlFor=\"exampleSelect1\"> Institution <span\n                                                                    style={{color: \"red\"}}>*</span></label>\n                                                                {institutionData ? (\n                                                                    <Select\n                                                                        value={institution}\n                                                                        placeholder={\"Veillez selectionner l'institution\"}\n                                                                        onChange={onChangeInstitution}\n                                                                        options={institutionData ? institutionData.map(name => name) : ''}\n                                                                    />\n                                                                ) : (\n                                                                    <select name=\"institution\"\n                                                                            className={error.institution_id.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                            id=\"institution\">\n                                                                        <option value=\"\"/>\n                                                                    </select>\n                                                                )\n                                                                }\n\n                                                                {\n                                                                    error.institution_id.length ? (\n                                                                        error.institution_id.map((error, index) => (\n                                                                            <div key={index}\n                                                                                 className=\"invalid-feedback\">\n                                                                                {error}\n                                                                            </div>\n                                                                        ))\n                                                                    ) : null\n                                                                }\n                                                            </div>\n                                                            : null\n                                                    }\n                                                    <div\n                                                        className={error.client_id.length ? \"col validated\" : \"col\"}>\n                                                        <label htmlFor=\"exampleSelect1\"> Client</label>\n                                                        {/*{console.log(nameClient,\"NAME\")}*/}\n                                                        {nameClient ? (\n                                                            <Select\n\n                                                                placeholder={\"Veillez selectionner le client\"}\n                                                                value={client}\n                                                                onChange={onChangeClient}\n                                                                options={nameClient ? nameClient.map(name => name) : ''}\n                                                            />\n                                                        ) : (<select name=\"client\"\n                                                                     className={error.client_id.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                     id=\"client\">\n                                                            <option value=\"\"/>\n                                                        </select>)\n                                                        }\n\n                                                        {\n                                                            error.client_id.length ? (\n                                                                error.client_id.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n                                                </div>\n                                                : null\n                                        }\n                                        <div className=\"form-group row\">\n                                            <div className={error.lastname.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"lastname\">Nom<span style={{color: \"red\"}}>*</span>\n                                                </label>\n                                                <input\n                                                    id=\"lastname\"\n                                                    type=\"text\"\n                                                    className={error.lastname.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez entrer le nom de famille\"\n                                                    value={data.lastname}\n                                                    onChange={(e) => onChangeLastName(e)}\n                                                    disabled={props.getDisable ? props.getDisable : false}\n                                                />\n                                                {\n                                                    error.lastname.length ? (\n                                                        error.lastname.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n\n                                            <div className={error.firstname.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"firstname\">Prénom(s) <span\n                                                    style={{color: \"red\"}}>*</span></label>\n                                                <input\n                                                    id=\"firstname\"\n                                                    type=\"text\"\n                                                    className={error.firstname.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez entrer le prénom\"\n                                                    value={data.firstname}\n                                                    onChange={(e) => onChangeFirstName(e)}\n                                                />\n                                                {\n                                                    error.firstname.length ? (\n                                                        error.firstname.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                        <div className=\"form-group row\">\n                                            <div className={error.sexe.length ? \" col validated\" : \"col\"}>\n                                                <label htmlFor=\"sexe\">Sexe <span\n                                                    style={{color: \"red\"}}>*</span></label>\n                                                <select\n                                                    id=\"sexe\"\n                                                    className={error.sexe.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    value={data.sexe}\n                                                    onChange={(e) => onChangeSexe(e)}\n                                                >\n                                                    <option value=\"\" disabled={true}>Veillez choisir le Sexe\n                                                    </option>\n                                                    <option value=\"F\">Féminin</option>\n                                                    <option value=\"M\">Masculin</option>\n                                                    <option value=\"M\">Autres</option>\n                                                </select>\n                                                {\n                                                    error.sexe.length ? (\n                                                        error.sexe.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                            <div className={error.ville.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"ville\">Ville <InputRequire/></label>\n                                                <input\n                                                    id=\"ville\"\n                                                    type=\"text\"\n                                                    className={error.ville.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez entrer votre ville\"\n                                                    value={data.ville}\n                                                    onChange={(e) => onChangeVille(e)}\n                                                    disabled={props.getDisable ? props.getDisable : false}\n                                                />\n                                                {\n                                                    error.ville.length ? (\n                                                        error.ville.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                        <div className=\"form-group row\">\n                                            <div className={error.telephone.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"telephone\">Téléphone(s) <WithoutCode/>\n                                                    <InputRequire/> </label>\n                                                <TagsInput\n                                                    value={data.telephone}\n                                                    onChange={onChangeTelephone}\n                                                    disabled={props.getDisable ? props.getDisable : false}\n                                                    inputProps={{\n                                                        className: \"react-tagsinput-input\",\n                                                        placeholder: \"Numéro(s)\"\n                                                    }}\n                                                />\n                                                {\n                                                    error.telephone.length ? (\n                                                        error.telephone.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n\n                                            <div className={error.email.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"email\"> Email(s) <InputRequire/></label>\n                                                <TagsInput\n                                                    value={data.email}\n                                                    onChange={onChangeEmail}\n                                                    // disabled={props.getDisable ? props.getDisable : false}\n                                                    inputProps={{\n                                                        className: \"react-tagsinput-input\",\n                                                        placeholder: \"Email(s)\"\n                                                    }}\n                                                />\n                                                {\n                                                    error.email.length ? (\n                                                        error.email.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </div>\n\n                                <div className=\"kt-portlet__body\">\n                                    <div className=\"kt-section kt-section--first\">\n                                        <h5 className=\"kt-section__title kt-section__title-lg\">\n                                            Informations Techniques\n                                        </h5>\n                                        <div className=\"form-group row\">\n                                            <div className={error.account_type_id.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"exampleSelect1\">Type de\n                                                    Compte <InputRequire/></label>\n                                                {accountType ? (\n                                                    <Select\n                                                        placeholder={\"Veillez selectionner le type de compte\"}\n                                                        value={type}\n                                                        onChange={onChangeAccountType}\n                                                        options={formatSelectOption(accountType, 'name', 'fr')}\n                                                    />\n                                                ) : (\n                                                    <select name=\"type\"\n                                                            className={error.account_type_id.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                            id=\"type\">\n                                                        <option value=\"\"/>\n                                                    </select>\n                                                )\n                                                }\n\n                                                {\n                                                    error.account_type_id.length ? (\n                                                        error.account_type_id.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                            <div\n                                                className={error.category_client_id.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"exampleSelect1\">Catégorie\n                                                    Client <InputRequire/></label>\n\n                                                {categoryClient ? (\n                                                    <Select\n                                                        placeholder={\"Veillez selectionner la catégorie client\"}\n                                                        value={category}\n                                                        onChange={onChangeCategoryClient}\n                                                        options={formatSelectOption(categoryClient, 'name', 'fr')}\n                                                    />\n                                                ) : (\n                                                    <select name=\"category\"\n                                                            className={error.category_client_id.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                            id=\"category\">\n                                                        <option value=\"\"/>\n                                                    </select>\n                                                )\n                                                }\n\n                                                {\n                                                    error.category_client_id.length ? (\n                                                        error.category_client_id.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                        <div className=\"form-group row\">\n                                            <div className={error.number.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"number\">Numero de Compte <InputRequire/></label>\n                                                <input\n                                                    id=\"number\"\n                                                    type=\"text\"\n                                                    className={error.number.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez entrer le numero de compte\"\n                                                    value={data.number}\n                                                    onChange={onChangeAccount}\n                                                />\n                                                {\n                                                    error.number.length ? (\n                                                        error.number.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"kt-portlet__foot\">\n                                    <div className=\"kt-form__actions text-right\">\n                                        {\n                                            !startRequest ? (\n                                                <button type=\"submit\" onClick={(e) => onSubmit(e)}\n                                                        className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\n                                            ) : (\n                                                <button\n                                                    className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                    type=\"button\" disabled>\n                                                    Chargement...\n                                                </button>\n                                            )\n                                        }\n                                        {\n                                            !startRequest ? (\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\">\n                                                    Quitter\n                                                </Link>\n                                            ) : (\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\"\n                                                      disabled>\n                                                    Quitter\n                                                </Link>\n                                            )\n                                        }\n                                        <button style={{display: \"none\"}} id=\"confirmClientSaveForm\" type=\"button\" className=\"btn btn-bold btn-label-brand btn-sm\"\n                                                data-toggle=\"modal\" data-target=\"#kt_modal_4\">Launch Modal\n                                        </button>\n\n                                        {\n                                            foundIdentity? (\n                                                <ConfirmClientSaveForm\n                                                    plan={props.plan}\n                                                    userPermissions={props.userPermissions}\n                                                    message={foundIdentity.message}\n                                                    institution={institution}\n                                                    category={category}\n                                                    categories={categoryClient}\n                                                    type={type}\n                                                    identite={foundIdentity}\n                                                    client={client}\n                                                    clients={nameClient}\n                                                    types={accountType}\n                                                    institutions={institutionData}\n                                                    client_id={data.client_id}\n                                                    institution_id={data.institution_id}\n                                                    account_type_id={data.account_type_id}\n                                                    category_id={data.category_client_id}\n                                                    number={data.number}\n                                                    resetFoundIdentity={() => setFoundIdentity({})}\n                                                />\n                                            ) :  null\n                                        }\n                                    </div>\n                                </div>\n                            </form>\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps = state => {\n    return {\n        identite: state.identity,\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan\n    }\n};\n\nexport default connect(mapStateToProps)(HoldingClientForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimReporting.jsx",["1026","1027","1028","1029","1030"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport Select from \"react-select\";\nimport FileSaver from \"file-saver\";\nimport ApexCharts from \"apexcharts\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport appConfig from \"../../config/appConfig\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastErrorMessageWithParameterConfig,\n    toastInvalidPeriodMessageConfig,\n    toastValidPeriodMessageConfig\n} from \"../../config/toastConfig\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {debug, formatSelectOption} from \"../../helpers/function\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {month} from \"../../constants/date\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst ClaimReporting = props => {\n    document.title = \"Satis client - Reporting\";\n    if (!(verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, \"list-reporting-claim-my-institution\")))\n        window.location.href = ERROR_401;\n\n    let endpoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, \"list-reporting-claim-any-institution\"))\n            endpoint = `${appConfig.apiDomaine}/any/reporting-claim`;\n        else if (verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution'))\n            endpoint = `${appConfig.apiDomaine}/my/reporting-claim`;\n    } else if(props.plan === \"HUB\")\n        endpoint = `${appConfig.apiDomaine}/any/reporting-claim`;\n    else if(props.plan === \"PRO\")\n        endpoint = `${appConfig.apiDomaine}/my/reporting-claim`;\n\n\n    const [fetchData, setFetchData] = useState(null);\n    const [institution, setInstitution] = useState(null);\n    const [startDate, setStartDate] = useState(\"\");\n    const [endDate, setEndDate] = useState(\"\");\n    const [typeFilter, setTypeFilter] = useState(\"months\");\n    const [startFilter, setStartFilter] = useState(false);\n    const [startExportation, setStartExportation] = useState(false);\n    const [pdfTitle, setPdfTitle] = useState(`reporting_${new Date().getFullYear()}`);\n    const [possibleFilter, setPossibleFilter] = useState(\n        {\n            months: true,\n            weeks: true,\n            days: true\n        }\n    );\n    const [stateChartOne, setStateChartOne] = useState(\"\");\n    const [stateChartTwo, setStateChartTwo] = useState(\"\");\n\n    var totalCollect = 0;\n    var totalIncomplete = 0;\n    var totalToAssignUnit = 0;\n    var totalToAssignStaff = 0;\n    var totalAwaitingTreatment= 0;\n    var totalToValidate = 0;\n    var totalToMeasureSatisfaction = 0;\n    var totalPercentage = 0;\n\n    const calculateTotal = () => {\n        fetchData.statistiqueObject.map(row => {\n            row.claim_objects.map(elRow => {\n                totalCollect = totalCollect + elRow.total;\n                totalIncomplete = totalIncomplete + elRow.incomplete;\n                totalToAssignUnit = totalToAssignUnit + elRow.toAssignementToUnit;\n                totalToAssignStaff = totalToAssignStaff + elRow.toAssignementToStaff;\n                totalAwaitingTreatment = totalAwaitingTreatment + elRow.awaitingTreatment;\n                totalToValidate = totalToValidate + elRow.toValidate;\n                totalToMeasureSatisfaction = totalToMeasureSatisfaction + elRow.toMeasureSatisfaction;\n                totalPercentage = totalPercentage + elRow.percentage\n            });\n        });\n        totalPercentage = parseFloat((isNaN(totalPercentage / fetchData.statistiqueObject.length) ? 0 : totalPercentage / fetchData.statistiqueObject.length).toFixed(2));\n    };\n\n    if (fetchData)\n        calculateTotal();\n\n    const applyPossibleFilter = (data) => {\n        const newPossibleFilter = {...possibleFilter};\n\n        newPossibleFilter.days = Object.keys(data.days.claims_received).length <= 17;\n        newPossibleFilter.weeks = Object.keys(data.weeks.claims_received).length <= 5;\n        setPossibleFilter(newPossibleFilter);\n    };\n\n    const getGraphOneOptions = (dataGraphOne) => {\n        var labels = [];\n        var series = [];\n        dataGraphOne.map(el => {\n            labels.push(el.name[\"fr\"]);\n            series.push(el.pourcentage)\n        });\n\n        return {\n            series: series,\n            chart: {\n                width: 450,\n                type: 'pie',\n            },\n            dataLabels: {\n                enabled: true,\n                formatter: function (val) {\n                    return val + \"%\"\n                }\n            },\n            labels: labels,\n            responsive: [{\n                breakpoint: 480,\n                options: {\n                    chart: {\n                        width: 200\n                    },\n                    legend: {\n                        position: 'bottom'\n                    }\n                }\n            }]\n        };\n    };\n\n    const getGraphTwoOptions = (dataGraphTwo, type = null) => {\n        var categories = [];\n        var newSeries = {\n            claims_received: [],\n            claims_resolved: []\n        };\n        const getDetailData = () => {\n            for (const property in dataGraphTwo[type ? type : typeFilter].claims_received) {\n                categories.push(property);\n                newSeries.claims_received.push(dataGraphTwo[type ? type : typeFilter].claims_received[property]);\n            }\n            for (const property in dataGraphTwo[type ? type : typeFilter].claims_resolved) {\n                newSeries.claims_resolved.push(dataGraphTwo[type ? type : typeFilter].claims_resolved[property]);\n            }\n        };\n\n        const formatCategoriesMouths = () => {\n            for (var i = 0; i < categories.length; i++)\n                categories[i] = `${ month[categories[i].split(\"-\")[1]] } ${ categories[i].split(\"-\")[0][2] }${ categories[i].split(\"-\")[0][3] }`;\n        };\n\n        const formatCategoriesDays = () => {\n            for (var i = 0; i < categories.length; i++) {\n                categories[i] = `${ categories[i].split(\"-\")[2] } ${ month[categories[i].split(\"-\")[1]] } ${ categories[i].split(\"-\")[0][2] }${ categories[i].split(\"-\")[0][3] }`;\n            }\n        };\n\n        const formatCategoriesWeeks = () => {\n            var start = \"\";\n            var end = \"\";\n            for (var i = 0; i < categories.length; i++) {\n                start = `${categories[i].replace(/\\s/g, '').split(\"-\")[2]} ${month[categories[i].replace(/\\s/g, '').split(\"-\")[1]]} ${categories[i].replace(/\\s/g, '').split(\"-\")[0][2]}${categories[i].replace(/\\s/g, '').split(\"-\")[0][3]}`;\n                end = `${categories[i].replace(/\\s/g, '').split(\"-\")[5]} ${month[categories[i].replace(/\\s/g, '').split(\"-\")[4]]} ${categories[i].replace(/\\s/g, '').split(\"-\")[3][2]}${categories[i].replace(/\\s/g, '').split(\"-\")[3][3]}`;\n                categories[i] = `${start} - ${end}`;\n            }\n        };\n\n        getDetailData();\n\n        if (type === null) {\n            if (typeFilter === \"months\")\n                formatCategoriesMouths();\n            else if (typeFilter === \"days\")\n                formatCategoriesDays();\n            else\n                formatCategoriesWeeks();\n        } else {\n            if (type === \"months\")\n                formatCategoriesMouths();\n            else if (type === \"days\")\n                formatCategoriesDays();\n            else\n                formatCategoriesWeeks();\n        }\n\n        const series = [\n            {\n                name: 'Réclamtions réçues',\n                data: newSeries.claims_received\n            },\n            {\n                name: 'Réclamations résolues',\n                data: newSeries.claims_resolved\n            }\n        ];\n\n        return {\n            series: [{\n                name: series[0].name,\n                data: series[0].data\n            }, {\n                name: series[1].name,\n                data: series[1].data\n            }],\n            chart: {\n                height: 350,\n                type: 'area'\n            },\n            dataLabels: {\n                enabled: false\n            },\n            stroke: {\n                curve: 'smooth'\n            },\n            xaxis: {\n                categories: categories\n            },\n            tooltip: {\n                x: {\n                    format: 'MMM \\'yyyy'\n                },\n            },\n        };\n    };\n\n    const renderChart = (dataGraphOne, dataGraphTwo) => {\n        const chartOne = new ApexCharts(document.getElementById(\"graphOne\"), getGraphOneOptions(dataGraphOne));\n        const chartTwo = new ApexCharts(document.getElementById(\"graphTwo\"), getGraphTwoOptions(dataGraphTwo));\n\n        setStateChartOne(chartOne);\n        setStateChartTwo(chartTwo);\n\n        chartOne.render();\n        chartTwo.render();\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await axios.get(endpoint)\n                .then(response => {\n                    applyPossibleFilter(response.data.statistiqueGraphePeriod);\n                    setFetchData(response.data);\n\n                    renderChart(response.data.statistiqueChannel, response.data.statistiqueGraphePeriod);\n                })\n                .catch(error => console.log(\"Something is wrong\"))\n            ;\n        };\n\n        if (verifyTokenExpire())\n            fetchData();\n    }, []);\n\n    const handleTypeFilterChange = (e) => {\n        setTypeFilter(e.target.value);\n        const parent = document.getElementById(\"parentGraphTwo\");\n        document.getElementById(\"graphTwo\").remove();\n        const div = document.createElement(\"div\");\n        div.id = \"graphTwo\";\n        parent.appendChild(div);\n        const chartTwo = new ApexCharts(document.getElementById(\"graphTwo\"), getGraphTwoOptions(fetchData.statistiqueGraphePeriod, e.target.value));\n        setStateChartTwo(chartTwo);\n        chartTwo.render();\n    };\n\n    const handleStartDateChange = e => {\n        if (endDate && e.target.value) {\n            if (!(new Date(endDate) > new Date(e.target.value)))\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\n            else\n                ToastBottomEnd.fire(toastValidPeriodMessageConfig);\n        }\n        setStartDate(e.target.value);\n    };\n\n    const handleEndDateChange = e => {\n        if (startDate && e.target.value) {\n            if (!(new Date(startDate) < new Date(e.target.value)))\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\n            else\n                ToastBottomEnd.fire(toastValidPeriodMessageConfig);\n        }\n        setEndDate(e.target.value);\n    };\n\n    const handleInstitutionChange = selected => {\n        setInstitution(selected)\n    };\n\n    const filterRequest = () => {\n        const oldData = {...fetchData};\n        setStartFilter(true);\n        setTypeFilter(\"months\");\n        setFetchData(null);\n        setPossibleFilter(\n            {\n                months: true,\n                weeks: true,\n                days: true\n            }\n        );\n        var parameter = \"\";\n        if (institution && startDate && endDate)\n            parameter = `?date_start=${startDate}&date_end=${endDate}&institution_id=${institution.value}`;\n        else if (institution && !startDate && !endDate)\n            parameter = `?institution_id=${institution.value}`;\n        else  if(!institution && startDate && endDate)\n            parameter = `?date_start=${startDate}&date_end=${endDate}`;\n        if (verifyTokenExpire()) {\n            axios.get(`${endpoint}${parameter}`)\n                .then(response => {\n                    setPdfTitle(formatPdfTitle());\n                    setStartFilter(false);\n                    applyPossibleFilter(response.data.statistiqueGraphePeriod);\n                    setFetchData(response.data);\n\n                    renderChart(response.data.statistiqueChannel, response.data.statistiqueGraphePeriod);\n                })\n                .catch(error => {\n                    setStartFilter(false);\n                    setFetchData(oldData);\n                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error.date_end))\n                })\n            ;\n        }\n    };\n\n    const filterData = () => {\n        if (institution && startDate && endDate) {\n            if (startDate && endDate) {\n                if (!(new Date(startDate) <= new Date(endDate)))\n                    ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\n                else {\n                    filterRequest()\n                }\n            } else {\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\n            }\n        } else if (institution && !startDate && !endDate) {\n            filterRequest();\n        } else if (!institution && startDate && endDate) {\n            if (startDate && endDate) {\n                if (!(new Date(startDate) <= new Date(endDate)))\n                    ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\n                else {\n                    filterRequest()\n                }\n            } else {\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\n            }\n        } else {\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Veillez renseigner les parametres correctement\"))\n        }\n    };\n\n    const formatPdfTitle = () => {\n        let newStartDate = startDate;\n        let newEndDate = endDate;\n        while (newStartDate.includes(\"-\") && newEndDate.includes(\"-\")) {\n            newStartDate = newStartDate.replace(\"-\", \"_\");\n            newEndDate = newEndDate.replace(\"-\", \"_\");\n        }\n        if (institution && (newStartDate && newEndDate))\n            return `reporting_${institution.label}_${newStartDate}_at_${newEndDate}`;\n        else if(institution && !(newStartDate && newEndDate))\n            return `reporting_${institution.label}`;\n        else if(!institution && (newStartDate && newEndDate))\n            return `reporting_${newStartDate}_at_${newEndDate}`;\n        else\n            return `reporting_${new Date().getFullYear()}`;\n    };\n\n    const exportToPdf = async () => {\n        var uriOne = \"\";\n        var uriTwo = \"\";\n        await stateChartOne.dataURI().then(({ imgURI, blob }) => {\n            uriOne = imgURI;\n        });\n\n        await stateChartTwo.dataURI().then(({ imgURI, blob }) => {\n            uriTwo = imgURI;\n            });\n\n        if (fetchData) {\n            setStartExportation(true);\n            const sendData = {\n                filter: {\n                    institution: institution ? institution.value : \"\",\n                    startDate: startDate,\n                    endDate: endDate\n                },\n                statistiqueObject: {\n                    data: fetchData.statistiqueObject,\n                    total: {\n                        totalCollect: totalCollect,\n                        totalIncomplete: totalIncomplete,\n                        totalToAssignUnit: totalToAssignUnit,\n                        totalToAssignStaff: totalToAssignStaff,\n                        totalAwaitingTreatment: totalAwaitingTreatment,\n                        totalToValidate: totalToValidate,\n                        totalToMeasureSatisfaction: totalToMeasureSatisfaction,\n                        totalPercentage: totalPercentage,\n                    }\n                },\n                statistiqueQualificationPeriod: fetchData.statistiqueQualificationPeriod,\n                statistiqueTreatmentPeriod: fetchData.statistiqueTreatmentPeriod,\n                statistiqueChannel: fetchData.statistiqueChannel,\n                chanelGraph: {\n                    image: uriOne\n                },\n                evolutionClaim: {\n                    image: uriTwo,\n                    filter: typeFilter\n                },\n                headerBackground: \"#7F9CF5\",\n            };\n\n            if (verifyTokenExpire()) {\n                axios({\n                    method: 'post',\n                    url: `${appConfig.apiDomaine}/any/reporting-claim/export-pdf`,\n                    responseType: 'blob',\n                    data: {data_export: sendData}\n                })\n                    .then(({data}) => {\n                        setStartExportation(false);\n                        FileSaver.saveAs(data, `${pdfTitle}.pdf`);\n                    })\n                    .catch(({response}) => {\n                        setStartExportation(false);\n                    })\n                ;\n            }\n        } else {\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Donné indisponible pour l'exportation\"));\n        }\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Monitoring\n                            </h3>\n\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\n                                    Reporting\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable information={\"Page de reporting\"}/>\n\n                    <div className=\"alert alert-light alert-elevate\" role=\"alert\">\n                        <div className=\"alert-icon\">\n                            {\n                                startExportation ? (\n                                    <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\">\n                                        Chargement...\n                                    </button>\n                                ) : (\n                                    <button className=\"btn btn-info btn-circle\" onClick={exportToPdf}>\n                                        <i className=\"fa fa-file-export\" style={{color: \"white\"}}/> Exportez\n                                    </button>\n                                )\n                            }\n                        </div>\n\n                        <div className=\"alert-text align-items-center\">\n\n                            <div className=\"row col-12 d-flex justify-content-center align-items-center\">\n                                {\n                                    verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\n                                        <div className=\"form-group col-3\">\n                                            <label htmlFor=\"institution\">Institutions</label>\n                                            <Select\n                                                isClearable\n                                                value={institution}\n                                                placeholder={\"Choix institution\"}\n                                                onChange={handleInstitutionChange}\n                                                options={formatSelectOption(fetchData ? fetchData.institutions : [], 'name', false)}\n                                            />\n                                        </div>\n                                    ) : null\n                                }\n\n                                <div className=\"form-group col-3\">\n                                    <label htmlFor=\"start\">Date de début</label>\n                                    <input\n                                        id=\"start\"\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        value={startDate}\n                                        onChange={handleStartDateChange}\n                                    />\n                                </div>\n\n                                <div className=\"form-group col-3\">\n                                    <label htmlFor=\"end\">Date de début</label>\n                                    <input\n                                        id=\"end\"\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        value={endDate}\n                                        onChange={handleEndDateChange}\n                                    />\n                                </div>\n\n                                <div className=\"form-group col-3\">\n                                    {\n                                        !startFilter ? (\n                                            <button\n                                                className=\"btn btn-primary\"\n                                                style={{marginTop: \"25px\"}}\n                                                onClick={() => filterData()}\n                                            >\n                                                <i className=\"fa fa-filter\"/> Filtrer\n                                            </button>\n                                        ) : (\n                                            <button\n                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                type=\"button\" disabled\n                                                style={{marginTop: \"25px\"}}\n                                            >\n                                                Chargement...\n                                            </button>\n                                        )\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            title={\"Reporting Reclamation\"}\n                        />\n\n                        <div className=\"kt-portlet__body\">\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                <div className=\"row\">\n                                    {\n                                        fetchData ? (\n                                            <div className=\"col-sm-12\">\n                                                <strong>Légende: <br/>R </strong>{\"<===>\"} Réclamtions\n                                                <table className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{ width: \"952px\" }}>\n                                                    <thead style={{backgroundColor: \"#7F9CF5\"}}>\n                                                        <tr role=\"row\">\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\">Catégorie de <strong>R</strong>\n                                                            </th>\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\">Objets de <strong>R</strong>\n                                                            </th>\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> collectées\n                                                            </th>\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> incomplète\n                                                            </th>\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à assigner à une unité\n                                                            </th>\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à assigner à un agent\n                                                            </th>\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à traiter\n                                                            </th>\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à valider\n                                                            </th>\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à mesurer satisfaction\n                                                            </th>\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\">Pourcentage de Résolues\n                                                            </th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {\n                                                            fetchData.statistiqueObject.map((row, index) => (\n                                                                row.claim_objects.map((elRow, indexEleRow) => (\n                                                                    indexEleRow === 0 ? (\n                                                                        <tr key={index}>\n                                                                            {\n                                                                                row.claim_objects.length === 0 ? (\n                                                                                    <td>{row.name[\"fr\"]}</td>\n                                                                                ) : (\n                                                                                    <td rowSpan={row.claim_objects.length}>{row.name[\"fr\"]}</td>\n                                                                                )\n                                                                            }\n                                                                            <td>{elRow.name[\"fr\"]}</td>\n                                                                            <td>{elRow.total}</td>\n                                                                            <td>{elRow.incomplete}</td>\n                                                                            <td>{elRow.toAssignementToUnit}</td>\n                                                                            <td>{elRow.toAssignementToStaff}</td>\n                                                                            <td>{elRow.awaitingTreatment}</td>\n                                                                            <td>{elRow.toValidate}</td>\n                                                                            <td>{elRow.toMeasureSatisfaction}</td>\n                                                                            <td>{elRow.percentage} %</td>\n                                                                        </tr>\n                                                                    ) : (\n                                                                        <tr key={indexEleRow}>\n                                                                            <td>{elRow.name[\"fr\"]}</td>\n                                                                            <td>{elRow.total}</td>\n                                                                            <td>{elRow.incomplete}</td>\n                                                                            <td>{elRow.toAssignementToUnit}</td>\n                                                                            <td>{elRow.toAssignementToStaff}</td>\n                                                                            <td>{elRow.awaitingTreatment}</td>\n                                                                            <td>{elRow.toValidate}</td>\n                                                                            <td>{elRow.toMeasureSatisfaction}</td>\n                                                                            <td>{elRow.percentage} %</td>\n                                                                        </tr>\n                                                                    )\n                                                                ))\n                                                            ))\n                                                        }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th colSpan=\"2\" className=\"text-center\">Total</th>\n                                                        <th>{totalCollect}</th>\n                                                        <th>{totalIncomplete}</th>\n                                                        <th>{totalToAssignUnit}</th>\n                                                        <th>{totalToAssignStaff}</th>\n                                                        <th>{totalAwaitingTreatment}</th>\n                                                        <th>{totalToValidate}</th>\n                                                        <th>{totalToMeasureSatisfaction}</th>\n                                                        <th>{totalPercentage} %</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        ) : <LoadingTable/>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            title={\"Délai de qualification des réclamations\"}\n                        />\n\n                        <div className=\"kt-portlet__body\">\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                <div className=\"row\">\n                                    {\n                                        fetchData ? (\n                                            <div className=\"col-sm-12\">\n                                                <table className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{ width: \"952px\" }}>\n                                                    <thead style={{backgroundColor: \"#7F9CF5\", borderLeft: \"none\", borderRight: \"none\"}}>\n                                                        <tr role=\"row\">\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\">Délai de qualification (en jour)\n                                                            </th>\n                                                            {\n                                                                fetchData.statistiqueQualificationPeriod.map((el, index) => (\n                                                                    <th key={index} tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                        colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\n                                                                        aria-label=\"Country: activate to sort column ascending\">{el.libelle}\n                                                                    </th>\n                                                                ))\n                                                            }\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        <tr>\n                                                            <td style={{borderRight: \"none\", borderLeft: \"none\"}}>Nombre</td>\n                                                            {\n                                                                fetchData.statistiqueQualificationPeriod.map((el, index) => (\n                                                                    <td key={index} style={{borderRight: \"none\", borderLeft: \"none\"}}>{el.total}</td>\n                                                                ))\n                                                            }\n                                                        </tr>\n                                                    </tbody>\n                                                    <tfoot>\n                                                        <tr>\n                                                            <th rowSpan=\"1\" colSpan=\"1\" style={{borderRight: \"none\", borderLeft: \"none\"}}>Taux (%)</th>\n                                                            {\n                                                                fetchData.statistiqueQualificationPeriod.map((el, index) => (\n                                                                    <th key={index} rowSpan=\"1\" colSpan=\"1\" style={{borderRight: \"none\", borderLeft: \"none\"}}>{el.pourcentage}</th>\n                                                                ))\n                                                            }\n                                                        </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        ) : <LoadingTable/>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            title={\"Délai de traitement des réclamations\"}\n                        />\n\n                        <div className=\"kt-portlet__body\">\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                <div className=\"row\">\n                                    {\n                                        fetchData ? (\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead style={{backgroundColor: \"#7F9CF5\"}}>\n                                                        <tr role=\"row\">\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\n                                                                aria-label=\"Country: activate to sort column ascending\">Délai de Traitement (en jour)\n                                                            </th>\n                                                            {\n                                                                fetchData.statistiqueTreatmentPeriod.map((el, index) => (\n                                                                    <th key={index} tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                                        colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\n                                                                        aria-label=\"Country: activate to sort column ascending\">{el.libelle}\n                                                                    </th>\n                                                                ))\n                                                            }\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        <tr>\n                                                            <td style={{ borderLeft: \"none\", borderRight: \"none\" }}>Nombre</td>\n                                                            {\n                                                                fetchData.statistiqueTreatmentPeriod.map((el, index) => (\n                                                                    <td key={index} style={{ borderLeft: \"none\", borderRight: \"none\" }}>{el.total}</td>\n                                                                ))\n                                                            }\n                                                        </tr>\n                                                    </tbody>\n                                                    <tfoot>\n                                                        <tr>\n                                                            <th rowSpan=\"1\" colSpan=\"1\" style={{ borderLeft: \"none\", borderRight: \"none\" }}>Taux</th>\n                                                            {\n                                                                fetchData.statistiqueTreatmentPeriod.map((el, index) => (\n                                                                    <th key={index} rowSpan=\"1\" colSpan=\"1\" style={{ borderLeft: \"none\", borderRight: \"none\" }}>{el.pourcentage}</th>\n                                                                ))\n                                                            }\n                                                        </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        ) : <LoadingTable/>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            title={\"Utilisation de canaux\"}\n                        />\n\n                        <div className=\"kt-portlet__body\">\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                <div className=\"row\">\n                                    {\n                                        fetchData ? (\n                                            <div className=\"col-sm-12\">\n                                                <table className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{ width: \"952px\" }}>\n                                                    <thead style={{ backgroundColor: \"#7F9CF5\" }}>\n                                                        <tr role=\"row\">\n                                                            {\n                                                                fetchData.statistiqueChannel.map((channel, index) => (\n                                                                    <th\n                                                                        key={index}\n                                                                        tabIndex=\"0\"\n                                                                        aria-controls=\"kt_table_1\"\n                                                                        rowSpan=\"1\"\n                                                                        colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\n                                                                        aria-label=\"Country: activate to sort column ascending\">\n                                                                        {channel.name[\"fr\"]}\n                                                                    </th>\n                                                                ))\n                                                            }\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody/>\n                                                    <tfoot>\n                                                        <tr>\n                                                            {\n                                                                fetchData.statistiqueChannel.map((channel, index) => (\n                                                                    <th key={index} rowSpan=\"1\" colSpan=\"1\" style={{borderLeft: \"none\", borderRight: \"none\"}}>{channel.total_claim}</th>\n                                                                ))\n                                                            }\n                                                        </tr>\n                                                    </tfoot>\n                                                </table>\n\n                                                {\n                                                    fetchData ? (\n                                                        <div className=\"col-12 d-flex justify-content-center\">\n                                                            <div id=\"graphOne\" style={{position: \"relative\", zIndex: \"1\"}}/>\n                                                        </div>\n                                                    ) : null\n                                                }\n                                            </div>\n                                        ) : <LoadingTable/>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            title={\"Evolution des réclamations\"}\n                        />\n\n                        <div className=\"kt-portlet__body\">\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                <div className=\"row d-flex justify-content-center\">\n                                    <div className=\"form-group col-6\">\n                                        <label htmlFor=\"filter\">filtre</label>\n                                        <select\n                                            id=\"filter\"\n                                            className=\"form-control\"\n                                            value={typeFilter}\n                                            onChange={(e) => handleTypeFilterChange(e)}\n                                        >\n                                            <option value=\"\" disabled={true}>Veillez choisir le filtre</option>\n                                            {\n                                                possibleFilter.months ? (\n                                                    <option value=\"months\">Mois</option>\n                                                ) : null\n                                            }\n                                            {\n                                                possibleFilter.weeks ? (\n                                                    <option value=\"weeks\">Semaine</option>\n                                                ) : null\n                                            }\n                                            {\n                                                possibleFilter.days ? (\n                                                    <option value=\"days\">Jour</option>\n                                                ) : null\n                                            }\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {\n                                        fetchData ? (\n                                            <div id=\"parentGraphTwo\" className=\"col-sm-12\">\n                                                <div id=\"graphTwo\" style={{position: \"relative\", zIndex: 1}}/>\n                                            </div>\n                                        ) : <LoadingTable/>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan,\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimReporting);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/RulePage.jsx",["1031"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastDeleteErrorMessageConfig,\n    toastDeleteSuccessMessageConfig\n} from \"../../config/toastConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst RulePage = (props) => {\n    document.title = \"Satis client - Paramètre role\";\n    if (!(verifyPermission(props.userPermissions, \"list-any-institution-type-role\") || verifyPermission(props.userPermissions ,'list-my-institution-type-role')))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [rules, setRulePages] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        var endpoint = ``;\n        if (verifyPermission(props.userPermissions, 'list-any-institution-type-role'))\n            endpoint = `${appConfig.apiDomaine}/any/roles`;\n        if (verifyPermission(props.userPermissions, 'list-my-institution-type-role'))\n            endpoint = `${appConfig.apiDomaine}/my/roles`;\n        async function fetchData () {\n            await axios.get(endpoint)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setRulePages(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newRulePages = [...rules];\n        newRulePages = newRulePages.filter(el => (\n            getLowerCaseString(el.name ? el.name[\"fr\"] : \"\").indexOf(value) >= 0 ||\n            getLowerCaseString(el.description ? el.description[\"fr\"] : \"\").indexOf(value) >= 0\n        ));\n\n        return newRulePages;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(rules.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(rules.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(rules.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(rules.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(rules.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                rules.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                rules.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deleteRulePage = (ruleId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (verifyTokenExpire()) {\n                    if (result.value) {\n                        var endpoint = \"\";\n                        if (verifyPermission(props.userPermissions, 'destroy-any-institution-type-role'))\n                            endpoint = `${appConfig.apiDomaine}/any/roles/${ruleId}`;\n                        if (verifyPermission(props.userPermissions, 'destroy-my-institution-type-role'))\n                            endpoint = `${appConfig.apiDomaine}/my/roles/${ruleId}`;\n\n                        axios.delete(endpoint)\n                            .then(response => {\n                                const newRulePages = [...rules];\n                                newRulePages.splice(index, 1);\n                                setRulePages(newRulePages);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newRulePages.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newRulePages.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (rule, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{rule.name ? rule.name : \"-\"}</td>\n                <td>\n                    {\n                        rule.is_editable === 1 ? (\n                            verifyPermission(props.userPermissions, 'update-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role') ? (\n                                <Link to={`/settings/rules/${rule.name}/edit`}\n                                      className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                      title=\"Modifier\">\n                                    <i className=\"la la-edit\"/>\n                                </Link>\n                            ) : null\n                        ) : null\n                    }\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-any-institution-type-role') || verifyPermission(props.userPermissions, 'destroy-my-institution-type-role') ? (\n                            <button\n                                onClick={(e) => deleteRulePage(rule.name, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-any-institution-type-role') || verifyPermission(props.userPermissions, 'list-my-institution-type-role') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Roles\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={[\"store-any-institution-type-role\", 'store-my-institution-type-role']}\n                            title={\"Roles\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/rules/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        rules.length ? (\n                                                            showList.length ? (\n                                                                showList.map((rule, index) => (\n                                                                    printBodyTable(rule, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {rules.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(RulePage);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/RuleAddPage.jsx",["1032","1033"],"import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {\n    useParams,\n    Link\n} from \"react-router-dom\";\nimport Select from \"react-select\";\nimport appConfig from \"../../config/appConfig\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport InputRequire from \"../components/InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\nimport {formatPermissions, formatSelectOption} from \"../../helpers/function\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig, toastEditErrorMessageConfig,\n    toastEditSuccessMessageConfig, toastErrorMessageWithParameterConfig\n} from \"../../config/toastConfig\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst RuleAddPage = (props) => {\n    const {id} = useParams();\n    if (id) {\n        if (!(verifyPermission(props.userPermissions, 'update-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role')))\n            window.location.href = ERROR_401;\n    } else {\n        if (!(verifyPermission(props.userPermissions, 'store-any-institution-type-role') || verifyPermission(props.userPermissions, 'store-my-institution-type-role')))\n            window.location.href = ERROR_401;\n    }\n    const defaultData = {\n        name: \"\",\n        institution_type: [],\n    };\n    const defaultError = {\n        name: [],\n        institutionTypes: [],\n        permissions: []\n    };\n    const [institutionTypes, setInstitutionTypes] = useState([]);\n    const [institutionType, setInstitutionType] = useState([]);\n    const [modulesPermissions, setModulesPermissions] = useState(null);\n    const [proModule, setProModule] = useState(null);\n    const [permissions, setPermissions] = useState([]);\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n        async function fetchData () {\n            var endpoint = '';\n            if (id) {\n                if (verifyPermission(props.userPermissions, 'update-any-institution-type-role'))\n                    endpoint = `${appConfig.apiDomaine}/any/roles/${id}/edit`;\n                if (verifyPermission(props.userPermissions, 'update-my-institution-type-role'))\n                    endpoint = `${appConfig.apiDomaine}/my/roles/${id}/edit`;\n                await axios.get(endpoint)\n                    .then(response => {\n                        if (verifyPermission(props.userPermissions, 'update-any-institution-type-role')) {\n                            const newInstitutionTypes = [];\n                            response.data.role.institution_types.map((el, index) => newInstitutionTypes.push({value: index, label: el}));\n\n                            setInstitutionTypes(formatSelectOption(response.data.institutionTypes, 'name'));\n                            setModulesPermissions(response.data.modulesPermissions);\n\n                            const newData = {...data};\n                            newData.name = response.data.role.name;\n                            newData.institution_type = response.data.role.institution_types;\n                            setPermissions(formatPermissions(response.data.role.permissions));\n                            setData(newData);\n                            setInstitutionType(newInstitutionTypes);\n                        } else if (verifyPermission(props.userPermissions, 'update-my-institution-type-role')) {\n                            setPermissions(formatPermissions(response.data.role.permissions));\n                            const newData = {...data};\n                            newData.name = response.data.role.name;\n                            setData(newData);\n                            setProModule(response.data.modulesPermissions.independant);\n                        }\n                    })\n                    .catch(({response}) => {\n                        if (response.data && response.data.error)\n                            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(response.data.error));\n                        console.log(\"Something is wrong\");\n                    })\n                ;\n            } else {\n                if (verifyPermission(props.userPermissions, 'store-any-institution-type-role'))\n                    endpoint = `${appConfig.apiDomaine}/any/roles/create`;\n                if (verifyPermission(props.userPermissions, 'store-my-institution-type-role'))\n                    endpoint = `${appConfig.apiDomaine}/my/roles/create`;\n                await axios.get(endpoint)\n                    .then(response => {\n                        if (verifyPermission(props.userPermissions, 'store-any-institution-type-role')) {\n                            setInstitutionTypes(formatSelectOption(response.data.institutionTypes, 'name'));\n                            setModulesPermissions(response.data.modulesPermissions);\n                        } else if (verifyPermission(props.userPermissions, 'store-my-institution-type-role'))\n                            setProModule(response.data);\n                    })\n                    .catch(error => {\n                        console.log(\"Something is wrong\");\n                    })\n                ;\n            }\n        }\n        if (verifyTokenExpire())\n            fetchData();\n    }, [id, props.userPermissions]);\n\n    const handleNameChange = (e) => {\n        const newData = {...data};\n        newData.name = e.target.value;\n        setData(newData);\n    };\n\n    const handleInstitutionType = (selected) => {\n        const values = [];\n        const newData = {...data};\n        if (selected)\n            selected.map(el => values.push(el.label));\n        newData.institution_type = values;\n        setPermissions([]);\n        setData(newData);\n\n        setInstitutionType(selected);\n        setInstitutionType(selected ? selected : []);\n    };\n\n    const handlePermissionChange = (e) => {\n        var newPermission = [...permissions];\n        if (newPermission.includes(e.target.name))\n            newPermission.splice(newPermission.indexOf(e.target.name), 1);\n        else\n            newPermission.push(e.target.name);\n        setPermissions(newPermission);\n    };\n\n    const printModule = (module, index, allModule) => {\n        return (\n            <div key={index}>\n                <h5 className=\"text-center\">Module: {module.name[\"fr\"]}</h5>\n                <div className={error.permissions.length ? \"form-group row validated\" : \"form-group row\"}>\n                    <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"unit_type\">Permissions <InputRequire/></label>\n                    <div className=\"col-lg-9 col-xl-6\">\n                        <div className=\"kt-checkbox-inline\">\n                            {\n                                module.permissions.map((el, ind) => (\n                                    <label className=\"kt-checkbox\" key={ind}>\n                                        <input className={\"checkInput\"} type=\"checkbox\" name={el.name} onClick={handlePermissionChange} defaultChecked={permissions.includes(el.name)}/> {el.name}<span/>\n                                    </label>\n                                ))\n                            }\n                            {\n                                error.permissions.length ? (\n                                    index === allModule.length - 1 ? (\n                                        error.permissions.map((error, indEr) => (\n                                            <div key={indEr} className=\"invalid-feedback text-center\">\n                                                {error}\n                                            </div>\n                                        ))\n                                    ) : null\n                                ) : null\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    };\n\n    const resetAllCheckbox = () => {\n        const checkbox = document.getElementsByClassName(\"checkInput\");\n        for (var i = 0; i < checkbox.length; i++)\n            checkbox[i].checked = false;\n    };\n\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/rules\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Roles\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    {\n                                        id ? \"Modification\" : \"Ajout\"\n                                    }\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            {\n                                                id ? \"Modification de role\" : \"Ajout de role\"\n                                            }\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-form kt-form--label-right\">\n                                        <div className=\"kt-portlet__body\">\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Nom <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <input\n                                                        id=\"name\"\n                                                        type=\"text\"\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        placeholder=\"Veillez entrer le nom du type d'unité\"\n                                                        value={data.name}\n                                                        onChange={(e) => handleNameChange(e)}\n                                                    />\n                                                    {\n                                                        error.name.length ? (\n                                                            error.name.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n\n                                            {\n                                                verifyPermission(props.userPermissions, 'store-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-any-institution-type-role') ? (\n                                                    <div className={error.institutionTypes.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"unit_type\">Type d'institution <InputRequire/></label>\n                                                        <div className=\"col-lg-9 col-xl-6\">\n                                                            <Select\n                                                                isClearable\n                                                                isMulti\n                                                                value={institutionType}\n                                                                placeholder={\"filial\"}\n                                                                onChange={handleInstitutionType}\n                                                                options={institutionTypes}\n                                                            />\n                                                            {\n                                                                error.institutionTypes.length ? (\n                                                                    error.institutionTypes.map((error, index) => (\n                                                                        <div key={index} className=\"invalid-feedback\">\n                                                                            {error}\n                                                                        </div>\n                                                                    ))\n                                                                ) : null\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                ) : null\n                                            }\n\n                                            {\n                                                verifyPermission(props.userPermissions, 'store-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-any-institution-type-role') ? (\n                                                    institutionType.length ? (\n                                                        <>\n                                                            {\n                                                                data.institution_type.length ? (\n                                                                    data.institution_type.length === 2 ? (\n                                                                        modulesPermissions.all.map((el, index) => (\n                                                                            printModule(el, index, modulesPermissions.all)\n                                                                        ))\n                                                                    ) : (\n                                                                        modulesPermissions[data.institution_type[0]].map((el, index) => (\n                                                                            printModule(el, index, modulesPermissions[data.institution_type[0]])\n                                                                        ))\n                                                                    )\n                                                                ) : null\n                                                            }\n                                                        </>\n                                                    ) : null\n                                                ) : (\n                                                    verifyPermission(props.userPermissions, 'store-my-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role') ? (\n                                                        proModule ? (\n                                                            proModule.map((el, index) => (\n                                                                printModule(el, index, proModule)\n                                                            ))\n                                                        ) : null\n                                                    ) : null\n                                                )\n                                            }\n                                        </div>\n\n                                        <div className=\"kt-portlet__foot\">\n                                            <div className=\"kt-form__actions text-right\">\n                                                {\n                                                    !startRequest ? (\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">\n                                                            {\n                                                                id ? \"Modifier\" : \"Enregistrer\"\n                                                            }\n                                                        </button>\n                                                    ) : (\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                                            Chargement...\n                                                        </button>\n                                                    )\n                                                }\n                                                {\n                                                    !startRequest ? (\n                                                        <Link to=\"/settings/rules\" className=\"btn btn-secondary mx-2\">\n                                                            Quitter\n                                                        </Link>\n                                                    ) : (\n                                                        <Link to=\"/settings/rules\" className=\"btn btn-secondary mx-2\" disabled>\n                                                            Quitter\n                                                        </Link>\n                                                    )\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        const sendData = {\n            name: data.name,\n            permissions: permissions,\n            institutionTypes: data.institution_type\n        };\n        if (verifyPermission(props.userPermissions, 'store-my-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role'))\n            delete sendData.institutionTypes;\n        if (verifyTokenExpire()) {\n            if (id) {\n                var endpoint = \"\";\n                if (verifyPermission(props.userPermissions, 'update-any-institution-type-role'))\n                    endpoint = `${appConfig.apiDomaine}/any/roles/${id}`;\n                if (verifyPermission(props.userPermissions, 'update-my-institution-type-role'))\n                    endpoint = `${appConfig.apiDomaine}/my/roles/${id}`;\n\n                axios.put(endpoint, sendData)\n                    .then(() => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                    })\n                    .catch(({response}) => {\n                        setError({...defaultError, ...response.data.error});\n                        setStartRequest(false);\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                    })\n                ;\n            } else {\n                var endpoint = \"\";\n                if (verifyPermission(props.userPermissions, 'store-any-institution-type-role'))\n                    endpoint = `${appConfig.apiDomaine}/any/roles`;\n                if (verifyPermission(props.userPermissions, 'store-my-institution-type-role'))\n                    endpoint = `${appConfig.apiDomaine}/my/roles`;\n                axios.post(endpoint, sendData)\n                    .then(() => {\n                        if (verifyPermission(props.userPermissions, 'store-any-institution-type-role'))\n                            setInstitutionType([]);\n                        if (verifyPermission(props.userPermissions, 'store-my-institution-type-role'))\n                            resetAllCheckbox();\n                        setPermissions([]);\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(({response}) => {\n                        setError({...defaultError, ...response.data.error});\n                        setStartRequest(false);\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n\n    return (\n        id ?\n            verifyPermission(props.userPermissions, 'update-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role') ? (\n                printJsx()\n            ) : null\n            : verifyPermission(props.userPermissions, 'store-any-institution-type-role') || verifyPermission(props.userPermissions, 'store-my-institution-type-role') ? (\n                printJsx()\n            ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n    };\n};\n\nexport default connect(mapStateToProps)(RuleAddPage);\n","/var/vhosts/satis-macro/client/satis-client/src/constants/dataTable.js",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/IncompleteClaimsEdit.jsx",["1034","1035","1036"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {\n    Link,\n    useParams\n} from \"react-router-dom\";\nimport TagsInput from \"react-tagsinput\";\nimport Select from \"react-select\";\nimport appConfig from \"../../config/appConfig\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport {\n    debug,\n    filterChannel,\n    formatSelectOption,\n    formatToTime,\n    formatToTimeStampUpdate\n} from \"../../helpers/function\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {RESPONSE_CHANNEL} from \"../../constants/channel\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastEditErrorMessageConfig, toastErrorMessageWithParameterConfig, toastSuccessMessageWithParameterConfig,\n} from \"../../config/toastConfig\";\nimport InputRequire from \"./InputRequire\";\nimport InfirmationTable from \"./InfirmationTable\";\nimport WithoutCode from \"./WithoutCode\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        edit: id => `${appConfig.apiDomaine}/my/claims-incompletes/${id}/edit`,\n        update: id => `${appConfig.apiDomaine}/my/claims-incompletes/${id}`,\n    },\n    MACRO: {\n        holding: {\n            edit: id => `${appConfig.apiDomaine}/any/claims-incompletes/${id}/edit`,\n            update: id => `${appConfig.apiDomaine}/any/claims-incompletes/${id}`,\n        },\n        filial: {\n            edit: id => `${appConfig.apiDomaine}/my/claims-incompletes/${id}/edit`,\n            update: id => `${appConfig.apiDomaine}/my/claims-incompletes/${id}`,\n        }\n    },\n    HUB: {\n        plan: \"HUB\",\n        edit: id => `${appConfig.apiDomaine}/without-client/claims-incompletes/${id}/edit`,\n        update: id => `${appConfig.apiDomaine}/without-client/claims-incompletes/${id}`,\n    }\n};\n\nconst IncompleteClaimsEdit = props => {\n    document.title = \"Satis client - Complétion plaintes incomplètes\";\n    const {id} = useParams();\n    if (!(verifyPermission(props.userPermissions, 'update-claim-incomplete-against-any-institution') ||\n        verifyPermission(props.userPermissions, \"update-claim-incomplete-against-my-institution\") ||\n        verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\")))\n        window.location.href = ERROR_401;\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'update-claim-incomplete-against-any-institution'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'update-claim-incomplete-against-my-institution'))\n            endPoint = endPointConfig[props.plan].filial\n    } else\n        endPoint = endPointConfig[props.plan];\n\n    const defaultData = {\n        firstname: null,\n        lastname: null,\n        sexe: null,\n        telephone: [],\n        email: [],\n        ville: null,\n        unit_targeted_id: null,\n        institution_targeted_id: null,\n        account_targeted_id: null,\n        claim_object_id: null,\n        request_channel_slug: null,\n        response_channel_slug: null,\n        claimer_expectation: null,\n        description: null,\n        amount_currency_slug: null,\n        amount_disputed: null,\n        claimer_id: null,\n        relationship_id: null,\n        event_occured_at: null,\n        is_revival: 0,\n        file: []\n    };\n    const defaultError = {\n        firstname: [],\n        lastname: [],\n        sexe: [],\n        telephone: [],\n        email: [],\n        ville: [],\n        unit_targeted_id: [],\n        institution_targeted_id: [],\n        account_targeted_id: [],\n        claim_object_id: [],\n        request_channel_slug: [],\n        response_channel_slug: [],\n        claimer_expectation: [],\n        description: [],\n        amount_currency_slug: [],\n        amount_disputed: [],\n        claimer_id: [],\n        relationship_id: [],\n        event_occured_at: [],\n        is_revival: [],\n        file: []\n    };\n\n    const option1 = 1;\n    const option2 = 0;\n\n    const [claimObject, setClaimObject] = useState({});\n    const [claimObjects, setClaimObjects] = useState([]);\n    const [claimCategory, setClaimCategory] = useState({});\n    const [claimCategories, setClaimCategories] = useState([]);\n    const [accounts, setAccounts] = useState([]);\n    const [account, setAccount] = useState([]);\n    const [units, setUnits] = useState([]);\n    const [unit, setUnit] = useState({});\n    const [responseChannels, setResponseChannels] = useState([]);\n    const [channels, setChannels] = useState([]);\n    const [relationships, setRelationships] = useState([]);\n    const [relationship, setRelationship] = useState({});\n    const [responseChannel, setResponseChannel] = useState({});\n    const [receptionChannel, setReceptionChannel] = useState({});\n    const [currency, setCurrency] = useState({});\n    const [currencies, setCurrencies] = useState([]);\n    const [disabledInput, setDisabledInput] = useState(false);\n    const [institution, setInstitution] = useState({});\n    const [institutions, setInstitutions] = useState([]);\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n    const [isRequire, setIsRequire] = useState(null);\n\n    const currentDate = new Date();\n    currentDate.setHours(currentDate.getHours() + 1);\n    const maxDate = (currentDate.toISOString()).substr(0, (currentDate.toISOString()).length - 1);\n\n    useEffect(() => {\n        async function fetchData() {\n            await axios.get(endPoint.edit(`${id}`))\n                .then(response => {\n                    console.log(response.data, \"GET_DATA\");\n                    const newIncompleteClaim = {\n\n                        claimer_id: response.data.claim.claimer_id,\n                        firstname: response.data.claim.claimer.firstname,\n                        lastname: response.data.claim.claimer.lastname,\n                        sexe: response.data.claim.claimer.sexe,\n                        telephone: response.data.claim.claimer.telephone,\n                        email: response.data.claim.claimer.email,\n                        ville: response.data.claim.claimer.ville === null ? \"\" : response.data.claim.claimer.ville,\n                        unit_targeted_id: response.data.claim.unit_targeted_id,\n                        relationship_id: response.data.claim.relationship_id,\n                        account_targeted_id: response.data.claim.account_targeted_id,\n                        institution_targeted_id: response.data.claim.institution_targeted_id,\n                        claim_object_id: response.data.claim.claim_object_id,\n                        request_channel_slug: response.data.claim.request_channel_slug,\n                        response_channel_slug: response.data.claim.response_channel_slug,\n                        claimer_expectation: response.data.claim.claimer_expectation === null ? \"\" : response.data.claim.claimer_expectation,\n                        description: response.data.claim.description,\n                        amount_currency_slug: response.data.claim.amount_currency_slug ? response.data.claim.amount_currency_slug : \"\",\n                        amount_disputed: response.data.claim.amount_disputed ? response.data.claim.amount_disputed : \"\",\n                        event_occured_at: formatToTime(response.data.claim.event_occured_at),\n                        is_revival: response.data.claim.is_revival,\n                        // file: response.data.claim.files ? response.data.claim.files.map(file => file.title) : null\n                    };\n                    setData(newIncompleteClaim);\n                    setIsRequire(response.data.requirements);\n                    if (verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\"))\n                        setRelationships(formatSelectOption(response.data.relationships, \"name\", \"fr\"));\n\n                    if (verifyPermission(props.userPermissions, \"update-claim-incomplete-against-any-institution\") ||\n                        verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\"))\n                        setInstitutions(formatSelectOption(response.data.institutions, \"name\", false));\n\n                    setClaimCategories(formatSelectOption(response.data.claimCategories, \"name\", \"fr\"));\n                    setCurrencies(formatSelectOption(response.data.currencies, \"name\", \"fr\", \"slug\"));\n                    setChannels(formatSelectOption(response.data.channels, \"name\", \"fr\", \"slug\"));\n                    setResponseChannels(formatSelectOption(filterChannel(response.data.channels, RESPONSE_CHANNEL), \"name\", \"fr\", \"slug\"))\n\n                    if (response.data.claim.request_channel !== null) {\n                        setReceptionChannel({\n                            value: response.data.claim.request_channel.id,\n                            label: response.data.claim.request_channel.name.fr\n                        });\n                    }\n                    if (response.data.claim.response_channel !== null) {\n                        setResponseChannel({\n                            value: response.data.claim.response_channel.id,\n                            label: response.data.claim.response_channel.name.fr\n                        });\n                    }\n                    if (response.data.claim.claim_object !== null) {\n                        setClaimObject({\n                            value: response.data.claim.claim_object.id,\n                            label: response.data.claim.claim_object.name.fr\n                        });\n                    }\n                    if (response.data.claim.claim_object.claim_category !== null) {\n                        setClaimCategory({\n                            value: response.data.claim.claim_object.claim_category.id,\n                            label: response.data.claim.claim_object.claim_category.name.fr\n                        });\n                    }\n                    if (response.data.claim.institution_targeted !== null) {\n                        setInstitution({\n                            value: response.data.claim.institution_targeted.id,\n                            label: response.data.claim.institution_targeted.name\n                        });\n                    }\n                    if (response.data.claim.relationship !== null) {\n                        setRelationship({\n                            value: response.data.claim.relationship.id,\n                            label: response.data.claim.relationship.name.fr\n                        });\n                    }\n                    if (response.data.claim.amount_currency !== null) {\n                        setCurrency({\n                            value: response.data.claim.amount_currency.id,\n                            label: response.data.claim.amount_currency.name.fr\n                        });\n                    }\n                    if (response.data.claim.account_targeted !== null) {\n                        setAccount({\n                            value: response.data.claim.account_targeted.id,\n                            label: response.data.claim.account_targeted.number\n                        });\n                    }\n                    if (response.data.claim.unit_targeted !== null) {\n                        setUnit({\n                            value: response.data.claim.unit_targeted.id,\n                            label: response.data.claim.unit_targeted.name.fr\n                        });\n                    }\n                })\n        }\n\n        if (verifyTokenExpire()) {\n            fetchData();\n        }\n    }, [endPoint, props.userPermissions, id]);\n\n    const onChangeRelationShip = selected => {\n        const newData = {...data};\n        if (selected) {\n            setRelationship(selected);\n            newData.relationship_id = selected.value;\n        } else {\n            setRelationship(null);\n            newData.relationship_id = \"\";\n        }\n        setData(newData);\n    };\n\n    const onChangeFirstName = (e) => {\n        const newData = {...data};\n        newData.firstname = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeLastName = (e) => {\n        const newData = {...data};\n        newData.lastname = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeSexe = (e) => {\n        const newData = {...data};\n        newData.sexe = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeVille = (e) => {\n        const newData = {...data};\n        newData.ville = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeTelephone = (tel) => {\n        const newData = {...data};\n        newData.telephone = tel;\n        setData(newData);\n    };\n\n    const onChangeEmail = (mail) => {\n        const newData = {...data};\n        newData.email = mail;\n        setData(newData);\n    };\n\n    const onChangeUnit = selected => {\n        setUnit(selected);\n        const newData = {...data};\n        if (selected.value !== \"other\")\n            newData.unit_targeted_id = selected.value;\n        else\n            newData.unit_targeted_id = \"\";\n        setData(newData);\n    };\n\n    const onChangeAccount = selected => {\n        setAccount(selected);\n        const newData = {...data};\n        newData.account_targeted_id = selected.value;\n        setData(newData);\n    };\n\n    const onChangeClaimObject = selected => {\n        setClaimObject(selected);\n        const newData = {...data};\n        newData.claim_object_id = selected.value;\n        setData(newData);\n    };\n\n    const onChangeReceptionChannel = selected => {\n        setReceptionChannel(selected);\n        const newData = {...data};\n        newData.request_channel_slug = selected.value;\n        setData(newData);\n    };\n\n    const onChangeResponseChannel = selected => {\n        setResponseChannel(selected);\n        const newData = {...data};\n        newData.response_channel_slug = selected.value;\n        setData(newData);\n    };\n\n    const onChangeClaimCategory = selected => {\n        setClaimCategory(selected);\n        if (verifyTokenExpire()) {\n            axios.get(`${appConfig.apiDomaine}/claim-categories/${selected.value}/claim-objects`)\n                .then(response => {\n                    setClaimObject({});\n                    setClaimObjects(formatSelectOption(response.data.claimObjects, \"name\", \"fr\"));\n                })\n                .catch(error => console.log(\"Something is wrong\"))\n            ;\n        }\n    };\n\n    const onChangeClaimerExpectation = e => {\n        const newData = {...data};\n        newData.claimer_expectation = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeDescription = e => {\n        const newData = {...data};\n        newData.description = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeAmountDisputed = e => {\n        const newData = {...data};\n        newData.amount_disputed = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeAmountCurrency = selected => {\n        setCurrency(selected);\n        const newData = {...data};\n        newData.amount_currency_slug = selected.value;\n        setData(newData);\n    };\n\n    const onChangeEventOccuredAt = e => {\n        const newData = {...data};\n        if (new Date(e.target.value) >= new Date()) {\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Date invalide\"));\n            newData.event_occured_at = \"\";\n        } else\n            newData.event_occured_at = e.target.value;\n        setData(newData);\n    };\n\n    const handleOptionChange = (e) => {\n        const newData = {...data};\n        newData.is_revival = parseInt(e.target.value);\n        setData(newData);\n    };\n\n    const onChangeFile = (e) => {\n        const newData = {...data};\n        newData.file = Object.values(e.target.files);\n        setData(newData);\n    };\n\n\n    const formatFormData = (newData) => {\n        const formData = new FormData();\n        formData.append(\"_method\", \"put\");\n        for (const key in newData) {\n            // console.log(`${key}:`, newData[key]);\n            if (key === \"file\") {\n                for (let i = 0; i < (newData.file).length; i++)\n                    formData.append(\"file[]\", (newData[key])[i], ((newData[key])[i]).name);\n            } else if (key === \"telephone\") {\n                for (let i = 0; i < (newData.telephone).length; i++)\n                    formData.append(\"telephone[]\", (newData[key])[i]);\n            } else if (key === \"email\") {\n                for (let i = 0; i < (newData.email).length; i++)\n                    formData.append(\"email[]\", (newData[key])[i]);\n            } else\n                formData.set(key, newData[key]);\n        }\n        return formData;\n\n    };\n\n    const onSubmit = (e) => {\n        const newData = {...data};\n        e.preventDefault();\n        setStartRequest(true);\n        newData.event_occured_at = formatToTimeStampUpdate(data.event_occured_at);\n\n        // if (!newData.file.length)\n        //     delete newData.file;\n        if (!newData.response_channel_slug)\n            delete newData.response_channel_slug;\n        if (!newData.unit_targeted_id)\n            delete newData.unit_targeted_id;\n        if (!newData.account_targeted_id)\n            delete newData.account_targeted_id;\n        if (!verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\"))\n            delete newData.relationship_id;\n\n        console.log('Coucou', 'COUCOU')\n        debug(endPoint.update(`${id}`), \"endpoint\");\n        for (var value of formatFormData(newData).values()) {\n            debug(value, \"value\");\n        }\n        if (verifyTokenExpire()) {\n            axios.post(endPoint.update(`${id}`), formatFormData(newData))\n                .then((response) => {\n                    console.log(response.data, \"response\");\n                    setStartRequest(false);\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Succès de la complétion\"));\n                    window.location.href = \"/process/incomplete_claims\"\n                })\n                .catch((error) => {\n                    setStartRequest(false);\n                    setError({...defaultError, ...error.response.data.error});\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                })\n            ;\n        }\n    };\n\n    return (\n       ( verifyPermission(props.userPermissions, 'update-claim-incomplete-against-any-institution')\n        || verifyPermission(props.userPermissions, \"update-claim-incomplete-against-my-institution\") ||\n        verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\")) && isRequire? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Collecte\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\n                                    Réclamations Incomplètes\n                                </a>\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                        className=\"flaticon2-shelter\"/></a>\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\n                                       className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\n                                        Complétion\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <InfirmationTable\n                        information={\"Formulaire d'enregistrement d'une réclamation. Utilisez ce formulaire pour completer les réclamations imcomplètes de vos clients.\"}\n                    />\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            Complétion de réclamation\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-portlet__body\">\n                                        {\n                                            verifyPermission(props.userPermissions, 'update-claim-incomplete-against-any-institution') ||\n                                            verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\") ? (\n                                                <div\n                                                    className={error.institution_targeted_id.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                           htmlFor=\"institution\">Institution\n                                                        concernée <InputRequire/></label>\n                                                    <div className=\"col-lg-9 col-xl-6\">\n                                                        <Select\n                                                            classNamePrefix=\"select\"\n                                                            className=\"basic-single\"\n                                                            isDisabled={!disabledInput}\n                                                            placeholder={\"Veillez selectioner l'institution\"}\n                                                            value={institution}\n                                                            options={institutions}\n                                                        />\n                                                        {\n                                                            error.institution_targeted_id.length ? (\n                                                                error.institution_targeted_id.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n                                                </div>\n                                            ) : null\n                                        }\n                                        {\n                                            verifyPermission(props.userPermissions, \"update-claim-incomplete-against-any-institution\") ||\n                                            verifyPermission(props.userPermissions, \"update-claim-incomplete-against-my-institution\") ? (\n                                                <div className=\"kt-section kt-section--first\">\n                                                    <div className=\"kt-section__body\">\n                                                        <h3 className=\"kt-section__title kt-section__title-lg\">\n                                                            Client:</h3>\n\n                                                        <div className=\"form-group row\">\n                                                            <div\n                                                                className={error.lastname.length ? \"col validated\" : \"col\"}>\n                                                                <label htmlFor=\"lastname\">Nom <InputRequire/></label>\n                                                                <input\n                                                                    disabled={!disabledInput}\n                                                                    id=\"lastname\"\n                                                                    type=\"text\"\n                                                                    className={error.lastname.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                    placeholder=\"Veillez entrer le nom de famille\"\n                                                                    value={data.lastname}\n                                                                    onChange={(e) => onChangeLastName(e)}\n                                                                />\n                                                                {\n                                                                    error.lastname.length ? (\n                                                                        error.lastname.map((error, index) => (\n                                                                            <div key={index}\n                                                                                 className=\"invalid-feedback\">\n                                                                                {error}\n                                                                            </div>\n                                                                        ))\n                                                                    ) : null\n                                                                }\n                                                            </div>\n\n                                                            <div\n                                                                className={error.firstname.length ? \"col validated\" : \"col\"}>\n                                                                <label htmlFor=\"firstname\">Prénom\n                                                                    (s) <InputRequire/></label>\n                                                                <input\n                                                                    disabled={!disabledInput}\n                                                                    id=\"firstname\"\n                                                                    type=\"text\"\n                                                                    className={error.firstname.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                    placeholder=\"Veillez entrer le prénom\"\n                                                                    value={data.firstname}\n                                                                    onChange={(e) => onChangeFirstName(e)}\n                                                                />\n                                                                {\n                                                                    error.firstname.length ? (\n                                                                        error.firstname.map((error, index) => (\n                                                                            <div key={index}\n                                                                                 className=\"invalid-feedback\">\n                                                                                {error}\n                                                                            </div>\n                                                                        ))\n                                                                    ) : null\n                                                                }\n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"form-group row\">\n                                                            <div\n                                                                className={error.firstname.length ? \"form-group col validated\" : \"form-group col\"}>\n                                                                <label htmlFor=\"sexe\">Sexe <InputRequire/></label>\n                                                                <select\n                                                                    disabled={!disabledInput}\n                                                                    id=\"sexe\"\n                                                                    className={error.sexe.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                    value={data.sexe}\n                                                                    onChange={(e) => onChangeSexe(e)}\n                                                                >\n                                                                    <option value=\"\" disabled={true}>Veillez choisir le\n                                                                        Sexe\n                                                                    </option>\n                                                                    <option value=\"F\">Féminin</option>\n                                                                    <option value=\"M\">Masculin</option>\n                                                                    <option value=\"A\">Autres</option>\n                                                                </select>\n                                                                {\n                                                                    error.sexe.length ? (\n                                                                        error.sexe.map((error, index) => (\n                                                                            <div key={index}\n                                                                                 className=\"invalid-feedback\">\n                                                                                {error}\n                                                                            </div>\n                                                                        ))\n                                                                    ) : null\n                                                                }\n                                                            </div>\n                                                            <div\n                                                                className={error.ville.length ? \"col validated\" : \"col\"}>\n                                                                <label htmlFor=\"ville\">Ville </label>\n                                                                <input\n                                                                    disabled={!disabledInput}\n                                                                    id=\"ville\"\n                                                                    type=\"text\"\n                                                                    className={error.ville.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                    placeholder=\"Veillez entrer votre ville\"\n                                                                    value={data.ville}\n                                                                    onChange={(e) => onChangeVille(e)}\n                                                                />\n                                                                {\n                                                                    error.ville.length ? (\n                                                                        error.ville.map((error, index) => (\n                                                                            <div key={index}\n                                                                                 className=\"invalid-feedback\">\n                                                                                {error}\n                                                                            </div>\n                                                                        ))\n                                                                    ) : null\n                                                                }\n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"form-group row\">\n                                                            <div\n                                                                className={error.telephone.length ? \"col validated\" : \"col\"}>\n                                                                <label htmlFor=\"telephone\"> Téléphone(s)<WithoutCode/>\n                                                                    <InputRequire/></label>\n                                                                <TagsInput disabled={!disabledInput}\n                                                                           value={data.telephone}\n                                                                           onChange={onChangeTelephone}\n                                                                           inputProps={{\n                                                                               className: 'react-tagsinput-input',\n                                                                               placeholder: 'Numéro(s)'\n                                                                           }}\n                                                                />\n                                                                {\n                                                                    error.telephone.length ? (\n                                                                        error.telephone.map((error, index) => (\n                                                                            <div key={index}\n                                                                                 className=\"invalid-feedback\">\n                                                                                {error}\n                                                                            </div>\n                                                                        ))\n                                                                    ) : null\n                                                                }\n                                                            </div>\n\n                                                            <div\n                                                                className={error.email.length ? \"col validated\" : \"col\"}>\n                                                                <label htmlFor=\"email\">Email(s) <InputRequire/></label>\n                                                                <TagsInput disabled={!disabledInput} value={data.email}\n                                                                           onChange={onChangeEmail} inputProps={{\n                                                                    className: 'react-tagsinput-input',\n                                                                    placeholder: 'Email(s)'\n                                                                }}/>\n                                                                {\n                                                                    error.email.length ? (\n                                                                        error.email.map((error, index) => (\n                                                                            <div key={index}\n                                                                                 className=\"invalid-feedback\">\n                                                                                {error}\n                                                                            </div>\n                                                                        ))\n                                                                    ) : null\n                                                                }\n                                                            </div>\n\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            ) : null\n                                        }\n\n                                        <div\n                                            className=\"kt-separator kt-separator--border-dashed kt-separator--space-lg\"/>\n\n                                        <div className=\"kt-section\">\n                                            <div className=\"kt-section__body\">\n                                                <h3 className=\"kt-section__title kt-section__title-lg\"> Réclamation:</h3>\n                                                {\n                                                    !verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\") ?\n                                                        (\n                                                            <div className=\"form-group row\">\n                                                                <div\n                                                                    className={error.unit_targeted_id.length ? \"col validated\" : \"col\"}>\n                                                                    <label htmlFor=\"unit\">Unité concernée {isRequire.unit_targeted_id?<InputRequire/>:\"\"}</label>\n                                                                    <Select\n                                                                        classNamePrefix=\"select\"\n                                                                        className=\"basic-single\"\n                                                                        placeholder={\"Veillez selectioner l'unité\"}\n                                                                        value={unit}\n                                                                        onChange={onChangeUnit}\n                                                                        options={units}\n                                                                    />\n                                                                    {\n                                                                        error.unit_targeted_id.length ? (\n                                                                            error.unit_targeted_id.map((error, index) => (\n                                                                                <div key={index}\n                                                                                     className=\"invalid-feedback\">\n                                                                                    {error}\n                                                                                </div>\n                                                                            ))\n                                                                        ) : null\n                                                                    }\n                                                                </div>\n                                                                <div\n                                                                    className={error.account_targeted_id.length ? \"col validated\" : \"col\"}>\n                                                                    <label htmlFor=\"account\">Numéro de compte\n                                                                        concerné {isRequire.account_targeted_id?<InputRequire/>:\"\"}</label>\n                                                                    <Select\n                                                                        classNamePrefix=\"select\"\n                                                                        className=\"basic-single\"\n                                                                        placeholder={\"Veillez selectioner le numéro\"}\n                                                                        value={account}\n                                                                        onChange={onChangeAccount}\n                                                                        options={accounts}\n                                                                    />\n                                                                    {\n                                                                        error.account_targeted_id.length ? (\n                                                                            error.account_targeted_id.map((error, index) => (\n                                                                                <div key={index}\n                                                                                     className=\"invalid-feedback\">\n                                                                                    {error}\n                                                                                </div>\n                                                                            ))\n                                                                        ) : null\n                                                                    }\n                                                                </div>\n                                                            </div>\n                                                        )\n                                                        : null\n                                                }\n\n                                                <div className=\"form-group row\">\n                                                    <div\n                                                        className={error.request_channel_slug.length ? \"col validated\" : \"col\"}>\n                                                        <label htmlFor=\"receptionChannel\">Canal de\n                                                            réception <InputRequire/></label>\n                                                        <Select\n                                                            classNamePrefix=\"select\"\n                                                            className=\"basic-single\"\n                                                            placeholder={\"Veillez selectioner le canal de réception\"}\n                                                            value={receptionChannel}\n                                                            onChange={onChangeReceptionChannel}\n                                                            options={channels}\n                                                        />\n                                                        {\n                                                            error.request_channel_slug.length ? (\n                                                                error.request_channel_slug.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n\n                                                    <div\n                                                        className={error.response_channel_slug.length ? \"col validated\" : \"col\"}>\n                                                        <label htmlFor=\"responseChannel\">Canal de\n                                                            réponse <InputRequire/></label>\n                                                        <Select\n                                                            classNamePrefix=\"select\"\n                                                            className=\"basic-single\"\n                                                            placeholder={\"Veillez selectioner le canal de réponse\"}\n                                                            value={responseChannel}\n                                                            onChange={onChangeResponseChannel}\n                                                            options={responseChannels}\n                                                        />\n                                                        {\n                                                            error.response_channel_slug.length ? (\n                                                                error.response_channel_slug.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"form-group row\">\n                                                    <div className={\"col\"}>\n                                                        <label htmlFor=\"claimCtegory\">Catégorie de réclamation</label>\n                                                        <Select\n                                                            classNamePrefix=\"select\"\n                                                            className=\"basic-single\"\n                                                            placeholder={\"Veillez selectioner la catégorie de réclamation\"}\n                                                            value={claimCategory}\n                                                            onChange={onChangeClaimCategory}\n                                                            options={claimCategories}\n                                                        />\n                                                    </div>\n\n                                                    <div\n                                                        className={error.claim_object_id.length ? \"col validated\" : \"col\"}>\n                                                        <label htmlFor=\"claimObject\">Objet de\n                                                            réclamation <InputRequire/></label>\n                                                        <Select\n                                                            classNamePrefix=\"select\"\n                                                            className=\"basic-single\"\n                                                            placeholder={\"Veillez selectioner l'objet de réclamation\"}\n                                                            value={claimObject}\n                                                            onChange={onChangeClaimObject}\n                                                            options={claimObjects}\n                                                        />\n                                                        {\n                                                            error.claim_object_id.length ? (\n                                                                error.claim_object_id.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group row\">\n                                                    <div\n                                                        className={error.amount_disputed.length ? \"col validated\" : \"col\"}>\n                                                        <label htmlFor=\"amount_claim\">Montant réclamé {isRequire.amount_disputed?<InputRequire/>:\"\"}</label>\n                                                        <input\n                                                            type={\"number\"}\n                                                            min=\"0\"\n                                                            id=\"amount_claim\"\n                                                            className={error.amount_disputed.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                            placeholder=\"Veillez entrer le Montant réclamé\"\n                                                            value={data.amount_disputed}\n                                                            onChange={(e) => onChangeAmountDisputed(e)}\n                                                        />\n                                                        {\n                                                            error.amount_disputed.length ? (\n                                                                error.amount_disputed.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n\n                                                    <div\n                                                        className={error.amount_currency_slug.length ? \"col validated\" : \"col\"}>\n                                                        <label htmlFor=\"currency\">Devise du montant réclamé {isRequire.amount_currency_slug?<InputRequire/>:\"\"}</label>\n                                                        <Select\n                                                            classNamePrefix=\"select\"\n                                                            className=\"basic-single\"\n                                                            placeholder={\"Veillez selectioner la devise du montant réclamé\"}\n                                                            value={currency}\n                                                            onChange={onChangeAmountCurrency}\n                                                            options={currencies}\n                                                        />\n                                                        {\n                                                            error.amount_currency_slug.length ? (\n                                                                error.amount_currency_slug.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"form-group row\">\n\n                                                    <div\n                                                        className={error.event_occured_at.length ? \"col validated\" : \"col\"}>\n                                                        <label htmlFor=\"date\">Date de\n                                                            l'évènement <InputRequire/></label>\n                                                        <input\n                                                            type={\"datetime-local\"}\n                                                            id=\"date\"\n                                                            className={error.event_occured_at.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                            placeholder=\"Veillez entrer la date de l'evernement\"\n                                                            value={data.event_occured_at}\n                                                            max={maxDate}\n                                                            onChange={(e) => onChangeEventOccuredAt(e)}\n                                                        />\n                                                        {\n                                                            error.event_occured_at.length ? (\n                                                                error.event_occured_at.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n                                                    {\n                                                        verifyPermission(props.userPermissions, \"update-claim-incomplete-without-client\") ? (\n                                                            <div\n                                                                className={error.relationship_id.length ? \"col validated\" : \"col\"}>\n                                                                <label htmlFor=\"relationship\">Relation du reclamant avec\n                                                                    l'institution {isRequire.relationship_id?<InputRequire/>:\"\"}</label>\n                                                                <Select\n                                                                    isClearable\n                                                                    value={relationship}\n                                                                    placeholder={\"Veillez selectioner la relation du reclamant avec l'institution\"}\n                                                                    onChange={onChangeRelationShip}\n                                                                    options={relationships}\n                                                                />\n                                                                {\n                                                                    error.relationship_id.length ? (\n                                                                        error.relationship_id.map((error, index) => (\n                                                                            <div key={index}\n                                                                                 className=\"invalid-feedback\">\n                                                                                {error}\n                                                                            </div>\n                                                                        ))\n                                                                    ) : null\n                                                                }\n                                                            </div>\n                                                        ) : null\n                                                    }\n\n                                                    <div className=\"col\">\n                                                        <label htmlFor=\"file\">Pièces jointes  {isRequire.file?<InputRequire/>:\"\"}</label>\n                                                        <input\n                                                            onChange={onChangeFile}\n                                                            type=\"file\"\n                                                            className={error.file.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                            id=\"customFile\"\n                                                            multiple={true}\n                                                        />\n                                                        {\n                                                            error.file.length ? (\n                                                                error.file.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n\n                                                </div>\n\n                                                <div className=\"form-group row\">\n                                                    <div className={error.description.length ? \"col validated\" : \"col\"}>\n                                                        <label htmlFor=\"description\">Description {isRequire.description?<InputRequire/>:\"\"}</label>\n                                                        <textarea\n                                                            rows=\"7\"\n                                                            id=\"description\"\n                                                            className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                            placeholder=\"Veillez entrer la description\"\n                                                            value={data.description}\n                                                            onChange={(e) => onChangeDescription(e)}\n                                                        />\n                                                        {\n                                                            error.description.length ? (\n                                                                error.description.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n\n                                                    <div\n                                                        className={error.claimer_expectation.length ? \"col validated\" : \"col\"}>\n                                                        <label htmlFor=\"claimer_expectation\">Attente {isRequire.claimer_expectation?<InputRequire/>:\"\"} </label>\n                                                        <textarea\n                                                            rows=\"7\"\n                                                            id=\"claimer_expectation\"\n                                                            className={error.claimer_expectation.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                            placeholder=\"Veillez entrer l'attente du réclamant\"\n                                                            value={data.claimer_expectation}\n                                                            onChange={(e) => onChangeClaimerExpectation(e)}\n                                                        />\n                                                        {\n                                                            error.claimer_expectation.length ? (\n                                                                error.claimer_expectation.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div\n                                            className=\"kt-separator kt-separator--border-dashed kt-separator--space-lg\"/>\n                                        <div className=\"kt-section\">\n                                            <div className=\"kt-section__body\">\n                                                <h3 className=\"kt-section__title kt-section__title-lg\">Relance: <InputRequire/>\n                                                </h3>\n\n                                                <div className=\"form-group row\">\n                                                    <label className=\"col-3 col-form-label\">Est-ce une relance ?</label>\n                                                    <div className=\"col-9\">\n                                                        <div className=\"kt-radio-inline\">\n                                                            <label className=\"kt-radio\">\n                                                                <input type=\"radio\" value={option1}\n                                                                       onChange={handleOptionChange}\n                                                                       checked={option1 === data.is_revival}/> Oui<span/>\n                                                            </label>\n                                                            <label className=\"kt-radio\">\n                                                                <input type=\"radio\" value={option2}\n                                                                       onChange={handleOptionChange}\n                                                                       checked={option2 === data.is_revival}/> Non<span/>\n                                                            </label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"kt-portlet__foot\">\n                                        <div className=\"kt-form__actions\">\n                                            {\n                                                !startRequest ? (\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)}\n                                                            className=\"btn btn-primary\">Modifier</button>\n                                                ) : (\n                                                    <button\n                                                        className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                        type=\"button\" disabled>\n                                                        Chargement...\n                                                    </button>\n                                                )\n                                            }\n                                            {\n                                                !startRequest ? (\n                                                    <Link to=\"/process/incomplete_claims\"\n                                                          className=\"btn btn-secondary mx-2\">\n                                                        Quitter\n                                                    </Link>\n                                                ) : (\n                                                    <Link to=\"/process/incomplete_claims\"\n                                                          className=\"btn btn-secondary mx-2\"\n                                                          disabled>\n                                                        Quitter\n                                                    </Link>\n                                                )\n                                            }\n                                        </div>\n                                    </div>\n                                </form>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan,\n    };\n};\n\nexport default connect(mapStateToProps)(IncompleteClaimsEdit);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/InputRequire.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/ClaimToPointOfServices.jsx",["1037"],"import React, {useEffect, useState} from 'react';\nimport Chart from \"react-apexcharts\";\nimport LoadingTable from \"../LoadingTable\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport appConfig from \"../../../config/appConfig\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\n\nconst ClaimToInstitution = (props) => {\n    const [load, setLoad] = useState(true);\n    const [pointOfServiceData, setPointOfServiceData] = useState(\"\");\n\n    const defaultData = {\n        series: pointOfServiceData ? pointOfServiceData.series : [],\n        options: {\n            chart: {\n                width: 380,\n                type: 'pie',\n            },\n            labels: pointOfServiceData ? pointOfServiceData.options.labels : [],\n            responsive: [{\n                breakpoint: 480,\n                options: {\n                    chart: {\n                        width: 200\n                    },\n                    legend: {\n                        position: 'bottom'\n                    }\n                }\n            }]\n        },\n    };\n\n    useEffect(() => {\n        let isCancelled = false;\n\n        async function fetchData() {\n          await axios.get(appConfig.apiDomaine + \"/dashboard\")\n                .then(response => {\n                    if (!isCancelled) {\n                        let pointOfService = response.data.pointOfServicesTargeted;\n                        let ServiceData = [];\n                        for (const processus in pointOfService) {\n                            ServiceData.push(processus);\n                        }\n                        let newData = {...defaultData};\n\n                        newData.options.labels = ServiceData;\n                        newData.series = Object.values(pointOfService).map(serie => serie.myInstitution);\n                        setPointOfServiceData(newData);\n                        setLoad(false)\n                    }\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n\n        if (verifyTokenExpire())\n            fetchData();\n        return () => {\n            isCancelled = true;\n        }\n    }, []);\n\n    return (\n\n        <div>\n            <div className=\"kt-portlet__head\">\n                <div className=\"kt-portlet__head-label\">\n                    <h3 className=\"kt-portlet__head-title\">Statistique des points de services qui reçoivent plus de\n                        réclamations sur les 30 derniers jours</h3>\n                </div>\n            </div>\n            {\n                load ? (\n                    <LoadingTable/>\n                ) : (\n                    <div className=\"kt-portlet__body\">\n                        <div id=\"chart\" className=\"d-flex justify-content-center\" style={{position: \"relative\"}}>\n                            {pointOfServiceData?(\n                                <Chart options={pointOfServiceData.options} series={pointOfServiceData.series}\n                                       type=\"pie\" width={550}/>\n                            ):\"\"\n                            }\n\n                        </div>\n                    </div>\n                )\n            }\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimToInstitution);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/LoadingTable.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/AttachmentsButtonDetail.jsx",["1038"],"import React from \"react\";\nimport appConfig from \"../../config/appConfig\";\n\nconst AttachmentsButtonDetail = ({claim}) => {\n    return (\n        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\">\n            <div className=\"kt-heading kt-heading--md\">Liste de pièces jointes\n            </div>\n            <div className=\"kt-form__section kt-form__section--first\">\n                <div className=\"kt-wizard-v2__review\">\n                    {\n                        !claim ? \"\" : (\n                            claim.files.length ? (\n                                claim.files.map((file, index) => (\n                                    <div className=\"kt-wizard-v2__review-item\"\n                                         key={index}>\n                                        {/*<div className=\"kt-wizard-v2__review-title\">*/}\n                                        {/*    Pièce jointe Nº{index + 1}*/}\n                                        {/*</div>*/}\n                                        <div className=\"kt-wizard-v2__review-content\">\n                                            <a href={`${appConfig.apiDomaine}${file.url}`}\n                                               download={true} target={\"_blank\"}>\n                                                {file.title}\n                                            </a>\n                                        </div>\n                                    </div>\n                                ))\n                            ) : (\n                                <div className=\"kt-wizard-v2__review-item\">\n                                    <div className=\"kt-wizard-v2__review-title\">\n                                        Pas de pièce jointe\n                                    </div>\n                                </div>\n                            )\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default AttachmentsButtonDetail;\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimAdd.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/AttachmentsButton.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/ClientButtonDetail.jsx",["1039","1040"],"import React from \"react\";\nimport Loader from \"./Loader\";\n\nconst ClientButtonDetail = ({claim}) => {\n    return (\n        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\"\n             data-ktwizard-state=\"current\">\n            <div className=\"kt-heading kt-heading--md\">Détails du client</div>\n            <div className=\"kt-form__section kt-form__section--first\">\n                <div className=\"kt-wizard-v2__review\">\n                    <div className=\"kt-wizard-v2__review-item\">\n                        <div className=\"kt-widget kt-widget--user-profile-1\">\n                            <div className=\"kt-widget__head\">\n                                <div className=\"kt-widget__media\">\n                                    <img src=\"/personal/img/default-avatar.png\"\n                                         alt=\"image\"/>\n                                </div>\n                                <div className=\"kt-widget__content\"\n                                     style={{marginTop: \"auto\", marginBottom: \"auto\"}}>\n                                    <div className=\"kt-widget__section\">\n                                        {\n                                            !claim ? (\n                                                <Loader/>\n                                            ) : (\n                                                <a href=\"#\"\n                                                   className=\"kt-widget__username\">\n                                                    {`${claim.claimer.lastname} ${claim.claimer.firstname}`}\n                                                    <i className=\"flaticon2-correct kt-font-success\"/>\n                                                </a>\n                                            )\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"kt-widget__body\">\n                                {\n                                    !claim ? \"\" : (\n                                        <div className=\"kt-widget__content\">\n                                            <div className=\"kt-widget__info\">\n                                                                                <span className=\"fa fa-venus-mars\"\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\n                                                <span\n                                                    className=\"kt-widget__data\">{claim.claimer.sexe === 'F' ? \"Féminin\" : \"Masculin\"}</span>\n                                            </div>\n                                            <div className=\"kt-widget__info\">\n                                                                                <span className=\"fa fa-envelope\"\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\n                                                <span className=\"kt-widget__data\">\n                                                                                {\n                                                                                    claim.claimer.email.map((mail, index) => (\n                                                                                        index === claim.claimer.email.length - 1 ? mail : mail + \"/ \"\n                                                                                    ))\n                                                                                }\n                                                                            </span>\n                                            </div>\n                                            <div className=\"kt-widget__info\">\n                                                                                <span className=\"fa fa-phone-alt\"\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\n                                                <span className=\"kt-widget__data\">\n                                                                                {\n                                                                                    claim.claimer.telephone.map((telephone, index) => (\n                                                                                        index === claim.claimer.telephone.length - 1 ? telephone : telephone + \"/ \"\n                                                                                    ))\n                                                                                }\n                                                                            </span>\n                                            </div>\n                                            <div className=\"kt-widget__info\">\n                                                                                <span className=\"fa fa-location-arrow\"\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\n                                                <span className=\"kt-widget__data\">\n                                                                                {claim.claimer.ville ? claim.claimer.ville : \"Pas d'information sur la ville\"}\n                                                                            </span>\n                                            </div>\n                                        </div>\n                                    )\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ClientButtonDetail;\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/ClaimButtonDetail.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/Pagination.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/InfirmationTable.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/TreatmentButtonDetail.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/HeaderTablePage.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/ClaimButton.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/ExportButton.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/MessageList.js",[],"/var/vhosts/satis-macro/client/satis-client/src/helpers/institution.js",[],"/var/vhosts/satis-macro/client/satis-client/src/helpers/unit.js",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/DoubleButtonDetail.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/UnfoundedModal.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/DetailModal.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/constants/date.js",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/ImportFileForm.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/WithoutCode.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ColToMeasure.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ColToValidate.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ColToTreat.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ColToAssignUnit.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ColToAssignStaff.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/EmptyTable.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ColToComplete.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/DoubleButton.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/profile/UpdatePassword.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/ClientButton.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/profile/PersonalInfo.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/constants/currencyContry.js",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/staff/ConfirmSaveForm.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/FusionClaim.jsx",["1041","1042"],"import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport appConfig from \"../../config/appConfig\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastErrorMessageWithParameterConfig,\n    toastMergeSuccessMessageConfig,\n    toastSuccessMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport {debug, formatDateToTimeStampte} from \"../../helpers/function\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nconst FusionClaim = props => {\n    const [startRequest, setStartRequest] = useState(false);\n    const [choice, setChoice] = useState({\n        original: false,\n        duplicate: false\n    });\n\n    const onClickFusion = () => {\n        if (choice.original || choice.duplicate) {\n            setStartRequest(true);\n            if (choice.original && choice.duplicate)\n                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Veuillez choisir une seule réclamation.\"));\n            else {\n                setStartRequest(true);\n                if (verifyTokenExpire()) {\n                    axios.put(`${appConfig.apiDomaine}/claim-awaiting-assignment/${props.claim.id}/merge/${props.copyClaim.id}`, {keep_claim: !choice.original && !choice.duplicate ? null : choice.original})\n                        .then(response => {\n                            ToastBottomEnd.fire(toastMergeSuccessMessageConfig);\n                            setStartRequest(false);\n                            document.getElementById(\"close-button\").click();\n                            window.location.href = `/process/claim-assign/${response.data.id}/detail`;\n                        })\n                        .catch(({response}) => {\n                            if (response.data.error.keep_claim)\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(response.data.error.keep_claim[0]));\n                            setStartRequest(false);\n                            console.log(\"Something is wrong\")\n                        })\n                    ;\n                }\n            }\n        } else\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Veillez choisir la réclamation à conserver.\"));\n    };\n\n    const handleChoiceChange = (e) => {\n        const newChoice = {...choice};\n        if (e.target.id === \"original\")\n            setChoice({...newChoice, original: e.target.checked, duplicate: !e.target.checked});\n        else if(e.target.id === \"duplicate\")\n            setChoice({...newChoice, duplicate: e.target.checked, original: !e.target.checked});\n    };\n\n    const onClickCloseButton = () => {\n        document.getElementById(\"close-button\").click();\n        props.onCloseModal();\n    };\n\n    return (\n        <div className=\"modal fade\" id=\"kt_modal_4\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Fusion de réclamation</h5>\n                        <button disabled={startRequest} onClick={() => onClickCloseButton()} type=\"button\" className=\"close\"/>\n                    </div>\n                    <div className=\"modal-body\">\n                        <form>\n                            <table className=\"table table-bordered text-center\">\n                                <thead>\n                                    <tr>\n                                        <th><strong>Paramètre</strong></th>\n                                        <th style={{width: \"40%\"}}><strong>Réclamation</strong></th>\n                                        <th style={{width: \"40%\"}}><strong>Doublon</strong></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td><strong>Réclamant</strong></td>\n                                        <td>{props.claim.claimer ? `${props.claim.claimer.lastname} ${props.claim.claimer.firstname}` : \"Pas de reclamant\"}</td>\n                                        <td>{props.copyClaim.claimer ? `${props.copyClaim.claimer.lastname} ${props.copyClaim.claimer.firstname}` : \"Pas de reclamant\"}</td>\n                                    </tr>\n                                    <tr>\n                                        <td><strong>Montant réclamé</strong></td>\n                                        <td>{props.claim.amount_disputed ? `${props.claim.amount_disputed} ${props.claim.amount_currency ? props.claim.amount_currency.name[\"fr\"] : \"\"}` : \"Pas de montant\"}</td>\n                                        <td>{props.copyClaim.amount_disputed ? `${props.copyClaim.amount_disputed} ${props.copyClaim.amount_currency ? props.copyClaim.amount_currency.name[\"fr\"] : \"\"}` : \"Pas de montant\"}</td>\n                                    </tr>\n                                    <tr>\n                                        <td><strong>Date de réception</strong></td>\n                                        <td>{props.claim.created_at ? formatDateToTimeStampte(props.claim.created_at) : \"Pas de date de reclamation\"}</td>\n                                        <td>{props.copyClaim.created_at ? formatDateToTimeStampte(props.copyClaim.created_at) : \"Pas de date de reclamation\"}</td>\n                                    </tr>\n                                    <tr>\n                                        <td><strong>Date de l'évenement</strong></td>\n                                        <td>{props.claim.event_occured_at ? formatDateToTimeStampte(props.claim.event_occured_at) : \"Pas de date\"}</td>\n                                        <td>{props.copyClaim.event_occured_at ? formatDateToTimeStampte(props.copyClaim.event_occured_at) : \"Pas de date\"}</td>\n                                    </tr>\n                                    <tr>\n                                        <td><strong>Objet de reclamation</strong></td>\n                                        <td>{props.claim.claim_object ? props.claim.claim_object.name[\"fr\"] : \"Pas d'objet de Réclamation\"}</td>\n                                        <td>{props.copyClaim.claim_object ? props.copyClaim.claim_object.name[\"fr\"] : \"Pas d'objet de Réclamation\"}</td>\n                                    </tr>\n                                    <tr>\n                                        <td><strong>Description</strong></td>\n                                        <td>{props.claim.description ? props.claim.description: \"Pas de description\"}</td>\n                                        <td>{props.copyClaim.description ? props.copyClaim.description : \"Pas de description\"}</td>\n                                    </tr>\n                                    <tr>\n                                        <td><strong>Attente</strong></td>\n                                        <td>{props.claim.claimer_expectation ? props.claim.claimer_expectation : \"Pas d'attente\"}</td>\n                                        <td>{props.copyClaim.claimer_expectation ? props.copyClaim.claimer_expectation : \"Pas d'attente\"}</td>\n                                    </tr>\n                                    <tr>\n                                        <td><strong>Choix</strong></td>\n                                        <td>\n                                            <label className=\"kt-checkbox\">\n                                                <input id={\"original\"} type=\"checkbox\" checked={choice.original} onChange={handleChoiceChange}/><span/>\n                                            </label>\n                                        </td>\n                                        <td>\n                                            <label className=\"kt-checkbox\">\n                                                <input id={\"duplicate\"} type=\"checkbox\" checked={choice.duplicate} onChange={handleChoiceChange}/><span/>\n                                            </label>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </form>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button disabled={startRequest} onClick={() => onClickCloseButton()} type=\"button\" className=\"btn btn-secondary\">Fermer</button>\n                        <button style={{display: \"none\"}} id={\"close-button\"} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\n                        {\n                            !startRequest ? (\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={() => onClickFusion()}>Fusioner</button>\n                            ) : (\n                                <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                    Chargement...\n                                </button>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FusionClaim;\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/ReasonModal.jsx",["1043"],"import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport appConfig from \"../../config/appConfig\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastAssignClaimSuccessMessageConfig,\n    toastErrorMessageWithParameterConfig,\n    toastRejectTreatmentClaimSuccessMessageConfig,\n    toastValidateTreatmentClaimSuccessMessageConfig\n} from \"../../config/toastConfig\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nconst ReasonModal = props => {\n    const [description, setDescription] = useState(\"\");\n    const [startRequest, setStartRequest] = useState(false);\n    const [error, setError] = useState([]);\n\n    const sendData = () => {\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            if (props.action === \"reject\") {\n                axios.put(`${appConfig.apiDomaine}/claim-awaiting-treatment/${props.id}/rejected`, {rejected_reason: description})\n                    .then(response => {\n                        setStartRequest(false);\n                        ToastBottomEnd.fire(toastAssignClaimSuccessMessageConfig);\n                        window.location.href = `/process/unit-claims`\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError(error.response.data.error.rejected_reason);\n                    })\n                ;\n            } else if(props.action === \"validateReject\") {\n                let endpoint = ``;\n                if (props.plan === \"MACRO\" || props.plan === \"PRO\")\n                    endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-my-institution/${props.id}/invalidate`;\n                else if(props.plan === \"HUB\")\n                    endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-any-institution/${props.id}/invalidate`;\n                axios.put(endpoint, {invalidated_reason: description})\n                    .then(response => {\n                        setStartRequest(false);\n                        ToastBottomEnd.fire(toastRejectTreatmentClaimSuccessMessageConfig);\n                        window.location.href = `/process/claim-to-validated`\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError(error.response.data.error.invalidated_reason);\n                    })\n                ;\n            } else if(props.action === \"validateSolution\") {\n                let endpoint = \"\";\n                if (props.plan === \"MACRO\" || props.plan === \"PRO\")\n                    endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-my-institution/${props.id}/validate`;\n                else if(props.plan === \"HUB\")\n                    endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-any-institution/${props.id}/validate`;\n                axios.put(endpoint, {solution_communicated: description})\n                    .then(response => {\n                        setStartRequest(false);\n                        ToastBottomEnd.fire(toastValidateTreatmentClaimSuccessMessageConfig);\n                        window.location.href = `/process/claim-to-validated`\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError(error.response.data.error.solution_communicated);\n                    })\n                ;\n            }\n        }\n    };\n\n    return (\n        <div className=\"modal fade show\" id=\"kt_modal_4_2\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" style={{display: \"block\", paddingRight: \"17px\"}} aria-modal=\"true\">\n            <div className=\"modal-dialog modal-xl\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">{props.reasonTitle}</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"/>\n                    </div>\n                    <div className=\"modal-body\">\n                        <form>\n                            <div className={error.length ? \"form-group validated\" : \"\"}>\n                                <label htmlFor=\"message-text\" className=\"form-control-label\">{props.reasonLabel}:</label>\n                                <textarea\n                                    className={error.length ? \"form-control is-invalid\" : \"form-control\"}\n                                    id=\"message-text\"\n                                    onChange={e => setDescription(e.target.value)}\n                                />\n                                {\n                                    error.map((error, index) => (\n                                        <div key={index} className=\"invalid-feedback\">\n                                            {error}\n                                        </div>\n                                    ))\n                                }\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button id={\"close-button-reason\"} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => props.onClose()}>Fermer</button>\n                        {\n                            !startRequest ? (\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={() => sendData()}>Envoyer</button>\n                            ) : (\n                                <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                    Chargement...\n                                </button>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ReasonModal;\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/Clients/ConfirmClientSaveForm.jsx",["1044","1045","1046","1047","1048","1049"],"import React, {useState} from \"react\";\nimport TagsInput from \"react-tagsinput\";\nimport axios from \"axios\";\nimport {ToastBottomEnd} from \"../Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastEditErrorMessageConfig,\n    toastEditSuccessMessageConfig,\n} from \"../../../config/toastConfig\";\nimport {formatSelectOption} from \"../../../helpers/function\";\nimport {formatInstitutions} from \"../../../helpers/institution\";\nimport Select from \"react-select\";\nimport appConfig from \"../../../config/appConfig\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport FormInformation from \"../FormInformation\";\nimport InputRequire from \"../InputRequire\";\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        confirm: id => `${appConfig.apiDomaine}/my/identites/${id}/clients`\n    },\n    MACRO: {\n        plan: \"MACRO\",\n        holding: {\n            confirm: id => `${appConfig.apiDomaine}/any/identites/${id}/clients`\n        },\n        filial: {\n            confirm: id => `${appConfig.apiDomaine}/my/identites/${id}/clients`\n        }\n    },\n};\n\nconst ConfirmClientSaveForm = (props) => {\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'store-client-from-my-institution') || verifyPermission(props.userPermissions, 'update-client-from-my-institution'))\n            endPoint = endPointConfig[props.plan].filial\n    } else\n        endPoint = endPointConfig[props.plan];\n\n    const [types, setTypes] = useState(props.types);\n    const [clients, setClients] = useState(props.clients);\n    const [category, setCategory] = useState(props.category);\n    const [categories, setCategories] = useState(props.categories);\n    // const institution = props.institution;\n    const [institution, setInstitution] = useState(props.institution);\n    const [institutions, setInstitutions] = useState(props.institutions);\n    const [type, setType] = useState(props.type);\n    const [client, setClient] = useState(props.client);\n\n\n    const defaultData = {\n        firstname: props.identite.identite.identite.firstname,\n        lastname: props.identite.identite.identite.lastname,\n        sexe: props.identite.identite.identite.sexe,\n        telephone: (props.identite.identite.identite.telephone),\n        email: (props.identite.identite.identite.email),\n        ville: props.identite.identite.identite.ville === null ? \"\" : props.identite.identite.identite.ville,\n        number:props.number,\n        account_type_id: props.account_type_id,\n        client_id: props.client_id,\n        institution_id: props.institution_id,\n        category_client_id:props.category_id\n    };\n\n    const defaultError = {\n        firstname: [],\n        lastname: [],\n        sexe: [],\n        telephone: [],\n        email: [],\n        ville: [],\n        number:[],\n        account_type_id: [],\n        client_id: [],\n        institution_id: [],\n        category_client_id:[]\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    const onChangeFirstName = (e) => {\n        const newData = {...data};\n        newData.firstname = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeLastName = (e) => {\n        const newData = {...data};\n        newData.lastname = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeSexe = (e) => {\n        const newData = {...data};\n        newData.sexe = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeVille = (e) => {\n        const newData = {...data};\n        newData.ville = e.target.value;\n        setData(newData);\n    };\n\n    const onChangeTelephone = (tel) => {\n        const newData = {...data};\n        newData.telephone = tel;\n        setData(newData);\n    };\n\n    const onChangeEmail = (mail) => {\n        const newData = {...data};\n        newData.email = mail;\n        setData(newData);\n    };\n\n    const onChangeType = (selected) => {\n        const newData = {...data};\n        newData.account_type_id = selected.value;\n        setType(selected);\n        setData(newData);\n    };\n\n    const onChangeAccount = (e) => {\n        const newData = {...data};\n        newData.number = e.target.value;\n        setData(newData);\n    };\n    const onChangeCategory = (selected) => {\n        const newData = {...data};\n        newData.category_client_id = selected.value;\n        setCategory(selected);\n        setData(newData);\n    };\n\n    const onChangeInstitution = (selected) => {\n        const newData = {...data};\n        newData.institution_id = selected.value;\n        setInstitution(selected);\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        axios.post(endPoint.confirm(props.identite.identite.identites_id), data)\n            .then(async (response) => {\n                ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                await setStartRequest(false);\n                await setError(defaultError);\n                await setTypes([]);\n                await setCategories([]);\n                await setInstitutions([]);\n                await setInstitution({});\n                await setType({});\n                await setCategory({});\n                document.getElementById(\"closeConfirmSaveForm\").click();\n                // await props.resetFoundIdentity();\n            })\n            .catch(errorRequest => {\n                setStartRequest(false);\n                setError({...defaultError, ...errorRequest.response.data.error});\n                ToastBottomEnd.fire(toastEditErrorMessageConfig);\n            })\n        ;\n    };\n\n    const onClickClose = async (e) => {\n        await setStartRequest(false);\n        await setError(defaultError);\n        await setData(defaultError);\n        await setTypes([]);\n        await setCategory({});\n        await setCategories([]);\n        await setInstitutions([]);\n        await setInstitution({});\n        await setType({});\n        await document.getElementById(\"closeButton\").click();\n        // await props.resetFoundIdentity();\n    };\n\n    return (\n        <div className=\"modal fade\" id=\"kt_modal_4\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" role=\"dialog\" data-backdrop=\"false\"\n             style={{ display: \"block\", paddingRight: \"17px\"}} aria-modal=\"true\">\n            <div className=\"modal-dialog modal-lg\" role=\"document\" style={{boxShadow: \"0px 4px 23px 6px rgba(0,0,0,0.75)\"}}>\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Ajout d'un client avec des identifiants existant</h5>\n                        <button onClick={(e) => onClickClose(e)} type=\"button\" className=\"close\"/>\n                        <button id=\"closeButton\" style={{display: \"none\"}} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"/>\n                    </div>\n                    <div className=\"modal-body\">\n                        <form>\n                            <div className=\"kt-portlet__body\">\n                                <FormInformation\n                                    information={props.message}\n                                />\n\n                                <div className=\"kt-section kt-section--first\">\n                                    <div className=\"kt-section__body\">\n                                        <h3 className=\"kt-section__title kt-section__title-lg\">Informations personnelles:</h3>\n\n                                        <div className={\"form-group row \"}>\n                                            {\n                                                verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution') ? (\n\n                                                    <div className=\"col\">\n                                                        <label htmlFor=\"type\">Institution <InputRequire/></label>\n                                                        <Select\n                                                            value={institution}\n                                                            onChange={onChangeInstitution}\n                                                            options={institutions}\n                                                        />\n                                                        {\n                                                            error.institution_id.length ? (\n                                                                error.institution_id.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n\n                                        <div className=\"form-group row\">\n                                            <div className={error.lastname.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"lastname\">Nom <InputRequire/></label>\n                                                <input\n                                                    id=\"lastname\"\n                                                    type=\"text\"\n                                                    className={error.lastname.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez entrer le nom de famille\"\n                                                    value={data.lastname}\n                                                    onChange={(e) => onChangeLastName(e)}\n                                                />\n                                                {\n                                                    error.lastname.length ? (\n                                                        error.lastname.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n\n                                            <div className={error.firstname.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"firstname\">Prénom(s) <InputRequire/></label>\n                                                <input\n                                                    id=\"firstname\"\n                                                    type=\"text\"\n                                                    className={error.firstname.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez entrer le prénom\"\n                                                    value={data.firstname}\n                                                    onChange={(e) => onChangeFirstName(e)}\n                                                />\n                                                {\n                                                    error.firstname.length ? (\n                                                        error.firstname.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className={error.firstname.length ? \"form-group col validated\" : \"form-group col\"}>\n                                                <label htmlFor=\"sexe\">Sexe <InputRequire/></label>\n                                                <select\n                                                    id=\"sexe\"\n                                                    className={error.sexe.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    value={data.sexe}\n                                                    onChange={(e) => onChangeSexe(e)}\n                                                >\n                                                    <option value=\"\" disabled={true}>Veillez choisir le Sexe</option>\n                                                    <option value=\"F\">Féminin</option>\n                                                    <option value=\"M\">Masculin</option>\n                                                    <option value=\"A\">Autres</option>\n                                                </select>\n                                                {\n                                                    error.sexe.length ? (\n                                                        error.sexe.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                        <div className=\"form-group row\">\n                                            <div className={error.telephone.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"telephone\"> Téléphone(s) <InputRequire/></label>\n                                                <TagsInput value={data.telephone} onChange={onChangeTelephone} />\n                                                {\n                                                    error.telephone.length ? (\n                                                        error.telephone.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n\n                                            <div className={error.email.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"email\"> Email(s) <InputRequire/></label>\n                                                <TagsInput value={data.email} onChange={onChangeEmail} />\n                                                {\n                                                    error.email.length ? (\n                                                        error.email.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n\n                                            <div className={error.ville.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"ville\">Ville <InputRequire/></label>\n                                                <input\n                                                    id=\"ville\"\n                                                    type=\"text\"\n                                                    className={error.ville.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez entrer votre ville\"\n                                                    value={data.ville}\n                                                    onChange={(e) => onChangeVille(e)}\n                                                />\n                                                {\n                                                    error.ville.length ? (\n                                                        error.ville.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"kt-section\">\n                                    <div className=\"kt-section__body\">\n                                        <h3 className=\"kt-section__title kt-section__title-lg\">Informations professionnelles:</h3>\n                                        <div className={\"form-group row \"}>\n\n                                            <div className=\"col\">\n                                                <label htmlFor=\"type\">Categorie client <InputRequire/></label>\n                                                <Select\n                                                    value={category}\n                                                    onChange={onChangeCategory}\n                                                    options={formatSelectOption(categories, \"name\", \"fr\")}\n                                                />\n                                                {\n                                                    error.category_client_id.length ? (\n                                                        error.category_client_id.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n                                        <div className={\"form-group row\"}>\n                                              <div className=\"col\">\n                                                        <label htmlFor=\"institution\">Type de compte <InputRequire/></label>\n                                                        <Select\n                                                            value={type}\n                                                            onChange={onChangeType}\n                                                            options={formatSelectOption(types, \"name\", \"fr\")}\n                                                        />\n                                                        {\n                                                            error.account_type_id.length ? (\n                                                                error.account_type_id.map((error, index) => (\n                                                                    <div key={index} className=\"invalid-feedback\">\n                                                                        {error}\n                                                                    </div>\n                                                                ))\n                                                            ) : null\n                                                        }\n                                                    </div>\n\n                                        </div>\n\n                                        <div className=\"form-group row\">\n                                            <div className={error.number.length ? \"col validated\" : \"col\"}>\n                                                <label htmlFor=\"number\">Numero de Compte <InputRequire/></label>\n                                                <input\n                                                    id=\"number\"\n                                                    type=\"text\"\n                                                    className={error.number.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez entrer le numero de compte\"\n                                                    value={data.number}\n                                                    onChange={onChangeAccount}\n                                                />\n                                                {\n                                                    error.number.length ? (\n                                                        error.number.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : \"\"\n                                                }\n                                            </div>\n\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"modal-footer\">\n                        {\n                            !startRequest ? (\n                                <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Enregistrer</button>\n                            ) : (\n                                <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                    Chargement...\n                                </button>\n                            )\n                        }\n                        <button id=\"closeConfirmSaveForm\" style={{display: \"none\"}} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ConfirmClientSaveForm;\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/Discussions/Message.js",["1050","1051","1052","1053"],"import React from 'react';\nimport moment from 'moment';\nimport './Message.css';\nimport appConfig from \"../../../config/appConfig\";\n\n\nexport default function Message(props) {\n\n    const {\n        data,\n        isMine,\n        startsSequence,\n        endsSequence,\n        showTimestamp,\n    } = props;\n\n    const friendlyTimestamp = moment(data.created_at).format('LL');\n    const chatTimestamp = moment(data.created_at).format('LT');\n\n    const deletedProps = (key) => {\n        props.deleted(key)\n    };\n\n    const responseItemProps = (key, text) => {\n        props.responseItem(key, text);\n\n    };\n\n    const ouvrirFermerSpoiler = (id) => {\n        if (document.getElementById(id).style.display === \"none\")\n            document.getElementById(id).style.display = \"block\";\n        else\n            document.getElementById(id).style.display = \"none\";\n    };\n\n    return (\n\n        <div\n            className={[\n                'message',\n                `${isMine ? 'mine' : ''}`,\n                `${startsSequence ? 'start' : ''}`,\n                `${endsSequence ? 'end' : ''}`\n            ].join(' ')}>\n\n            {\n                showTimestamp &&\n                <div className=\"timestamp\">\n                    {friendlyTimestamp}\n                </div>\n            }\n            <div className=\"author\">\n\n                {\n                    !isMine && startsSequence && data.posted_by.identite_id ?\n                        <div>\n                        <span\n                            className=\"kt-media kt-media--circle kt-media--sm\"><img\n                            src=\"/assets/media/users/default.jpg\"\n                            alt=\"image\"/>\n                        </span>\n                            {data.posted_by.identite.lastname + \" \" + data.posted_by.identite.firstname}\n                        </div> : \"\"\n                }\n\n            </div>\n            <div className=\"bubble-container\" onMouseEnter={() => ouvrirFermerSpoiler(data.id)}>\n\n                {\n                    data.files.length ?\n                        data.files.map((file, index) => (\n                            <div className=\"bubble-media\" key={index}>\n                                <div>\n                                    <img src={appConfig.apiDomaine + file.url} alt=\"\"\n                                         style={{\n                                             maxWidth: \"115px\",\n                                             maxHeight: \"115px\",\n                                             textAlign: 'center'\n                                         }}\n                                    />\n                                </div>\n\n                                {index === file.length - 1 ? file.title : file.title + \" \"}\n                                <br/>\n                                <a href={appConfig.apiDomaine + '/download/' + file.id}\n                                   download={file.title}><strong>Télécharger</strong></a>\n                                <hr/>\n                                <div className=\"\">\n                                    {data.text}\n                                    <div className=\"time\">\n                                        {chatTimestamp}\n                                    </div>\n                                </div>\n                            </div>\n                        )) :\n                        <div className=\"bubble\">\n\n                            {\n                                data.parent_id && data.parent ?\n                                    <div>\n                                        <div><i className=\"la la-tags\"></i></div>\n                                        <em> {data.parent.text} </em>\n                                        <div style={{fontSize: '12px'}}>\n                                            {\"By:\" + \" \" + data.parent.posted_by.identite.lastname + ' ' + data.parent.posted_by.identite.firstname}\n                                        </div>\n                                        <hr/>\n                                        {data.text}\n                                    </div> :\n                                    data.text\n                            }\n\n                            <div className=\"time\">\n                                {chatTimestamp}\n                            </div>\n                        </div>\n                }\n                <div className=\"dropdown dropdown-inline\"\n                     style={{cursor: \"pointer\"}}>\n                    <div\n                        id={data.id}\n                        style={{display: \"none\"}}\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\">\n                        <i className=\"flaticon-more-v5\"></i>\n                    </div>\n\n                    <div\n                        className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-md w-auto\">\n\n                        <ul className=\"kt-nav\">\n                            <li className=\"kt-nav__head\">\n                               <span\n                                   className=\"kt-nav__link-text\">Citer\n                               </span>\n                                <a href={\"#\"} onClick={() => responseItemProps(data.id, data.text)}>\n                                    <i className=\"kt-nav__link-icon flaticon-reply\"></i>\n                                </a>\n                            </li>\n\n                            <li className=\"kt-nav__head\">\n                               <span\n                                   className=\"kt-nav__link-text\">Supprimer\n                               </span>\n                                <a href={\"#\"} onClick={(e) => deletedProps(data.id)}>\n                                    <i className=\"kt-nav__link-icon flaticon2-trash\"></i>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/IdentityForm.jsx",["1054","1055"],"import React, {useEffect, useState} from \"react\";\nimport TagsInput from \"react-tagsinput\";\nimport './staff/react-tagsinput.css';\nimport {connect} from \"react-redux\";\nimport {addIdentity} from \"../../store/actions/IdentityAction\";\nimport axios from \"axios\";\nimport appConfig from \"../../config/appConfig\";\nimport Select from \"react-select\";\nimport {\n    useParams\n} from \"react-router-dom\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport InputRequire from \"./InputRequire\";\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        list: `${appConfig.apiDomaine}/my/clients`,\n    },\n    MACRO: {\n        holding: {\n            list: `${appConfig.apiDomaine}/any/clients`,\n        },\n        filial: {\n            list: `${appConfig.apiDomaine}/my/clients`,\n        }\n    },\n\n};\n\nconst IndentiteForm = (props) => {\n    const {id} = useParams();\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'store-client-from-any-institution'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'store-client-from-my-institution'))\n            endPoint = endPointConfig[props.plan].filial\n    } else {\n        endPoint = endPointConfig[props.plan]\n    }\n    const defaultData = {\n        firstname: \"\",\n        lastname: \"\",\n        sexe: \"\",\n        ville: \"\",\n        telephone: [],\n        email: [],\n        client_id: [],\n        institution_id: []\n    };\n    const defaultError = {\n        firstname: [],\n        lastname: [],\n        sexe: [],\n        ville: [],\n        telephone: [],\n        email: [],\n        client_id: [],\n        institution_id: []\n    };\n    const [data, setData] = useState(props.getLoading ? props.getIdentite : defaultData);\n    const [error] = useState(defaultError);\n    const [nameClient, setNameClient] = useState([]);\n    const [client, setClient] = useState([]);\n    const [institutionData, setInstitutionData] = useState(undefined);\n    const [institution, setInstitution] = useState([]);\n    const [disableInput,setDisableInput]=useState(true);\n\n    useEffect(() => {\n        if(verifyPermission(props.userPermissions,'store-client-from-my-institution')){\n        axios.get(endPoint.list)\n            .then(response => {\n                const options = [\n                    response.data? response.data.map((client) => ({\n                        value: client.client_id,\n                        label: client.client.identite.firstname + ' ' + client.client.identite.lastname\n                    })) : \"\"\n                ];\n                setNameClient(options);\n            });\n        }\n        axios.get(appConfig.apiDomaine + `/any/clients/create`)\n            .then(response => {\n                const options = [\n                    response.data.institutions.length ? response.data.institutions.map((institution) => ({\n                        value: institution.id,\n                        label: institution.name\n                    })) : \"\"\n                ];\n                setInstitutionData(options);\n            });\n    }, []);\n    const onChangeFirstName = (e) => {\n        const newData = {...data};\n        newData.firstname = e.target.value;\n        setData(newData);\n        props.addIdentite(newData)\n    };\n\n    const onChangeLastName = (e) => {\n        const newData = {...data};\n        newData.lastname = e.target.value;\n        setData(newData);\n        props.addIdentite(newData)\n    };\n\n    const onChangeTelephone = (tel) => {\n        const newData = {...data};\n        newData.telephone = tel;\n        setData(newData);\n        props.addIdentite(newData)\n    };\n\n    const onChangeSexe = (e) => {\n        const newData = {...data};\n        newData.sexe = e.target.value;\n        setData(newData);\n        props.addIdentite(newData)\n    };\n    const onChangeEmail = (mail) => {\n        const newData = {...data};\n        newData.email = mail;\n        setData(newData);\n        props.addIdentite(newData)\n    };\n    const onChangeVille = (e) => {\n        const newData = {...data};\n        newData.ville = e.target.value;\n        setData(newData);\n        props.addIdentite(newData)\n    };\n    const onChangeInstitution = (selected) => {\n        const newData = {...data};\n        newData.institution_id = selected.value;\n        setInstitution(selected);\n        props.addIdentite(selected);\n        axios.get(appConfig.apiDomaine + `/any/clients/${newData.institution_id}/institutions`)\n            .then(response => {\n                console.log(response.data, \"CLIENT D'UNE INSTITUTION\");\n                const options = [\n                    response.data ? response.data.map((client) => ({\n                        value: client.client_id,\n                        label: client.client.identite.firstname + ' ' + client.client.identite.lastname\n                    })) : \"\"\n                ];\n                    setNameClient(options);\n            });\n\n        setData(newData);\n        setDisableInput(false)\n    };\n\n\n    const onChangeClient = (selected) => {\n        const newData = {...data};\n        newData.client_id = selected.value;\n        setClient(selected);\n        setData(newData);\n        props.addIdentite(selected);\n        axios.get(endPoint.list + `/${newData.client_id}`)\n            .then(response => {\n                console.log(response.data,\"IDENTITE\")\n                const newIdentity = {\n                    firstname: response.data.client.identite.firstname,\n                    lastname: response.data.client.identite.lastname,\n                    sexe: response.data.client.identite.sexe,\n                    telephone: response.data.client.identite.telephone,\n                    email: response.data.client.identite.email,\n                    ville: response.data.client.identite.ville === null ? \"\" : response.data.client.identite.ville,\n                    client_id: response.data.client_id,\n                    institution_id:response.data.institution_id\n                };\n                setData(newIdentity);\n                props.addIdentite(newIdentity);\n\n            });\n    };\n\n    return (\n        <div>\n            <div className=\"kt-portlet__body\">\n                <div className=\"kt-section kt-section--first\">\n                    <h5 className=\"kt-section__title kt-section__title-lg\">Identité:</h5>\n                    {!id ?\n                        <div className=\"form-group row\">\n                            {\n                                verifyPermission(props.userPermissions, \"store-client-from-any-institution\") ?\n                                    <div\n                                        className={error.institution_id.length ? \"col validated\" : \"col\"}>\n                                        <label htmlFor=\"exampleSelect1\"> Institution</label>\n                                        {institutionData ? (\n                                            <Select\n                                                value={institution}\n                                                placeholder={\"Veillez selectionner l'institution\"}\n                                                onChange={onChangeInstitution}\n                                                options={institutionData.length ? institutionData[0].map(name => name) : ''}\n                                            />\n                                        ) : (\n                                            <select name=\"category\"\n                                                    className={error.institution_id.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    id=\"category\">\n                                                <option value=\"\"/>\n                                            </select>\n                                        )\n                                        }\n\n                                        {\n                                            error.institution_id.length ? (\n                                                error.institution_id.map((error, index) => (\n                                                    <div key={index} className=\"invalid-feedback\">\n                                                        {error}\n                                                    </div>\n                                                ))\n                                            ) : \"\"\n                                        }\n                                    </div>\n                                    : \"\"\n                            }\n                            <div\n                                className={error.client_id.length ? \"col validated\" : \"col\"}>\n                                <label htmlFor=\"exampleSelect1\"> Client</label>\n                                {nameClient ? (\n                                    <Select\n                                        placeholder={\"Veillez selectionner le client\"}\n                                        value={client}\n                                        onChange={onChangeClient}\n                                        options={nameClient.length ? nameClient[0].map(name => name) : ''}\n                                    />\n                                ) : (<select name=\"category\"\n                                             className={error.client_id.length ? \"form-control is-invalid\" : \"form-control\"}\n                                             id=\"category\">\n                                    <option value=\"\"/>\n                                </select>)\n                                }\n\n                                {\n                                    error.client_id.length ? (\n                                        error.client_id.map((error, index) => (\n                                            <div key={index} className=\"invalid-feedback\">\n                                                {error}\n                                            </div>\n                                        ))\n                                    ) : \"\"\n                                }\n                            </div>\n                        </div>\n                        : \"\"\n                    }\n                    <div className=\"form-group row\">\n                        <div className={error.lastname.length ? \"col validated\" : \"col\"}>\n                            <label htmlFor=\"lastname\">Nom <InputRequire/></label>\n                            <input\n                                id=\"lastname\"\n                                type=\"text\"\n                                className={error.lastname.length ? \"form-control is-invalid\" : \"form-control\"}\n                                placeholder=\"Veillez entrer le nom de famille\"\n                                value={data.lastname}\n                                onChange={(e) => onChangeLastName(e)}\n                                disabled={props.getDisable ? props.getDisable : false}\n                            />\n                            {\n                                error.lastname.length ? (\n                                    error.lastname.map((error, index) => (\n                                        <div key={index} className=\"invalid-feedback\">\n                                            {error}\n                                        </div>\n                                    ))\n                                ) : \"\"\n                            }\n                        </div>\n\n                        <div className={error.firstname.length ? \"col validated\" : \"col\"}>\n                            <label htmlFor=\"firstname\">Prénom(s) <InputRequire/></label>\n                            <input\n                                id=\"firstname\"\n                                type=\"text\"\n                                className={error.firstname.length ? \"form-control is-invalid\" : \"form-control\"}\n                                placeholder=\"Veillez entrer le prénom\"\n                                value={data.firstname}\n                                onChange={(e) => onChangeFirstName(e)}\n                                disabled={props.getDisable ? props.getDisable : false}\n                            />\n                            {\n                                error.firstname.length ? (\n                                    error.firstname.map((error, index) => (\n                                        <div key={index} className=\"invalid-feedback\">\n                                            {error}\n                                        </div>\n                                    ))\n                                ) : \"\"\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <div className={error.sexe.length ? \" col validated\" : \"col\"}>\n                            <label htmlFor=\"sexe\">Sexe <InputRequire/></label>\n                            <select\n                                id=\"sexe\"\n                                className={error.sexe.length ? \"form-control is-invalid\" : \"form-control\"}\n                                value={data.sexe}\n                                onChange={(e) => onChangeSexe(e)}\n                                disabled={props.getDisable ? props.getDisable : false}\n                            >\n                                <option value=\"\" disabled={true}>Veillez choisir le Sexe\n                                </option>\n                                <option value=\"F\">Féminin</option>\n                                <option value=\"M\">Masculin</option>\n                                <option value=\"A\">Autres</option>\n                            </select>\n                            {\n                                error.sexe.length ? (\n                                    error.sexe.map((error, index) => (\n                                        <div key={index} className=\"invalid-feedback\">\n                                            {error}\n                                        </div>\n                                    ))\n                                ) : \"\"\n                            }\n                        </div>\n                        <div className={error.ville.length ? \"col validated\" : \"col\"}>\n                            <label htmlFor=\"ville\">Ville <InputRequire/></label>\n                            <input\n                                id=\"ville\"\n                                type=\"text\"\n                                className={error.ville.length ? \"form-control is-invalid\" : \"form-control\"}\n                                placeholder=\"Veillez entrer votre ville\"\n                                value={data.ville}\n                                onChange={(e) => onChangeVille(e)}\n                                disabled={props.getDisable ? props.getDisable : false}\n                            />\n                            {\n                                error.ville.length ? (\n                                    error.ville.map((error, index) => (\n                                        <div key={index} className=\"invalid-feedback\">\n                                            {error}\n                                        </div>\n                                    ))\n                                ) : \"\"\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <div className={error.telephone.length ? \"col validated\" : \"col\"}>\n                            <label htmlFor=\"telephone\"> Téléphone(s) <InputRequire/></label>\n                            <TagsInput\n                                value={data.telephone}\n                                onChange={onChangeTelephone}\n                                disabled={props.getDisable ? props.getDisable : false}\n                                inputProps={{className: \"react-tagsinput-input\", placeholder: \"Numéro(s)\"}}\n                            />\n                            {\n                                error.telephone.length ? (\n                                    error.telephone.map((error, index) => (\n                                        <div key={index} className=\"invalid-feedback\">\n                                            {error}\n                                        </div>\n                                    ))\n                                ) : \"\"\n                            }\n                        </div>\n\n                        <div className={error.email.length ? \"col validated\" : \"col\"}>\n                            <label htmlFor=\"email\">Email(s) <InputRequire/></label>\n                            <TagsInput\n                                value={data.email}\n                                onChange={onChangeEmail}\n                                disabled={props.getDisable ? props.getDisable : false}\n                                inputProps={{className: \"react-tagsinput-input\", placeholder: \"Email(s)\"}}\n                            />\n                            {\n                                error.email.length ? (\n                                    error.email.map((error, index) => (\n                                        <div key={index} className=\"invalid-feedback\">\n                                            {error}\n                                        </div>\n                                    ))\n                                ) : \"\"\n                            }\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n};\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        identite: state.identite,\n        plan: state.plan.plan,\n    }\n};\n\nexport default connect(mapStateToProps, {addIdentite: addIdentity})(IndentiteForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/ReasonSatisfaction.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/ClaimToInstitution.jsx",["1056","1057"],"import React, {useEffect, useState} from 'react';\nimport Chart from \"react-apexcharts\";\nimport LoadingTable from \"../LoadingTable\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport appConfig from \"../../../config/appConfig\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\n\nconst ClaimToInstitution = (props) => {\n    const [load, setLoad] = useState(true);\n    const [institutionData, setInstitutionData] = useState(\"\");\n\n    const defaultData = {\n        series: institutionData?institutionData.series:[],\n        options: {\n            chart: {\n                width: 380,\n                type: 'pie',\n            },\n            labels: institutionData?institutionData.options.labels:[],\n            responsive: [{\n                breakpoint: 480,\n                options: {\n                    chart: {\n                        width: 200\n                    },\n                    legend: {\n                        position: 'bottom'\n                    }\n                }\n            }]\n        },\n    };\n\n    useEffect(() => {\n        let isCancelled = false;\n\n        async function fetchData() {\n            await axios.get(appConfig.apiDomaine + \"/dashboard\")\n                .then(response => {\n                    if (!isCancelled) {\n                        // console.log(response.data, \"ProcessEvolution\");\n                        let institutionTarget = response.data.institutionsTargeted;\n                        let institutionData = [];\n                        for (const processus in institutionTarget) {\n                            institutionData.push(processus);\n                        }\n                        // console.log(institutionData,\"institutionData\");\n                        let newData = {...defaultData};\n                        newData.options.labels = institutionData;\n                        newData.series = Object.values(institutionTarget).map(serie => serie.allInstitution);\n                        // console.log(newData,\"newData\");\n                        setInstitutionData(newData);\n                        setLoad(false)\n                    }\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n        }\n\n        if (verifyTokenExpire())\n            fetchData();\n        return () => {\n            isCancelled = true;\n        }\n    }, []);\n\n    return (\n\n                <div>\n                    <div className=\"kt-portlet__head\">\n                        <div className=\"kt-portlet__head-label\">\n                            <h3 className=\"kt-portlet__head-title\">Satisfaction des institutions qui reçoivent plus de\n                                réclamations sur les 30 derniers jours</h3>\n                        </div>\n                    </div>\n                    {\n                        load ? (\n                            <LoadingTable/>\n                        ) : (\n                            <div id=\"chart\" className=\"d-flex justify-content-center\" style={{position: \"relative\"}}>\n                                <Chart options={institutionData.options} series={institutionData.series} type=\"pie\"\n                                       width={380}/>\n                            </div>\n                        )}\n                </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(ClaimToInstitution);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/GraphChannel.jsx",["1058"],"import React, {useEffect, useState} from 'react';\nimport Chart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport appConfig from \"../../../config/appConfig\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport LoadingTable from \"../LoadingTable\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nconst GraphChannel = (props) => {\n\n    const [channelData, setChannelData] = useState(\"\");\n    const [load, setLoad] = useState(true);\n\n    const defaultData = {\n\n        series: [{\n            name: 'Total',\n            data: channelData ? channelData.series.data : []\n        }],\n        options: {\n            chart: {\n                height: 350,\n                type: 'bar',\n                events: {\n                    click: function (chart, w, e) {\n                    }\n                }\n            },\n            // colors: \"#f3f3f8\",\n            plotOptions: {\n                bar: {\n                    columnWidth: '45%',\n                    distributed: true\n                }\n            },\n            dataLabels: {\n                enabled: false\n            },\n            legend: {\n                show: false\n            },\n            xaxis: {\n                categories: channelData ? channelData.options.xaxis.categories : [],\n                labels: {\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            }\n        },\n\n\n    };\n\n\n    useEffect(() => {\n        let isCancelled = false;\n\n        async function fetchData() {\n           await axios.get(appConfig.apiDomaine + \"/dashboard\")\n                .then(response => {\n                    // console.log(response.data, \"CANAL_STAT\")\n                    if (!isCancelled) {\n                        let channels = [];\n                        for (const channel in response.data.channelsUse) {\n                            channels.push(channel);\n                        }\n                        let newChannels = {...defaultData};\n                        newChannels.options.xaxis.categories = channels;\n                        if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\n                            newChannels.series[0].data = Object.values(response.data.channelsUse).map(serie => serie.allInstitution)\n                        } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\n                            newChannels.series[0].data = Object.values(response.data.channelsUse).map(serie => serie.myInstitution)\n                        }\n                        setChannelData(newChannels);\n                        setLoad(false)\n                    }\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n        }\n\n        if (verifyTokenExpire())\n            fetchData();\n        return () => {\n            isCancelled = true;\n        }\n    }, []);\n    return (\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\n            <div className=\"kt-portlet\">\n                <div className=\"kt-portlet__head\">\n                    <div className=\"kt-portlet__head-label\">\n                        <h3 className=\"kt-portlet__head-title\">Total des Réclamations reçues par Canal sur les 30 derniers jours</h3>\n                    </div>\n                </div>\n                {\n                    load ? (\n                        <LoadingTable/>\n                    ) : (\n                        channelData ?\n                            <div id=\"chart\" className=\"kt-portlet__body\">\n                                <Chart options={channelData.options} series={channelData.series} type=\"bar\"\n                                       height={350}/>\n                            </div>\n                            : null\n                    )\n                }\n\n            </div>\n            : null\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(GraphChannel);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ClaimObjectImportPage.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/DashboardStatistic.jsx",["1059"],"import React, {useEffect, useState} from 'react';\nimport Chart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport appConfig from \"../../../config/appConfig\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport LoadingTable from \"../LoadingTable\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\nconst DashboardStatistic = (props) => {\n    const [data, setProcessData] = useState(\"\");\n    const [load, setLoad] = useState(true);\n\n    const tooltipHoverFormatter = (val, opts) => {\n        return val + ' : ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\n    };\n\n    const defaultData = {\n        series: [{\n            name: \"Enregistrées\",\n            data: data ? data.series.data1 : []\n        },\n            {\n                name: \"Tranférées à une Unité\",\n                data: data ? data.series.data2 : []\n            },\n            {\n                name: 'Traitées',\n                data: data ? data.series.data3 : []\n            },\n            {\n                name: 'Non Fondées',\n                data: data ? data.series.data4 : []\n            },\n            {\n                name: 'Mesure Satisfaction',\n                data: data ? data.series.data5 : []\n            }\n        ],\n        options: {\n            chart: {\n                height: 350,\n                type: 'line',\n                zoom: {\n                    enabled: false\n                },\n            },\n            dataLabels: {\n                enabled: false\n            },\n            stroke: {\n                width: [3, 5, 3, 2, 3],\n                curve: 'smooth',\n                dashArray: [0, 3, 3, 0, 3]\n            },\n            title: {\n                text: 'Evolution des satisfactions par mois',\n                align: 'left'\n            },\n            legend: {\n                tooltipHoverFormatter\n            },\n            fill: {\n                opacity: 0.05,\n                type: 'gradient',\n                gradient: {\n                    shadeIntensity: 1,\n                    inverseColors: false,\n                    opacityFrom: 0.45,\n                    opacityTo: 0.05,\n                    stops: [20, 100, 100, 100]\n                },\n            },\n            grid: {\n                row: {\n                    colors: ['#f3f3f3', 'transparent'],\n                    opacity: 0.2\n                },\n            },\n\n            xaxis: {\n                categories: data ? data.options.xaxis.categories : [],\n                title: {\n                    text: 'Mois'\n                }\n            },\n\n        },\n    };\n    useEffect(() => {\n        let isCancelled = false;\n\n        async function fetchData() {\n           await axios.get(appConfig.apiDomaine + \"/dashboard\")\n                .then(response => {\n                    if (!isCancelled) {\n                        // console.log(response.data, \"claimerProcessEvolution\");\n                        let claimProcess = response.data.claimerProcessEvolution;\n                        let processData = [];\n                        for (const processus in Object.values(claimProcess)[0]) {\n                            processData.push(processus);\n                        }\n                        // console.log(processData,\"processData\");\n                        let newData = [];\n                        for (const key in claimProcess) {\n                            let totalProcess = claimProcess[key];\n                            if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\n                                newData.push({\n                                    month: key,\n                                    data0: totalProcess.registered.allInstitution,\n                                    data1: totalProcess.transferred_to_unit.allInstitution,\n                                    data2: totalProcess.treated.allInstitution,\n                                    data3: totalProcess.unfounded.allInstitution,\n                                    data4: totalProcess.measured.allInstitution\n                                })\n                            } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\n                                newData.push({\n                                    month: key,\n                                    data0: totalProcess.registered.myInstitution,\n                                    data1: totalProcess.transferred_to_unit.myInstitution,\n                                    data2: totalProcess.treated.myInstitution,\n                                    data3: totalProcess.unfounded.myInstitution,\n                                    data4: totalProcess.measured.myInstitution\n                                })\n                            }\n                        }\n                        let newProcess = {...defaultData};\n                        newProcess.options.xaxis.categories=Object.values(newData.map(label=>label.month));\n                        for (let i = 0; i <= processData.length - 1; i++) {\n                            newProcess.series[i].data = Object.values(newData).map(serie => serie['data' + i]);\n                        }\n                        // console.log(newProcess,\"WITH_MONTH\");\n                        setProcessData(newProcess);\n                        setLoad(false)\n                    }\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n\n        if (verifyTokenExpire())\n            fetchData();\n        return () => {\n            isCancelled = true;\n        }\n    }, []);\n\n    return (\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\n            <div className=\"kt-portlet\">\n                <div className=\"kt-portlet__head\">\n                    <div className=\"kt-portlet__head-label\">\n                        <h3 className=\"kt-portlet__head-title\">Evolution de la satisfaction des réclamations sur les 11\n                            derniers mois</h3>\n                    </div>\n                </div>\n\n                {\n                    load ? (\n                        <LoadingTable/>\n                    ) : (\n                    data ?\n                        <div id=\"chart\" className=\"kt-portlet__body\">\n                            <Chart options={data.options} series={data.series} type=\"area\" height={350}/>\n                        </div>\n                        : null\n                    )\n                }\n            </div>\n            : null\n    )\n\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(DashboardStatistic);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/DashboardSummaryReport.jsx",["1060"],"import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport appConfig from \"../../../config/appConfig\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport {connect} from \"react-redux\";\nimport LoadingTable from \"../LoadingTable\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\nconst DashboardSummaryReport = (props) => {\n    const [load, setLoad] = useState(true);\n\n    const reportColor = [\n        {\n            id: 0,\n            rowColor: \"table-primary\",\n            rang:1,\n        },\n        {\n            id: 1,\n            rowColor: \"table-success\",\n            rang:2,\n        },\n        {\n            id: 2,\n            rowColor: \"table-bland\",\n            rang:3,\n        },\n        {\n            id: 3,\n            rowColor: \"table-warning\",\n            rang:4,\n        },\n        {\n            id: 4,\n            rowColor: \"table-danger\",\n            rang:5\n        },\n\n    ];\n\n    const [data, setData] = useState(\"\");\n\n\n    useEffect(() => {\n        let isCancelled = false;\n\n        async function fetchData() {\n            await axios.get(appConfig.apiDomaine + \"/dashboard\")\n                .then(response => {\n                    if (!isCancelled) {\n                        let claimObjects = response.data.claimObjectsUse;\n                        let newData = [];\n                        for (const key in claimObjects) {\n                            let totalObjectUse = claimObjects[key];\n                            if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\n                                newData.push({canal: key, label: totalObjectUse.allInstitution})\n                            } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\n                                newData.push({canal: key, label: totalObjectUse.myInstitution})\n                            }\n                        }\n                        newData.sort(function (a, b) {\n                            return b.label - a.label;\n                        });\n                        const result = newData.filter(function (event) {\n                            return newData.indexOf(event) < 5\n                        });\n                        setData(result);\n                        setLoad(false)\n                    }\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n\n        if (verifyTokenExpire())\n            fetchData();\n        return () => {\n            isCancelled = true;\n        }\n    }, []);\n    return (\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\n            <div className=\"kt-portlet\">\n                    <div className=\"kt-portlet__head\">\n                        <div className=\"kt-portlet__head-label\">\n                            <h3 className=\"kt-portlet__head-title\">\n                                Statistique des cinq (05) plus fréquents Objets de Réclamations sur les 30 derniers jours\n                            </h3>\n                        </div>\n                    </div>\n                    {\n                        load ? (\n                            <LoadingTable/>\n                        ) : (\n                            <div className=\"kt-portlet__body\">\n                                <table className=\"table table-striped table-bordered\">\n                                    <thead>\n                                    <tr>\n                                        <th>Rang</th>\n                                        <th>Objets de Réclamations</th>\n                                        <th>Total</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n\n                                    {data ?\n                                        data.map((report, i) => (\n                                            reportColor.map((color, j) => (\n                                                i === j ?\n                                                    report.label!==0?\n                                                    <tr key={i}>\n                                                        <td>{color.rang}</td>\n\n                                                        <td>{report.canal}</td>\n\n                                                        <td>{report.label}</td>\n                                                    </tr> : null\n                                                    : null\n                                            ))\n                                        ))\n                                        : null\n                                    }\n\n                                    </tbody>\n                                </table>\n\n                            </div>\n                        )\n                    }\n            </div>\n            : null\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(DashboardSummaryReport);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/DashboardStatClaim.jsx",["1061"],"import React, {useEffect, useState} from 'react';\nimport Chart from \"react-apexcharts\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport axios from \"axios\";\nimport appConfig from \"../../../config/appConfig\";\nimport {connect} from \"react-redux\";\nimport LoadingTable from \"../LoadingTable\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\n\nconst DashboardStatClaim = (props) => {\n\n    const [satisfactionData, setSatisfactionData] = useState(\"\");\n    const [load, setLoad] = useState(true);\n\n    const tooltipHoverFormatter = (val, opts) => {\n        return val + ' : ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\n    };\n\n    const defaultData = {\n        series: [\n\n            {\n                name: \"Mesure Satisfaction\",\n                data: satisfactionData ? satisfactionData.series.data1 : []\n            },\n            {\n                name: \"Satisfaisantes\",\n                data: satisfactionData ? satisfactionData.series.data2 : []\n            },\n            {\n                name: 'Non Satisfaisantes',\n                data: satisfactionData ? satisfactionData.series.data3 : []\n            }\n        ],\n        options: {\n            chart: {\n                height: 350,\n                type: 'line',\n                zoom: {\n                    enabled: false\n                },\n            },\n            dataLabels: {\n                enabled: false\n            },\n            stroke: {\n                width: [3, 5, 3],\n                curve: 'smooth',\n                dashArray: [0, 3, 3]\n            },\n            title: {\n                text: 'Evolution des satisfactions par mois',\n                align: 'left'\n            },\n            legend: {\n                tooltipHoverFormatter\n            },\n\n            grid: {\n                row: {\n                    colors: ['#f3f3f3', 'transparent'],\n                    opacity: 0.2\n                },\n            },\n            xaxis: {\n                categories:satisfactionData ? satisfactionData.options.xaxis.categories : [],\n                title: {\n                    text: 'Mois'\n                }\n            },\n\n        },\n    };\n\n    useEffect(() => {\n        let isCancelled = false;\n\n        async function fetchData() {\n            await axios.get(appConfig.apiDomaine + \"/dashboard\")\n                .then(response => {\n                    // console.log(response.data, \"claimerSatisfactionEvolution\")\n                    if (!isCancelled) {\n                        let claimSatifaction = response.data.claimerSatisfactionEvolution;\n                        let satisfiedData = [];\n                        for (const satisfied in Object.values(claimSatifaction)[0]) {\n                            satisfiedData.push(satisfied);\n                        }\n                        // console.log(satisfiedData,\"satisfiedData\")\n                        let newData = [];\n                        for (const key in claimSatifaction) {\n                            let totalSatisfaction = claimSatifaction[key];\n                            if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\n                                newData.push({\n                                    month: key,\n                                    data0: totalSatisfaction.measured.allInstitution,\n                                    data1: totalSatisfaction.satisfied.allInstitution,\n                                    data2: totalSatisfaction.unsatisfied.allInstitution\n                                })\n                            } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\n                                newData.push({\n                                    month: key,\n                                    data0: totalSatisfaction.measured.myInstitution,\n                                    data1: totalSatisfaction.satisfied.myInstitution,\n                                    data2: totalSatisfaction.unsatisfied.myInstitution\n                                })\n                            }\n                        }\n                        let newSatisfaction = {...defaultData};\n                        newSatisfaction.options.xaxis.categories=Object.values(newData.map(label=>label.month));\n                        for (let i = 0; i <= satisfiedData.length - 1; i++) {\n                            newSatisfaction.series[i].data = Object.values(newData).map(serie => serie['data' + i]);\n                        }\n                        // console.log(newSatisfaction,\"WITH_MONTH\");\n                        setSatisfactionData(newSatisfaction);\n                        setLoad(false)\n                    }\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                });\n        }\n\n        if (verifyTokenExpire())\n            fetchData();\n        return () => {\n            isCancelled = true;\n        }\n    }, [props.userPermissions, defaultData]);\n\n    return (\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\n            <div className=\"kt-portlet\">\n                <div className=\"kt-portlet__head\">\n                    <div className=\"kt-portlet__head-label\">\n                        <h3 className=\"kt-portlet__head-title\">Evolution de la satisfaction des réclamants sur les 11\n                            derniers mois</h3>\n                    </div>\n                </div>\n                {\n                    load ? (\n                        <LoadingTable/>\n                    ) : (\n                        satisfactionData ?\n                            <div id=\"chart\" className=\"kt-portlet__body\">\n                                <Chart options={satisfactionData.options} series={satisfactionData.series} type=\"line\"\n                                       height={350}/>\n                            </div>\n                            : null\n                    )\n                }\n            </div>\n            : null\n    )\n\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(DashboardStatClaim);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/TreatmentForm.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/Institutions/ImportInstitutionForm.jsx",["1062","1063"],"import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link,\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"../Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n} from \"../../../config/toastConfig\";\nimport appConfig from \"../../../config/appConfig\";\nimport InputRequire from \"../InputRequire\";\nimport {connect} from \"react-redux\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport {ERROR_401} from \"../../../config/errorPage\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nconst ImportInstitutionForm = (props) => {\n    document.title = \"Satis institution - Importation de fichier excel\";\n\n    if (!verifyPermission(props.userPermissions, 'store-any-institution'))\n        window.location.href = ERROR_401;\n\n    const defaultData = {\n        file: \"\",\n    };\n    const defaultError = {\n        file: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    const onChangeFile = (e) => {\n        const newData = {...data};\n        newData.file = Object.values(e.target.files)[0];\n        setData(newData);\n    };\n\n\n    const formatFormData = (newData) => {\n        const formData = new FormData();\n        formData.append(\"_method\", \"post\");\n        for (const key in newData) {\n            // console.log(`${key}:`, newData[key]);\n            if (key === \"file\") {\n                formData.append(\"file\", newData.file);\n            } else\n                formData.set(key, newData[key]);\n        }\n        console.log(formData.get('file'), 'FORMDATA');\n        return formData;\n\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n\n        if (verifyTokenExpire()) {\n            if (verifyTokenExpire()) {\n                axios.post(`${appConfig.apiDomaine}/any/import-institutions`, formatFormData(data))\n                    .then(response => {\n                        setStartRequest(false);\n                        setError(defaultError);\n                        setData(defaultData);\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                    })\n                    .catch(error => {\n                        setStartRequest(false);\n                        setError({...defaultError, ...error.response.data.error});\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                    })\n                ;\n            }\n        }\n    };\n\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                    Importation\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            Importation de clients\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-portlet__body\">\n\n                                        <div\n                                            className={error.file.length ? \"form-group row validated\" : \"form-group row\"}>\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                   htmlFor=\"file\">Fichier <InputRequire/></label>\n                                            <div className=\"col-md-9 mb-3\">\n                                                <input\n                                                    id=\"file\"\n                                                    type=\"file\"\n                                                    className={error.file.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez télécharger le fichier excel\"\n                                                    onChange={(e) => onChangeFile(e)}\n                                                />\n                                                {\n                                                    error.file.length ? (\n                                                        error.file.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"kt-portlet__foot text-right\">\n                                        <div className=\"kt-form__actions\">\n                                            {\n                                                !startRequest ? (\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)}\n                                                            className=\"btn btn-primary\">Enregistrer</button>\n                                                ) : (\n                                                    <button\n                                                        className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                        type=\"button\" disabled>\n                                                        Chargement...\n                                                    </button>\n                                                )\n                                            }\n                                            {\n                                                !startRequest ? (\n                                                    <Link to=\"/settings/clients\"\n                                                          className=\"btn btn-secondary mx-2\">\n                                                        Quitter\n                                                    </Link>\n                                                ) : (\n                                                    <Link to=\"/settings/clients\"\n                                                          className=\"btn btn-secondary mx-2\" disabled>\n                                                        Quitter\n                                                    </Link>\n                                                )\n                                            }\n\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n    return (\n        verifyPermission(props.userPermissions, 'store-any-institution') ?\n            printJsx()\n            : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan,\n    }\n};\n\nexport default connect(mapStateToProps)(ImportInstitutionForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/ConfigCoefficient.jsx",["1064","1065"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link,\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"./Toast\";\nimport {\n    toastEditErrorMessageConfig, toastEditSuccessMessageConfig,\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport InputRequire from \"./InputRequire\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\nimport {connect} from \"react-redux\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nconst ConfigCoefficient = (props) => {\n\n    if (!verifyPermission(props.userPermissions, \"update-relance-parameters\"))\n        window.location.href = ERROR_401;\n\n    const defaultData = {\n        coef: \"\",\n    };\n    const defaultError = {\n        coef: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + `/configurations/relance`)\n                .then(response => {\n                    console.log(response.data, \"Data\");\n                    const newConfig = {\n                        coef: response.data.coef,\n                    };\n                    setData(newConfig)\n                })\n            ;\n        }\n    }, []);\n\n    const onChangeCoef = (e) => {\n        const newData = {...data};\n        newData.coef = e.target.value;\n        setData(newData);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n        if (verifyTokenExpire()) {\n            axios.put(appConfig.apiDomaine + `/configurations/relance`, data)\n                .then(response => {\n                    setStartRequest(false);\n                    setError(defaultError);\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                })\n                .catch(error => {\n                    setStartRequest(false);\n                    setError({...defaultError, ...error.response.data.error});\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                })\n            ;\n        }\n    };\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                    Coefficient\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            Coefficient\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-portlet__body\">\n\n                                        <div className={error.coef.length ? \"form-group  validated\" : \"form-group\"}>\n                                            <label htmlFor=\"coef\">Coefficient <InputRequire/></label>\n                                            <div className=\"col-md-6 mb-3\">\n                                                <input\n                                                    id=\"coef\"\n                                                    type=\"text\"\n                                                    className={error.coef.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez entrer le Coefficient\"\n                                                    value={data.coef}\n                                                    onChange={(e) => onChangeCoef(e)}\n                                                />\n                                                {\n                                                    error.coef.length ? (\n                                                        error.coef.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"kt-portlet__foot\">\n                                        <div className=\"kt-form__actions\">\n                                            {\n                                                !startRequest ? (\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)}\n                                                            className=\"btn btn-primary\">Modifier</button>\n                                                ) : (\n                                                    <button\n                                                        className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                        type=\"button\" disabled>\n                                                        Chargement...\n                                                    </button>\n                                                )\n                                            }\n                                            {\n                                                !startRequest ? (\n                                                    <Link to=\"/dashbord\"\n                                                          className=\"btn btn-secondary mx-2\">\n                                                        Quitter\n                                                    </Link>\n                                                ) : (\n                                                    <Link to=\"/dashbord\"\n                                                          className=\"btn btn-secondary mx-2\" disabled>\n                                                        Quitter\n                                                    </Link>\n                                                )\n                                            }\n\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n    return (\n        verifyPermission(props.userPermissions, \"update-relance-parameters\") ?\n            printJsx()\n            : null\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(ConfigCoefficient);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/TreatmentPeriodAdd.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/QualificationPeriodAdd.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/DashboardClaimsActivity.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/StaffImportPage.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/HistoricClaimsTraetment.jsx",["1066"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\n\nconst HistoricClaimsAdd = (props) => {\n    document.title = \"Satis client - Paramètre Historique\";\n\n    if (!verifyPermission(props.userPermissions, \"history-list-treat-claim\")) {\n        window.location.href = ERROR_401;\n    }\n    const [load, setLoad] = useState(true);\n    const [claimsAdd, setClaimsAdd] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(10);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + \"/history/list-treat\")\n                .then(response => {\n                    console.log(response.data,\"DATA\")\n                    setLoad(false);\n                    setClaimsAdd(response.data);\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, []);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newClaimsAdd = [...claimsAdd];\n        newClaimsAdd = newClaimsAdd.filter(el => (\n            getLowerCaseString(el.claim_object ? el.claim_object.name.fr : \"\").indexOf(value) >= 0 ||\n            getLowerCaseString(el.description).indexOf(value) >= 0 ||\n            getLowerCaseString(el.claimer.lastname).indexOf(value) >= 0 ||\n            getLowerCaseString(el.claimer.firstname).indexOf(value) >= 0 ||\n            getLowerCaseString(el.request_channel_slug).indexOf(value) >= 0 ||\n            getLowerCaseString(el.response_channel_slug).indexOf(value) >= 0\n        ));\n\n        return newClaimsAdd;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(claimsAdd.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(claimsAdd.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(claimsAdd.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(claimsAdd.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(claimsAdd.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                claimsAdd.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                claimsAdd.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (claim, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{claim.claimer.lastname +\" \"+claim.claimer.firstname}</td>\n                <td>{claim.claim_object.name.fr}</td>\n                <td>{claim.description}</td>\n                <td>{claim.request_channel_slug}</td>\n                <td>{claim.response_channel_slug}</td>\n\n            </tr>\n        )\n    };\n\n    return (\n\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Historiques\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Réclamations traitées\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            title={\"Réclamations traitées\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\"\n                                                               onKeyUp={(e) => searchElement(e)}\n                                                               className=\"form-control form-control-sm\"\n                                                               placeholder=\"\"\n                                                               aria-controls=\"kt_table_1\"\n                                                        />\n                                                    </label>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{width: \"952px\"}}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"80px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Objets de réclamation\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Description de la Réclamation\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Canal de réception\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\n                                                            aria-label=\"Ship Address: activate to sort column ascending\">Canal de réponse\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        claimsAdd.length ? (\n                                                            showList.length ? (\n                                                                showList.map((claim, index) => (\n                                                                    printBodyTable(claim, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr style={{textAlign:\"center\"}}>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objets de réclamtions</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description de réclamation</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canal de réception</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canal de réponse</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1\n                                                    à {numberPerPage} sur {claimsAdd.length} données\n                                                </div>\n                                            </div>\n\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(HistoricClaimsAdd);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/ParametersComponent.jsx",["1067"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link\n} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport InfirmationTable from \"../components/InfirmationTable\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\nconst ParametersComponent = (props) => {\n    document.title = \"Satis Paramètre - Configuration formulaire\";\n\n    if (!verifyPermission(props.userPermissions, \"update-components-parameters\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [component, setComponent] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(5);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + \"/components\")\n                .then(response => {\n                    setLoad(false);\n                    setComponent(response.data);\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n\n    },[]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newComponent = [...component];\n        newComponent = newComponent.filter(el => (\n            getLowerCaseString(el.params[\"fr\"].title ? el.params[\"fr\"].title.value : \"\").indexOf(value) >= 0\n        ));\n\n        return newComponent;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(component.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(component.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(component.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(component.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(component.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                component.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                component.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (component, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{component.params.fr.title===null?\"\":component.params.fr.title.value}</td>\n                <td style={{textAlign:'center'}}>\n                    <Link\n                        to={`/settings/config/edit/${component.id}`}\n                        className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                        title=\"Modifier\">\n                        <i className=\"la la-edit\"/>\n                    </Link>\n                </td>\n            </tr>\n        )\n    };\n\n    return (\n        verifyPermission(props.userPermissions, \"update-components-parameters\")?(\n                <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                    <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                        <div className=\"kt-container  kt-container--fluid \">\n                            <div className=\"kt-subheader__main\">\n                                <h3 className=\"kt-subheader__title\">\n                                    Paramètres\n                                </h3>\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\n                                <div className=\"kt-subheader__breadcrumbs\">\n                                    <span className=\"kt-subheader__separator kt-hidden\"/>\n                                    <div className=\"kt-subheader__breadcrumbs\">\n                                        <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                            className=\"flaticon2-shelter\"/></a>\n                                        <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                        <a href=\"#button\" onClick={e => e.preventDefault()}\n                                           className=\"kt-subheader__breadcrumbs-link\">\n                                            Configurations\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                        <InfirmationTable\n                            information={\"Configuration des formulaires\"}/>\n\n                        <div className=\"kt-portlet\">\n\n                            <HeaderTablePage\n                                title={\"Configuration\"}\n                            />\n                            {\n                                load ? (\n                                    <LoadingTable/>\n                                ) : (\n                                    <div className=\"kt-portlet__body\">\n                                        <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-6 text-left\">\n                                                    <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                        <label>\n                                                            Recherche:\n                                                            <input id=\"myInput\" type=\"text\"\n                                                                   onKeyUp={(e) => searchElement(e)}\n                                                                   className=\"form-control form-control-sm\"\n                                                                   placeholder=\"\"\n                                                                   aria-controls=\"kt_table_1\"/>\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-12\">\n                                                    <table\n                                                        className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                        id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                        style={{width: \"952px\"}}>\n                                                        <thead>\n                                                        <tr role=\"row\">\n                                                            <th className=\"sorting\" tabIndex=\"0\"\n                                                                aria-controls=\"kt_table_1\"\n                                                                rowSpan=\"1\"\n                                                                colSpan=\"1\" style={{width: \"150px\"}}\n                                                                aria-label=\"Ship City: activate to sort column ascending\">Description\n                                                            </th>\n                                                            <th className=\"sorting\" tabIndex=\"0\"\n                                                                aria-controls=\"kt_table_1\"\n                                                                rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\n                                                                aria-label=\"Type: activate to sort column ascending\">\n                                                                Action\n                                                            </th>\n                                                        </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                        {\n                                                            component.length ? (\n                                                                showList ? (\n                                                                    showList.map((component, index) => (\n                                                                        printBodyTable(component, index)\n                                                                    ))\n                                                                ) : (\n                                                                    <EmptyTable search={true}/>\n                                                                )\n                                                            ) : (\n                                                                <EmptyTable/>\n                                                            )\n                                                        }\n                                                        </tbody>\n                                                        <tfoot>\n                                                        <tr>\n\n                                                        </tr>\n                                                        </tfoot>\n                                                    </table>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-sm-12 col-md-5\">\n                                                    <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                         aria-live=\"polite\">Affichage de 1\n                                                        à {numberPerPage} sur {component.length} données\n                                                    </div>\n                                                </div>\n                                                {\n                                                    showList.length ? (\n                                                        <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                            <Pagination\n                                                                numberPerPage={numberPerPage}\n                                                                onChangeNumberPerPage={onChangeNumberPerPage}\n                                                                activeNumberPage={activeNumberPage}\n                                                                onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                                pages={pages}\n                                                                onClickPage={(e, number) => onClickPage(e, number)}\n                                                                numberPage={numberPage}\n                                                                onClickNextPage={e => onClickNextPage(e)}\n                                                            />\n                                                        </div>\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            ):null\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(ParametersComponent);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/UserEdit.jsx",["1068"],"import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport {Link, useParams} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastEditErrorMessageConfig, toastEditSuccessMessageConfig\n} from \"../../config/toastConfig\";\nimport appConfig from \"../../config/appConfig\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {formatSelectOption} from \"../../helpers/function\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport InputRequire from \"../components/InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nconst UserEdit = (props) => {\n    const {id} = useParams();\n\n    document.title = \"Satis client - Paramètre Envoie de mail\";\n    if (!(verifyPermission(props.userPermissions, 'show-user-any-institution') || verifyPermission(props.userPermissions, \"show-user-my-institution\")))\n        window.location.href = ERROR_401;\n\n    const defaultData = {\n        roles: [],\n        new_password: \"\",\n        new_password_confirmation: \"\",\n    };\n    const defaultError = {\n        roles: [],\n        new_password: [],\n    };\n    const [data, setData] = useState(defaultData);\n    const [user, setUser] = useState(null);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n    const [roles, setRoles] = useState([]);\n    const [role, setRole] = useState([]);\n\n    const formatDefaultRoles = (userRoles) => {\n        const listRoles = [];\n        userRoles.map(r => listRoles.push(r.name));\n        return listRoles;\n    };\n\n    useEffect(() => {\n        async function fetchData () {\n            let endpoint = \"\";\n            if (props.plan === \"MACRO\" || props.plan === \"HUB\") {\n                if (verifyPermission(props.userPermissions, \"show-user-any-institution\"))\n                    endpoint = `${appConfig.apiDomaine}/any/users/${id}/change-role-password`;\n                if (verifyPermission(props.userPermissions, \"show-user-my-institution\"))\n                    endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\n            }\n            else if(props.plan === \"PRO\")\n                endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\n\n            if (verifyTokenExpire()) {\n                await axios.get(endpoint)\n                    .then(({data}) => {\n                        const newData = {...defaultData};\n                        newData.roles = formatDefaultRoles(data.user.roles);\n                        setRole(formatSelectOption(data.user.roles, \"name\", false, \"name\"));\n                        setRoles(formatSelectOption(data.roles, \"name\", false, \"name\"));\n                        setUser(data.user);\n                        setData(newData);\n                    })\n                    .catch(error => {\n                        console.log(\"Something is wrong\");\n                    })\n                ;\n            }\n        }\n        fetchData();\n    }, [props.plan, appConfig.apiDomaine]);\n\n    const formatSelected = (selected) => {\n        const newSelected = [];\n        selected.map(s => newSelected.push(s.value));\n        return newSelected;\n    };\n\n    const handleRoleChange = (selected) => {\n        const newData = {...data};\n        newData.roles = selected ? formatSelected(selected) : [];\n        setRole(selected);\n        setData(newData);\n    };\n\n    const handlePasswordChange = (e) => {\n        const newData = {...data};\n        newData.new_password = e.target.value;\n        setData(newData);\n    };\n\n    const handlePasswordConfirmationChange = (e) => {\n        const newData = {...data};\n        newData.new_password_confirmation = e.target.value;\n        setData(newData);\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        setStartRequest(true);\n        let endpoint = \"\";\n        if (props.plan === \"MACRO\" || props.plan === \"HUB\") {\n            if (verifyPermission(props.userPermissions, \"show-user-any-institution\"))\n                endpoint = `${appConfig.apiDomaine}/any/users/${id}/change-role-password`;\n            if (verifyPermission(props.userPermissions, \"show-user-my-institution\"))\n                endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\n        }\n        else if(props.plan === \"PRO\")\n            endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\n\n        if (verifyTokenExpire()) {\n            console.log(\"enpoint:\", endpoint);\n            await axios.put(endpoint, data)\n                .then(response => {\n                    setStartRequest(false);\n                    const newData = {...data};\n                    newData.new_password = \"\";\n                    newData.new_password_confirmation = \"\";\n                    setError(defaultError);\n                    setData(newData);\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                })\n                .catch(errorRequest => {\n                    setStartRequest(false);\n                    setError({...defaultError, ...errorRequest.response.data.error});\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                })\n            ;\n        }\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'show-user-any-institution') || verifyPermission(props.userPermissions, \"show-user-my-institution\") ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètre\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <Link to=\"/settings/users\" className=\"kt-subheader__breadcrumbs-link\">\n                                    Utilisateur\n                                </Link>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Modification\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            Utilisateur\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-form kt-form--label-right\">\n                                        <div className=\"kt-portlet__body\">\n                                            <div className={error.roles.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\">\n                                                    <strong>Utilisateur</strong>\n                                                </label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <h4>{ user ? user.identite.lastname : \".......\" } { user ? user.identite.firstname : \".......\" }</h4>\n                                                </div>\n                                            </div>\n\n                                            <div className={error.roles.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={\"role\"}>Role <InputRequire/></label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <Select\n                                                        isClearable\n                                                        isMulti\n                                                        value={role}\n                                                        placeholder={\"admin-satis\"}\n                                                        onChange={handleRoleChange}\n                                                        options={roles}\n                                                    />\n                                                    {\n                                                        error.roles.length ? (\n                                                            error.roles.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n\n                                            <div className={error.new_password.length ? \"form-group row validated\" : \"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password\">Mot de passe</label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <input\n                                                        id=\"password\"\n                                                        type=\"password\"\n                                                        className={error.new_password.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        placeholder=\"************\"\n                                                        value={data.new_password}\n                                                        onChange={(e) => handlePasswordChange(e)}\n                                                    />\n                                                    {\n                                                        error.new_password.length ? (\n                                                            error.new_password.map((error, index) => (\n                                                                <div key={index} className=\"invalid-feedback\">\n                                                                    {error}\n                                                                </div>\n                                                            ))\n                                                        ) : null\n                                                    }\n                                                </div>\n                                            </div>\n\n                                            <div className={\"form-group row\"}>\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password_confirmation\">Confirmation</label>\n                                                <div className=\"col-lg-9 col-xl-6\">\n                                                    <input\n                                                        id=\"password_confirmation\"\n                                                        type=\"password\"\n                                                        className={\"form-control\"}\n                                                        placeholder=\"************\"\n                                                        value={data.new_password_confirmation}\n                                                        onChange={(e) => handlePasswordConfirmationChange(e)}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"kt-portlet__foot\">\n                                            <div className=\"kt-form__actions text-right\">\n                                                {\n                                                    !startRequest ? (\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Modifier</button>\n                                                    ) : (\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\n                                                            Chargement...\n                                                        </button>\n                                                    )\n                                                }\n\n                                                <Link to={\"/settings/users\"} className=\"btn btn-secondary mx-2\">Quitter</Link>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ) : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan\n    };\n};\n\nexport default connect(mapStateToProps)(UserEdit);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/Clients/ImportClientForm.jsx",["1069","1070"],"import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Link,\n} from \"react-router-dom\";\nimport {ToastBottomEnd} from \"../Toast\";\nimport {\n    toastAddErrorMessageConfig,\n    toastAddSuccessMessageConfig,\n} from \"../../../config/toastConfig\";\nimport appConfig from \"../../../config/appConfig\";\nimport InputRequire from \"../InputRequire\";\nimport {connect} from \"react-redux\";\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport {ERROR_401} from \"../../../config/errorPage\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nconst endPointConfig = {\n    PRO: {\n        plan: \"PRO\",\n        store: `${appConfig.apiDomaine}/my/import-clients`,\n    },\n    MACRO: {\n        holding: {\n            store: `${appConfig.apiDomaine}/any/import-clients`,\n        },\n        filial: {\n            store: `${appConfig.apiDomaine}/my/import-clients`,\n        }\n    },\n    HUB: {\n        plan: \"HUB\",\n        store: `${appConfig.apiDomaine}/any/import-clients `,\n    }\n};\n\nconst ImportClientForm = (props) => {\n    document.title = \"Satis client - Importation de fichier excel\";\n\n    if (!(verifyPermission(props.userPermissions, 'store-client-from-any-institution') ||\n        verifyPermission(props.userPermissions, 'store-client-from-my-institution')))\n        window.location.href = ERROR_401;\n\n    let endPoint = \"\";\n    if (props.plan === \"MACRO\") {\n        if (verifyPermission(props.userPermissions, 'store-client-from-any-institution'))\n            endPoint = endPointConfig[props.plan].holding;\n        else if (verifyPermission(props.userPermissions, 'store-client-from-my-institution'))\n            endPoint = endPointConfig[props.plan].filial\n    } else\n        endPoint = endPointConfig[props.plan];\n\n\n    const option1 = 1;\n    const option2 = 0;\n\n    const defaultData = {\n        file: \"\",\n        etat_update: \"\",\n        stop_identite_exist: \"\",\n    };\n    const defaultError = {\n        file: [],\n        etat_update: \"\",\n        stop_identite_exist: \"\",\n    };\n    const [data, setData] = useState(defaultData);\n    const [error, setError] = useState(defaultError);\n    const [startRequest, setStartRequest] = useState(false);\n\n    const onChangeFile = (e) => {\n        const newData = {...data};\n        newData.file = Object.values(e.target.files)[0];\n        setData(newData);\n    };\n\n    const onChangeOption = (e) => {\n        const newData = {...data};\n        newData.stop_identite_exist = e.target.value;\n        setData(newData);\n    };\n    const onChangeEtatOption = (e) => {\n        const newData = {...data};\n        newData.etat_update = e.target.value;\n        setData(newData);\n    };\n\n    const formatFormData = (newData) => {\n        const formData = new FormData();\n        formData.append(\"_method\", \"post\");\n        for (const key in newData) {\n            // console.log(`${key}:`, newData[key]);\n            if (key === \"file\") {\n                formData.append(\"file\", newData.file);\n            } else\n                formData.set(key, newData[key]);\n        }\n        console.log(formData.get('file'), 'FORMDATA');\n        return formData;\n\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setStartRequest(true);\n\n        if (verifyTokenExpire()) {\n            axios.post(endPoint.store, formatFormData(data))\n                .then(response => {\n                    setStartRequest(false);\n                    setError(defaultError);\n                    setData(defaultData);\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\n                })\n                .catch(error => {\n                    setStartRequest(false);\n                    setError({...defaultError, ...error.response.data.error});\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig);\n                })\n            ;\n        }\n    };\n\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\n                                    Importation\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            Importation de clients\n                                        </h3>\n                                    </div>\n                                </div>\n                                {console.log(data, \"DATA_OPTION\")}\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-portlet__body\">\n\n                                        <div\n                                            className={error.stop_identite_exist.length ? \"form-group row validated\" : \"form-group row\"}>\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\">Identité existe déjà\n                                                ? <InputRequire/></label>\n                                            <div className=\"kt-radio-inline col-lg-9 col-xl-6\">\n\n                                                <label className=\"kt-radio kt-radio--bold kt-radio--success\">\n                                                    <input\n                                                        className={error.stop_identite_exist.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        type=\"radio\"\n                                                        name=\"radio3\"\n                                                        value={option1}\n                                                        onChange={(e) => onChangeOption(e)}\n                                                    /> Oui\n                                                    <span/>\n                                                </label>\n                                                <label className=\"kt-radio kt-radio--bold kt-radio--danger\">\n                                                    <input\n                                                        className={error.stop_identite_exist.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        type=\"radio\"\n                                                        name=\"radio3\"\n                                                        value={option2}\n                                                        onChange={(e) => onChangeOption(e)}\n                                                    /> Non\n                                                    <span/>\n                                                </label>\n                                            </div>\n                                            {\n                                                error.stop_identite_exist.length ? (\n                                                    error.stop_identite_exist.map((error, index) => (\n                                                        <div key={index}\n                                                             className=\"invalid-feedback\">\n                                                            {error}\n                                                        </div>\n                                                    ))\n                                                ) : null\n                                            }\n                                        </div>\n\n                                        <div\n                                            className={error.etat_update.length ? \"form-group row validated\" : \"form-group row\"}>\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\">Est ce une mise a\n                                                jour? <InputRequire/></label>\n                                            <div className=\"kt-radio-inline col-lg-9 col-xl-6\">\n\n                                                <label className=\"kt-radio kt-radio--bold kt-radio--success\">\n                                                    <input\n                                                        className={error.etat_update.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        type=\"radio\"\n                                                        name=\"radio4\"\n                                                        value={option1}\n                                                        onChange={(e) => onChangeEtatOption(e)}\n                                                    /> Oui\n                                                    <span/>\n                                                </label>\n                                                <label className=\"kt-radio kt-radio--bold kt-radio--danger\">\n                                                    <input\n                                                        className={error.etat_update.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                        type=\"radio\"\n                                                        name=\"radio4\"\n                                                        value={option2}\n                                                        onChange={(e) => onChangeEtatOption(e)}\n                                                    /> Non\n                                                    <span/>\n                                                </label>\n                                            </div>\n                                            {\n                                                error.etat_update.length ? (\n                                                    error.etat_update.map((error, index) => (\n                                                        <div key={index}\n                                                             className=\"invalid-feedback\">\n                                                            {error}\n                                                        </div>\n                                                    ))\n                                                ) : null\n                                            }\n                                        </div>\n\n                                        <div\n                                            className={error.file.length ? \"form-group row validated\" : \"form-group row\"}>\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                   htmlFor=\"file\">Fichier <InputRequire/></label>\n                                            <div className=\"col-md-9 mb-3\">\n                                                <input\n                                                    id=\"file\"\n                                                    type=\"file\"\n                                                    className={error.file.length ? \"form-control is-invalid\" : \"form-control\"}\n                                                    placeholder=\"Veillez télécharger le fichier excel\"\n                                                    onChange={(e) => onChangeFile(e)}\n                                                />\n                                                {\n                                                    error.file.length ? (\n                                                        error.file.map((error, index) => (\n                                                            <div key={index} className=\"invalid-feedback\">\n                                                                {error}\n                                                            </div>\n                                                        ))\n                                                    ) : null\n                                                }\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"kt-portlet__foot text-right\">\n                                        <div className=\"kt-form__actions\">\n                                            {\n                                                !startRequest ? (\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)}\n                                                            className=\"btn btn-primary\">Enregistrer</button>\n                                                ) : (\n                                                    <button\n                                                        className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                        type=\"button\" disabled>\n                                                        Chargement...\n                                                    </button>\n                                                )\n                                            }\n                                            {\n                                                !startRequest ? (\n                                                    <Link to=\"/settings/clients\"\n                                                          className=\"btn btn-secondary mx-2\">\n                                                        Quitter\n                                                    </Link>\n                                                ) : (\n                                                    <Link to=\"/settings/clients\"\n                                                          className=\"btn btn-secondary mx-2\" disabled>\n                                                        Quitter\n                                                    </Link>\n                                                )\n                                            }\n\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n    return (\n        verifyPermission(props.userPermissions, 'store-client-from-any-institution') ||\n        verifyPermission(props.userPermissions, 'store-client-from-my-institution') ?\n            printJsx()\n            : null\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions,\n        plan: state.plan.plan,\n    }\n};\n\nexport default connect(mapStateToProps)(ImportClientForm);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/HistoricClaimsAdd.jsx",["1071"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport appConfig from \"../../config/appConfig\";\nimport Pagination from \"../components/Pagination\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\n\n\nconst HistoricClaimsAdd = (props) => {\n    document.title = \"Satis client - Paramètre Historique\";\n\n    if (!verifyPermission(props.userPermissions, \"history-list-create-claim\")) {\n        window.location.href = ERROR_401;\n    }\n    const [load, setLoad] = useState(true);\n    const [claimsAdd, setClaimsAdd] = useState([]);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(10);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + \"/history/list-claim\")\n                .then(response => {\n                    console.log(response.data,\"DATA\")\n                    setLoad(false);\n                    setClaimsAdd(response.data);\n                    setShowList(response.data.slice(0, numberPerPage));\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n    }, []);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newClaimsAdd = [...claimsAdd];\n        newClaimsAdd = newClaimsAdd.filter(el => (\n            getLowerCaseString(el.claim_object ? el.claim_object.name.fr : \"\").indexOf(value) >= 0 ||\n            getLowerCaseString(el.description).indexOf(value) >= 0 ||\n            getLowerCaseString(el.claimer.lastname).indexOf(value) >= 0 ||\n            getLowerCaseString(el.claimer.firstname).indexOf(value) >= 0 ||\n            getLowerCaseString(el.request_channel_slug).indexOf(value) >= 0 ||\n            getLowerCaseString(el.response_channel_slug).indexOf(value) >= 0\n        ));\n\n        return newClaimsAdd;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(claimsAdd.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(claimsAdd.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(claimsAdd.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(claimsAdd.length / parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end + numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(claimsAdd.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                claimsAdd.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                claimsAdd.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (claim, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd\">\n                <td>{claim.claimer.lastname +\" \"+claim.claimer.firstname}</td>\n                <td>{claim.claim_object.name.fr}</td>\n                <td>{claim.description}</td>\n                <td>{claim.request_channel_slug}</td>\n                <td>{claim.response_channel_slug}</td>\n\n            </tr>\n        )\n    };\n\n    return (\n\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Historiques\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Réclamations Créées\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            title={\"Réclamations Créées\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input id=\"myInput\" type=\"text\"\n                                                               onKeyUp={(e) => searchElement(e)}\n                                                               className=\"form-control form-control-sm\"\n                                                               placeholder=\"\"\n                                                               aria-controls=\"kt_table_1\"\n                                                        />\n                                                    </label>\n                                                </div>\n                                            </div>\n\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{width: \"952px\"}}>\n                                                    <thead>\n                                                    <tr role=\"row\">\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"80px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Objets de réclamation\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\n                                                            aria-label=\"Country: activate to sort column ascending\">Description de la Réclamation\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Canal de réception\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\"\n                                                            aria-controls=\"kt_table_1\"\n                                                            rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\n                                                            aria-label=\"Ship Address: activate to sort column ascending\">Canal de réponse\n                                                        </th>\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\"*/}\n                                                        {/*    aria-controls=\"kt_table_1\"*/}\n                                                        {/*    rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}*/}\n                                                        {/*    aria-label=\"Type: activate to sort column ascending\">*/}\n                                                        {/*    Action*/}\n                                                        {/*</th>*/}\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        claimsAdd.length ? (\n                                                            showList.length ? (\n                                                                showList.map((claim, index) => (\n                                                                    printBodyTable(claim, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr style={{textAlign:\"center\"}}>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objets de réclamtions</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description de réclamation</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canal de réception</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canal de réponse</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1\n                                                    à {numberPerPage} sur {claimsAdd.length} données\n                                                </div>\n                                            </div>\n\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(HistoricClaimsAdd);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/ParametersComponentEdit.jsx",["1072","1073","1074"],"import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport appConfig from \"../../config/appConfig\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastEditErrorMessageConfig,\n    toastEditSuccessMessageConfig,\n} from \"../../config/toastConfig\";\nimport {Link, useParams} from \"react-router-dom\";\nimport {AUTH_TOKEN} from \"../../constants/token\";\nimport InputRequire from \"../components/InputRequire\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.common['Content-Type'] = \"multipart/form-data\";\n\nconst ParametersComponentEdit = (props) => {\n    const {id} = useParams();\n\n    const [dataType, setDataType] = useState({});\n    const [logo, setLogo] = useState(undefined);\n\n    const [data, setData] = useState({});\n    const [error, setError] = useState({});\n    const [startRequest, setStartRequest] = useState(false);\n\n    const formatState = (params, paramData = null) => {\n        const newState = {};\n        const newDataType = {};\n        const newError = {};\n        params.map(param => {\n            newState[`params_${param}`] = paramData ? paramData[param].type === 'image' ? paramData[param].value.url : paramData[param].value : \"\";\n            newDataType[`params_${param}`] = paramData ? paramData[param].type : \"\";\n            newError[`params_${param}`] = [];\n\n        });\n        console.log(newDataType, \"newDataType\");\n        setData(newState);\n        setDataType(newDataType);\n        setError(newError);\n    };\n\n    const initialState = (stateData) => {\n        let componentParams = [];\n        for (const param in stateData) {\n            componentParams.push(param);\n        }\n        formatState(componentParams, stateData);\n\n    };\n\n    useEffect(() => {\n        if (verifyTokenExpire()) {\n            axios.get(appConfig.apiDomaine + `/components/${id}`)\n                .then(response => {\n                    initialState(response.data.params.fr);\n                })\n            ;\n        }\n    }, []);\n\n    const handleChange = (e, param) => {\n        const newData = {...data};\n        newData[param] = e.target.value;\n        setData(newData);\n    };\n    const handleChangeImage = (e, param) => {\n        const newData = {...data};\n        newData[param] = Object.values(e.target.files)[0];\n        setData(newData);\n        console.log(Object.values(e.target.files)[0], \"NEW_DATA\");\n        setLogo( newData[param]);\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            var image = document.getElementById(param);\n            console.log(image, 'image');\n            image.src = e.target.result;\n        };\n        reader.readAsDataURL(newData[param]);\n    };\n\n    const executeSave = (url, saveData) => {\n        if (verifyTokenExpire()) {\n            axios.post(url, saveData)\n                .then(response => {\n                    setStartRequest(false);\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\n                    window.location.href = \"/settings/config\"\n                })\n                .catch(errorRequest => {\n                    setStartRequest(false);\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\n                })\n            ;\n        }\n    };\n\n\n    const formatFormData = (newData, newType) => {\n        const formData = new FormData();\n        formData.set(\"_method\", \"put\");\n        for (const key in newData) {\n            if (newType[key]===\"image\") {\n                formData.append(key, newData[key]);\n            }else{\n                formData.set(key, newData[key]);\n            }\n        }\n        return formData;\n    };\n\n    const saveData = (e) => {\n        e.preventDefault();\n        const newData = {...data};\n        const newType = {...dataType};\n        if (logo!== newData.params_logo){\n            delete newData.params_logo;\n        }\n        if (logo!== newData.params_background){\n            delete newData.params_background\n        }\n        // Debut de Log du contenu du formData\n        let dataToSend = formatFormData(newData, newType);\n        // console.log(dataToSend.get(\"params_title\"),\"TITLE\")\n        // dataToSend = dataToSend.entries();\n        // let obj = dataToSend.next();\n        // let retrieved = {};\n        // while(undefined !== obj.value) {\n        //     retrieved[obj.value[0]] = obj.value[1];\n        //     obj = dataToSend.next();\n        // }\n        // console.log('retrieved: ',retrieved);\n        // fin de Log du contenu du formData\n\n        setStartRequest(true);\n        executeSave(`${appConfig.apiDomaine}/components/${id}`, dataToSend);\n    };\n\n\n    const printJsx = () => {\n        return (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\n                                    className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\n                                   className=\"kt-subheader__breadcrumbs-link\">\n                                    Configuration\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"kt-portlet\">\n                                <div className=\"kt-portlet__head\">\n                                    <div className=\"kt-portlet__head-label\">\n                                        <h3 className=\"kt-portlet__head-title\">\n                                            Modification Configuration\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <form method=\"POST\" className=\"kt-form\">\n                                    <div className=\"kt-form kt-form--label-right\">\n                                        <div className=\"kt-portlet__body\">\n\n                                            {\n                                                Object.keys(error).length ? (\n                                                    Object.values(data).map((param, index) => (\n                                                        dataType[Object.keys(dataType)[index]] === \"image\" ?\n                                                            <div key={index}\n                                                                 className={error[Object.keys(error)[index]].length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                       htmlFor={Object.keys(data)[index]}>{(Object.keys(data)[index]).slice(7)}\n                                                                    <InputRequire/></label>\n                                                                {/*{console.log(error,\"ERRor\")}*/}\n                                                                <div className=\"col-lg-9 col-xl-6\">\n                                                                    <div className=\"kt-avatar kt-avatar--outline\"\n                                                                         id=\"kt_user_add_avatar\">\n                                                                        <div className=\"kt-avatar__holder\"\n                                                                             style={{textAlign: 'center'}}>\n\n                                                                            <img\n                                                                                id={Object.keys(data)[index]}\n                                                                                src={appConfig.apiDomaine + data[Object.keys(data)[index]]}\n                                                                                alt={Object.keys(data)[index]}\n                                                                                style={{\n                                                                                    maxWidth: \"110px\",\n                                                                                    maxHeight: \"110px\",\n                                                                                    textAlign: 'center'\n                                                                                }}\n                                                                            />\n\n                                                                        </div>\n                                                                        <label className=\"kt-avatar__upload\"\n                                                                               id=\"files\"\n                                                                               data-toggle=\"kt-tooltip\"\n                                                                               title=\"Change avatar\">\n                                                                            <i className=\"fa fa-pen\"/>\n                                                                            <input type=\"file\"\n                                                                                   id=\"file\"\n                                                                                   name=\"kt_user_add_user_avatar\"\n                                                                                   onChange={(e) => handleChangeImage(e, Object.keys(data)[index])}\n                                                                            />\n                                                                        </label>\n                                                                        <span className=\"kt-avatar__cancel\"\n                                                                              data-toggle=\"kt-tooltip\"\n                                                                              title=\"Cancel avatar\">\n                                                                            <i className=\"fa fa-times\"/>\n                                                                        </span>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            :\n                                                            <div key={index}\n                                                                 className={error[Object.keys(error)[index]].length ? \"form-group row validated\" : \"form-group row\"}>\n                                                                <label className=\"col-xl-3 col-lg-3 col-form-label\"\n                                                                       htmlFor={Object.keys(data)[index]}>{(Object.keys(data)[index]).slice(7)}\n                                                                    <InputRequire/></label>\n                                                                <div className=\"col-lg-9 col-xl-6\">\n\n                                                                    <input\n                                                                        id={Object.keys(data)[index]}\n                                                                        type={dataType[Object.keys(dataType)[index]]}\n                                                                        className={error[Object.keys(error)[index]].length ? \"form-control is-invalid\" : \"form-control\"}\n                                                                        placeholder={\"Veuillez entrer\"+ \" \" +(Object.keys(data)[index]).slice(7)}\n                                                                        value={data[Object.keys(data)[index]]}\n                                                                        onChange={(e) => handleChange(e, Object.keys(data)[index])}\n                                                                    />\n                                                                    {\n                                                                        error[Object.keys(error)[index]].length ? (\n                                                                            error[Object.keys(error)[index]].map((error, index) => (\n                                                                                <div key={index}\n                                                                                     className=\"invalid-feedback\">\n                                                                                    {error}\n                                                                                </div>\n                                                                            ))\n                                                                        ) : null\n                                                                    }\n                                                                </div>\n                                                            </div>\n                                                    ))\n                                                ) : null\n                                            }\n                                        </div>\n                                        <div className=\"kt-portlet__foot\">\n                                            <div className=\"kt-form__actions text-right\">\n                                                {\n                                                    !startRequest ? (\n                                                        <button type=\"submit\" onClick={(e) => saveData(e)}\n                                                                className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\n                                                    ) : (\n                                                        <button\n                                                            className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\n                                                            type=\"button\" disabled>\n                                                            Chargement...\n                                                        </button>\n                                                    )\n                                                }\n                                                {\n                                                    !startRequest ? (\n                                                        <Link to=\"/settings/config\"\n                                                              className=\"btn btn-secondary mx-2\">\n                                                            Quitter\n                                                        </Link>\n                                                    ) : (\n                                                        <Link to=\"/settings/config\"\n                                                              className=\"btn btn-secondary mx-2\" disabled>\n                                                            Quitter\n                                                        </Link>\n                                                    )\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        printJsx()\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(ParametersComponentEdit);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/DashboardClaimsMy.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/DashboardForm/DashboardClaimsUnit.jsx",["1075"],"import React, {useEffect, useState} from 'react';\nimport {verifyPermission} from \"../../../helpers/permission\";\nimport {ERROR_401} from \"../../../config/errorPage\";\nimport axios from \"axios\";\nimport appConfig from \"../../../config/appConfig\";\nimport {connect} from \"react-redux\";\nimport {percentageData} from \"../../../helpers/function\";\nimport LoadingTable from \"../LoadingTable\";\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\n\nconst DashboardClaimsUnit = (props) => {\n\n    const [data, setData] = useState(\"\");\n    const [totalData, setTotalData] = useState(\"\");\n    const [load, setLoad] = useState(true);\n\n    useEffect(() => {\n        let isCancelled = false;\n\n        async function fetchData() {\n           await axios.get(appConfig.apiDomaine + \"/dashboard\")\n                .then(response => {\n                    if (!isCancelled) {\n                        setData(response.data.statistics);\n                        setTotalData(response.data.totalClaimsRegisteredStatistics);\n                        setLoad(false)\n                    }\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n\n        if (verifyTokenExpire())\n            fetchData();\n        return () => {\n            isCancelled = true;\n        }\n    }, []);\n\n    return (\n        verifyPermission(props.userPermissions, \"show-dashboard-data-my-unit\") ?\n            (\n                <div>\n                    <div className=\"kt-portlet__head\">\n                        <div className=\"kt-portlet__head-label\">\n                            <h5 className=\"kt-portlet__head-title\">\n                                Statistiques des Réclamations de mon Unité sur les 30 derniers jours\n                            </h5>\n                        </div>\n                    </div>\n                    {\n                        load ? (\n                            <LoadingTable/>\n                        ) : (\n                            <div className=\"kt-portlet__body kt-portlet__body--fit\">\n                                <div className=\"row row-no-padding row-col-separator-lg\">\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\n                                        <div className=\"kt-widget24\">\n                                            <div className=\"kt-widget24__details\">\n                                                <div className=\"kt-widget24__info\">\n                                                    <h5 className=\"kt-widget24__title\">\n                                                        Total Réclamations Enregistrées\n                                                    </h5>\n                                                    <span className=\"kt-widget24__desc\">\n\n\t\t\t\t\t\t\t\t\t</span>\n                                                </div>\n                                                <span className=\"kt-widget24__stats kt-font-brand\">\n\t\t\t\t\t\t\t\t\t{data.totalRegistered ? data.totalRegistered.myUnit : \"\"}\n\t\t\t\t\t\t\t\t</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\n                                        <div className=\"kt-widget24\">\n                                            <div className=\"kt-widget24__details\">\n                                                <div className=\"kt-widget24__info\">\n                                                    <h5 className=\"kt-widget24__title\">\n                                                        Total Réclamations Incomplètes\n                                                    </h5>\n                                                    <span className=\"kt-widget24__desc\">\n\t\t\t\t\t\t\t\t\t</span>\n                                                </div>\n                                                <span className=\"kt-widget24__stats kt-font-danger\">\n\t\t\t\t\t\t\t\t\t{data.totalIncomplete ? data.totalIncomplete.myUnit : \"\"}\n\t\t\t\t\t\t\t\t</span>\n                                            </div>\n                                            <div className=\"progress progress--sm\">\n                                                {\n                                                    data.totalIncomplete ?\n                                                        <div className=\"progress-bar kt-bg-danger\" role=\"progressbar\"\n                                                             aria-valuenow={percentageData((data.totalIncomplete.myUnit), totalData)}\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\n                                                             style={{width: percentageData((data.totalIncomplete.myUnit), totalData)}}>\n                                                        </div>\n                                                        : \"\"\n                                                }\n                                            </div>\n                                            <div className=\"kt-widget24__action\">\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\n\n\t\t\t\t\t\t\t\t\t% Réclamations Incomplètes\n\n\t\t\t\t\t\t\t\t</span>\n\n                                                {\n                                                    data.totalIncomplete ?\n                                                        <span className=\"kt-widget24__number\">\n                                                {percentageData((data.totalIncomplete.myUnit), totalData)}\n                                           </span>\n                                                        : \"\"\n                                                }\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\n                                        <div className=\"kt-widget24\">\n                                            <div className=\"kt-widget24__details\">\n                                                <div className=\"kt-widget24__info\">\n                                                    <h5 className=\"kt-widget24__title\">\n                                                        Total Réclamations Complètes\n                                                    </h5>\n                                                    <span className=\"kt-widget24__desc\">\n\t\t\t\t\t\t\t\t\t</span>\n                                                </div>\n                                                <span className=\"kt-widget24__stats kt-font-success\">\n\t\t\t\t\t\t\t\t\t{data.totalComplete ? data.totalComplete.myUnit : \"\"}\n\t\t\t\t\t\t\t\t</span>\n                                            </div>\n                                            <div className=\"progress progress--sm\">\n                                                {\n                                                    data.totalComplete ?\n                                                        <div className=\"progress-bar kt-bg-success\" role=\"progressbar\"\n                                                             aria-valuenow={percentageData((data.totalComplete.myUnit), totalData)}\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\n                                                             style={{width: percentageData((data.totalComplete.myUnit), totalData)}}>\n                                                        </div>\n                                                        : \"\"\n                                                }\n\n                                            </div>\n                                            <div className=\"kt-widget24__action\">\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\n\n\t\t\t\t\t\t\t\t\t% Réclamations Complètes\n\n\t\t\t\t\t\t\t\t</span>\n                                                <span className=\"kt-widget24__number\">\n\t\t\t\t\t\t\t\t\t{\n                                        data.totalComplete ?\n                                            <span className=\"kt-widget24__number\">\n                                                {percentageData((data.totalComplete.myUnit), totalData)}\n                                           </span>\n                                            : \"\"\n                                    }\n\t\t\t\t\t\t\t\t</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\n                                        <div className=\"kt-widget24\">\n                                            <div className=\"kt-widget24__details\">\n                                                <div className=\"kt-widget24__info\">\n                                                    <h5 className=\"kt-widget24__title\">\n                                                        Total Réclamations Transférées à une Unité\n                                                    </h5>\n                                                    <span className=\"kt-widget24__desc\">\n\n\t\t\t\t\t\t\t\t\t</span>\n                                                </div>\n                                                <span className=\"kt-widget24__stats kt-font-brand\">\n                                        {data.totalTransferredToUnit ? data.totalTransferredToUnit.myUnit : \"\"}\n\t\t\t\t\t\t\t\t</span>\n                                            </div>\n                                            <div className=\"progress progress--sm\">\n\n                                                {\n                                                    data.totalTransferredToUnit ?\n                                                        <div className=\"progress-bar kt-bg-brand\" role=\"progressbar\"\n                                                             aria-valuenow={percentageData((data.totalTransferredToUnit.myUnit), totalData)}\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\n                                                             style={{width: percentageData((data.totalTransferredToUnit.myUnit), totalData)}}>\n                                                        </div>\n                                                        : \"\"\n                                                }\n\n                                            </div>\n                                            <div className=\"kt-widget24__action\">\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\n\t\t\t\t\t\t\t\t\t% Réclamations Transférées à une Unité\n\t\t\t\t\t\t\t\t</span>\n                                                <span className=\"kt-widget24__number\">\n\t\t\t\t\t\t\t\t\t{\n                                        data.totalTransferredToUnit ?\n                                            <span className=\"kt-widget24__number\">\n                                                {percentageData((data.totalTransferredToUnit.myUnit), totalData)}\n                                           </span>\n                                            : \"\"\n                                    }\n\t\t\t\t\t\t\t\t</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\n                                        <div className=\"kt-widget24\">\n                                            <div className=\"kt-widget24__details\">\n                                                <div className=\"kt-widget24__info\">\n                                                    <h5 className=\"kt-widget24__title\">\n                                                        Total Réclamations en Cours de Traitement\n                                                    </h5>\n                                                    <span className=\"kt-widget24__desc\">\n\n\t\t\t\t\t\t\t\t\t</span>\n                                                </div>\n                                                <span className=\"kt-widget24__stats kt-font-warning\">\n\t\t\t\t\t\t\t\t\t   {data.totalBeingProcess ? data.totalBeingProcess.myUnit : \"\"}\n\n\t\t\t\t\t\t\t\t</span>\n                                            </div>\n                                            <div className=\"progress progress--sm\">\n                                                {\n                                                    data.totalBeingProcess ?\n                                                        <div className=\"progress-bar kt-bg-warning\" role=\"progressbar\"\n                                                             aria-valuenow={percentageData((data.totalBeingProcess.myUnit), totalData)}\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\n                                                             style={{width: percentageData((data.totalBeingProcess.myUnit), totalData)}}>\n                                                        </div>\n                                                        : \"\"\n                                                }\n\n                                            </div>\n                                            <div className=\"kt-widget24__action\">\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\n\t\t\t\t\t\t\t\t\t% Réclamations en Cours de Traitement\n\t\t\t\t\t\t\t\t</span>\n                                                <span className=\"kt-widget24__number\">\n\t\t\t\t\t\t\t\t\t{\n                                        data.totalBeingProcess ?\n                                            <span className=\"kt-widget24__number\">\n                                                {percentageData((data.totalBeingProcess.myUnit), totalData)}\n                                           </span>\n                                            : \"\"\n                                    }\n\t\t\t\t\t\t\t\t</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\n                                        <div className=\"kt-widget24\">\n                                            <div className=\"kt-widget24__details\">\n                                                <div className=\"kt-widget24__info\">\n                                                    <h5 className=\"kt-widget24__title\">\n                                                        Total Réclamations Traitées\n                                                    </h5>\n                                                    <span className=\"kt-widget24__desc\">\n\n\t\t\t\t\t\t\t\t\t</span>\n                                                </div>\n                                                <span className=\"kt-widget24__stats kt-font-success\">\n                                        {data.totalTreated ? data.totalTreated.myUnit : \"\"}\n                                    </span>\n                                            </div>\n                                            <div className=\"progress progress--sm\">\n                                                {\n                                                    data.totalTreated ?\n                                                        <div className=\"progress-bar kt-bg-success\" role=\"progressbar\"\n                                                             aria-valuenow={percentageData((data.totalTreated.myUnit), totalData)}\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\n                                                             style={{width: percentageData((data.totalTreated.myUnit), totalData)}}>\n                                                        </div>\n                                                        : ''\n                                                }\n\n                                            </div>\n                                            <div className=\"kt-widget24__action\">\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\n\t\t\t\t\t\t\t\t\t% Réclamations Traitées\n\t\t\t\t\t\t\t\t</span>\n                                                <span className=\"kt-widget24__number\">\n\t\t\t\t\t\t\t\t\t{\n                                        data.totalTreated ?\n                                            <span className=\"kt-widget24__number\">\n                                                {percentageData((data.totalTreated.myUnit), totalData)}\n                                           </span>\n                                            : \"\"\n                                    }\n\t\t\t\t\t\t\t\t</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\n                                        <div className=\"kt-widget24\">\n                                            <div className=\"kt-widget24__details\">\n                                                <div className=\"kt-widget24__info\">\n                                                    <h5 className=\"kt-widget24__title\">\n                                                        Total Réclamations Non Fondées\n                                                    </h5>\n                                                    <span className=\"kt-widget24__desc\">\n\n\t\t\t\t\t\t\t\t\t</span>\n                                                </div>\n                                                <span className=\"kt-widget24__stats kt-font-success\">\n                                        {data.totalUnfounded ? data.totalUnfounded.myUnit : \"\"}\n\t\t\t\t\t\t\t\t</span>\n                                            </div>\n                                            <div className=\"progress progress--sm\">\n                                                {\n                                                    data.totalUnfounded ?\n                                                        <div className=\"progress-bar kt-bg-success\" role=\"progressbar\"\n                                                             aria-valuenow={percentageData((data.totalUnfounded.myUnit), totalData)}\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\n                                                             style={{width: percentageData((data.totalUnfounded.myUnit), totalData)}}>\n                                                        </div>\n                                                        : \"\"\n                                                }\n                                            </div>\n                                            <div className=\"kt-widget24__action\">\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\n\t\t\t\t\t\t\t\t\t% Réclamations Non Fondées\n\t\t\t\t\t\t\t\t</span>\n                                                <span className=\"kt-widget24__number\">\n\t\t\t\t\t\t\t\t\t{\n                                        data.totalUnfounded ?\n                                            <span className=\"kt-widget24__number\">\n                                                {percentageData((data.totalUnfounded.myUnit), totalData)}\n                                           </span>\n                                            : \"\"\n                                    }\n\t\t\t\t\t\t\t\t</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\n                                        <div className=\"kt-widget24\">\n                                            <div className=\"kt-widget24__details\">\n                                                <div className=\"kt-widget24__info\">\n                                                    <h5 className=\"kt-widget24__title\">\n                                                        Total Satisfaction Mesurée\n                                                    </h5>\n                                                    <span className=\"kt-widget24__desc\">\n\n\t\t\t\t\t\t\t\t\t</span>\n                                                </div>\n                                                <span className=\"kt-widget24__stats kt-font-danger\">\n                                        {data.totalMeasuredSatisfaction ? data.totalMeasuredSatisfaction.myUnit : \"\"}\n\n\t\t\t\t\t\t\t\t</span>\n                                            </div>\n                                            <div className=\"progress progress--sm\">\n                                                {\n                                                    data.totalMeasuredSatisfaction ?\n                                                        <div className=\"progress-bar kt-bg-danger\" role=\"progressbar\"\n                                                             aria-valuenow={percentageData((data.totalMeasuredSatisfaction.myUnit), totalData)}\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\n                                                             style={{width: percentageData((data.totalMeasuredSatisfaction.myUnit), totalData)}}>\n                                                        </div>\n                                                        : \"\"\n                                                }\n                                            </div>\n                                            <div className=\"kt-widget24__action\">\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\n\t\t\t\t\t\t\t\t\t% Satisfaction Mesurée\n\t\t\t\t\t\t\t\t</span>\n                                                <span className=\"kt-widget24__number\">\n\t\t\t\t\t\t\t\t\t{\n                                        data.totalMeasuredSatisfaction ?\n                                            <span className=\"kt-widget24__number\">\n                                                {percentageData((data.totalMeasuredSatisfaction.myUnit), totalData)}\n                                           </span>\n                                            : \"\"\n                                    }\n\t\t\t\t\t\t\t\t</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n\n            ) : \"\"\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(DashboardClaimsUnit);\n","/var/vhosts/satis-macro/client/satis-client/src/APP_MACRO/Holding/DashboardClaimsAll.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/pages/TreatmentPeriod.jsx",["1076"],"import React, {useEffect, useState} from \"react\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport Pagination from \"../components/Pagination\";\nimport {forceRound, getLowerCaseString} from \"../../helpers/function\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport axios from \"axios\";\nimport appConfig from \"../../config/appConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastDeleteErrorMessageConfig,\n    toastDeleteSuccessMessageConfig,\n    toastErrorMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport {connect} from \"react-redux\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nconst TreatmentPeriod = props => {\n    document.title = \"Satis client - Paramètre délai de qualification\";\n    if (!verifyPermission(props.userPermissions, \"list-delai-treatment-parameters\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [TreatmentPeriods, setTreatmentPeriods] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData () {\n            axios.get(`${appConfig.apiDomaine}/delai-treatment-parameters`)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setTreatmentPeriods(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n\n        if (verifyTokenExpire()) {\n            fetchData();\n        }\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newTreatmentPeriods = [...TreatmentPeriods];\n        newTreatmentPeriods = newTreatmentPeriods.filter(el => (\n            getLowerCaseString(`${el.borne_sup === \"+\" ? `Plus de ${el.borne_inf}` : `${el.borne_inf}-${el.borne_sup}`} jours`).indexOf(value) >= 0\n        ));\n\n        return newTreatmentPeriods;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(TreatmentPeriods.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(TreatmentPeriods.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(TreatmentPeriods.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(TreatmentPeriods.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i < position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(TreatmentPeriods.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                TreatmentPeriods.slice(\n                    getEndByPosition(\n                        activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                TreatmentPeriods.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deletePeriod = (TreatmentPeriodId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (result.value) {\n                    if (verifyTokenExpire()) {\n                        axios.delete(`${appConfig.apiDomaine}/delai-treatment-parameters/${TreatmentPeriodId}`)\n                            .then(response => {\n                                const newUnitTypes = [...TreatmentPeriods];\n                                newUnitTypes.splice(index, 1);\n                                setTreatmentPeriods(newUnitTypes);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newUnitTypes.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newUnitTypes.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                if (error.response.data.error)\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\n                                else\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (TreatmentPeriod, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd text-center\">\n                <td>\n                    {\n                        TreatmentPeriod.borne_sup === \"+\" ? (\n                            `Plus de ${TreatmentPeriod.borne_inf}`\n                        ) : (\n                            `${TreatmentPeriod.borne_inf}-${TreatmentPeriod.borne_sup}`\n                        )\n                    } Jours\n                </td>\n                <td>\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-delai-treatment-parameters') ? (\n                            <button\n                                onClick={(e) => deletePeriod(TreatmentPeriod.uuid, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-delai-treatment-parameters') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Délai traitement\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={!TreatmentPeriods.length ? \"\" : TreatmentPeriods[TreatmentPeriods.length - 1].borne_sup === \"+\" ? \"\" : \"store-delai-treatment-parameters\"}\n                            title={\"Délai traitement\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/treatment-period/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input\n                                                            id=\"myInput\"\n                                                            type=\"text\"\n                                                            onKeyUp={(e) => searchElement(e)}\n                                                            className=\"form-control form-control-sm\"\n                                                            placeholder=\"\"\n                                                            aria-controls=\"kt_table_1\"\n                                                        />\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\" className=\"text-center\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Période\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"15%\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        TreatmentPeriods.length ? (\n                                                            showList.length ? (\n                                                                showList.map((TreatmentPeriod, index) => (\n                                                                    printBodyTable(TreatmentPeriod, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr className=\"text-center\">\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Période</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {TreatmentPeriods.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(TreatmentPeriod);\n","/var/vhosts/satis-macro/client/satis-client/src/views/pages/QualificationPeriod.jsx",["1077"],"import React, {useEffect, useState} from \"react\";\nimport HeaderTablePage from \"../components/HeaderTablePage\";\nimport LoadingTable from \"../components/LoadingTable\";\nimport EmptyTable from \"../components/EmptyTable\";\nimport Pagination from \"../components/Pagination\";\nimport {forceRound, getLowerCaseString} from \"../../helpers/function\";\nimport {verifyPermission} from \"../../helpers/permission\";\nimport {ERROR_401} from \"../../config/errorPage\";\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\nimport axios from \"axios\";\nimport appConfig from \"../../config/appConfig\";\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\nimport {ToastBottomEnd} from \"../components/Toast\";\nimport {\n    toastDeleteErrorMessageConfig,\n    toastDeleteSuccessMessageConfig,\n    toastErrorMessageWithParameterConfig\n} from \"../../config/toastConfig\";\nimport {connect} from \"react-redux\";\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\n\nconst QualificationPeriod = props => {\n    document.title = \"Satis client - Paramètre délai de qualification\";\n    if (!verifyPermission(props.userPermissions, \"list-delai-qualification-parameters\"))\n        window.location.href = ERROR_401;\n\n    const [load, setLoad] = useState(true);\n    const [qualificationPeriods, setQualificationPeriods] = useState([]);\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\n    const [numberPage, setNumberPage] = useState(0);\n    const [showList, setShowList] = useState([]);\n\n    useEffect(() => {\n        async function fetchData () {\n            axios.get(`${appConfig.apiDomaine}/delai-qualification-parameters`)\n                .then(response => {\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\n                    setQualificationPeriods(response.data);\n                    setLoad(false);\n                })\n                .catch(error => {\n                    setLoad(false);\n                    console.log(\"Something is wrong\");\n                })\n            ;\n        }\n        if (verifyTokenExpire()) {\n            fetchData();\n        }\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\n\n    const filterShowListBySearchValue = (value) => {\n        value = getLowerCaseString(value);\n        let newQualificationPeriods = [...qualificationPeriods];\n        newQualificationPeriods = newQualificationPeriods.filter(el => (\n            getLowerCaseString(`${el.borne_sup === \"+\" ? `Plus de ${el.borne_inf}` : `${el.borne_inf}-${el.borne_sup}`} jours`).indexOf(value) >= 0\n        ));\n\n        return newQualificationPeriods;\n    };\n\n    const searchElement = async (e) => {\n        if (e.target.value) {\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\n        } else {\n            setNumberPage(forceRound(qualificationPeriods.length/NUMBER_ELEMENT_PER_PAGE));\n            setShowList(qualificationPeriods.slice(0, NUMBER_ELEMENT_PER_PAGE));\n            setActiveNumberPage(0);\n        }\n    };\n\n    const onChangeNumberPerPage = (e) => {\n        setActiveNumberPage(0);\n        setNumberPerPage(parseInt(e.target.value));\n        setShowList(qualificationPeriods.slice(0, parseInt(e.target.value)));\n        setNumberPage(forceRound(qualificationPeriods.length/parseInt(e.target.value)));\n    };\n\n    const getEndByPosition = (position) => {\n        let end = numberPerPage;\n        for (let i = 0; i<position; i++) {\n            end = end+numberPerPage;\n        }\n        return end;\n    };\n\n    const onClickPage = (e, page) => {\n        e.preventDefault();\n        setActiveNumberPage(page);\n        setShowList(qualificationPeriods.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\n    };\n\n    const onClickNextPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage <= numberPage) {\n            setActiveNumberPage(activeNumberPage + 1);\n            setShowList(\n                qualificationPeriods.slice(\n                    getEndByPosition(activeNumberPage + 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage + 1)\n                )\n            );\n        }\n    };\n\n    const onClickPreviousPage = (e) => {\n        e.preventDefault();\n        if (activeNumberPage >= 1) {\n            setActiveNumberPage(activeNumberPage - 1);\n            setShowList(\n                qualificationPeriods.slice(\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                    getEndByPosition(activeNumberPage - 1)\n                )\n            );\n        }\n    };\n\n    const deletePeriod = (qualificationPeriodId, index) => {\n        DeleteConfirmation.fire(confirmDeleteConfig)\n            .then((result) => {\n                if (verifyTokenExpire()) {\n                    if (result.value) {\n                        axios.delete(`${appConfig.apiDomaine}/delai-qualification-parameters/${qualificationPeriodId}`)\n                            .then(response => {\n                                const newUnitTypes = [...qualificationPeriods];\n                                newUnitTypes.splice(index, 1);\n                                setQualificationPeriods(newUnitTypes);\n                                if (showList.length > 1) {\n                                    setShowList(\n                                        newUnitTypes.slice(\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\n                                            getEndByPosition(activeNumberPage)\n                                        )\n                                    );\n                                } else {\n                                    setShowList(\n                                        newUnitTypes.slice(\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\n                                            getEndByPosition(activeNumberPage - 1)\n                                        )\n                                    );\n                                }\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\n                            })\n                            .catch(error => {\n                                if (error.response.data.error)\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\n                                else\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\n                            })\n                        ;\n                    }\n                }\n            })\n        ;\n    };\n\n    const arrayNumberPage = () => {\n        const pages = [];\n        for (let i = 0; i < numberPage; i++) {\n            pages[i] = i;\n        }\n        return pages\n    };\n\n    const pages = arrayNumberPage();\n\n    const printBodyTable = (qualificationPeriod, index) => {\n        return (\n            <tr key={index} role=\"row\" className=\"odd text-center\">\n                <td>\n                    {\n                        qualificationPeriod.borne_sup === \"+\" ? (\n                            `Plus de ${qualificationPeriod.borne_inf}`\n                        ) : (\n                            `${qualificationPeriod.borne_inf}-${qualificationPeriod.borne_sup}`\n                        )\n                    } Jours\n                </td>\n                <td>\n                    {\n                        verifyPermission(props.userPermissions, 'destroy-delai-qualification-parameters') ? (\n                            <button\n                                onClick={(e) => deletePeriod(qualificationPeriod.uuid, index)}\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\n                                title=\"Supprimer\">\n                                <i className=\"la la-trash\"/>\n                            </button>\n                        ) : null\n                    }\n                </td>\n            </tr>\n        );\n    };\n\n    return (\n        verifyPermission(props.userPermissions, 'list-delai-qualification-parameters') ? (\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\n                    <div className=\"kt-container  kt-container--fluid \">\n                        <div className=\"kt-subheader__main\">\n                            <h3 className=\"kt-subheader__title\">\n                                Paramètres\n                            </h3>\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\n                            <div className=\"kt-subheader__breadcrumbs\">\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\n                                    Délai qualification\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\n                    <div className=\"kt-portlet\">\n                        <HeaderTablePage\n                            addPermission={\n                                !qualificationPeriods.length ? \"\" : qualificationPeriods[qualificationPeriods.length - 1 ].borne_sup === \"+\" ? \"\" : \"store-delai-qualification-parameters\"\n                            }\n                            title={\"Délai qualification\"}\n                            addText={\"Ajouter\"}\n                            addLink={\"/settings/qualification-period/add\"}\n                        />\n\n                        {\n                            load ? (\n                                <LoadingTable/>\n                            ) : (\n                                <div className=\"kt-portlet__body\">\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-6 text-left\">\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\n                                                    <label>\n                                                        Recherche:\n                                                        <input\n                                                            id=\"myInput\"\n                                                            type=\"text\"\n                                                            onKeyUp={(e) => searchElement(e)}\n                                                            className=\"form-control form-control-sm\"\n                                                            placeholder=\"\"\n                                                            aria-controls=\"kt_table_1\"\n                                                        />\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12\">\n                                                <table\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\n                                                    style={{ width: \"952px\" }}>\n                                                    <thead>\n                                                    <tr role=\"row\" className=\"text-center\">\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\n                                                            aria-label=\"Country: activate to sort column ascending\">Période\n                                                        </th>\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"15%\" }} aria-label=\"Type: activate to sort column ascending\">\n                                                            Action\n                                                        </th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        qualificationPeriods.length ? (\n                                                            showList.length ? (\n                                                                showList.map((qualificationPeriod, index) => (\n                                                                    printBodyTable(qualificationPeriod, index)\n                                                                ))\n                                                            ) : (\n                                                                <EmptyTable search={true}/>\n                                                            )\n                                                        ) : (\n                                                            <EmptyTable/>\n                                                        )\n                                                    }\n                                                    </tbody>\n                                                    <tfoot>\n                                                    <tr className=\"text-center\">\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Période</th>\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\n                                                    </tr>\n                                                    </tfoot>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 col-md-5\">\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {qualificationPeriods.length} données\n                                                </div>\n                                            </div>\n                                            {\n                                                showList.length ? (\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\n                                                        <Pagination\n                                                            numberPerPage={numberPerPage}\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\n                                                            activeNumberPage={activeNumberPage}\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\n                                                            pages={pages}\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\n                                                            numberPage={numberPage}\n                                                            onClickNextPage={e => onClickNextPage(e)}\n                                                        />\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        ) : null\n\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userPermissions: state.user.user.permissions\n    };\n};\n\nexport default connect(mapStateToProps)(QualificationPeriod);\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/KanbanElementDetail.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/kanban/ClaimDetails.jsx",["1078","1079","1080","1081","1082"],"import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport {formatDateToTimeStampte, loadCss, loadScript} from \"../../../helpers/function\";\nimport {AUTH_TOKEN} from \"../../../constants/token\";\nimport appConfig from \"../../../config/appConfig\";\nimport Loader from \"../Loader\";\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\n\n\nconst ClaimDetails = (props) => {\n\n    console.log(props.claim);\n    const claim = props.claim;\n\n    const [first, setFist] = useState(\"current\");\n    const [second, setSecond] = useState(\"pending\");\n    const [third, setThird] = useState(\"pending\");\n    const [last, setLast] = useState(\"pending\");\n\n    const onClickFirst = () => {\n        setFist(\"current\");\n        setSecond(\"pending\");\n        setThird(\"pending\");\n        setLast(\"pending\");\n    };\n\n    const onClickSecond = () => {\n        setFist(\"done\");\n        setSecond(\"current\");\n        setThird(\"pending\");\n        setLast(\"pending\");\n    };\n\n    const onClickThird = () => {\n        setFist(\"done\");\n        setSecond(\"done\");\n        setThird(\"current\");\n        setLast(\"pending\");\n    };\n\n    const onClickLast = () => {\n        setFist(\"done\");\n        setSecond(\"done\");\n        setThird(\"done\");\n        setLast(\"current\");\n    };\n\n    const onClickPrevious = (e) => {\n        e.preventDefault();\n        if (last === \"current\")\n            onClickThird();\n        else if (third === \"current\")\n            onClickSecond();\n        else if (second === \"current\")\n            onClickFirst();\n    };\n\n    const onClickNext = (e) => {\n        e.preventDefault();\n        if (first === \"current\")\n            onClickSecond();\n        else if (second === \"current\")\n            onClickThird();\n        else if (third === \"current\")\n            onClickLast()\n    };\n\n    return (\n        <div className=\"kt-portlet__body kt-portlet__body--fit w-100\">\n            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\" data-ktwizard-state={first === \"current\" ? \"step-first\" : last === \"current\" ? \"last\" : \"between\"}>\n                <div className=\"kt-grid__item kt-wizard-v2__aside\">\n                    <div className=\"kt-wizard-v2__nav\">\n                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\n                            <div onClick={() => onClickFirst() } className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\" data-ktwizard-state={first}>\n                                <div className=\"kt-wizard-v2__nav-body\">\n                                    <div className=\"kt-wizard-v2__nav-icon\">\n                                        <i className=\"flaticon-user-settings\"/>\n                                    </div>\n                                    <div className=\"kt-wizard-v2__nav-label\">\n                                        <div className=\"kt-wizard-v2__nav-label-title\">\n                                            Client\n                                        </div>\n                                        <div className=\"kt-wizard-v2__nav-label-desc\">\n                                            Acceder aux détails du client\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div onClick={() => onClickSecond() } className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\" data-ktwizard-state={second}>\n                                <div className=\"kt-wizard-v2__nav-body\">\n                                    <div className=\"kt-wizard-v2__nav-icon\">\n                                        <i className=\"flaticon-book\"/>\n                                    </div>\n                                    <div className=\"kt-wizard-v2__nav-label\">\n                                        <div className=\"kt-wizard-v2__nav-label-title\">\n                                            Réclamation\n                                        </div>\n                                        <div className=\"kt-wizard-v2__nav-label-desc\">\n                                            Acceder aux détails de la réclamation\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div onClick={() => onClickThird() } className=\"kt-wizard-v2__nav-item\" href=\"#\" data-ktwizard-type=\"step\" data-ktwizard-state={third}>\n                                <div className=\"kt-wizard-v2__nav-body\">\n                                    <div className=\"kt-wizard-v2__nav-icon\">\n                                        <i className=\"flaticon-file-2\"/>\n                                    </div>\n                                    <div className=\"kt-wizard-v2__nav-label\">\n                                        <div className=\"kt-wizard-v2__nav-label-title\">\n                                            Pièces jointes\n                                            {\n                                                !props.claim ? \"\" : (\n                                                    <span\n                                                        className=\"mx-lg-4 kt-badge kt-badge--success  kt-badge--inline kt-badge--pill\">{props.claim.files.length}</span>\n                                                )\n                                            }\n                                        </div>\n                                        <div className=\"kt-wizard-v2__nav-label-desc\">\n                                            Acceder à la liste des pièces jointes\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\n                    <form className=\"kt-form\" id=\"kt_form\">\n\n                        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\" data-ktwizard-state={first === \"current\" ? \"current\" : \"pending\"}>\n                            <div className=\"kt-heading kt-heading--md\">Détails du client</div>\n                            <div className=\"kt-form__section kt-form__section--first\">\n                                <div className=\"kt-wizard-v2__review\">\n                                    <div className=\"kt-wizard-v2__review-item\">\n                                        <div className=\"kt-widget kt-widget--user-profile-1\">\n                                            <div className=\"kt-widget__head\">\n                                                <div className=\"kt-widget__media\">\n                                                    <img src=\"/personal/img/default-avatar.png\"\n                                                         alt=\"image\"/>\n                                                </div>\n                                                <div className=\"kt-widget__content\"\n                                                     style={{marginTop: \"auto\", marginBottom: \"auto\"}}>\n                                                    <div className=\"kt-widget__section\">\n                                                        {\n                                                            !claim ? (\n                                                                <Loader/>\n                                                            ) : (\n                                                                <a href=\"#\"\n                                                                   className=\"kt-widget__username\">\n                                                                    {`${claim.claimer.lastname} ${claim.claimer.firstname}`}\n                                                                    <i className=\"flaticon2-correct kt-font-success\"/>\n                                                                </a>\n                                                            )\n                                                        }\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"kt-widget__body\">\n                                                {\n                                                    !claim ? \"\" : (\n                                                        <div className=\"kt-widget__content\">\n                                                            <div className=\"kt-widget__info\">\n                                                                                <span className=\"fa fa-venus-mars\"\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\n                                                                <span\n                                                                    className=\"kt-widget__data\">{claim.claimer.sexe === 'F' ? \"Féminin\" : \"Masculin\"}</span>\n                                                            </div>\n                                                            <div className=\"kt-widget__info\">\n                                                                                <span className=\"fa fa-envelope\"\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\n                                                                <span className=\"kt-widget__data\">\n                                                                                {\n                                                                                    claim.claimer.email.map((mail, index) => (\n                                                                                        index === claim.claimer.email.length - 1 ? mail : mail + \"/ \"\n                                                                                    ))\n                                                                                }\n                                                                            </span>\n                                                            </div>\n                                                            <div className=\"kt-widget__info\">\n                                                                                <span className=\"fa fa-phone-alt\"\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\n                                                                <span className=\"kt-widget__data\">\n                                                                                {\n                                                                                    claim.claimer.telephone.map((telephone, index) => (\n                                                                                        index === claim.claimer.telephone.length - 1 ? telephone : telephone + \"/ \"\n                                                                                    ))\n                                                                                }\n                                                                            </span>\n                                                            </div>\n                                                            <div className=\"kt-widget__info\">\n                                                                                <span className=\"fa fa-location-arrow\"\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\n                                                                <span className=\"kt-widget__data\">\n                                                                                {claim.claimer.ville ? claim.claimer.ville : \"Pas d'information sur la ville\"}\n                                                                            </span>\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\" data-ktwizard-state={second === \"current\" ? \"current\" : \"pending\"}>\n                            <div className=\"kt-heading kt-heading--md\">Détails de la réclamation</div>\n                            <div className=\"kt-form__section kt-form__section--first\">\n                                <div className=\"kt-wizard-v2__review\">\n                                    <div className=\"kt-wizard-v2__review-item\">\n                                        {\n                                            !claim ? null : (\n                                                <div className=\"kt-wizard-v2__review-content\">\n                                                    <h5><span style={{color:\"#48465b\"}}>Référence:</span></h5>\n                                                    <span className=\"mx-2\">{claim.reference ? claim.reference : \"Pas de canal de référence\"}</span>\n                                                    <br/>\n                                                    <br/>\n                                                </div>\n                                            )\n                                        }\n\n                                        <div className=\"kt-wizard-v2__review-title\">\n                                            <h5><span style={{color:\"#48465b\"}}>Canaux</span></h5>\n                                        </div>\n                                        {\n                                            !claim ? null : (\n                                                <div className=\"kt-wizard-v2__review-content\">\n                                                    <strong>Canal de réception:</strong> <span\n                                                    className=\"mx-2\">{claim.request_channel ? claim.request_channel.name[\"fr\"] : \"Pas de canal de réception\"}</span><br/>\n                                                    <strong>Canal de réponse préférentiel:</strong> <span\n                                                    className=\"mx-2\">{claim.response_channel ? claim.response_channel.name[\"fr\"] : \"Pas de canal de réponse\"}</span><br/>\n                                                </div>\n                                            )\n                                        }\n                                    </div>\n                                    <div className=\"kt-wizard-v2__review-item\">\n                                        <div className=\"kt-wizard-v2__review-title\">\n                                            <h5><span style={{color:\"#48465b\"}}>Cible</span></h5>\n                                        </div>\n                                        {\n                                            !claim ? null : (\n                                                <div className=\"kt-wizard-v2__review-content\">\n                                                    <strong>Institution</strong>: <span\n                                                    className=\"mx-2\">{claim.institution_targeted.name}</span><br/>\n                                                    <strong>Unité</strong>: <span\n                                                    className=\"mx-2\">{claim.unit_targeted ? claim.unit_targeted.name[\"fr\"] : \"Pas d'institution ciblé\"}</span><br/>\n                                                </div>\n                                            )\n                                        }\n                                    </div>\n                                    <div className=\"kt-wizard-v2__review-item\">\n                                        <div className=\"kt-wizard-v2__review-title\">\n                                            <h5><span style={{color:\"#48465b\"}}>Spécifications</span></h5>\n                                        </div>\n                                        {\n                                            !claim ? null : (\n                                                <div className=\"kt-wizard-v2__review-content\">\n                                                    <strong>Objet</strong>: <span\n                                                    className=\"mx-2\">{claim.claim_object.name[\"fr\"]}</span><br/>\n                                                    <br/>\n                                                    <strong>Numéro de compte </strong>: <span\n                                                    className=\"mx-2\">{claim.account_targeted ? claim.account_targeted.number : \"Pas de compte cible\"}</span><br/>\n                                                    <br/>\n                                                    <strong>Montant réclamé</strong>: <span\n                                                    className=\"mx-2\">{claim.amount_disputed ? `${claim.amount_disputed} ${claim.amount_currency.name[\"fr\"]}` : \"Pas de montant\"}</span><br/>\n                                                    <br/>\n                                                    <strong>Date de réception</strong>: <span className=\"mx-2\">{claim.created_at ? formatDateToTimeStampte(claim.created_at) : \"Pas de date\"}</span><br/>\n                                                    <br/>\n                                                    <strong>Date de l'évernement</strong>: <span className=\"mx-2\">{claim.event_occured_at ? formatDateToTimeStampte(claim.event_occured_at) : \"Pas de date\"}</span><br/>\n                                                    <br/>\n                                                    <strong>Description:</strong> <span\n                                                    className=\"mx-2\">{claim.description ? claim.description : \"Pas de description\"}</span><br/>\n                                                    <br/>\n                                                    <strong>Attente:</strong> <span\n                                                    className=\"mx-2\">{claim.claimer_expectation ? claim.claimer_expectation : \"Pas d'attente\"}</span><br/>\n                                                </div>\n                                            )\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\" data-ktwizard-state={third === \"current\" ? \"current\" : \"pending\"}>\n                            <div className=\"kt-heading kt-heading--md\">Liste de pièces jointes\n                            </div>\n                            <div className=\"kt-form__section kt-form__section--first\">\n                                <div className=\"kt-wizard-v2__review\">\n                                    {\n                                        !claim ? \"\" : (\n                                            claim.files.length ? (\n                                                claim.files.map((file, index) => (\n                                                    <div className=\"kt-wizard-v2__review-item\"\n                                                         key={index}>\n                                                        {/*<div className=\"kt-wizard-v2__review-title\">*/}\n                                                        {/*    Pièce jointe Nº{index + 1}*/}\n                                                        {/*</div>*/}\n                                                        <div className=\"kt-wizard-v2__review-content\">\n                                                            <a href={`${appConfig.apiDomaine}${file.url}`}\n                                                               download={true} target={\"_blank\"}>\n                                                                {file.title}\n                                                            </a>\n                                                        </div>\n                                                    </div>\n                                                ))\n                                            ) : (\n                                                <div className=\"kt-wizard-v2__review-item\">\n                                                    <div className=\"kt-wizard-v2__review-title\">\n                                                        Pas de pièce jointe\n                                                    </div>\n                                                </div>\n                                            )\n                                        )\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ClaimDetails;\n","/var/vhosts/satis-macro/client/satis-client/src/views/components/FormInformation.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/Modal/ConfirmClaimAddModal.jsx",[],"/var/vhosts/satis-macro/client/satis-client/src/views/components/PeriodForm.jsx",[],{"ruleId":"1083","replacedBy":"1084"},{"ruleId":"1085","replacedBy":"1086"},{"ruleId":"1087","severity":1,"message":"1088","line":9,"column":1,"nodeType":"1089","endLine":28,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":48,"column":22,"nodeType":"1092","messageId":"1093","endLine":48,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1094","line":80,"column":27,"nodeType":"1092","messageId":"1093","endLine":80,"endColumn":31},{"ruleId":"1095","severity":1,"message":"1096","line":119,"column":49,"nodeType":"1097","endLine":119,"endColumn":128},{"ruleId":"1098","severity":1,"message":"1099","line":9,"column":106,"nodeType":"1100","endLine":9,"endColumn":121},{"ruleId":"1090","severity":1,"message":"1101","line":98,"column":8,"nodeType":"1092","messageId":"1093","endLine":98,"endColumn":20},{"ruleId":"1102","severity":1,"message":"1103","line":34,"column":8,"nodeType":"1104","endLine":34,"endColumn":27,"suggestions":"1105"},{"ruleId":"1102","severity":1,"message":"1106","line":41,"column":8,"nodeType":"1104","endLine":41,"endColumn":30,"suggestions":"1107"},{"ruleId":"1102","severity":1,"message":"1108","line":59,"column":8,"nodeType":"1104","endLine":59,"endColumn":10,"suggestions":"1109"},{"ruleId":"1102","severity":1,"message":"1110","line":75,"column":8,"nodeType":"1104","endLine":75,"endColumn":29,"suggestions":"1111"},{"ruleId":"1102","severity":1,"message":"1112","line":80,"column":8,"nodeType":"1104","endLine":80,"endColumn":30,"suggestions":"1113"},{"ruleId":"1102","severity":1,"message":"1112","line":85,"column":8,"nodeType":"1104","endLine":85,"endColumn":26,"suggestions":"1114"},{"ruleId":"1102","severity":1,"message":"1115","line":87,"column":33,"nodeType":"1092","endLine":87,"endColumn":44},{"ruleId":"1102","severity":1,"message":"1115","line":111,"column":36,"nodeType":"1092","endLine":111,"endColumn":47},{"ruleId":"1090","severity":1,"message":"1116","line":7,"column":21,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":34},{"ruleId":"1117","severity":1,"message":"1118","line":16,"column":25,"nodeType":"1097","endLine":16,"endColumn":77},{"ruleId":"1117","severity":1,"message":"1118","line":34,"column":33,"nodeType":"1097","endLine":35,"endColumn":72},{"ruleId":"1117","severity":1,"message":"1118","line":45,"column":45,"nodeType":"1097","endLine":45,"endColumn":119},{"ruleId":"1117","severity":1,"message":"1118","line":82,"column":33,"nodeType":"1097","endLine":82,"endColumn":143},{"ruleId":"1117","severity":1,"message":"1118","line":92,"column":45,"nodeType":"1097","endLine":92,"endColumn":119},{"ruleId":"1117","severity":1,"message":"1118","line":281,"column":37,"nodeType":"1097","endLine":281,"endColumn":147},{"ruleId":"1117","severity":1,"message":"1118","line":290,"column":49,"nodeType":"1097","endLine":290,"endColumn":123},{"ruleId":"1102","severity":1,"message":"1119","line":68,"column":8,"nodeType":"1104","endLine":68,"endColumn":10,"suggestions":"1120"},{"ruleId":"1121","severity":1,"message":"1122","line":134,"column":33,"nodeType":"1097","endLine":134,"endColumn":88},{"ruleId":"1121","severity":1,"message":"1122","line":141,"column":33,"nodeType":"1097","endLine":141,"endColumn":121},{"ruleId":"1090","severity":1,"message":"1123","line":2,"column":8,"nodeType":"1092","messageId":"1093","endLine":2,"endColumn":24},{"ruleId":"1102","severity":1,"message":"1124","line":56,"column":8,"nodeType":"1104","endLine":56,"endColumn":10,"suggestions":"1125"},{"ruleId":"1121","severity":1,"message":"1122","line":110,"column":33,"nodeType":"1097","endLine":110,"endColumn":88},{"ruleId":"1121","severity":1,"message":"1122","line":117,"column":33,"nodeType":"1097","endLine":117,"endColumn":121},{"ruleId":"1102","severity":1,"message":"1126","line":57,"column":7,"nodeType":"1104","endLine":57,"endColumn":33,"suggestions":"1127"},{"ruleId":"1102","severity":1,"message":"1128","line":39,"column":8,"nodeType":"1104","endLine":39,"endColumn":10,"suggestions":"1129"},{"ruleId":"1102","severity":1,"message":"1130","line":77,"column":8,"nodeType":"1104","endLine":77,"endColumn":10,"suggestions":"1131"},{"ruleId":"1121","severity":1,"message":"1122","line":110,"column":33,"nodeType":"1097","endLine":110,"endColumn":88},{"ruleId":"1102","severity":1,"message":"1132","line":60,"column":7,"nodeType":"1104","endLine":60,"endColumn":9,"suggestions":"1133"},{"ruleId":"1102","severity":1,"message":"1134","line":56,"column":7,"nodeType":"1104","endLine":56,"endColumn":9,"suggestions":"1135"},{"ruleId":"1102","severity":1,"message":"1126","line":59,"column":8,"nodeType":"1104","endLine":59,"endColumn":34,"suggestions":"1136"},{"ruleId":"1102","severity":1,"message":"1126","line":66,"column":8,"nodeType":"1104","endLine":66,"endColumn":34,"suggestions":"1137"},{"ruleId":"1090","severity":1,"message":"1138","line":6,"column":60,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":70},{"ruleId":"1102","severity":1,"message":"1139","line":55,"column":8,"nodeType":"1104","endLine":55,"endColumn":55,"suggestions":"1140"},{"ruleId":"1141","severity":1,"message":"1142","line":167,"column":17,"nodeType":"1100","endLine":167,"endColumn":32},{"ruleId":"1121","severity":1,"message":"1122","line":208,"column":33,"nodeType":"1097","endLine":208,"endColumn":88},{"ruleId":"1121","severity":1,"message":"1122","line":211,"column":33,"nodeType":"1097","endLine":211,"endColumn":121},{"ruleId":"1102","severity":1,"message":"1126","line":63,"column":8,"nodeType":"1104","endLine":63,"endColumn":30,"suggestions":"1143"},{"ruleId":"1102","severity":1,"message":"1124","line":49,"column":8,"nodeType":"1104","endLine":49,"endColumn":10,"suggestions":"1144"},{"ruleId":"1121","severity":1,"message":"1122","line":80,"column":33,"nodeType":"1097","endLine":80,"endColumn":88},{"ruleId":"1102","severity":1,"message":"1145","line":79,"column":8,"nodeType":"1104","endLine":79,"endColumn":10,"suggestions":"1146"},{"ruleId":"1121","severity":1,"message":"1122","line":112,"column":33,"nodeType":"1097","endLine":112,"endColumn":88},{"ruleId":"1102","severity":1,"message":"1126","line":92,"column":8,"nodeType":"1104","endLine":92,"endColumn":34,"suggestions":"1147"},{"ruleId":"1102","severity":1,"message":"1148","line":79,"column":8,"nodeType":"1104","endLine":79,"endColumn":34,"suggestions":"1149"},{"ruleId":"1102","severity":1,"message":"1124","line":54,"column":8,"nodeType":"1104","endLine":54,"endColumn":10,"suggestions":"1150"},{"ruleId":"1102","severity":1,"message":"1126","line":87,"column":8,"nodeType":"1104","endLine":87,"endColumn":34,"suggestions":"1151"},{"ruleId":"1152","severity":1,"message":"1153","line":51,"column":26,"nodeType":"1154","messageId":"1155","endLine":51,"endColumn":28},{"ruleId":"1102","severity":1,"message":"1156","line":104,"column":8,"nodeType":"1104","endLine":104,"endColumn":10,"suggestions":"1157"},{"ruleId":"1102","severity":1,"message":"1139","line":55,"column":8,"nodeType":"1104","endLine":55,"endColumn":55,"suggestions":"1158"},{"ruleId":"1102","severity":1,"message":"1159","line":56,"column":8,"nodeType":"1104","endLine":56,"endColumn":10,"suggestions":"1160"},{"ruleId":"1090","severity":1,"message":"1161","line":128,"column":11,"nodeType":"1092","messageId":"1093","endLine":128,"endColumn":29},{"ruleId":"1121","severity":1,"message":"1122","line":203,"column":29,"nodeType":"1097","endLine":203,"endColumn":84},{"ruleId":"1121","severity":1,"message":"1122","line":205,"column":29,"nodeType":"1097","endLine":205,"endColumn":117},{"ruleId":"1121","severity":1,"message":"1122","line":210,"column":33,"nodeType":"1097","endLine":210,"endColumn":88},{"ruleId":"1121","severity":1,"message":"1122","line":212,"column":33,"nodeType":"1097","endLine":212,"endColumn":121},{"ruleId":"1102","severity":1,"message":"1126","line":70,"column":8,"nodeType":"1104","endLine":70,"endColumn":34,"suggestions":"1162"},{"ruleId":"1102","severity":1,"message":"1163","line":48,"column":8,"nodeType":"1104","endLine":48,"endColumn":10,"suggestions":"1164"},{"ruleId":"1102","severity":1,"message":"1165","line":76,"column":8,"nodeType":"1104","endLine":76,"endColumn":10,"suggestions":"1166"},{"ruleId":"1102","severity":1,"message":"1139","line":52,"column":8,"nodeType":"1104","endLine":52,"endColumn":55,"suggestions":"1167"},{"ruleId":"1102","severity":1,"message":"1139","line":59,"column":8,"nodeType":"1104","endLine":59,"endColumn":55,"suggestions":"1168"},{"ruleId":"1102","severity":1,"message":"1139","line":56,"column":8,"nodeType":"1104","endLine":56,"endColumn":55,"suggestions":"1169"},{"ruleId":"1102","severity":1,"message":"1159","line":57,"column":8,"nodeType":"1104","endLine":57,"endColumn":10,"suggestions":"1170"},{"ruleId":"1090","severity":1,"message":"1171","line":130,"column":11,"nodeType":"1092","messageId":"1093","endLine":130,"endColumn":21},{"ruleId":"1121","severity":1,"message":"1122","line":207,"column":37,"nodeType":"1097","endLine":207,"endColumn":92},{"ruleId":"1121","severity":1,"message":"1122","line":209,"column":37,"nodeType":"1097","endLine":209,"endColumn":125},{"ruleId":"1121","severity":1,"message":"1122","line":214,"column":41,"nodeType":"1097","endLine":214,"endColumn":96},{"ruleId":"1121","severity":1,"message":"1122","line":216,"column":41,"nodeType":"1097","endLine":216,"endColumn":129},{"ruleId":"1102","severity":1,"message":"1159","line":55,"column":7,"nodeType":"1104","endLine":55,"endColumn":9,"suggestions":"1172"},{"ruleId":"1090","severity":1,"message":"1138","line":6,"column":60,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":70},{"ruleId":"1102","severity":1,"message":"1159","line":54,"column":8,"nodeType":"1104","endLine":54,"endColumn":10,"suggestions":"1173"},{"ruleId":"1121","severity":1,"message":"1122","line":216,"column":33,"nodeType":"1097","endLine":216,"endColumn":121},{"ruleId":"1102","severity":1,"message":"1174","line":74,"column":8,"nodeType":"1104","endLine":74,"endColumn":48,"suggestions":"1175"},{"ruleId":"1121","severity":1,"message":"1122","line":244,"column":33,"nodeType":"1097","endLine":244,"endColumn":88},{"ruleId":"1121","severity":1,"message":"1122","line":246,"column":33,"nodeType":"1097","endLine":246,"endColumn":146},{"ruleId":"1102","severity":1,"message":"1124","line":94,"column":8,"nodeType":"1104","endLine":94,"endColumn":10,"suggestions":"1176"},{"ruleId":"1090","severity":1,"message":"1177","line":3,"column":9,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":13},{"ruleId":"1102","severity":1,"message":"1139","line":56,"column":8,"nodeType":"1104","endLine":56,"endColumn":55,"suggestions":"1178"},{"ruleId":"1102","severity":1,"message":"1139","line":56,"column":8,"nodeType":"1104","endLine":56,"endColumn":55,"suggestions":"1179"},{"ruleId":"1102","severity":1,"message":"1159","line":70,"column":8,"nodeType":"1104","endLine":70,"endColumn":10,"suggestions":"1180"},{"ruleId":"1152","severity":1,"message":"1153","line":74,"column":28,"nodeType":"1154","messageId":"1155","endLine":74,"endColumn":30},{"ruleId":"1152","severity":1,"message":"1153","line":85,"column":24,"nodeType":"1154","messageId":"1155","endLine":85,"endColumn":26},{"ruleId":"1121","severity":1,"message":"1122","line":251,"column":33,"nodeType":"1097","endLine":251,"endColumn":88},{"ruleId":"1121","severity":1,"message":"1122","line":254,"column":33,"nodeType":"1097","endLine":255,"endColumn":79},{"ruleId":"1102","severity":1,"message":"1163","line":57,"column":8,"nodeType":"1104","endLine":57,"endColumn":10,"suggestions":"1181"},{"ruleId":"1102","severity":1,"message":"1182","line":54,"column":8,"nodeType":"1104","endLine":54,"endColumn":10,"suggestions":"1183"},{"ruleId":"1102","severity":1,"message":"1165","line":80,"column":8,"nodeType":"1104","endLine":80,"endColumn":10,"suggestions":"1184"},{"ruleId":"1121","severity":1,"message":"1122","line":208,"column":33,"nodeType":"1097","endLine":208,"endColumn":88},{"ruleId":"1090","severity":1,"message":"1185","line":12,"column":8,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":20},{"ruleId":"1102","severity":1,"message":"1159","line":53,"column":7,"nodeType":"1104","endLine":53,"endColumn":9,"suggestions":"1186"},{"ruleId":"1102","severity":1,"message":"1165","line":80,"column":7,"nodeType":"1104","endLine":80,"endColumn":9,"suggestions":"1187"},{"ruleId":"1102","severity":1,"message":"1139","line":55,"column":8,"nodeType":"1104","endLine":55,"endColumn":55,"suggestions":"1188"},{"ruleId":"1090","severity":1,"message":"1189","line":14,"column":9,"nodeType":"1092","messageId":"1093","endLine":14,"endColumn":18},{"ruleId":"1102","severity":1,"message":"1130","line":107,"column":8,"nodeType":"1104","endLine":107,"endColumn":10,"suggestions":"1190"},{"ruleId":"1121","severity":1,"message":"1122","line":150,"column":33,"nodeType":"1097","endLine":150,"endColumn":88},{"ruleId":"1102","severity":1,"message":"1191","line":70,"column":8,"nodeType":"1104","endLine":70,"endColumn":12,"suggestions":"1192"},{"ruleId":"1193","severity":1,"message":"1194","line":86,"column":99,"nodeType":"1195","messageId":"1196","endLine":86,"endColumn":101},{"ruleId":"1193","severity":1,"message":"1194","line":87,"column":99,"nodeType":"1195","messageId":"1196","endLine":87,"endColumn":101},{"ruleId":"1121","severity":1,"message":"1122","line":115,"column":33,"nodeType":"1097","endLine":115,"endColumn":88},{"ruleId":"1102","severity":1,"message":"1165","line":86,"column":8,"nodeType":"1104","endLine":86,"endColumn":10,"suggestions":"1197"},{"ruleId":"1102","severity":1,"message":"1174","line":87,"column":8,"nodeType":"1104","endLine":87,"endColumn":48,"suggestions":"1198"},{"ruleId":"1199","severity":1,"message":"1200","line":89,"column":5,"nodeType":"1201","messageId":"1202","endLine":95,"endColumn":13},{"ruleId":"1121","severity":1,"message":"1122","line":269,"column":33,"nodeType":"1097","endLine":269,"endColumn":88},{"ruleId":"1121","severity":1,"message":"1122","line":271,"column":33,"nodeType":"1097","endLine":271,"endColumn":146},{"ruleId":"1102","severity":1,"message":"1139","line":53,"column":8,"nodeType":"1104","endLine":53,"endColumn":55,"suggestions":"1203"},{"ruleId":"1102","severity":1,"message":"1159","line":55,"column":8,"nodeType":"1104","endLine":55,"endColumn":10,"suggestions":"1204"},{"ruleId":"1090","severity":1,"message":"1205","line":129,"column":11,"nodeType":"1092","messageId":"1093","endLine":129,"endColumn":28},{"ruleId":"1102","severity":1,"message":"1165","line":82,"column":8,"nodeType":"1104","endLine":82,"endColumn":10,"suggestions":"1206"},{"ruleId":"1152","severity":1,"message":"1153","line":86,"column":31,"nodeType":"1154","messageId":"1155","endLine":86,"endColumn":33},{"ruleId":"1207","severity":1,"message":"1208","line":233,"column":121,"nodeType":"1209","messageId":"1210","endLine":233,"endColumn":122},{"ruleId":"1207","severity":1,"message":"1208","line":233,"column":128,"nodeType":"1209","messageId":"1210","endLine":233,"endColumn":129},{"ruleId":"1207","severity":1,"message":"1208","line":244,"column":115,"nodeType":"1209","messageId":"1210","endLine":244,"endColumn":116},{"ruleId":"1207","severity":1,"message":"1208","line":244,"column":122,"nodeType":"1209","messageId":"1210","endLine":244,"endColumn":123},{"ruleId":"1121","severity":1,"message":"1122","line":295,"column":29,"nodeType":"1097","endLine":295,"endColumn":84},{"ruleId":"1121","severity":1,"message":"1122","line":298,"column":29,"nodeType":"1097","endLine":298,"endColumn":117},{"ruleId":"1102","severity":1,"message":"1211","line":99,"column":8,"nodeType":"1104","endLine":99,"endColumn":10,"suggestions":"1212"},{"ruleId":"1199","severity":1,"message":"1200","line":125,"column":9,"nodeType":"1201","messageId":"1202","endLine":127,"endColumn":10},{"ruleId":"1121","severity":1,"message":"1122","line":214,"column":29,"nodeType":"1097","endLine":214,"endColumn":84},{"ruleId":"1121","severity":1,"message":"1122","line":221,"column":29,"nodeType":"1097","endLine":221,"endColumn":117},{"ruleId":"1102","severity":1,"message":"1213","line":58,"column":8,"nodeType":"1104","endLine":58,"endColumn":10,"suggestions":"1214"},{"ruleId":"1102","severity":1,"message":"1215","line":66,"column":8,"nodeType":"1104","endLine":66,"endColumn":67,"suggestions":"1216"},{"ruleId":"1152","severity":1,"message":"1153","line":200,"column":21,"nodeType":"1154","messageId":"1155","endLine":200,"endColumn":23},{"ruleId":"1102","severity":1,"message":"1174","line":88,"column":8,"nodeType":"1104","endLine":88,"endColumn":48,"suggestions":"1217"},{"ruleId":"1152","severity":1,"message":"1153","line":92,"column":36,"nodeType":"1154","messageId":"1155","endLine":92,"endColumn":38},{"ruleId":"1090","severity":1,"message":"1218","line":18,"column":35,"nodeType":"1092","messageId":"1093","endLine":18,"endColumn":71},{"ruleId":"1090","severity":1,"message":"1219","line":68,"column":19,"nodeType":"1092","messageId":"1093","endLine":68,"endColumn":27},{"ruleId":"1102","severity":1,"message":"1220","line":105,"column":8,"nodeType":"1104","endLine":105,"endColumn":10,"suggestions":"1221"},{"ruleId":"1121","severity":1,"message":"1122","line":185,"column":33,"nodeType":"1097","endLine":185,"endColumn":88},{"ruleId":"1102","severity":1,"message":"1222","line":94,"column":8,"nodeType":"1104","endLine":94,"endColumn":10,"suggestions":"1223"},{"ruleId":"1102","severity":1,"message":"1215","line":86,"column":8,"nodeType":"1104","endLine":86,"endColumn":42,"suggestions":"1224"},{"ruleId":"1199","severity":1,"message":"1200","line":129,"column":5,"nodeType":"1201","messageId":"1202","endLine":151,"endColumn":13},{"ruleId":"1152","severity":1,"message":"1153","line":155,"column":21,"nodeType":"1154","messageId":"1155","endLine":155,"endColumn":23},{"ruleId":"1090","severity":1,"message":"1225","line":1,"column":16,"nodeType":"1092","messageId":"1093","endLine":1,"endColumn":24},{"ruleId":"1090","severity":1,"message":"1226","line":3,"column":8,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1227","line":4,"column":9,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":23},{"ruleId":"1090","severity":1,"message":"1218","line":6,"column":5,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":41},{"ruleId":"1090","severity":1,"message":"1228","line":6,"column":43,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":81},{"ruleId":"1090","severity":1,"message":"1229","line":11,"column":8,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":20},{"ruleId":"1090","severity":1,"message":"1177","line":12,"column":9,"nodeType":"1092","messageId":"1093","endLine":12,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1230","line":46,"column":12,"nodeType":"1092","messageId":"1093","endLine":46,"endColumn":18},{"ruleId":"1102","severity":1,"message":"1231","line":76,"column":9,"nodeType":"1232","endLine":76,"endColumn":42},{"ruleId":"1117","severity":1,"message":"1233","line":302,"column":89,"nodeType":"1097","endLine":306,"endColumn":124},{"ruleId":"1090","severity":1,"message":"1234","line":3,"column":25,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":31},{"ruleId":"1121","severity":1,"message":"1122","line":88,"column":29,"nodeType":"1097","endLine":88,"endColumn":84},{"ruleId":"1121","severity":1,"message":"1122","line":92,"column":29,"nodeType":"1097","endLine":92,"endColumn":145},{"ruleId":"1235","severity":1,"message":"1236","line":119,"column":45,"nodeType":"1097","endLine":119,"endColumn":101},{"ruleId":"1121","severity":1,"message":"1122","line":123,"column":49,"nodeType":"1097","endLine":123,"endColumn":93},{"ruleId":"1121","severity":1,"message":"1122","line":136,"column":49,"nodeType":"1097","endLine":136,"endColumn":89},{"ruleId":"1121","severity":1,"message":"1122","line":140,"column":49,"nodeType":"1097","endLine":140,"endColumn":89},{"ruleId":"1090","severity":1,"message":"1237","line":115,"column":12,"nodeType":"1092","messageId":"1093","endLine":115,"endColumn":24},{"ruleId":"1102","severity":1,"message":"1220","line":177,"column":8,"nodeType":"1104","endLine":177,"endColumn":10,"suggestions":"1238"},{"ruleId":"1121","severity":1,"message":"1122","line":383,"column":29,"nodeType":"1097","endLine":383,"endColumn":84},{"ruleId":"1121","severity":1,"message":"1122","line":390,"column":29,"nodeType":"1097","endLine":390,"endColumn":117},{"ruleId":"1090","severity":1,"message":"1239","line":19,"column":9,"nodeType":"1092","messageId":"1093","endLine":19,"endColumn":14},{"ruleId":"1152","severity":1,"message":"1153","line":71,"column":45,"nodeType":"1154","messageId":"1155","endLine":71,"endColumn":47},{"ruleId":"1152","severity":1,"message":"1153","line":72,"column":41,"nodeType":"1154","messageId":"1155","endLine":72,"endColumn":43},{"ruleId":"1152","severity":1,"message":"1153","line":100,"column":29,"nodeType":"1154","messageId":"1155","endLine":100,"endColumn":31},{"ruleId":"1102","severity":1,"message":"1240","line":253,"column":8,"nodeType":"1104","endLine":253,"endColumn":10,"suggestions":"1241"},{"ruleId":"1102","severity":1,"message":"1215","line":63,"column":8,"nodeType":"1104","endLine":63,"endColumn":55,"suggestions":"1242"},{"ruleId":"1102","severity":1,"message":"1128","line":110,"column":8,"nodeType":"1104","endLine":110,"endColumn":35,"suggestions":"1243"},{"ruleId":"1244","severity":1,"message":"1245","line":373,"column":21,"nodeType":"1092","messageId":"1246","endLine":373,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1247","line":127,"column":22,"nodeType":"1092","messageId":"1093","endLine":127,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1248","line":129,"column":19,"nodeType":"1092","messageId":"1093","endLine":129,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1249","line":139,"column":27,"nodeType":"1092","messageId":"1093","endLine":139,"endColumn":43},{"ruleId":"1102","severity":1,"message":"1250","line":68,"column":8,"nodeType":"1104","endLine":68,"endColumn":10,"suggestions":"1251"},{"ruleId":"1098","severity":1,"message":"1099","line":22,"column":64,"nodeType":"1100","endLine":22,"endColumn":81},{"ruleId":"1235","severity":1,"message":"1236","line":15,"column":37,"nodeType":"1097","endLine":16,"endColumn":55},{"ruleId":"1121","severity":1,"message":"1122","line":25,"column":49,"nodeType":"1097","endLine":26,"endColumn":84},{"ruleId":"1090","severity":1,"message":"1228","line":8,"column":5,"nodeType":"1092","messageId":"1093","endLine":8,"endColumn":43},{"ruleId":"1090","severity":1,"message":"1239","line":10,"column":9,"nodeType":"1092","messageId":"1093","endLine":10,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1218","line":7,"column":5,"nodeType":"1092","messageId":"1093","endLine":7,"endColumn":41},{"ruleId":"1090","severity":1,"message":"1252","line":6,"column":5,"nodeType":"1092","messageId":"1093","endLine":6,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1253","line":11,"column":9,"nodeType":"1092","messageId":"1093","endLine":11,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1254","line":46,"column":12,"nodeType":"1092","messageId":"1093","endLine":46,"endColumn":19},{"ruleId":"1090","severity":1,"message":"1255","line":46,"column":21,"nodeType":"1092","messageId":"1093","endLine":46,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1256","line":53,"column":12,"nodeType":"1092","messageId":"1093","endLine":53,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1257","line":53,"column":20,"nodeType":"1092","messageId":"1093","endLine":53,"endColumn":29},{"ruleId":"1235","severity":1,"message":"1236","line":58,"column":80,"nodeType":"1097","endLine":60,"endColumn":42},{"ruleId":"1207","severity":1,"message":"1208","line":104,"column":52,"nodeType":"1209","messageId":"1210","endLine":104,"endColumn":53},{"ruleId":"1121","severity":1,"message":"1122","line":136,"column":33,"nodeType":"1097","endLine":136,"endColumn":101},{"ruleId":"1121","severity":1,"message":"1122","line":145,"column":33,"nodeType":"1097","endLine":145,"endColumn":86},{"ruleId":"1090","severity":1,"message":"1237","line":68,"column":12,"nodeType":"1092","messageId":"1093","endLine":68,"endColumn":24},{"ruleId":"1102","severity":1,"message":"1258","line":93,"column":8,"nodeType":"1104","endLine":93,"endColumn":10,"suggestions":"1259"},{"ruleId":"1090","severity":1,"message":"1260","line":4,"column":9,"nodeType":"1092","messageId":"1093","endLine":4,"endColumn":25},{"ruleId":"1102","severity":1,"message":"1250","line":70,"column":8,"nodeType":"1104","endLine":70,"endColumn":10,"suggestions":"1261"},{"ruleId":"1102","severity":1,"message":"1262","line":93,"column":8,"nodeType":"1104","endLine":93,"endColumn":10,"suggestions":"1263"},{"ruleId":"1102","severity":1,"message":"1262","line":149,"column":8,"nodeType":"1104","endLine":149,"endColumn":10,"suggestions":"1264"},{"ruleId":"1102","severity":1,"message":"1191","line":83,"column":8,"nodeType":"1104","endLine":83,"endColumn":10,"suggestions":"1265"},{"ruleId":"1102","severity":1,"message":"1266","line":20,"column":11,"nodeType":"1267","endLine":74,"endColumn":6},{"ruleId":"1121","severity":1,"message":"1122","line":92,"column":33,"nodeType":"1097","endLine":92,"endColumn":88},{"ruleId":"1121","severity":1,"message":"1122","line":95,"column":33,"nodeType":"1097","endLine":95,"endColumn":121},{"ruleId":"1121","severity":1,"message":"1122","line":83,"column":33,"nodeType":"1097","endLine":83,"endColumn":88},{"ruleId":"1121","severity":1,"message":"1122","line":86,"column":33,"nodeType":"1097","endLine":86,"endColumn":121},{"ruleId":"1102","severity":1,"message":"1159","line":49,"column":8,"nodeType":"1104","endLine":49,"endColumn":10,"suggestions":"1268"},{"ruleId":"1102","severity":1,"message":"1159","line":53,"column":7,"nodeType":"1104","endLine":53,"endColumn":9,"suggestions":"1269"},{"ruleId":"1102","severity":1,"message":"1270","line":78,"column":8,"nodeType":"1104","endLine":78,"endColumn":42,"suggestions":"1271"},{"ruleId":"1121","severity":1,"message":"1122","line":137,"column":33,"nodeType":"1097","endLine":137,"endColumn":88},{"ruleId":"1121","severity":1,"message":"1122","line":140,"column":33,"nodeType":"1097","endLine":140,"endColumn":121},{"ruleId":"1102","severity":1,"message":"1159","line":49,"column":8,"nodeType":"1104","endLine":49,"endColumn":10,"suggestions":"1272"},{"ruleId":"1152","severity":1,"message":"1153","line":32,"column":26,"nodeType":"1154","messageId":"1155","endLine":32,"endColumn":28},{"ruleId":"1102","severity":1,"message":"1156","line":61,"column":8,"nodeType":"1104","endLine":61,"endColumn":10,"suggestions":"1273"},{"ruleId":"1207","severity":1,"message":"1208","line":239,"column":103,"nodeType":"1209","messageId":"1210","endLine":239,"endColumn":104},{"ruleId":"1090","severity":1,"message":"1189","line":3,"column":9,"nodeType":"1092","messageId":"1093","endLine":3,"endColumn":18},{"ruleId":"1102","severity":1,"message":"1139","line":54,"column":8,"nodeType":"1104","endLine":54,"endColumn":55,"suggestions":"1274"},{"ruleId":"1102","severity":1,"message":"1139","line":53,"column":8,"nodeType":"1104","endLine":53,"endColumn":55,"suggestions":"1275"},{"ruleId":"1090","severity":1,"message":"1276","line":52,"column":11,"nodeType":"1092","messageId":"1093","endLine":52,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1277","line":62,"column":11,"nodeType":"1092","messageId":"1093","endLine":62,"endColumn":22},{"ruleId":"1235","severity":1,"message":"1236","line":146,"column":53,"nodeType":"1097","endLine":147,"endColumn":71},{"ruleId":"1121","severity":1,"message":"1122","line":156,"column":65,"nodeType":"1097","endLine":157,"endColumn":100},{"ruleId":"1098","severity":1,"message":"1099","line":310,"column":80,"nodeType":"1100","endLine":310,"endColumn":97},"no-native-reassign",["1278"],"no-negated-in-lhs",["1279"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'mounted' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'RuleEditPage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'EventNotification'. Either exclude it or remove the dependency array. Outer scope values like 'EventNotification' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["1280"],"React Hook useCallback has an unnecessary dependency: 'RelaunchNotification'. Either exclude it or remove the dependency array. Outer scope values like 'RelaunchNotification' aren't valid dependencies because mutating them doesn't re-render the component.",["1281"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["1282"],"React Hook useEffect has missing dependencies: 'fetchData' and 'props.user'. Either include them or remove the dependency array.",["1283"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["1284"],["1285"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'seeHistorique' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","React Hook useEffect has a missing dependency: 'editfaqid'. Either include it or remove the dependency array.",["1286"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'InfirmationTable' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1287"],"React Hook useEffect has an unnecessary dependency: 'appConfig.apiDomaine'. Either exclude it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1288"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["1289"],"React Hook useEffect has missing dependencies: 'endPoint.list' and 'id'. Either include them or remove the dependency array.",["1290"],"React Hook useEffect has a missing dependency: 'editcategoryid'. Either include it or remove the dependency array.",["1291"],"React Hook useEffect has a missing dependency: 'edittypeid'. Either include it or remove the dependency array.",["1292"],["1293"],["1294"],"'loadScript' is defined but never used.","React Hook useEffect has unnecessary dependencies: 'NUMBER_ELEMENT_PER_PAGE' and 'appConfig.apiDomaine'. Either exclude them or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1295"],"react/jsx-no-duplicate-props","No duplicate props allowed",["1296"],["1297"],"React Hook useEffect has missing dependencies: 'endPoint.edit' and 'id'. Either include them or remove the dependency array.",["1298"],["1299"],"React Hook useEffect has a missing dependency: 'filterCurrency'. Either include it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1300"],["1301"],["1302"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'id' and 'initialState'. Either include them or remove the dependency array.",["1303"],["1304"],"React Hook useEffect has a missing dependency: 'numberPerPage'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1305"],"'deleteCategoryFaqs' is assigned a value but never used.",["1306"],"React Hook useEffect has a missing dependency: 'numberPerPage'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberPage' needs the current value of 'numberPerPage'.",["1307"],"React Hook useEffect has missing dependencies: 'endPoint.list' and 'numberPerPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1308"],["1309"],["1310"],["1311"],["1312"],"'deleteFaqs' is assigned a value but never used.",["1313"],["1314"],"React Hook useEffect has an unnecessary dependency: 'NUMBER_ELEMENT_PER_PAGE'. Either exclude it or remove the dependency array. Outer scope values like 'NUMBER_ELEMENT_PER_PAGE' aren't valid dependencies because mutating them doesn't re-render the component.",["1315"],["1316"],"'Link' is defined but never used.",["1317"],["1318"],["1319"],["1320"],"React Hook useEffect has missing dependencies: 'numberPerPage' and 'props.plan'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberPage' needs the current value of 'numberPerPage'.",["1321"],["1322"],"'ExportButton' is defined but never used.",["1323"],["1324"],["1325"],"'ERROR_401' is defined but never used.",["1326"],"React Hook useEffect has a missing dependency: 'props.userPermissions'. Either include it or remove the dependency array.",["1327"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator",["1328"],["1329"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["1330"],["1331"],"'deleteInstitution' is assigned a value but never used.",["1332"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1333"],"React Hook useEffect has missing dependencies: 'id' and 'numberPerPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1334"],"React Hook useEffect has a missing dependency: 'props.userPermissions'. Either include it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1335"],["1336"],"'toastErrorMessageWithParameterConfig' is defined but never used.","'setError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'endPoint', 'id', and 'props.userPermissions'. Either include them or remove the dependency array.",["1337"],"React Hook useEffect has missing dependencies: 'id' and 'props.userPermissions'. Either include them or remove the dependency array.",["1338"],["1339"],"'useState' is defined but never used.","'axios' is defined but never used.","'ToastBottomEnd' is defined but never used.","'toastSuccessMessageWithParameterConfig' is defined but never used.","'InputRequire' is defined but never used.","'search' is assigned a value but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'Switch' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'disableInput' is assigned a value but never used.",["1340"],"'debug' is defined but never used.","React Hook useEffect has missing dependencies: 'applyPossibleFilter', 'endpoint', and 'renderChart'. Either include them or remove the dependency array.",["1341"],["1342"],["1343"],"no-redeclare","'endpoint' is already defined.","redeclared","'setAccounts' is assigned a value but never used.","'setUnits' is assigned a value but never used.","'setDisabledInput' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'defaultData'. Either include it or remove the dependency array.",["1344"],"'toastAddErrorMessageConfig' is defined but never used.","'formatInstitutions' is defined but never used.","'clients' is assigned a value but never used.","'setClients' is assigned a value but never used.","'client' is assigned a value but never used.","'setClient' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'endPoint.list' and 'props.userPermissions'. Either include them or remove the dependency array.",["1345"],"'verifyPermission' is defined but never used.",["1346"],"React Hook useEffect has missing dependencies: 'defaultData' and 'props.userPermissions'. Either include them or remove the dependency array.",["1347"],["1348"],["1349"],"The 'defaultData' object makes the dependencies of useEffect Hook (at line 130) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'defaultData' in its own useMemo() Hook.","VariableDeclarator",["1350"],["1351"],"React Hook useEffect has missing dependencies: 'defaultData', 'id', and 'props.userPermissions'. Either include them or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1352"],["1353"],["1354"],["1355"],["1356"],"'onClickPrevious' is assigned a value but never used.","'onClickNext' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1357","fix":"1358"},{"desc":"1357","fix":"1359"},{"desc":"1360","fix":"1361"},{"desc":"1362","fix":"1363"},{"desc":"1364","fix":"1365"},{"desc":"1364","fix":"1366"},{"desc":"1367","fix":"1368"},{"desc":"1369","fix":"1370"},{"desc":"1369","fix":"1371"},{"desc":"1372","fix":"1373"},{"desc":"1374","fix":"1375"},{"desc":"1376","fix":"1377"},{"desc":"1378","fix":"1379"},{"desc":"1369","fix":"1380"},{"desc":"1369","fix":"1381"},{"desc":"1357","fix":"1382"},{"desc":"1357","fix":"1383"},{"desc":"1369","fix":"1384"},{"desc":"1385","fix":"1386"},{"desc":"1369","fix":"1387"},{"desc":"1388","fix":"1389"},{"desc":"1369","fix":"1390"},{"desc":"1369","fix":"1391"},{"desc":"1392","fix":"1393"},{"desc":"1357","fix":"1394"},{"desc":"1395","fix":"1396"},{"desc":"1369","fix":"1397"},{"desc":"1395","fix":"1398"},{"desc":"1399","fix":"1400"},{"desc":"1357","fix":"1401"},{"desc":"1357","fix":"1402"},{"desc":"1357","fix":"1403"},{"desc":"1395","fix":"1404"},{"desc":"1395","fix":"1405"},{"desc":"1395","fix":"1406"},{"desc":"1407","fix":"1408"},{"desc":"1369","fix":"1409"},{"desc":"1357","fix":"1410"},{"desc":"1357","fix":"1411"},{"desc":"1395","fix":"1412"},{"desc":"1395","fix":"1413"},{"desc":"1414","fix":"1415"},{"desc":"1399","fix":"1416"},{"desc":"1395","fix":"1417"},{"desc":"1399","fix":"1418"},{"desc":"1357","fix":"1419"},{"desc":"1374","fix":"1420"},{"desc":"1421","fix":"1422"},{"desc":"1399","fix":"1423"},{"desc":"1407","fix":"1424"},{"desc":"1357","fix":"1425"},{"desc":"1395","fix":"1426"},{"desc":"1399","fix":"1427"},{"desc":"1428","fix":"1429"},{"desc":"1430","fix":"1431"},{"desc":"1432","fix":"1433"},{"desc":"1407","fix":"1434"},{"desc":"1435","fix":"1436"},{"desc":"1421","fix":"1437"},{"desc":"1432","fix":"1438"},{"desc":"1435","fix":"1439"},{"desc":"1440","fix":"1441"},{"desc":"1442","fix":"1443"},{"desc":"1444","fix":"1445"},{"desc":"1446","fix":"1447"},{"desc":"1448","fix":"1449"},{"desc":"1446","fix":"1450"},{"desc":"1451","fix":"1452"},{"desc":"1451","fix":"1453"},{"desc":"1442","fix":"1454"},{"desc":"1395","fix":"1455"},{"desc":"1395","fix":"1456"},{"desc":"1457","fix":"1458"},{"desc":"1395","fix":"1459"},{"desc":"1392","fix":"1460"},{"desc":"1357","fix":"1461"},{"desc":"1357","fix":"1462"},"Update the dependencies array to be: []",{"range":"1463","text":"1464"},{"range":"1465","text":"1464"},"Update the dependencies array to be: [fetchData]",{"range":"1466","text":"1467"},"Update the dependencies array to be: [fetchData, props.user, props.user.identite]",{"range":"1468","text":"1469"},"Update the dependencies array to be: [props]",{"range":"1470","text":"1471"},{"range":"1472","text":"1471"},"Update the dependencies array to be: [editfaqid]",{"range":"1473","text":"1474"},"Update the dependencies array to be: [id]",{"range":"1475","text":"1476"},{"range":"1477","text":"1476"},"Update the dependencies array to be: [data]",{"range":"1478","text":"1479"},"Update the dependencies array to be: [endPoint.list, id]",{"range":"1480","text":"1481"},"Update the dependencies array to be: [editcategoryid]",{"range":"1482","text":"1483"},"Update the dependencies array to be: [edittypeid]",{"range":"1484","text":"1485"},{"range":"1486","text":"1476"},{"range":"1487","text":"1476"},{"range":"1488","text":"1464"},{"range":"1489","text":"1464"},{"range":"1490","text":"1476"},"Update the dependencies array to be: [endPoint.edit, id]",{"range":"1491","text":"1492"},{"range":"1493","text":"1476"},"Update the dependencies array to be: [filterCurrency, id]",{"range":"1494","text":"1495"},{"range":"1496","text":"1476"},{"range":"1497","text":"1476"},"Update the dependencies array to be: [id, initialState]",{"range":"1498","text":"1499"},{"range":"1500","text":"1464"},"Update the dependencies array to be: [numberPerPage]",{"range":"1501","text":"1502"},{"range":"1503","text":"1476"},{"range":"1504","text":"1502"},"Update the dependencies array to be: [endPoint.list, numberPerPage]",{"range":"1505","text":"1506"},{"range":"1507","text":"1464"},{"range":"1508","text":"1464"},{"range":"1509","text":"1464"},{"range":"1510","text":"1502"},{"range":"1511","text":"1502"},{"range":"1512","text":"1502"},"Update the dependencies array to be: [endPoint.list]",{"range":"1513","text":"1514"},{"range":"1515","text":"1476"},{"range":"1516","text":"1464"},{"range":"1517","text":"1464"},{"range":"1518","text":"1502"},{"range":"1519","text":"1502"},"Update the dependencies array to be: [numberPerPage, props.plan]",{"range":"1520","text":"1521"},{"range":"1522","text":"1506"},{"range":"1523","text":"1502"},{"range":"1524","text":"1506"},{"range":"1525","text":"1464"},{"range":"1526","text":"1481"},"Update the dependencies array to be: [id, props.userPermissions]",{"range":"1527","text":"1528"},{"range":"1529","text":"1506"},{"range":"1530","text":"1514"},{"range":"1531","text":"1464"},{"range":"1532","text":"1502"},{"range":"1533","text":"1506"},"Update the dependencies array to be: [id, props]",{"range":"1534","text":"1535"},"Update the dependencies array to be: [id, numberPerPage]",{"range":"1536","text":"1537"},"Update the dependencies array to be: [props.plan, props.userPermissions]",{"range":"1538","text":"1539"},{"range":"1540","text":"1514"},"Update the dependencies array to be: [endPoint, id, props.userPermissions]",{"range":"1541","text":"1542"},{"range":"1543","text":"1528"},{"range":"1544","text":"1539"},{"range":"1545","text":"1542"},"Update the dependencies array to be: [applyPossibleFilter, endpoint, renderChart]",{"range":"1546","text":"1547"},"Update the dependencies array to be: [props.userPermissions]",{"range":"1548","text":"1549"},"Update the dependencies array to be: [data, id, props.userPermissions]",{"range":"1550","text":"1551"},"Update the dependencies array to be: [defaultData]",{"range":"1552","text":"1553"},"Update the dependencies array to be: [endPoint.list, props.userPermissions]",{"range":"1554","text":"1555"},{"range":"1556","text":"1553"},"Update the dependencies array to be: [defaultData, props.userPermissions]",{"range":"1557","text":"1558"},{"range":"1559","text":"1558"},{"range":"1560","text":"1549"},{"range":"1561","text":"1502"},{"range":"1562","text":"1502"},"Update the dependencies array to be: [props.plan, props.userPermissions, id, defaultData]",{"range":"1563","text":"1564"},{"range":"1565","text":"1502"},{"range":"1566","text":"1499"},{"range":"1567","text":"1464"},{"range":"1568","text":"1464"},[1629,1648],"[]",[1859,1881],[2447,2449],"[fetchData]",[3219,3240],"[fetchData, props.user, props.user.identite]",[3370,3392],"[props]",[3510,3528],[2413,2415],"[editfaqid]",[1732,1734],"[id]",[1936,1962],[1528,1530],"[data]",[2823,2825],"[endPoint.list, id]",[1919,1921],"[editcategoryid]",[1889,1891],"[edittypeid]",[1900,1926],[2121,2147],[2495,2542],[2628,2650],[1923,1925],[2934,2936],"[endPoint.edit, id]",[3171,3197],[2731,2757],"[filterCurrency, id]",[1917,1919],[3142,3168],[4141,4143],"[id, initialState]",[2436,2483],[2424,2426],"[numberPerPage]",[2451,2477],[2095,2097],[3061,3063],"[endPoint.list, numberPerPage]",[2294,2341],[2487,2534],[2402,2449],[2359,2361],[2413,2415],[2389,2391],[2888,2928],"[endPoint.list]",[4154,4156],[2424,2471],[2387,2434],[2969,2971],[2245,2247],[2578,2580],"[numberPerPage, props.plan]",[2976,2978],[2415,2417],[3293,3295],[2350,2397],[4116,4118],[3231,3235],"[id, props.userPermissions]",[3651,3653],[3625,3665],[2318,2365],[2398,2400],[3583,3585],[4274,4276],"[id, props]",[2610,2612],"[id, numberPerPage]",[2999,3058],"[props.plan, props.userPermissions]",[3694,3734],[4258,4260],"[endPoint, id, props.userPermissions]",[3769,3771],[3545,3579],[8360,8362],[9639,9641],"[applyPossibleFilter, endpoint, renderChart]",[2821,2868],"[props.userPermissions]",[5596,5623],"[data, id, props.userPermissions]",[2251,2253],"[defaultData]",[3118,3120],"[endPoint.list, props.userPermissions]",[2499,2501],[3154,3156],"[defaultData, props.userPermissions]",[5738,5740],[2677,2679],[2068,2070],[2119,2121],[3192,3226],"[props.plan, props.userPermissions, id, defaultData]",[2069,2071],[2111,2113],[2332,2379],[2355,2402]]
=======
[{"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\index.js":"1","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\serviceWorker.js":"2","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\AppContainer.js":"3","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\IdentityReducer.js":"4","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\authReducer.js":"5","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\languageReducer.js":"6","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\planReducer.js":"7","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\treatmentReducer.js":"8","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\yearReducer.js":"9","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\NatureAppChoice.js":"10","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\routeApp.js":"11","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\appConfig.js":"12","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\planAction.js":"13","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\yearAction.js":"14","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\token.js":"15","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\IdentityAction.js":"16","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\authActions.js":"17","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\languageAction.js":"18","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\treatmentAction.js":"19","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\function.js":"20","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Loader.jsx":"21","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\confirmConfig.js":"22","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ConfirmationAlert.js":"23","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\modules\\login\\views\\Pages\\LoginPage.jsx":"24","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\permission.js":"25","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\channel.js":"26","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\userClient.js":"27","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\layouts\\App.jsx":"28","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Toast.js":"29","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\toastConfig.js":"30","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\HeaderMobile.jsx":"31","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Footer.jsx":"32","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Nav.jsx":"33","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Body.jsx":"34","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Aside.jsx":"35","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Error401.jsx":"36","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FaqsForm.jsx":"37","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\notification.js":"38","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\middleware\\verifyToken.js":"39","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\EmptyNotification.jsx":"40","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Mail.jsx":"41","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\PerformanceIndicator.jsx":"42","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Unit.jsx":"43","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Staff.jsx":"44","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\UnitType.jsx":"45","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimCategory.jsx":"46","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimObject.jsx":"47","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\FAQs.jsx":"48","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\CategoryFAQs.jsx":"49","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Position.jsx":"50","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\FAQsPage.jsx":"51","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CategoryFaqsForm.jsx":"52","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\TypeClientForm.jsx":"53","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\TypeClient.jsx":"54","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Institution.jsx":"55","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\CategoryClient.jsx":"56","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CategoryClientForm.jsx":"57","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Clients.jsx":"58","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\SeverityLevel.jsx":"59","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\UnitForm.jsx":"60","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\PerformanceIndicatorForm.jsx":"61","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\UnitTypeForm.jsx":"62","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\SeverityLevelForm.jsx":"63","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimCategoryForm.jsx":"64","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\PositionForm.jsx":"65","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimObjectForm.jsx":"66","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Currency.jsx":"67","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CurrencyForm.jsx":"68","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Channel.jsx":"69","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAdd.jsx":"70","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ChannelForm.jsx":"71","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RelationShip.jsx":"72","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigRequirements.jsx":"73","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\RelationShipForm.jsx":"74","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\IncompleteClaims.jsx":"75","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssign.jsx":"76","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigProcessingCircuit.jsx":"77","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssignDetail.jsx":"78","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\IncompleteClaimsEdit.jsx":"79","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssignToStaff.jsx":"80","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimList.jsx":"81","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimToValidatedList.jsx":"82","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimMonitoring.jsx":"83","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\SatisfactionMeasure.jsx":"84","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReporting.jsx":"85","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Dashboards.jsx":"86","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimsArchived.jsx":"87","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigNotification.jsx":"88","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\PercentageMinFusion.jsx":"89","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RejectLimitPage.jsx":"90","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RecurencePage.jsx":"91","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimImportPage.jsx":"92","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ProfilePage.jsx":"93","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RuleEditPage.jsx":"94","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RuleAddPage.jsx":"95","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RulePage.jsx":"96","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ActivatePilotPage.jsx":"97","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimCategoryImportPage.jsx":"98","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\StaffImportPage.jsx":"99","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimObjectImportPage.jsx":"100","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\HistoricClaimsTraetment.jsx":"101","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\HistoricClaimsAdd.jsx":"102","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ConfigCoefficient.jsx":"103","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\UserEdit.jsx":"104","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ParametersComponentEdit.jsx":"105","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Clients\\ImportClientForm.jsx":"106","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\staff\\StaffForm.jsx":"107","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Clients\\ClientForm.jsx":"108","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Institutions\\InstitutionForm.jsx":"109","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Institutions\\ImportInstitutionForm.jsx":"110","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ParametersComponent.jsx":"111","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\TreatmentPeriodAdd.jsx":"112","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\APP_MACRO\\Holding\\HoldingClientForm.jsx":"113","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\APP_MACRO\\Filiale\\FilialeInstitutionForm.jsx":"114","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\QualificationPeriodAdd.jsx":"115","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\TreatmentPeriod.jsx":"116","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\UserAdd.jsx":"117","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\QualificationPeriod.jsx":"118","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\User.jsx":"119","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\errorPage.js":"120","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FaqListe.jsx":"121","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\dataTable.js":"122","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\date.js":"123","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimsArchivedDetail.jsx":"124","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimToValidatedListDetail.jsx":"125","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\SatisfactionMeasureDetail.jsx":"126","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\InputRequire.jsx":"127","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ExportButton.jsx":"128","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\InfirmationTable.jsx":"129","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\WithoutCode.jsx":"130","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\UnfoundedModal.jsx":"131","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Pagination.jsx":"132","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ImportFileForm.jsx":"133","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\DetailModal.jsx":"134","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\ClaimToPointOfServices.jsx":"135","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\profile\\UpdatePassword.jsx":"136","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\HeaderTablePage.jsx":"137","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\EmptyTable.jsx":"138","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\LoadingTable.jsx":"139","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\PeriodForm.jsx":"140","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\institution.js":"141","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\unit.js":"142","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Clients\\ConfirmClientSaveForm.jsx":"143","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\currencyContry.js":"144","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\IdentityForm.jsx":"145","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\staff\\ConfirmSaveForm.jsx":"146","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\profile\\PersonalInfo.jsx":"147","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\ClaimToInstitution.jsx":"148","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\GraphChannel.jsx":"149","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsActivity.jsx":"150","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardStatClaim.jsx":"151","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardStatistic.jsx":"152","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsUnit.jsx":"153","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardSummaryReport.jsx":"154","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\APP_MACRO\\Holding\\DashboardClaimsAll.jsx":"155","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsMy.jsx":"156","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToValidate.jsx":"157","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToMeasure.jsx":"158","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DoubleButtonDetail.jsx":"159","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToAssignStaff.jsx":"160","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToAssignUnit.jsx":"161","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToComplete.jsx":"162","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\AttachmentsButtonDetail.jsx":"163","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DoubleButton.jsx":"164","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimButtonDetail.jsx":"165","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimButton.jsx":"166","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\AttachmentsButton.jsx":"167","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClientButtonDetail.jsx":"168","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClientButton.jsx":"169","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FusionClaim.jsx":"170","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToTreat.jsx":"171","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Modal\\ConfirmClaimAddModal.jsx":"172","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssignToStaffDetail.jsx":"173","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ConfigRapportAutoForm.jsx":"174","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\InstitutionMessageApi.jsx":"175","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\MessageAPIForm.jsx":"176","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimListDetail.jsx":"177","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\MessageApi.jsx":"178","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\StaffChannels.jsx":"179","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigRapportAuto.jsx":"180","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\Participants.jsx":"181","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\RemoveChats.jsx":"182","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\AddMemberForm.jsx":"183","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\AddChatsForm.jsx":"184","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\TreatmentButtonDetail.jsx":"185","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\Chats.jsx":"186","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ReasonSatisfaction.jsx":"187","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ClaimDetails.jsx":"188","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ReasonModal.jsx":"189","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FormInformation.jsx":"190","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\MessageList.js":"191","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\KanbanElementDetail.jsx":"192","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\TreatmentForm.jsx":"193","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\Message.js":"194","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimDetail.jsx":"195","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CompleteAttachment.jsx":"196","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\modules\\login\\views\\Pages\\ForgotForm.jsx":"197","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\modules\\login\\views\\Pages\\ReinitialisationForm.jsx":"198","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReassignDetail.jsx":"199","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\RelaunchModal.jsx":"200","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReassign.jsx":"201","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReportingUemoaThree.jsx":"202","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReportingUemoaFour.jsx":"203","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReportingUemoaOne.jsx":"204","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReportingUemoaTwo.jsx":"205","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\InfoFormatExcel.js":"206"},{"size":1122,"mtime":1611911976102,"results":"207","hashOfConfig":"208"},{"size":5226,"mtime":1611911976104,"results":"209","hashOfConfig":"208"},{"size":2609,"mtime":1611934467670,"results":"210","hashOfConfig":"208"},{"size":885,"mtime":1611911976110,"results":"211","hashOfConfig":"208"},{"size":886,"mtime":1611911976111,"results":"212","hashOfConfig":"208"},{"size":693,"mtime":1611911976111,"results":"213","hashOfConfig":"208"},{"size":590,"mtime":1611911976122,"results":"214","hashOfConfig":"208"},{"size":664,"mtime":1611911976123,"results":"215","hashOfConfig":"208"},{"size":376,"mtime":1611911976124,"results":"216","hashOfConfig":"208"},{"size":6833,"mtime":1611911976041,"results":"217","hashOfConfig":"208"},{"size":1054,"mtime":1611911976104,"results":"218","hashOfConfig":"208"},{"size":380,"mtime":1616405838651,"results":"219","hashOfConfig":"208"},{"size":260,"mtime":1611911976109,"results":"220","hashOfConfig":"208"},{"size":124,"mtime":1611911976110,"results":"221","hashOfConfig":"208"},{"size":70,"mtime":1611911976084,"results":"222","hashOfConfig":"208"},{"size":136,"mtime":1611911976105,"results":"223","hashOfConfig":"208"},{"size":242,"mtime":1611911976106,"results":"224","hashOfConfig":"208"},{"size":163,"mtime":1611911976106,"results":"225","hashOfConfig":"208"},{"size":140,"mtime":1611911976109,"results":"226","hashOfConfig":"208"},{"size":17901,"mtime":1617005326382,"results":"227","hashOfConfig":"208"},{"size":362,"mtime":1611911976219,"results":"228","hashOfConfig":"208"},{"size":2785,"mtime":1612890658706,"results":"229","hashOfConfig":"208"},{"size":341,"mtime":1611911976159,"results":"230","hashOfConfig":"208"},{"size":27346,"mtime":1616404751658,"results":"231","hashOfConfig":"208"},{"size":224,"mtime":1611911976086,"results":"232","hashOfConfig":"208"},{"size":912,"mtime":1611911976073,"results":"233","hashOfConfig":"208"},{"size":711,"mtime":1611911976084,"results":"234","hashOfConfig":"208"},{"size":2438,"mtime":1611911976403,"results":"235","hashOfConfig":"208"},{"size":651,"mtime":1611911976288,"results":"236","hashOfConfig":"208"},{"size":6078,"mtime":1611911976072,"results":"237","hashOfConfig":"208"},{"size":832,"mtime":1611911976402,"results":"238","hashOfConfig":"208"},{"size":604,"mtime":1611911976401,"results":"239","hashOfConfig":"208"},{"size":30680,"mtime":1615818422002,"results":"240","hashOfConfig":"208"},{"size":21871,"mtime":1616664754344,"results":"241","hashOfConfig":"208"},{"size":68909,"mtime":1613469181974,"results":"242","hashOfConfig":"208"},{"size":1300,"mtime":1611911976436,"results":"243","hashOfConfig":"208"},{"size":19148,"mtime":1613400834521,"results":"244","hashOfConfig":"208"},{"size":2724,"mtime":1613469406417,"results":"245","hashOfConfig":"208"},{"size":254,"mtime":1611911976102,"results":"246","hashOfConfig":"208"},{"size":548,"mtime":1611911976196,"results":"247","hashOfConfig":"208"},{"size":20823,"mtime":1611911976440,"results":"248","hashOfConfig":"208"},{"size":18834,"mtime":1611911976442,"results":"249","hashOfConfig":"208"},{"size":22040,"mtime":1613661014389,"results":"250","hashOfConfig":"208"},{"size":24432,"mtime":1611911976493,"results":"251","hashOfConfig":"208"},{"size":19259,"mtime":1611911976511,"results":"252","hashOfConfig":"208"},{"size":17289,"mtime":1615891970213,"results":"253","hashOfConfig":"208"},{"size":21100,"mtime":1611911976413,"results":"254","hashOfConfig":"208"},{"size":18123,"mtime":1611911976436,"results":"255","hashOfConfig":"208"},{"size":16842,"mtime":1611911976406,"results":"256","hashOfConfig":"208"},{"size":16732,"mtime":1611911976443,"results":"257","hashOfConfig":"208"},{"size":1939,"mtime":1611911976437,"results":"258","hashOfConfig":"208"},{"size":10300,"mtime":1613043257892,"results":"259","hashOfConfig":"208"},{"size":15755,"mtime":1611911976289,"results":"260","hashOfConfig":"208"},{"size":18431,"mtime":1611911976510,"results":"261","hashOfConfig":"208"},{"size":22076,"mtime":1615819895763,"results":"262","hashOfConfig":"208"},{"size":19241,"mtime":1611911976405,"results":"263","hashOfConfig":"208"},{"size":15591,"mtime":1614164159808,"results":"264","hashOfConfig":"208"},{"size":23384,"mtime":1613124949249,"results":"265","hashOfConfig":"208"},{"size":19529,"mtime":1611911976493,"results":"266","hashOfConfig":"208"},{"size":23794,"mtime":1613141863086,"results":"267","hashOfConfig":"208"},{"size":17299,"mtime":1611911976268,"results":"268","hashOfConfig":"208"},{"size":16714,"mtime":1611911976302,"results":"269","hashOfConfig":"208"},{"size":16498,"mtime":1611911976287,"results":"270","hashOfConfig":"208"},{"size":10916,"mtime":1611911976137,"results":"271","hashOfConfig":"208"},{"size":10795,"mtime":1613141862872,"results":"272","hashOfConfig":"208"},{"size":20502,"mtime":1613143036765,"results":"273","hashOfConfig":"208"},{"size":17592,"mtime":1611911976427,"results":"274","hashOfConfig":"208"},{"size":15143,"mtime":1611911976160,"results":"275","hashOfConfig":"208"},{"size":17941,"mtime":1611911976406,"results":"276","hashOfConfig":"208"},{"size":95920,"mtime":1617033617031,"results":"277","hashOfConfig":"208"},{"size":11044,"mtime":1611911976135,"results":"278","hashOfConfig":"208"},{"size":17602,"mtime":1611911976489,"results":"279","hashOfConfig":"208"},{"size":19984,"mtime":1616680542097,"results":"280","hashOfConfig":"208"},{"size":15981,"mtime":1611911976287,"results":"281","hashOfConfig":"208"},{"size":22540,"mtime":1615893247177,"results":"282","hashOfConfig":"208"},{"size":19170,"mtime":1616406526084,"results":"283","hashOfConfig":"208"},{"size":27538,"mtime":1611911976425,"results":"284","hashOfConfig":"208"},{"size":26687,"mtime":1612343957377,"results":"285","hashOfConfig":"208"},{"size":79964,"mtime":1617037452216,"results":"286","hashOfConfig":"208"},{"size":18793,"mtime":1612343957411,"results":"287","hashOfConfig":"208"},{"size":18925,"mtime":1612343957479,"results":"288","hashOfConfig":"208"},{"size":19385,"mtime":1612343957513,"results":"289","hashOfConfig":"208"},{"size":30376,"mtime":1613477195433,"results":"290","hashOfConfig":"208"},{"size":20944,"mtime":1612343957593,"results":"291","hashOfConfig":"208"},{"size":51031,"mtime":1615911574800,"results":"292","hashOfConfig":"208"},{"size":10119,"mtime":1613661014329,"results":"293","hashOfConfig":"208"},{"size":21150,"mtime":1611913997429,"results":"294","hashOfConfig":"208"},{"size":10626,"mtime":1613469406449,"results":"295","hashOfConfig":"208"},{"size":8321,"mtime":1611911976442,"results":"296","hashOfConfig":"208"},{"size":8334,"mtime":1611911976489,"results":"297","hashOfConfig":"208"},{"size":10326,"mtime":1611911976488,"results":"298","hashOfConfig":"208"},{"size":1976,"mtime":1611911976411,"results":"299","hashOfConfig":"208"},{"size":12021,"mtime":1613641826459,"results":"300","hashOfConfig":"208"},{"size":16726,"mtime":1611911976490,"results":"301","hashOfConfig":"208"},{"size":23932,"mtime":1611911976490,"results":"302","hashOfConfig":"208"},{"size":17891,"mtime":1613125207804,"results":"303","hashOfConfig":"208"},{"size":9540,"mtime":1613641826457,"results":"304","hashOfConfig":"208"},{"size":1166,"mtime":1611911976411,"results":"305","hashOfConfig":"208"},{"size":14853,"mtime":1611911976508,"results":"306","hashOfConfig":"208"},{"size":1157,"mtime":1617005326413,"results":"307","hashOfConfig":"208"},{"size":19050,"mtime":1613404217040,"results":"308","hashOfConfig":"208"},{"size":18734,"mtime":1613404229343,"results":"309","hashOfConfig":"208"},{"size":9130,"mtime":1613040027693,"results":"310","hashOfConfig":"208"},{"size":15235,"mtime":1613128475872,"results":"311","hashOfConfig":"208"},{"size":17516,"mtime":1616690437386,"results":"312","hashOfConfig":"208"},{"size":16456,"mtime":1611911976157,"results":"313","hashOfConfig":"208"},{"size":41304,"mtime":1611911976347,"results":"314","hashOfConfig":"208"},{"size":21331,"mtime":1613055317188,"results":"315","hashOfConfig":"208"},{"size":29450,"mtime":1613641985966,"results":"316","hashOfConfig":"208"},{"size":9236,"mtime":1611911976205,"results":"317","hashOfConfig":"208"},{"size":15227,"mtime":1615891614574,"results":"318","hashOfConfig":"208"},{"size":10765,"mtime":1611911976510,"results":"319","hashOfConfig":"208"},{"size":47137,"mtime":1613120286582,"results":"320","hashOfConfig":"208"},{"size":21147,"mtime":1611911976010,"results":"321","hashOfConfig":"208"},{"size":10795,"mtime":1611911976445,"results":"322","hashOfConfig":"208"},{"size":17601,"mtime":1611911976509,"results":"323","hashOfConfig":"208"},{"size":25752,"mtime":1613661014435,"results":"324","hashOfConfig":"208"},{"size":17806,"mtime":1611911976444,"results":"325","hashOfConfig":"208"},{"size":21784,"mtime":1611911976512,"results":"326","hashOfConfig":"208"},{"size":158,"mtime":1611911976072,"results":"327","hashOfConfig":"208"},{"size":4067,"mtime":1611911976199,"results":"328","hashOfConfig":"208"},{"size":44,"mtime":1611911976074,"results":"329","hashOfConfig":"208"},{"size":246,"mtime":1611911976081,"results":"330","hashOfConfig":"208"},{"size":10024,"mtime":1611911976423,"results":"331","hashOfConfig":"208"},{"size":23767,"mtime":1612343957568,"results":"332","hashOfConfig":"208"},{"size":12541,"mtime":1611911976492,"results":"333","hashOfConfig":"208"},{"size":199,"mtime":1611911976204,"results":"334","hashOfConfig":"208"},{"size":1730,"mtime":1615819895604,"results":"335","hashOfConfig":"208"},{"size":727,"mtime":1611911976204,"results":"336","hashOfConfig":"208"},{"size":212,"mtime":1611911976302,"results":"337","hashOfConfig":"208"},{"size":8480,"mtime":1615366382695,"results":"338","hashOfConfig":"208"},{"size":2550,"mtime":1611911976265,"results":"339","hashOfConfig":"208"},{"size":10989,"mtime":1611911976202,"results":"340","hashOfConfig":"208"},{"size":1657,"mtime":1612773515239,"results":"341","hashOfConfig":"208"},{"size":2850,"mtime":1613661014287,"results":"342","hashOfConfig":"208"},{"size":7696,"mtime":1611911976345,"results":"343","hashOfConfig":"208"},{"size":1945,"mtime":1611911976201,"results":"344","hashOfConfig":"208"},{"size":449,"mtime":1611911976197,"results":"345","hashOfConfig":"208"},{"size":2040,"mtime":1611911976220,"results":"346","hashOfConfig":"208"},{"size":2642,"mtime":1611911976269,"results":"347","hashOfConfig":"208"},{"size":283,"mtime":1611911976086,"results":"348","hashOfConfig":"208"},{"size":277,"mtime":1611911976100,"results":"349","hashOfConfig":"208"},{"size":24805,"mtime":1611911976157,"results":"350","hashOfConfig":"208"},{"size":4116,"mtime":1611911976073,"results":"351","hashOfConfig":"208"},{"size":18338,"mtime":1611911976202,"results":"352","hashOfConfig":"208"},{"size":22812,"mtime":1611911976346,"results":"353","hashOfConfig":"208"},{"size":11455,"mtime":1611911976344,"results":"354","hashOfConfig":"208"},{"size":2785,"mtime":1613661014286,"results":"355","hashOfConfig":"208"},{"size":3734,"mtime":1613661014290,"results":"356","hashOfConfig":"208"},{"size":23380,"mtime":1613661276697,"results":"357","hashOfConfig":"208"},{"size":5198,"mtime":1613661014288,"results":"358","hashOfConfig":"208"},{"size":5860,"mtime":1613661014289,"results":"359","hashOfConfig":"208"},{"size":23281,"mtime":1613661177631,"results":"360","hashOfConfig":"208"},{"size":4615,"mtime":1613661014289,"results":"361","hashOfConfig":"208"},{"size":23743,"mtime":1613732997816,"results":"362","hashOfConfig":"208"},{"size":23547,"mtime":1613732975037,"results":"363","hashOfConfig":"208"},{"size":4016,"mtime":1613477195430,"results":"364","hashOfConfig":"208"},{"size":3180,"mtime":1613477195428,"results":"365","hashOfConfig":"208"},{"size":7979,"mtime":1612343957146,"results":"366","hashOfConfig":"208"},{"size":3741,"mtime":1613477195426,"results":"367","hashOfConfig":"208"},{"size":3541,"mtime":1613477195427,"results":"368","hashOfConfig":"208"},{"size":3182,"mtime":1613477195427,"results":"369","hashOfConfig":"208"},{"size":2516,"mtime":1612343956945,"results":"370","hashOfConfig":"208"},{"size":1121,"mtime":1611911976195,"results":"371","hashOfConfig":"208"},{"size":8833,"mtime":1615891970192,"results":"372","hashOfConfig":"208"},{"size":795,"mtime":1611911976136,"results":"373","hashOfConfig":"208"},{"size":1150,"mtime":1611911976125,"results":"374","hashOfConfig":"208"},{"size":4995,"mtime":1612343957021,"results":"375","hashOfConfig":"208"},{"size":835,"mtime":1611911976137,"results":"376","hashOfConfig":"208"},{"size":9742,"mtime":1615818421935,"results":"377","hashOfConfig":"208"},{"size":4010,"mtime":1613477195429,"results":"378","hashOfConfig":"208"},{"size":56833,"mtime":1611911976264,"results":"379","hashOfConfig":"208"},{"size":14715,"mtime":1612343957450,"results":"380","hashOfConfig":"208"},{"size":20100,"mtime":1611911976159,"results":"381","hashOfConfig":"208"},{"size":14613,"mtime":1611911976440,"results":"382","hashOfConfig":"208"},{"size":14305,"mtime":1611911976263,"results":"383","hashOfConfig":"208"},{"size":19096,"mtime":1611911976412,"results":"384","hashOfConfig":"208"},{"size":17989,"mtime":1611911976441,"results":"385","hashOfConfig":"208"},{"size":9717,"mtime":1611911976288,"results":"386","hashOfConfig":"208"},{"size":20794,"mtime":1611911976426,"results":"387","hashOfConfig":"208"},{"size":19495,"mtime":1611911976435,"results":"388","hashOfConfig":"208"},{"size":17556,"mtime":1611911976435,"results":"389","hashOfConfig":"208"},{"size":12442,"mtime":1611911976428,"results":"390","hashOfConfig":"208"},{"size":14894,"mtime":1611911976428,"results":"391","hashOfConfig":"208"},{"size":13440,"mtime":1613661014327,"results":"392","hashOfConfig":"208"},{"size":39613,"mtime":1611911976431,"results":"393","hashOfConfig":"208"},{"size":5582,"mtime":1613412113396,"results":"394","hashOfConfig":"208"},{"size":21610,"mtime":1612890658711,"results":"395","hashOfConfig":"208"},{"size":6515,"mtime":1613468989288,"results":"396","hashOfConfig":"208"},{"size":877,"mtime":1611911976200,"results":"397","hashOfConfig":"208"},{"size":2875,"mtime":1611911976434,"results":"398","hashOfConfig":"208"},{"size":4630,"mtime":1612890658715,"results":"399","hashOfConfig":"208"},{"size":10408,"mtime":1612773515104,"results":"400","hashOfConfig":"208"},{"size":6202,"mtime":1611911976433,"results":"401","hashOfConfig":"208"},{"size":11120,"mtime":1613471533035,"results":"402","hashOfConfig":"208"},{"size":3790,"mtime":1613477195412,"results":"403","hashOfConfig":"208"},{"size":3348,"mtime":1612774342212,"results":"404","hashOfConfig":"208"},{"size":8306,"mtime":1612859845032,"results":"405","hashOfConfig":"208"},{"size":15590,"mtime":1612890658734,"results":"406","hashOfConfig":"208"},{"size":3590,"mtime":1612773515071,"results":"407","hashOfConfig":"208"},{"size":18504,"mtime":1612773515430,"results":"408","hashOfConfig":"208"},{"size":60221,"mtime":1617005326436,"results":"409","hashOfConfig":"208"},{"size":35395,"mtime":1617005326414,"results":"410","hashOfConfig":"208"},{"size":60335,"mtime":1617005326416,"results":"411","hashOfConfig":"208"},{"size":60267,"mtime":1617005326438,"results":"412","hashOfConfig":"208"},{"size":1438,"mtime":1615820443289,"results":"413","hashOfConfig":"208"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},"2nkzro",{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"416"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"416"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"416"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"484","usedDeprecatedRules":"416"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"416"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"416"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"416"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"416"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"416"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"416"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"416"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"416"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"416"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"416"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"416"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"416"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"416"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"416"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"416"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"416"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"416"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"416"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"416"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"416"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"416"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"416"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"416"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"416"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"416"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"416"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"416"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"416"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"416"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"416"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"416"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"416"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"416"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"416"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"611","messages":"612","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"416"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"416"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"416"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"416"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"416"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"416"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"416"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644","usedDeprecatedRules":"416"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"416"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"416"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"416"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"416"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"416"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"416"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675","usedDeprecatedRules":"416"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678","usedDeprecatedRules":"416"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"416"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"416"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689","usedDeprecatedRules":"416"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"416"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"416"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"416"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"707","usedDeprecatedRules":"416"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"416"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"713","usedDeprecatedRules":"416"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"716","usedDeprecatedRules":"416"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727","usedDeprecatedRules":"416"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"416"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733","usedDeprecatedRules":"416"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"416"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"416"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"416"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"416"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"784","usedDeprecatedRules":"416"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"789","usedDeprecatedRules":"416"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"792","usedDeprecatedRules":"416"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"416"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798","usedDeprecatedRules":"416"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"817","usedDeprecatedRules":"416"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828","usedDeprecatedRules":"416"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"833","usedDeprecatedRules":"416"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840","usedDeprecatedRules":"416"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"843","usedDeprecatedRules":"416"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"416"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"416"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852","usedDeprecatedRules":"416"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"416"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"858","usedDeprecatedRules":"416"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"416"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"416"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867","usedDeprecatedRules":"416"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"416"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"877","usedDeprecatedRules":"416"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"882","usedDeprecatedRules":"416"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"885","usedDeprecatedRules":"416"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"896","usedDeprecatedRules":"416"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"899","usedDeprecatedRules":"416"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"902","usedDeprecatedRules":"416"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"907","usedDeprecatedRules":"416"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"910","usedDeprecatedRules":"416"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"917","usedDeprecatedRules":"416"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"920","usedDeprecatedRules":"416"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"923","usedDeprecatedRules":"416"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926","usedDeprecatedRules":"416"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\index.js",[],["929","930"],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\serviceWorker.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\AppContainer.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\IdentityReducer.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\authReducer.js",["931"],"import {LOGOUT_USER, UPDATE_USER} from \"../actions/authActions\";\r\nimport {logout} from \"../../helpers/function\";\r\n\r\nconst initialState = {\r\n    user: {},\r\n    token: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    let newState = {};\r\n    switch (action.type) {\r\n        case LOGOUT_USER:\r\n            logout();\r\n            break;\r\n        case UPDATE_USER:\r\n            newState = {\r\n                user: JSON.parse(localStorage.getItem('userData')),\r\n                staff: localStorage.getItem('staffData'),\r\n                isLogin: localStorage.getItem('isLogin'),\r\n                token: localStorage.getItem('token'),\r\n                refresh_token: localStorage.getItem('refresh_token'),\r\n                expire_in: localStorage.getItem('expire_in')\r\n            };\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\languageReducer.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\planReducer.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\treatmentReducer.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\reducers\\yearReducer.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\NatureAppChoice.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\routeApp.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\appConfig.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\planAction.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\yearAction.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\token.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\IdentityAction.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\authActions.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\languageAction.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\store\\actions\\treatmentAction.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\function.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Loader.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\confirmConfig.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ConfirmationAlert.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\modules\\login\\views\\Pages\\LoginPage.jsx",["932","933","934"],"import React, {useEffect, useState} from \"react\";\r\nimport {getToken, loadCss, loadScript} from \"../../../../helpers/function\";\r\nimport appConfig from \"../../../../config/appConfig\";\r\nimport axios from \"axios\";\r\nimport {connect} from 'react-redux';\r\nimport {ToastBottomEnd} from \"../../../../views/components/Toast\";\r\nimport {\r\n    BrowserRouter, Switch, Route, Link\r\n} from \"react-router-dom\";\r\n\r\nimport {\r\n    toastErrorMessageWithParameterConfig,\r\n    toastConnectErrorMessageConfig,\r\n    toastConnectSuccessMessageConfig,\r\n} from \"../../../../config/toastConfig\";\r\nimport {listConnectData} from \"../../../../constants/userClient\";\r\nimport Loader from \"../../../../views/components/Loader\";\r\nimport \"./LoginCss.css\"\r\nimport ForgotForm from \"./ForgotForm\";\r\nimport ReinitialisationForm from \"./ReinitialisationForm\";\r\n\r\nloadCss(\"/assets/css/pages/login/login-1.css\");\r\nloadScript(\"/assets/js/pages/custom/login/login-1.js\");\r\n\r\n\r\nconst LoginPage = (props) => {\r\n    const tokenData = getToken(window.location.href);\r\n\r\n    const defaultError = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n    const defaultData = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n    const [load, setLoad] = useState(true);\r\n    const [data, setData] = useState(defaultData);\r\n    const [componentData, setComponentData] = useState(undefined);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n\r\n        async function fetchData() {\r\n            await axios.get(appConfig.apiDomaine + \"/components/retrieve-by-name/connection\")\r\n                .then(response => {\r\n                    // console.log(response.data,\"DATA\")\r\n                    setComponentData(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        fetchData();\r\n        return () => mounted = false;\r\n    }, []);\r\n\r\n    const onChangeUserName = (e) => {\r\n        const newData = {...data};\r\n        newData.username = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        const newData = {...data};\r\n        newData.password = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onViewPassword = (e) => {\r\n        let input = document.getElementById(\"password\");\r\n        let icon = document.getElementById(\"icon\");\r\n        if (input.type === \"password\") {\r\n            input.type = \"text\";\r\n            icon.className = \"fa fa-eye\"\r\n        } else {\r\n            input.type = \"password\";\r\n            icon.className = \"fa fa-eye-slash\"\r\n        }\r\n    };\r\n\r\n    const onClickConnectButton = async (e) => {\r\n        e.preventDefault(e);\r\n        setStartRequest(true);\r\n        const formData = {\r\n            grant_type: listConnectData[props.plan].grant_type,\r\n            client_id: listConnectData[props.plan].client_id,\r\n            client_secret: listConnectData[props.plan].client_secret,\r\n            username: data.username,\r\n            password: data.password\r\n        };\r\n        await axios.post(appConfig.apiDomaine + `/oauth/token`, formData)\r\n            .then(response => {\r\n\r\n                const token = response.data.access_token;\r\n                const refresh_token = response.data.refresh_token;\r\n                const expire_in = response.data.expires_in;\r\n                axios.get(appConfig.apiDomaine + `/login`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                    }\r\n                }).then(response => {\r\n\r\n                    setError(defaultError);\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastConnectSuccessMessageConfig);\r\n                    const user = response.data;\r\n                    localStorage.setItem(\"userData\", JSON.stringify(response.data));\r\n                    localStorage.setItem(\"staffData\", response.data.staff.identite_id);\r\n                    localStorage.setItem('token', token);\r\n                    localStorage.setItem('expire_in', expire_in);\r\n                    var date = new Date();\r\n                    date.setSeconds(date.getSeconds() + expire_in - 180);\r\n                    localStorage.setItem('date_expire', date);\r\n                    localStorage.setItem('refresh_token', refresh_token);\r\n                    window.location.href = \"/dashboard\";\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                setStartRequest(false);\r\n\r\n                setError({\r\n                    username: \"Email ou mot de passe incorrecte\",\r\n                    password: \"Email ou mot de passe incorrecte\"\r\n                });\r\n                if (error.response.data.code === 429) {\r\n                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Trop de tentative de connexion. Veuillez ressayer dans 5mn.\"));\r\n                } else {\r\n                    ToastBottomEnd.fire(toastConnectErrorMessageConfig);\r\n                }\r\n\r\n            })\r\n        ;\r\n    };\r\n    return (\r\n        load ? (\r\n            <Loader/>\r\n        ) : (\r\n            <BrowserRouter>\r\n                <div className=\"kt-grid kt-grid--ver kt-grid--root kt-page\">\r\n                    <div className=\"kt-grid kt-grid--hor kt-grid--root  kt-login kt-login--v1\" id=\"kt_login\">\r\n                        <div\r\n                            className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--desktop kt-grid--ver-desktop kt-grid--hor-tablet-and-mobile\">\r\n\r\n                            <div className=\"kt-grid kt-grid--ver kt-grid--root kt-page\">\r\n                                <div className=\"kt-grid kt-grid--hor kt-grid--root  kt-login kt-login--v1\"\r\n                                     id=\"kt_login\">\r\n\r\n                                    <div\r\n                                        className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--desktop kt-grid--ver-desktop kt-grid--hor-tablet-and-mobile\">\r\n                                        <div\r\n                                            className=\"kt-grid__item kt-grid__item--order-tablet-and-mobile-2 kt-grid kt-grid--hor kt-login__aside\"\r\n                                            style={{backgroundImage: `url(${componentData && componentData.params.fr.background.value !== null ? appConfig.apiDomaine + componentData.params.fr.background.value.url : \" \"})`}}>\r\n                                            <div className=\"kt-grid__item\">\r\n                                            <span className=\"kt-login__logo\">\r\n                                                <img\r\n                                                    src={componentData ? appConfig.apiDomaine + componentData.params.fr.logo.value.url: \"/assets/images/satisLogo.png\" }/>\r\n                                                <span style={{\r\n                                                    color: \"white\",\r\n                                                    fontSize: \"1em\",\r\n                                                    paddingLeft: \"5px\"\r\n                                                }}>\r\n                                                {componentData ? componentData.params.fr.version.value : props.plan + appConfig.version}\r\n                                            </span>\r\n                                            </span>\r\n                                            </div>\r\n                                            <div className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--ver\">\r\n                                                <div className=\"kt-grid__item kt-grid__item--middle\">\r\n                                                    <h3 className=\"kt-login__title\"> {componentData ? componentData.params.fr.header.value + componentData.params.fr.version.value : null}</h3>\r\n                                                    <h4 className=\"kt-login__subtitle\"> {componentData ? componentData.params.fr.description.value + \" \" : null}</h4>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"kt-grid__item\">\r\n                                                <div className=\"kt-login__info\">\r\n                                                    <div className=\"kt-login__copyright\">\r\n                                                        © {appConfig.appFullName(props.year)}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div\r\n                                            className=\"kt-grid__item kt-grid__item--fluid kt-grid__item--order-tablet-and-mobile-1  kt-login__wrapper\">\r\n                                            <div className=\"kt-login__body\">\r\n\r\n                                                <Switch>\r\n                                                    <Route exact path=\"/\">\r\n                                                        <div className=\"kt-login__form\" style={{paddingTop: '15px'}}>\r\n\r\n                                                            <div className=\"kt-login__title\">\r\n                                                                <div className=\"form-group row\"\r\n                                                                     style={{marginTop: '50px'}}>\r\n\r\n                                                                    <div className=\"col-lg-12 col-xl-6\">\r\n                                                                        <img\r\n                                                                            id=\"Image1\"\r\n                                                                            src={componentData && componentData.params.fr.owner_logo.value !== null ? appConfig.apiDomaine + componentData.params.fr.owner_logo.value.url : null}\r\n                                                                            alt=\"logo\"\r\n                                                                            style={{\r\n                                                                                maxWidth: \"65px\",\r\n                                                                                maxHeight: \"65px\",\r\n                                                                                textAlign: 'center'\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <h3> {componentData ? componentData.params.fr.title.value : \"\"}</h3>\r\n                                                            </div>\r\n\r\n                                                            <form className=\"kt-form\" id=\"kt_login__form\"\r\n                                                                  style={{marginBottom: '90px'}}>\r\n                                                                <div\r\n                                                                    className={error.username.length ? \"form-group row validated\" : \"form-group row\"}>\r\n\r\n                                                                    <input\r\n                                                                        className={error.username.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                        type=\"email\"\r\n                                                                        placeholder=\"Votre Email\"\r\n                                                                        name=\"username\"\r\n                                                                        onChange={(e) => onChangeUserName(e)}\r\n                                                                        value={data.username}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        error.username.length ? (\r\n                                                                            <div className=\"invalid-feedback\">\r\n                                                                                {error.username}\r\n                                                                            </div>\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className={error.password.length ? \"form-group row validated input_container\" : \"form-group row input_container\"}>\r\n                                                        <span className=\"input_icon\">\r\n                                                            <i id=\"icon\" className=\"fa fa-eye-slash\" aria-hidden=\"true\"\r\n                                                               onClick={(e) => onViewPassword(e)}></i>\r\n                                                        </span>\r\n                                                                    <input\r\n                                                                        className={error.password.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                        type=\"password\"\r\n                                                                        id=\"password\"\r\n                                                                        placeholder=\"Votre Mot de Passe\"\r\n                                                                        name=\"password\"\r\n                                                                        onChange={(e) => onChangePassword(e)}\r\n                                                                        value={data.password}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        error.password.length ? (\r\n                                                                            <div className=\"invalid-feedback\">\r\n                                                                                {error.password}\r\n                                                                            </div>\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n\r\n                                                                <div className=\"kt-login__extra text-right mt-2\">\r\n\r\n                                                                    <Link to=\"/login/forgot\" id=\"forgot_btn\">\r\n                                                                        Mot de passe oublié?\r\n                                                                    </Link>\r\n                                                                </div>\r\n                                                                <div className=\"kt-login__actions\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    id=\"kt_login_signin_submit\"\r\n                                                                                    className=\"btn btn-primary btn-elevate kt-login__btn-primary\"\r\n                                                                                    onClick={onClickConnectButton}> Se\r\n                                                                                connecter\r\n                                                                            </button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </form>\r\n                                                        </div>\r\n                                                    </Route>\r\n                                                    <Route exact path=\"/login\">\r\n                                                        <div className=\"kt-login__form\" style={{paddingTop: '15px'}}>\r\n\r\n                                                            <div className=\"kt-login__title\">\r\n                                                                <div className=\"form-group row\"\r\n                                                                     style={{marginTop: '50px'}}>\r\n\r\n                                                                    <div className=\"col-lg-12 col-xl-6\">\r\n                                                                        <img\r\n                                                                            id=\"Image1\"\r\n                                                                            src={componentData ? appConfig.apiDomaine + componentData.params.fr.owner_logo.value.url : null}\r\n                                                                            alt=\"logo\"\r\n                                                                            style={{\r\n                                                                                maxWidth: \"65px\",\r\n                                                                                maxHeight: \"65px\",\r\n                                                                                textAlign: 'center'\r\n                                                                            }}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <h3> {componentData ? componentData.params.fr.title.value : \"\"}</h3>\r\n                                                            </div>\r\n\r\n                                                            <form className=\"kt-form\" id=\"kt_login__form\"\r\n                                                                  style={{marginBottom: '90px'}}>\r\n                                                                <div\r\n                                                                    className={error.username.length ? \"form-group row validated\" : \"form-group row\"}>\r\n\r\n                                                                    <input\r\n                                                                        className={error.username.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                        type=\"email\"\r\n                                                                        placeholder=\"Votre Email\"\r\n                                                                        name=\"username\"\r\n                                                                        onChange={(e) => onChangeUserName(e)}\r\n                                                                        value={data.username}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        error.username.length ? (\r\n                                                                            <div className=\"invalid-feedback\">\r\n                                                                                {error.username}\r\n                                                                            </div>\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className={error.password.length ? \"form-group row validated input_container\" : \"form-group row input_container\"}>\r\n                                                        <span className=\"input_icon\">\r\n                                                            <i id=\"icon\" className=\"fa fa-eye-slash\" aria-hidden=\"true\"\r\n                                                               onClick={(e) => onViewPassword(e)}></i>\r\n                                                        </span>\r\n                                                                    <input\r\n                                                                        className={error.password.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                        type=\"password\"\r\n                                                                        id=\"password\"\r\n                                                                        placeholder=\"Votre Mot de Passe\"\r\n                                                                        name=\"password\"\r\n                                                                        onChange={(e) => onChangePassword(e)}\r\n                                                                        value={data.password}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        error.password.length ? (\r\n                                                                            <div className=\"invalid-feedback\">\r\n                                                                                {error.password}\r\n                                                                            </div>\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n\r\n                                                                <div className=\"kt-login__extra text-right mt-2\">\r\n\r\n                                                                    <Link to=\"/login/forgot\" id=\"forgot_btn\">\r\n                                                                        Mot de passe oublié?\r\n                                                                    </Link>\r\n                                                                </div>\r\n                                                                <div className=\"kt-login__actions\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    id=\"kt_login_signin_submit\"\r\n                                                                                    className=\"btn btn-primary btn-elevate kt-login__btn-primary\"\r\n                                                                                    onClick={onClickConnectButton}> Se\r\n                                                                                connecter\r\n                                                                            </button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </form>\r\n                                                        </div>\r\n                                                    </Route>\r\n                                                    <Route exact path=\"/login/forgot\">\r\n                                                        <ForgotForm/>\r\n                                                    </Route>\r\n\r\n                                                    <Route exact path={`/forgot-password/${tokenData}`}>\r\n                                                        <ReinitialisationForm\r\n                                                            token={tokenData}\r\n                                                        />\r\n                                                    </Route>\r\n                                                </Switch>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        plan: state.plan.plan,\r\n        year: state.year.year\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LoginPage);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\permission.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\channel.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\userClient.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\layouts\\App.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Toast.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\toastConfig.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\HeaderMobile.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Footer.jsx",["935"],"import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"kt-footer kt-grid__item\" id=\"kt_footer\">\r\n            <div className=\"kt-container  kt-container--fluid \">\r\n                <div className=\"kt-footer__wrapper\">\r\n                    <div className=\"kt-footer__copyright\">\r\n                        &nbsp;&copy;&nbsp;<a href=\"http://www.dmdconsult.com/\" target=\"_blank\" className=\"kt-link\">Satis FinTech SA {new Date().getFullYear()}</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Nav.jsx",["936","937","938","939","940","941","942","943","944"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/fr';\r\nimport * as LanguageAction from \"../../store/actions/languageAction\";\r\nimport * as authActions from \"../../store/actions/authActions\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {EventNotification, EventNotificationPath, RelaunchNotification} from \"../../constants/notification\";\r\nimport EmptyNotification from \"../components/EmptyNotification\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastSuccessMessageWithParameterConfig} from \"../../config/toastConfig\";\r\nimport {debug} from \"../../helpers/function\";\r\nimport Loader from \"../components/Loader\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst Nav = (props) => {\r\n    const [eventNotification, setEventNotification] = useState([]);\r\n    const [relaunchNotification, setRelaunchNotification] = useState([]);\r\n    const [loader, setLoader] = useState(false);\r\n    const [startRead, setStartRead] = useState(false);\r\n    const [searchData, setSearchData] = useState(null);\r\n    var timer = null;\r\n\r\n    const filterEventNotification = useCallback((notification) => {\r\n        let notificationList;\r\n        notificationList =  notification.filter(\r\n            n => EventNotification.includes(n.type.substr(39, n.type.length))\r\n        );\r\n        localStorage.setItem(\"eventNotification\", JSON.stringify(notificationList));\r\n        return notificationList;\r\n    }, [EventNotification]);\r\n\r\n    const filterRelaunchNotification = useCallback((notification) => {\r\n        return notification.filter(\r\n            n => RelaunchNotification.includes(n.type.substr(39, n.type.length))\r\n\r\n        );\r\n    }, [RelaunchNotification]);\r\n\r\n    const fetchData = async () => {\r\n        if (verifyTokenExpire()) {\r\n            await axios.get(`${appConfig.apiDomaine}/unread-notifications`)\r\n                .then(response => {\r\n                    setEventNotification(filterEventNotification(response.data));\r\n                    setRelaunchNotification(filterRelaunchNotification(response.data));\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (props.user) {\r\n            window.Echo.private(`Satis2020.ServicePackage.Models.Identite.${props.user.identite_id}`)\r\n                .notification((notification) => {\r\n                    if (notification.type.substr(39, notification.type.length) === \"PostDiscussionMessage\") {\r\n                        debug(notification, \"notification\");\r\n                        if (window.location.pathname !== \"chat#messageList\")\r\n                            ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(notification.text.length > 40 ? notification.text.substr(0, 40)+\"...\" : notification.text));\r\n                    } else {\r\n                        fetchData();\r\n                    }\r\n                })\r\n            ;\r\n        }\r\n    }, [props.user.identite]);\r\n\r\n    const onClickLanguage = useCallback((e, lang) => {\r\n        e.preventDefault();\r\n        props.changeLanguage(lang);\r\n    }, [props.changeLanguage]);\r\n\r\n    const onClickLogoutLink = useCallback((e) => {\r\n        e.preventDefault();\r\n        props.logoutUser();\r\n    }, [props.logoutUser]);\r\n\r\n    const getNotificationLink = useCallback((type, data) => {\r\n        return type !== \"RegisterAClaim\"\r\n            ? EventNotificationPath[type](data.claim.id)\r\n            : EventNotificationPath[type][data.claim.status](data.claim.id);\r\n    });\r\n\r\n    const readAllNotification = async (readNotification, path) => {\r\n        if (verifyTokenExpire()) {\r\n            await axios.put(`${appConfig.apiDomaine}/unread-notifications`, readNotification)\r\n                .then(({data}) => {\r\n                    debug(data, \"data\");\r\n                    setStartRead(false);\r\n                    if (data.canReload) {\r\n                        window.location.href = path;\r\n                    } else {\r\n                        setEventNotification(filterEventNotification(data.unreadNotifications));\r\n                        setRelaunchNotification(filterRelaunchNotification(data.unreadNotifications));\r\n                    }\r\n                })\r\n                .catch(({response}) => {console.log(\"Something is wrong\")})\r\n            ;\r\n        }\r\n    };\r\n\r\n    const searchClaim = (e) => {\r\n        var value = e.target.value;\r\n        var endpoint = \"\";\r\n        if (verifyPermission(props.userPermissions, 'search-claim-any-reference'))\r\n            endpoint = `${appConfig.apiDomaine}/any/search-claim/${value}`;\r\n        if (verifyPermission(props.userPermissions, 'search-claim-my-reference'))\r\n            endpoint = `${appConfig.apiDomaine}/my/search-claim/${value}`;\r\n        if (value) {\r\n            setLoader(true);\r\n            if (timer)\r\n                clearTimeout(timer);\r\n            timer = setTimeout(function(){\r\n                if (verifyTokenExpire()) {\r\n                    axios.get(endpoint)\r\n                        .then((response) => {\r\n                            setLoader(false);\r\n                            setSearchData(response.data);\r\n                        })\r\n                        .catch((error) => {\r\n                            setLoader(false);\r\n                            setSearchData([]);\r\n                            console.log(\"Something is wrong\");\r\n                        })\r\n                    ;\r\n                }\r\n            }.bind(value), 5000);\r\n        }\r\n    };\r\n\r\n    const showDetailNotification = useCallback((e, path, idNotification, relaunchNotification = false, notification = null) => {\r\n        e.preventDefault();\r\n        if (!startRead) {\r\n            setStartRead(true);\r\n            const readNotification = {\r\n                \"notifications\": [\r\n                    idNotification\r\n                ]\r\n            };\r\n\r\n            if (!relaunchNotification) {\r\n                readAllNotification(readNotification, path);\r\n            } else {\r\n                if (!path) {\r\n                    readAllNotification(readNotification, path);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    const notificationCount = eventNotification.length + relaunchNotification.length;\r\n\r\n    return (\r\n        <div id=\"kt_header\" className=\"kt-header kt-grid__item  kt-header--fixed \" data-ktheader-minimize=\"on\"\r\n             style={{position: \"sticky\", top: 0, zIndex: 2}}>\r\n            <div className=\"kt-container  kt-container--fluid \">\r\n                <div className=\"kt-header__brand \" id=\"kt_header_brand\">\r\n                    <div className=\"kt-header__brand-logo\">\r\n                        <a href=\"index.html\">\r\n                            <img alt=\"Logo\" src=\"/assets/images/satisLogo.png\" width={\"100\"} height={\"34\"}/>\r\n                            <span className=\"mx-2 text-white font-weight-bolder\">{props.plan}</span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-header__topbar\">\r\n                    <div className=\"kt-header__topbar-item kt-header__topbar-item--search dropdown\"\r\n                         id=\"kt_quick_search_toggle\">\r\n                        <div className=\"kt-header__topbar-wrapper\" data-toggle=\"dropdown\" data-offset=\"10px,0px\">\r\n                            <span className=\"kt-header__topbar-icon\"><i className=\"flaticon2-search-1\"/></span>\r\n                        </div>\r\n                        <div\r\n                            className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-lg\">\r\n                            <div className=\"kt-quick-search kt-quick-search--dropdown kt-quick-search--result-compact\"\r\n                                 id=\"kt_quick_search_dropdown\">\r\n                                <form method=\"get\" className=\"kt-quick-search__form\">\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-prepend\"><span className=\"input-group-text\"><i className=\"flaticon2-search-1\"/></span></div>\r\n                                        <input type=\"text\" onKeyUp={e => searchClaim(e)} className=\"form-control \" placeholder=\"Search...\"/>\r\n                                        {loader ? (\r\n                                            <div className=\"mr-5 input-group-append\"><span className=\"input-group-text\"><i className=\"kt-spinner kt-spinner--sm kt-spinner--brand\" style={{display: \"flex\"}}/></span></div>\r\n                                        ) : null}\r\n                                    </div>\r\n                                </form>\r\n                                {searchData ? (\r\n                                    <div className={`kt-quick-search__wrapper kt-scroll ps ${true ? \"ps--active-y\" : \"\"}`} data-scroll=\"true\" data-height=\"150\" data-mobile-height=\"200\" style={{height: \"325px\", overflow: \"hidden\", display: `${true ? \"block\" : \"none\"}`}}>\r\n                                        <div className=\"quick-search-result\">\r\n                                            {!searchData.length ? (\r\n                                                <div className=\"font-size-sm text-primary font-weight-bolder text-uppercase mb-2\">\r\n                                                    Aucun Enregistrement Trouvé\r\n                                                </div>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <div className=\"font-size-sm text-primary font-weight-bolder text-uppercase mb-2\">\r\n                                                        Enregistrement Trouvé\r\n                                                    </div>\r\n\r\n                                                    <div className=\"mb-10\">\r\n                                                        <div className=\"d-flex align-items-center flex-grow-1 mb-2\">\r\n                                                            <div className=\"symbol symbol-30  flex-shrink-0\">\r\n                                                                <div className=\"symbol-label\" style={{backgroundImage: \"url('https://preview.keenthemes.com/metronic/theme/html/demo1/dist/assets/media/users/300_20.jpg')\"}}/>\r\n                                                            </div>\r\n                                                            <div className=\"d-flex flex-column ml-3 mt-2 mb-2\">\r\n                                                                <a href={`/process/claims/${searchData[0].reference}/detail`} className=\"font-weight-bold text-dark text-hover-primary\">\r\n                                                                    {searchData[0].reference}\r\n                                                                </a>\r\n                                                                <span className=\"font-size-sm font-weight-bold text-muted\">\r\n                                                                    Reclamant: {searchData[0].claimer.lastname+\" \"+searchData[0].claimer.firstname}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"kt-header__topbar-item dropdown\">\r\n                        <div className=\"kt-header__topbar-wrapper\" data-toggle=\"dropdown\" data-offset=\"10px,0px\">\r\n                            <span className=\"kt-header__topbar-icon\">\r\n                                <i className=\"flaticon2-bell-alarm-symbol\"/>\r\n                                {\r\n                                    notificationCount > 0 ? (\r\n                                        <div className=\"kt-badge kt-badge__pics\">\r\n                                    <span\r\n                                        className=\"kt-badge__pic  kt-badge__pic--last\"\r\n                                        style={{\r\n                                            backgroundColor: \"#FEB2B2\",\r\n                                            color: \"#C53030\",\r\n                                            width: \"25px\",\r\n                                            height: \"25px\",\r\n                                            position: \"relative\",\r\n                                            bottom: \"10px\",\r\n                                            left: \"5px\"\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            (notificationCount) > 9 ? \"+9\" : notificationCount\r\n                                        }\r\n                                    </span>\r\n                                        </div>\r\n                                    ) : null\r\n                                }\r\n                            </span>\r\n                            <span className=\"kt-hidden kt-badge kt-badge--danger\"/>\r\n                        </div>\r\n                        <div\r\n                            className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-xl\">\r\n                            <form>\r\n                                <div className=\"kt-head kt-head--skin-light kt-head--fit-x kt-head--fit-b\">\r\n                                    <h3 className=\"kt-head__title\">\r\n                                        Notifications\r\n                                        &nbsp;\r\n                                        <span\r\n                                            className=\"btn btn-label-primary btn-sm btn-bold btn-font-md\">{notificationCount} nouveau</span>\r\n                                    </h3>\r\n                                    <ul className=\"nav nav-tabs nav-tabs-line nav-tabs-bold nav-tabs-line-3x nav-tabs-line-brand  kt-notification-item-padding-x\"\r\n                                        role=\"tablist\">\r\n                                        <li className=\"nav-item\">\r\n                                            <a className=\"nav-link active show\" data-toggle=\"tab\"\r\n                                               href=\"#topbar_notifications_notifications\" role=\"tab\"\r\n                                               aria-selected=\"true\">Alertes</a>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <a className=\"nav-link\" data-toggle=\"tab\"\r\n                                               href=\"#topbar_notifications_events\" role=\"tab\"\r\n                                               aria-selected=\"false\">Relances</a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div className=\"tab-content\">\r\n                                    <div className=\"tab-pane active show\" id=\"topbar_notifications_notifications\"\r\n                                         role=\"tabpanel\">\r\n                                        {\r\n                                            eventNotification.length ? (\r\n                                                <div className=\"kt-notification kt-margin-t-10 kt-margin-b-10 kt-scroll\"\r\n                                                     data-scroll=\"true\" data-height=\"300\" data-mobile-height=\"200\"\r\n                                                     style={eventNotification.length >= 4 ? {\r\n                                                         height: \"380px\",\r\n                                                         overflowY: \"auto\"\r\n                                                     } : {}}>\r\n                                                    {\r\n                                                        eventNotification.map((n, index) => (\r\n                                                            <a\r\n                                                                href={getNotificationLink(n.type.substr(39, n.type.length), n.data)}\r\n                                                                key={index}\r\n                                                                className=\"kt-notification__item\"\r\n                                                                onClick={e => showDetailNotification(e, getNotificationLink(n.type.substr(39, n.type.length), n.data), n.id, false, n)}\r\n                                                            >\r\n                                                                <div className=\"kt-notification__item-icon\">\r\n                                                                    <i className=\"flaticon2-line-chart kt-font-success\"/>\r\n                                                                </div>\r\n                                                                <div className=\"kt-notification__item-details\">\r\n                                                                    <div className=\"kt-notification__item-title\"\r\n                                                                         style={{textOverflow: \"ellipsis\"}}>\r\n                                                                        {n.data.text.length >= 87 ? n.data.text.substring(0, 88) + \"...\" : n.data.text.substring(0, 86)}\r\n                                                                    </div>\r\n                                                                    <div className=\"kt-notification__item-time\">\r\n                                                                        {moment(new Date(n.created_at)).fromNow()}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                {\r\n                                                                    startRead ? (\r\n                                                                        <Loader/>\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </a>\r\n                                                        ))\r\n                                                    }\r\n                                                </div>\r\n                                            ) : (\r\n                                                <EmptyNotification/>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"tab-pane\" id=\"topbar_notifications_events\" role=\"tabpanel\">\r\n                                        {\r\n                                            relaunchNotification.length ? (\r\n                                                <div className=\"kt-notification kt-margin-t-10 kt-margin-b-10 kt-scroll\"\r\n                                                     data-scroll=\"true\" data-height=\"300\" data-mobile-height=\"200\"\r\n                                                     style={relaunchNotification.length >= 4 ? {\r\n                                                         height: \"380px\",\r\n                                                         overflowY: \"auto\"\r\n                                                     } : {}}>\r\n                                                    {\r\n                                                        relaunchNotification.map(((n, index) => (\r\n                                                            <a\r\n                                                                key={index}\r\n                                                                href={`/read-notification-${index}`}\r\n                                                                onClick={e => showDetailNotification(e, ``, n.id, true)}\r\n                                                                className=\"kt-notification__item\"\r\n                                                            >\r\n                                                                <div className=\"kt-notification__item-icon\">\r\n                                                                    <i className=\"flaticon2-line-chart kt-font-success\"/>\r\n                                                                </div>\r\n                                                                <div className=\"kt-notification__item-details\">\r\n                                                                    <div className=\"kt-notification__item-title\"\r\n                                                                         style={{textOverflow: \"ellipsis\"}}>\r\n                                                                        {n.data.text.length >= 87 ? n.data.text.substring(0, 85) + \"...\" : n.data.text.substring(0, 86)}\r\n                                                                    </div>\r\n                                                                    <div className=\"kt-notification__item-time\">\r\n                                                                        {moment(new Date(n.created_at)).fromNow()}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                {\r\n                                                                    startRead ? (\r\n                                                                        <Loader/>\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </a>\r\n                                                        )))\r\n                                                    }\r\n                                                </div>\r\n                                            ) : (\r\n                                                <EmptyNotification/>\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-header__topbar-item kt-header__topbar-item--langs\">\r\n                        <div className=\"kt-header__topbar-wrapper\" data-toggle=\"dropdown\" data-offset=\"10px,0px\">\r\n                        <span className=\"kt-header__topbar-icon text-white\">\r\n                            {props.language.languageSelected.toUpperCase()}\r\n                        </span>\r\n                        </div>\r\n                        <div className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-anim\">\r\n                            <ul className=\"kt-nav kt-margin-t-10 kt-margin-b-10\">\r\n                                <li className=\"kt-nav__item kt-nav__item--active\">\r\n                                    <a href=\"#link\" onClick={(e) => onClickLanguage(e, \"en\")} className=\"kt-nav__link\">\r\n                                        <span className=\"kt-nav__link-icon\">\r\n                                            EN\r\n                                        </span>\r\n                                        <span className=\"kt-nav__link-text\">English</span>\r\n                                    </a>\r\n                                </li>\r\n\r\n                                <li className=\"kt-nav__item\">\r\n                                    <a href=\"#link\" onClick={(e) => onClickLanguage(e, \"fr\")} className=\"kt-nav__link\">\r\n                                        <span className=\"kt-nav__link-icon\">\r\n                                            FR\r\n                                        </span>\r\n                                        <span className=\"kt-nav__link-text\">Francais</span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-header__topbar-item kt-header__topbar-item--user\">\r\n                        <div className=\"kt-header__topbar-wrapper\" data-toggle=\"dropdown\" data-offset=\"10px,0px\">\r\n                            <span className=\"kt-header__topbar-welcome kt-visible-desktop\">Salut,</span>\r\n                            <span className=\"kt-header__topbar-username kt-visible-desktop\">\r\n                                {props.user.firstName}\r\n                            </span>\r\n                            <img alt=\"Pic\" src=\"/assets/media/users/default.jpg\"/>\r\n                            <span className=\"kt-header__topbar-icon kt-bg-brand kt-hidden\"><b>S</b></span>\r\n                        </div>\r\n                        <div\r\n                            className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-xl\">\r\n                            <div className=\"kt-user-card kt-user-card--skin-light kt-notification-item-padding-x\">\r\n                                <div className=\"kt-user-card__avatar\">\r\n                                    <img className=\"kt-hidden-\" alt=\"Pic\" src=\"/assets/media/users/default.jpg\"/>\r\n                                    <span\r\n                                        className=\"kt-badge kt-badge--username kt-badge--unified-success kt-badge--lg kt-badge--rounded kt-badge--bold kt-hidden\">S</span>\r\n                                </div>\r\n                                <div className=\"kt-user-card__name\">\r\n                                    {props.user.lastName + \" \" + props.user.firstName}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"kt-notification\">\r\n                                {\r\n                                    verifyPermission(props.userPermissions, 'list-my-discussions') ||\r\n                                    verifyPermission(props.userPermissions, 'contribute-discussion') ? (\r\n                                            <Link to={\"/chat\"} className=\"kt-notification__item\">\r\n                                                <div className=\"kt-notification__item-icon\">\r\n                                                    <i className=\"flaticon2-mail kt-font-warning\"/>\r\n                                                </div>\r\n                                                <div className=\"kt-notification__item-details\">\r\n                                                    <div className=\"kt-notification__item-title kt-font-bold\">\r\n                                                        Mes Disccussions\r\n                                                    </div>\r\n                                                    <div className=\"kt-notification__item-time\">\r\n                                                        Acceder à la liste\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        )\r\n                                        : null\r\n                                }\r\n\r\n                                <NavLink to={\"/settings/account\"}\r\n                                   className=\"kt-notification__item\">\r\n                                    <div className=\"kt-notification__item-icon\">\r\n                                        <i className=\"flaticon2-calendar-3 kt-font-success\"/>\r\n                                    </div>\r\n                                    <div className=\"kt-notification__item-details\">\r\n                                        <div className=\"kt-notification__item-title kt-font-bold\">\r\n                                            Mon profile\r\n                                        </div>\r\n                                        <div className=\"kt-notification__item-time\">\r\n                                            Paramètres de compte et plus\r\n                                        </div>\r\n                                    </div>\r\n                                </NavLink>\r\n                                <div className=\"kt-notification__custom kt-space-between\">\r\n                                    <a href=\"/logout\" onClick={onClickLogoutLink} target=\"_blank\"\r\n                                       className=\"btn btn-label btn-label-brand btn-sm btn-bold\">Déconnexion</a>\r\n                                    {/*<a href=\"custom/user/login-v2.html\" target=\"_blank\"*/}\r\n                                    {/*   className=\"btn btn-clean btn-sm btn-bold\">Upgrade Plan</a>*/}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        language: state.language,\r\n        plan: state.plan.plan,\r\n        user: {\r\n            lastName: state.user.user.data.identite.lastname,\r\n            firstName: state.user.user.data.identite.firstname,\r\n            identite_id: state.user.user.data.identite.id\r\n        }\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeLanguage: (language) => {\r\n            dispatch(LanguageAction.changeLanguage(language))\r\n        },\r\n        logoutUser: () => dispatch(authActions.logoutUser()),\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Body.jsx",["945"],"import React from \"react\";\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport Mail from \"../pages/Mail\";\r\nimport PerformanceIndicator from \"../pages/PerformanceIndicator\";\r\nimport UnitType from \"../pages/UnitType\";\r\nimport Unit from \"../pages/Unit\";\r\nimport Position from \"../pages/Position\";\r\nimport Staff from \"../pages/Staff\";\r\nimport ClaimCategory from \"../pages/ClaimCategory\";\r\nimport ClaimObject from \"../pages/ClaimObject\";\r\nimport FAQs from \"../pages/FAQs\";\r\nimport FAQsPage from \"../pages/FAQsPage\";\r\nimport CategoryFAQs from \"../pages/CategoryFAQs\";\r\nimport Institution from \"../pages/Institution\";\r\nimport CategoryFaqsForm from \"../components/CategoryFaqsForm\";\r\nimport FaqsForm from \"../components/FaqsForm.jsx\";\r\nimport CategoryClient from \"../pages/CategoryClient\";\r\nimport TypeClient from \"../pages/TypeClient\";\r\nimport CategoryClientForm from \"../components/CategoryClientForm\";\r\nimport TypeClientForm from \"../components/TypeClientForm\";\r\nimport Clients from \"../pages/Clients\";\r\nimport ClientForm from \"../components/Clients/ClientForm\";\r\nimport SeverityLevel from \"../pages/SeverityLevel\";\r\nimport UnitTypeForm from \"../components/UnitTypeForm\";\r\nimport PerformanceIndicatorForm from \"../components/PerformanceIndicatorForm\";\r\nimport UnitForm from \"../components/UnitForm\";\r\nimport PositionForm from \"../components/PositionForm\";\r\nimport ClaimCategoryForm from \"../components/ClaimCategoryForm\";\r\nimport ClaimObjectForm from \"../components/ClaimObjectForm\";\r\nimport StaffForm from \"../components/staff/StaffForm\";\r\nimport SeverityLevelForm from \"../components/SeverityLevelForm\";\r\nimport InstitutionForm from \"../components/Institutions/InstitutionForm\";\r\nimport FilialeInstitutionForm from \"../../APP_MACRO/Filiale/FilialeInstitutionForm\";\r\nimport Currency from \"../pages/Currency\";\r\nimport CurrencyForm from \"../components/CurrencyForm\";\r\nimport Channel from \"../pages/Channel\";\r\nimport ChannelForm from \"../components/ChannelForm\";\r\nimport ClaimAdd from \"../pages/ClaimAdd\";\r\nimport ConfigRequirements from \"../pages/ConfigRequirements\";\r\nimport HoldingClientForm from \"../../APP_MACRO/Holding/HoldingClientForm\";\r\nimport RelationShip from \"../pages/RelationShip\";\r\nimport RelationShipForm from \"../components/RelationShipForm\";\r\nimport IncompleteClaims from \"../pages/IncompleteClaims\";\r\nimport IncompleteClaimsEdit from \"../components/IncompleteClaimsEdit\";\r\nimport ConfigProcessingCircuit from \"../pages/ConfigProcessingCircuit\";\r\nimport ClaimAssign from \"../pages/ClaimAssign\";\r\nimport ClaimAssignDetail from \"../pages/ClaimAssignDetail\";\r\nimport ClaimList from \"../pages/ClaimList\";\r\nimport ClaimAssignToStaff from \"../pages/ClaimAssignToStaff\";\r\nimport ClaimToValidatedList from \"../pages/ClaimToValidatedList\";\r\nimport ClaimMonitoring from \"../pages/ClaimMonitoring\";\r\nimport ClaimReporting from \"../pages/ClaimReporting\";\r\nimport Dashboards from \"../pages/Dashboards\";\r\nimport SatisfactionMeasure from \"../pages/SatisfactionMeasure\";\r\nimport ClaimsArchived from \"../pages/ClaimsArchived\";\r\nimport ConfigNotification from \"../pages/ConfigNotification\";\r\nimport Chats from \"../pages/Discussions/Chats\";\r\nimport AddChatsForm from \"../pages/Discussions/AddChatsForm\";\r\nimport AddMemberForm from \"../pages/Discussions/AddMemberForm\";\r\nimport Participants from \"../pages/Discussions/Participants\";\r\nimport RemoveChats from \"../pages/Discussions/RemoveChats\";\r\nimport StaffChannels from \"../components/StaffChannels\";\r\nimport ConfigRapportAuto from \"../pages/ConfigRapportAuto\";\r\nimport MessageApi from \"../pages/MessageApi\";\r\nimport MessageAPIForm from \"../components/MessageAPIForm\";\r\nimport InstitutionMessageApi from \"../pages/InstitutionMessageApi\";\r\nimport ConfigRapportAutoForm from \"../components/ConfigRapportAutoForm\";\r\nimport ClaimListDetail from \"../pages/ClaimListDetail\";\r\nimport ClaimAssignToStaffDetail from \"../pages/ClaimAssignToStaffDetail\";\r\nimport ClaimToValidatedListDetail from \"../pages/ClaimToValidatedListDetail\";\r\nimport SatisfactionMeasureDetail from \"../pages/SatisfactionMeasureDetail\";\r\nimport ClaimsArchivedDetail from \"../pages/ClaimsArchivedDetail\";\r\nimport User from \"../pages/User\";\r\nimport UserAdd from \"../pages/UserAdd\";\r\nimport QualificationPeriod from \"../pages/QualificationPeriod\";\r\nimport TreatmentPeriod from \"../pages/TreatmentPeriod\";\r\nimport QualificationPeriodAdd from \"../pages/QualificationPeriodAdd\";\r\nimport TreatmentPeriodAdd from \"../pages/TreatmentPeriodAdd\";\r\nimport ParametersComponent from \"../pages/ParametersComponent\";\r\nimport ParametersComponentEdit from \"../components/ParametersComponentEdit\";\r\nimport UserEdit from \"../pages/UserEdit\";\r\nimport ConfigCoefficient from \"../components/ConfigCoefficient\";\r\nimport ImportClientForm from \"../components/Clients/ImportClientForm\";\r\nimport ImportInstitutionForm from \"../components/Institutions/ImportInstitutionForm\";\r\nimport HistoricClaimsAdd from \"../pages/HistoricClaimsAdd\";\r\nimport HistoricClaimsTraetment from \"../pages/HistoricClaimsTraetment\";\r\nimport ClaimObjectImportPage from \"../pages/ClaimObjectImportPage\";\r\nimport StaffImportPage from \"../pages/StaffImportPage\";\r\nimport ClaimCategoryImportPage from \"../pages/ClaimCategoryImportPage\";\r\nimport ActivatePilotPage from \"../pages/ActivatePilotPage\";\r\nimport RulePage from \"../pages/RulePage\";\r\nimport RuleAddPage from \"../pages/RuleAddPage\";\r\nimport RuleEditPage from \"../pages/RuleEditPage\";\r\nimport ProfilePage from \"../pages/ProfilePage\";\r\nimport ClaimImportPage from \"../pages/ClaimImportPage\";\r\nimport RecurencePage from \"../pages/RecurencePage\";\r\nimport RejectLimitPage from \"../pages/RejectLimitPage\";\r\nimport PercentageMinFusion from \"../pages/PercentageMinFusion\";\r\nimport ClaimDetail from \"../pages/ClaimDetail\";\r\nimport ClaimReassign from \"../pages/ClaimReassign\";\r\nimport ClaimReassignDetail from \"../pages/ClaimReassignDetail\";\r\nimport ClaimReportingUemoaOne from \"../pages/ClaimReportingUemoaOne\";\r\nimport ClaimReportingUemoaTwo from \"../pages/ClaimReportingUemoaTwo\";\r\nimport ClaimReportingUemoaThree from \"../pages/ClaimReportingUemoaThree\";\r\nimport ClaimReportingUemoaFour from \"../pages/ClaimReportingUemoaFour\";\r\n\r\nconst Body = () => {\r\n    return (\r\n        <Switch>\r\n            {/*<Route exact path=\"/settings/sms\">\r\n                <SMS/>\r\n            </Route>*/}\r\n            <Route exact path=\"/settings/config\">\r\n                <ParametersComponent/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/historic/claims/add\">\r\n                <HistoricClaimsAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/historic/claims/treat\">\r\n                <HistoricClaimsTraetment/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/config/edit/:id\">\r\n                <ParametersComponentEdit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/category\">\r\n                <CategoryClient/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/category/add\">\r\n                <CategoryClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/type\">\r\n                <TypeClient/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/type/add\">\r\n                <TypeClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/add\">\r\n                <FAQs/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/list\">\r\n                <FAQsPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/faq/add\">\r\n                <FaqsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/category\">\r\n                <CategoryFAQs/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/category/add\">\r\n                <CategoryFaqsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/mail\">\r\n                <Mail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution\">\r\n                <Institution/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients\">\r\n                <Clients/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/importClients\">\r\n                <ImportClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/importInstitutions\">\r\n                <ImportInstitutionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/relationship\">\r\n                <RelationShip/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/relationship/add\">\r\n                <RelationShipForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/relationship/edit/:id\">\r\n                <RelationShipForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/add\">\r\n                <ClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/any/clients/add\">\r\n                <HoldingClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/any/clients/edit/:id\">\r\n                <HoldingClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution/add\">\r\n                <InstitutionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution/edit\">\r\n                <FilialeInstitutionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution/edit/:id\">\r\n                <InstitutionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/relance\">\r\n                <ConfigCoefficient/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/category/edit/:id\">\r\n                <CategoryFaqsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/faqs/faq/edit/:editfaqid\">\r\n                <FaqsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/type/edit/:edittypeid\">\r\n                <TypeClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/clients/category/edit/:editcategoryid\">\r\n                <CategoryClientForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/performance_indicator\">\r\n                <PerformanceIndicator/>\r\n            </Route>\r\n\r\n            <Route excat path=\"/settings/performance_indicator/add\">\r\n                <PerformanceIndicatorForm/>\r\n            </Route>\r\n\r\n            <Route excat path=\"/settings/performance_indicator/:id/edit\">\r\n                <PerformanceIndicatorForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit_type\">\r\n                <UnitType/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit_type/add\">\r\n                <UnitTypeForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit_type/:id/edit\">\r\n                <UnitTypeForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit\">\r\n                <Unit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit/add\">\r\n                <UnitForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/unit/:id/edit\">\r\n                <UnitForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions\">\r\n                <Position/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions/add\">\r\n                <PositionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions/:id/edit\">\r\n                <PositionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions\">\r\n                <Position/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions/add\">\r\n                <PositionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/positions/:id/edit\">\r\n                <PositionForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_categories\">\r\n                <ClaimCategory/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_category/import\">\r\n                <ClaimCategoryImportPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_categories/add\">\r\n                <ClaimCategoryForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_categories/:id/edit\">\r\n                <ClaimCategoryForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_objects\">\r\n                <ClaimObject/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_objects/add\">\r\n                <ClaimObjectForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_objects/:id/edit\">\r\n                <ClaimObjectForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/claim_objects/import\">\r\n                <ClaimObjectImportPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/staffs\">\r\n                <Staff/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/staffs/add\">\r\n                <StaffForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/staffs/:id/edit\">\r\n                <StaffForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/staffs/import\">\r\n                <StaffImportPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/severities\">\r\n                <SeverityLevel/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/severities/add\">\r\n                <SeverityLevelForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/severities/:id/edit\">\r\n                <SeverityLevelForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/currencies\">\r\n                <Currency/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/currencies/add\">\r\n                <CurrencyForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/currencies/:id/edit\">\r\n                <CurrencyForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/channels\">\r\n                <Channel/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/channels/add\">\r\n                <ChannelForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/channels/:id/edit\">\r\n                <ChannelForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claims/add\">\r\n                <ClaimAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claims/import\">\r\n                <ClaimImportPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/incomplete_claims\">\r\n                <IncompleteClaims/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/incomplete_claims/edit/:id\">\r\n                <IncompleteClaimsEdit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/requirement\">\r\n                <ConfigRequirements/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/processing-circuit\">\r\n                <ConfigProcessingCircuit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-assign\">\r\n                <ClaimAssign/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-reassign\">\r\n                <ClaimReassign/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-reassign/:id\">\r\n                <ClaimReassignDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-assign/:id/detail\">\r\n                <ClaimAssignDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-assign/to-staff\">\r\n                <ClaimAssignToStaff/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-assign/to-staff/:id/detail\">\r\n                <ClaimAssignToStaffDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/unit-claims\">\r\n                <ClaimList/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-list-detail/:id/detail\">\r\n                <ClaimListDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-to-validated\">\r\n                <ClaimToValidatedList/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim-to-validated/:id/detail\">\r\n                <ClaimToValidatedListDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/monitoring/claims/monitoring\">\r\n                <ClaimMonitoring/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/monitoring/claims/reporting\">\r\n                <ClaimReporting/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/monitoring/claims/uemoa/reporting-one\">\r\n                <ClaimReportingUemoaOne/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/monitoring/claims/uemoa/reporting-two\">\r\n                <ClaimReportingUemoaTwo/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/monitoring/claims/uemoa/reporting-three\">\r\n                <ClaimReportingUemoaThree/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/monitoring/claims/uemoa/reporting-four\">\r\n                <ClaimReportingUemoaFour/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claims/:id/detail\">\r\n                <ClaimDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim_measure\">\r\n                <SatisfactionMeasure/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim_measure/:id/detail\">\r\n                <SatisfactionMeasureDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim_archived\">\r\n                <ClaimsArchived/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/process/claim_archived/:id/detail\">\r\n                <ClaimsArchivedDetail/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/notification\">\r\n                <ConfigNotification/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/chat\">\r\n                <Chats/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/treatment/chat/add\">\r\n                <AddChatsForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/treatment/chat/contributor/:id\">\r\n                <Participants/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/treatment/chat/remove_chat\">\r\n                <RemoveChats/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/treatment/chat/add_user/:id\">\r\n                <AddMemberForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/message-apis\">\r\n                <MessageApi/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/message-apis/add\">\r\n                <MessageAPIForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/message-apis/:id/edit\">\r\n                <MessageAPIForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institutions/:id/message-apis\">\r\n                <InstitutionMessageApi/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/institution-message-apis\">\r\n                <InstitutionMessageApi/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/dashboard\">\r\n                <Dashboards/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/feedback-channels\">\r\n                <StaffChannels/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rapport-auto\">\r\n                <ConfigRapportAuto/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rapport/add\">\r\n                <ConfigRapportAutoForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rapport/edit/:id\">\r\n                <ConfigRapportAutoForm/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/users\">\r\n                <User/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/users/add\">\r\n                <UserAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/users/:id/edit\">\r\n                <UserEdit/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rules\">\r\n                <RulePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rules/add\">\r\n                <RuleAddPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/rules/:id/edit\">\r\n                <RuleAddPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/qualification-period\">\r\n                <QualificationPeriod/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/qualification-period/add\">\r\n                <QualificationPeriodAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/treatment-period\">\r\n                <TreatmentPeriod/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/treatment-period/add\">\r\n                <TreatmentPeriodAdd/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/activate-pilot\">\r\n                <ActivatePilotPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/account\">\r\n                <ProfilePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/account/personal-information\">\r\n                <ProfilePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/account/change-password\">\r\n                <ProfilePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/recurence\">\r\n                <RecurencePage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/reject-limit\">\r\n                <RejectLimitPage/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/settings/percentage-min-fusion\">\r\n                <PercentageMinFusion/>\r\n            </Route>\r\n\r\n            <Route path={\"*\"}>\r\n                <Redirect to={\"/dashboard\"}/>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Body;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\includes\\Aside.jsx",["946","947","948","949","950","951","952","953","954","955","956"],"import React from \"react\";\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {seeCollect, seeHistorique, seeMonitoring, seeParameters, seeTreatment} from \"../../helpers/function\";\r\n\r\nconst Aside = (props) => {\r\n    return (\r\n        <div className=\"kt-aside  kt-aside--fixed  kt-grid__item kt-grid kt-grid--desktop kt-grid--hor-desktop\"\r\n             id=\"kt_aside\">\r\n            <div className=\"kt-aside-menu-wrapper kt-grid__item kt-grid__item--fluid\" id=\"kt_aside_menu_wrapper\">\r\n                <div id=\"kt_aside_menu\" className=\"kt-aside-menu \" data-ktmenu-vertical=\"1\" data-ktmenu-scroll=\"1\">\r\n                    <ul className=\"kt-menu__nav \">\r\n                        <li className=\"kt-menu__item \" aria-haspopup=\"true\">\r\n                            <NavLink exact to=\"/dashboard\" className=\"kt-menu__link\" activeClassName=\"kt-menu__item--active\">\r\n                                <i className=\"kt-menu__link-icon flaticon2-architecture-and-city\"/>\r\n                                <span className=\"kt-menu__link-text\">Tableau de bord</span>\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                        {\r\n                            seeCollect(props.userPermissions) || seeTreatment(props.userPermissions) ? (\r\n                                <li className=\"kt-menu__section \">\r\n                                    <h4 className=\"kt-menu__section-text\">Processus</h4>\r\n                                    <i className=\"kt-menu__section-icon flaticon-more-v2\"/>\r\n                                </li>\r\n                            ) : null\r\n                        }\r\n\r\n                        {\r\n                            !seeCollect(props.userPermissions) ? null : (\r\n                                <li className=\"kt-menu__item  kt-menu__item--submenu\" aria-haspopup=\"true\"\r\n                                    data-ktmenu-submenu-toggle=\"hover\">\r\n                                    <a href=\"#collecte\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-menu__link kt-menu__toggle\">\r\n                                        <i className=\"kt-menu__link-icon flaticon2-telegram-logo\"/>\r\n                                        <span className=\"kt-menu__link-text\">Collecte</span>\r\n                                        <i className=\"kt-menu__ver-arrow la la-angle-right\"/>\r\n                                    </a>\r\n                                    <div className=\"kt-menu__submenu \">\r\n                                        <span className=\"kt-menu__arrow\"/>\r\n                                        <ul className=\"kt-menu__subnav\">\r\n                                            <li className=\"kt-menu__item  kt-menu__item--parent\" aria-haspopup=\"true\">\r\n                                                <span className=\"kt-menu__link\">\r\n                                                    <span className=\"kt-menu__link-text\">Collecte</span>\r\n                                                </span>\r\n                                            </li>\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'store-claim-against-any-institution') || verifyPermission(props.userPermissions, \"store-claim-against-my-institution\") || verifyPermission(props.userPermissions, \"store-claim-without-client\") ? (\r\n                                                    <NavLink exact to=\"/process/claims/add\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Enregistrer réclamation</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'list-claim-incomplete-against-any-institution') ||\r\n                                                verifyPermission(props.userPermissions, \"list-claim-incomplete-against-my-institution\")||\r\n                                                verifyPermission(props.userPermissions, \"list-claim-incomplete-without-client\")? (\r\n                                                    <NavLink exact to=\"/process/incomplete_claims\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Réclamation incomplète</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                        </ul>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            !seeTreatment(props.userPermissions) ? null : (\r\n                                <li className=\"kt-menu__item  kt-menu__item--submenu\" aria-haspopup=\"true\" data-ktmenu-submenu-toggle=\"hover\">\r\n                                    <a href=\"#treatement\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-menu__link kt-menu__toggle\">\r\n                                        <i className=\"kt-menu__link-icon flaticon-network\"/>\r\n                                        <span className=\"kt-menu__link-text\">Traitement</span>\r\n                                        <i className=\"kt-menu__ver-arrow la la-angle-right\"/>\r\n                                    </a>\r\n                                    <div className=\"kt-menu__submenu \">\r\n                                        <span className=\"kt-menu__arrow\"/>\r\n                                        <ul className=\"kt-menu__subnav\">\r\n                                            <li className=\"kt-menu__item  kt-menu__item--parent\" aria-haspopup=\"true\">\r\n                                                <span className=\"kt-menu__link\">\r\n                                                    <span className=\"kt-menu__link-text\">Traitement</span>\r\n                                                </span>\r\n                                            </li>\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, \"show-claim-awaiting-assignment\") && props.activePilot ? (\r\n                                                    <NavLink exact to=\"/process/claim-assign\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Réclamations à tranférer</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'list-claim-awaiting-treatment') ? (\r\n                                                    <NavLink exact to=\"/process/unit-claims\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Liste des réclamations</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            {(verifyPermission(props.userPermissions, 'assignment-claim-awaiting-treatment') && props.lead) && (\r\n                                                <NavLink exact to=\"/process/claim-reassign\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                    <li className=\"kt-menu__link \">\r\n                                                        <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                        <span className=\"kt-menu__link-text\">Réassigner réclamation</span>\r\n                                                    </li>\r\n                                                </NavLink>\r\n                                            )}\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions,\"list-claim-assignment-to-staff\") ? (\r\n                                                    <NavLink exact to=\"/process/claim-assign/to-staff\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Réclamations à traiter</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            {\r\n                                                (verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-my-institution') ||\r\n                                                    verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-any-institution')) && props.activePilot ? (\r\n                                                    <NavLink exact to=\"/process/claim-to-validated\"\r\n                                                             className=\"kt-menu__item \"\r\n                                                             activeClassName=\"kt-menu__item--active\"\r\n                                                             aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Réclamations à valider</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'list-satisfaction-measured-any-claim')||\r\n                                                verifyPermission(props.userPermissions, 'list-satisfaction-measured-my-claim')?(\r\n                                                    <NavLink exact to=\"/process/claim_measure\" className=\"kt-menu__item \"\r\n                                                             activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Mesure de Satisfaction</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'list-any-claim-archived')||\r\n                                                verifyPermission(props.userPermissions, 'list-my-claim-archived')?(\r\n                                                    <NavLink exact to=\"/process/claim_archived\" className=\"kt-menu__item \"\r\n                                                             activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Archives</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'list-my-discussions')||\r\n                                                verifyPermission(props.userPermissions, 'contribute-discussion')?(\r\n                                                    <NavLink exact to=\"/chat\" className=\"kt-menu__item \"\r\n                                                             activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                        <li className=\"kt-menu__link \">\r\n                                                            <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                            <span className=\"kt-menu__link-text\">Discussions</span>\r\n                                                        </li>\r\n                                                    </NavLink>\r\n                                                ) : null\r\n                                            }\r\n\r\n\r\n\r\n                                        </ul>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            !seeMonitoring(props.userPermissions) ? null : (\r\n                                <>\r\n                                    <li className=\"kt-menu__section \">\r\n                                        <h4 className=\"kt-menu__section-text\">Monitoring</h4>\r\n                                        <i className=\"kt-menu__section-icon flaticon-more-v2\"/>\r\n                                    </li>\r\n\r\n                                    {\r\n                                        verifyPermission(props.userPermissions, 'list-monitoring-claim-any-institution') || verifyPermission(props.userPermissions, 'list-monitoring-claim-my-institution') ? (\r\n                                            <NavLink exact to=\"/monitoring/claims/monitoring\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                <li className=\"kt-menu__link \">\r\n                                                    <i className=\"kt-menu__link-icon flaticon2-heart-rate-monitor\"/>\r\n                                                    <span className=\"kt-menu__link-text\">Suivi des réclamations</span>\r\n                                                </li>\r\n                                            </NavLink>\r\n                                        ) : null\r\n                                    }\r\n\r\n                                    {\r\n                                        verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\r\n                                            <NavLink exact to=\"/monitoring/claims/reporting\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                <li className=\"kt-menu__link \">\r\n                                                    <i className=\"kt-menu__link-icon flaticon2-heart-rate-monitor\"/>\r\n                                                    <span className=\"kt-menu__link-text\">Reporting</span>\r\n                                                </li>\r\n                                            </NavLink>\r\n                                        ) : null\r\n                                    }\r\n\r\n                                    <li className=\"kt-menu__item  kt-menu__item--submenu\" aria-haspopup=\"true\"\r\n                                        data-ktmenu-submenu-toggle=\"hover\">\r\n                                        <a href=\"#historique\" onClick={e => e.preventDefault()}\r\n                                           className=\"kt-menu__link kt-menu__toggle\">\r\n                                            <i className=\"kt-menu__link-icon flaticon2-heart-rate-monitor\"/>\r\n                                            <span className=\"kt-menu__link-text\">Rapport</span>\r\n                                            <i className=\"kt-menu__ver-arrow la la-angle-right\"/>\r\n                                        </a>\r\n                                        <div className=\"kt-menu__submenu \">\r\n                                            <span className=\"kt-menu__arrow\"/>\r\n                                            <ul className=\"kt-menu__subnav\">\r\n                                                <li className=\"kt-menu__item  kt-menu__item--parent\" aria-haspopup=\"true\">\r\n                                                <span className=\"kt-menu__link\">\r\n                                                    <span className=\"kt-menu__link-text\">Rapport</span>\r\n                                                </span>\r\n                                                </li>\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\r\n                                                        <NavLink exact to=\"/monitoring/claims/uemoa/reporting-one\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Etat global</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\r\n                                                        <NavLink exact to=\"/monitoring/claims/uemoa/reporting-two\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Etat Retard de +30</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\r\n                                                        <NavLink exact to=\"/monitoring/claims/uemoa/reporting-three\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Etat Hors Délai</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\r\n                                                        <NavLink exact to=\"/monitoring/claims/uemoa/reporting-four\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Etat analytique</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n                                            </ul>\r\n                                        </div>\r\n                                    </li>\r\n                                </>\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            !seeHistorique(props.userPermissions) ? null : (\r\n                                <>\r\n                                    <li className=\"kt-menu__section \">\r\n                                        <h4 className=\"kt-menu__section-text\">Historiques</h4>\r\n                                        <i className=\"kt-menu__section-icon flaticon-more-v2\"/>\r\n                                    </li>\r\n                                    <li className=\"kt-menu__item  kt-menu__item--submenu\" aria-haspopup=\"true\"\r\n                                        data-ktmenu-submenu-toggle=\"hover\">\r\n                                        <a href=\"#historique\" onClick={e => e.preventDefault()}\r\n                                           className=\"kt-menu__link kt-menu__toggle\">\r\n                                            <i className=\"kt-menu__link-icon flaticon2-telegram-logo\"/>\r\n                                            <span className=\"kt-menu__link-text\">Historiques</span>\r\n                                            <i className=\"kt-menu__ver-arrow la la-angle-right\"/>\r\n                                        </a>\r\n                                        <div className=\"kt-menu__submenu \">\r\n                                            <span className=\"kt-menu__arrow\"/>\r\n                                            <ul className=\"kt-menu__subnav\">\r\n                                                <li className=\"kt-menu__item  kt-menu__item--parent\" aria-haspopup=\"true\">\r\n                                                <span className=\"kt-menu__link\">\r\n                                                    <span className=\"kt-menu__link-text\">Historiques</span>\r\n                                                </span>\r\n                                                </li>\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'history-list-create-claim')? (\r\n                                                        <NavLink exact to=\"/historic/claims/add\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Réclamations créées</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"history-list-treat-claim\")? (\r\n                                                        <NavLink exact to=\"/historic/claims/treat\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Réclamations traitées</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                            </ul>\r\n                                        </div>\r\n                                    </li>\r\n                                </>\r\n                            )\r\n                        }\r\n\r\n\r\n                        {\r\n                            !seeParameters(props.userPermissions) ? null : (\r\n                                <>\r\n                                    <li className=\"kt-menu__section \">\r\n                                        <h4 className=\"kt-menu__section-text\">Paramètres</h4>\r\n                                        <i className=\"kt-menu__section-icon flaticon-more-v2\"/>\r\n                                    </li>\r\n                                    <li className=\"kt-menu__item  kt-menu__item--submenu\" aria-haspopup=\"true\" data-ktmenu-submenu-toggle=\"hover\">\r\n                                        <a href=\"#parameter\" onClick={e => e.preventDefault()}\r\n                                           className=\"kt-menu__link kt-menu__toggle\">\r\n                                            <i className=\"kt-menu__link-icon flaticon-settings\"/>\r\n                                            <span className=\"kt-menu__link-text\">Paramètres</span>\r\n                                            <i className=\"kt-menu__ver-arrow la la-angle-right\"/>\r\n                                        </a>\r\n                                        <div className=\"kt-menu__submenu \"><span className=\"kt-menu__arrow\"/>\r\n                                            <ul className=\"kt-menu__subnav\">\r\n                                                <li className=\"kt-menu__item  kt-menu__item--parent\" aria-haspopup=\"true\">\r\n                                                    <span className=\"kt-menu__link\">\r\n                                                        <span className=\"kt-menu__link-text\">Paramètres</span>\r\n                                                    </span>\r\n                                                </li>\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-components-parameters\")?(\r\n                                                        <NavLink exact to=\"/settings/config\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Configuration</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ):null\r\n\r\n                                                }\r\n\r\n                                                {/*{\r\n                                                    verifyPermission(props.userPermissions, \"update-sms-parameters\") ? (\r\n                                                        <NavLink exact to=\"/settings/sms\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">SMS</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }*/}\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'update-mail-parameters') ? (\r\n                                                        <NavLink exact to=\"/settings/mail\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Envoie de mail</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-any-institution\") ?\r\n                                                        <NavLink to=\"/settings/institution\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Institution</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                        : null\r\n                                                }\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-my-institution\") ?\r\n                                                        <NavLink to=\"/settings/institution/edit\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Mon Institution</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                        : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-claim-object-requirement\") ?\r\n                                                        <NavLink to=\"/settings/requirement\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\"> Exigences</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                        : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'update-processing-circuit-my-institution') ||\r\n                                                    verifyPermission(props.userPermissions, \"update-processing-circuit-any-institution\") ||\r\n                                                    verifyPermission(props.userPermissions, \"update-processing-circuit-without-institution\")?\r\n                                                        (\r\n                                                            <NavLink to=\"/settings/processing-circuit\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                                <li className=\"kt-menu__link \">\r\n                                                                    <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                    <span className=\"kt-menu__link-text\"> Entités de Traitement</span>\r\n                                                                </li>\r\n                                                            </NavLink>\r\n                                                        ): null\r\n\r\n                                                }\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"config-reporting-claim-any-institution\")||\r\n                                                    verifyPermission(props.userPermissions, \"config-reporting-claim-my-institution\")?\r\n                                                        <NavLink to=\"/settings/rapport-auto\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\"> Rapport Automatique</span>\r\n                                                            </li>\r\n                                                        </NavLink>:null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-relance-parameters\")?(\r\n                                                        <NavLink to=\"/settings/relance\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Configuration de Relance</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ): null\r\n                                                }\r\n\r\n                                                <NavLink to=\"/settings/faqs/list\" className=\"kt-menu__item \"\r\n                                                         activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                    <li className=\"kt-menu__link \">\r\n                                                        <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                        <span className=\"kt-menu__link-text\">FAQs</span>\r\n                                                    </li>\r\n                                                </NavLink>\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-faq\")?\r\n                                                        <NavLink exact to=\"/settings/faqs/add\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Editer FAQs</span>\r\n                                                            </li>\r\n                                                        </NavLink> :null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-faq-category\")?\r\n                                                        <NavLink exact to=\"/settings/faqs/category\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Catégorie FAQs</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                        :null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-any-institution-type-role') || verifyPermission(props.userPermissions, 'list-my-institution-type-role') ? (\r\n                                                        <NavLink exact to=\"/settings/rules\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Role</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-user-my-institution\") || verifyPermission(props.userPermissions, \"list-user-any-institution\") ? (\r\n                                                        <NavLink exact to=\"/settings/users\" className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Utilisateur</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-client-from-any-institution\") || verifyPermission(props.userPermissions, \"list-client-from-my-institution\") ? (\r\n                                                        <NavLink exact to=\"/settings/clients\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Clients</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-relationship\") ?\r\n                                                        <NavLink exact to=\"/settings/relationship\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Type de relation client</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                        : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'update-category-client') ?\r\n                                                        <NavLink to=\"/settings/clients/category\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Catégorie Clients </span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                        : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-type-client\") ?\r\n                                                        <NavLink to=\"/settings/clients/type\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Type Clients </span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                        : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-performance-indicator\") ? (\r\n                                                        <NavLink exact to=\"/settings/performance_indicator\"\r\n                                                                 className=\"kt-menu__item \" activeClassName=\"kt-menu__item--active\"\r\n                                                                 aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span\r\n                                                                    className=\"kt-menu__link-text\">Indicateur de performance</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-unit-type') ? (\r\n                                                        <NavLink exact to=\"/settings/unit_type\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Type d'unité</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-any-unit') || verifyPermission(props.userPermissions, 'list-my-unit') || verifyPermission(props.userPermissions, 'list-without-link-unit') ? (\r\n                                                        <NavLink exact to=\"/settings/unit\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Unité</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-position') ? (\r\n                                                        <NavLink exact to=\"/settings/positions\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Fonctions</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-claim-category') ? (\r\n                                                        <NavLink exact to=\"/settings/claim_categories\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Catégorie de réclamation</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-claim-object') ? (\r\n                                                        <NavLink exact to=\"/settings/claim_objects\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Objet de réclamation</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-staff-from-any-unit\") || verifyPermission(props.userPermissions, 'list-staff-from-my-unit') || verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit') ? (\r\n                                                        <NavLink exact to=\"/settings/staffs\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Agent</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-severity-level') ? (\r\n                                                        <NavLink exact to=\"/settings/severities\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Niveau de gravité</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-currency') ? (\r\n                                                        <NavLink exact to=\"/settings/currencies\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Devise</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, 'list-channel') ? (\r\n                                                        <NavLink exact to=\"/settings/channels\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Canaux</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-notifications\") ? (\r\n                                                        <NavLink exact to=\"/settings/notification\" className=\"kt-menu__item \"\r\n                                                                 activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Notification</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-message-apis\") ? (\r\n                                                        <NavLink exact to=\"/settings/message-apis\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Message API</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-my-institution-message-api\") ? (\r\n                                                        <NavLink exact to=\"/settings/institution-message-apis\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Institution Message API</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-delai-qualification-parameters\") ? (\r\n                                                        <NavLink exact to=\"/settings/qualification-period\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Delai qualification</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"list-delai-treatment-parameters\") ? (\r\n                                                        <NavLink exact to=\"/settings/treatment-period\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Delai traitement</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n\r\n                                                {\r\n\r\n                                                    verifyPermission(props.userPermissions, \"update-active-pilot\")? (\r\n                                                        <NavLink exact to=\"/settings/activate-pilot\"\r\n                                                                 className=\"kt-menu__item\"\r\n                                                                 activeClassName=\"kt-menu__item--active\"\r\n                                                                 aria-haspopup=\"true\">\r\n\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Pilote actif</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-recurrence-alert-settings\") ? (\r\n                                                        <NavLink exact to=\"/settings/recurence\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Configuration des alerts de recurences</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-reject-unit-transfer-parameters\") ? (\r\n                                                        <NavLink exact to=\"/settings/reject-limit\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Configuration limitation rejet</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n\r\n                                                {\r\n                                                    verifyPermission(props.userPermissions, \"update-min-fusion-percent-parameters\") ? (\r\n                                                        <NavLink exact to=\"/settings/percentage-min-fusion\" className=\"kt-menu__item\" activeClassName=\"kt-menu__item--active\" aria-haspopup=\"true\">\r\n                                                            <li className=\"kt-menu__link \">\r\n                                                                <i className=\"kt-menu__link-bullet kt-menu__link-bullet--dot\"><span/></i>\r\n                                                                <span className=\"kt-menu__link-text\">Configuration pourcentage minimum fusion</span>\r\n                                                            </li>\r\n                                                        </NavLink>\r\n                                                    ) : null\r\n                                                }\r\n                                            </ul>\r\n                                        </div>\r\n                                    </li>\r\n                                </>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        activePilot: state.user.user.staff.is_active_pilot,\r\n        lead: state.user.user.staff.is_lead,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Aside);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Error401.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FaqsForm.jsx",["957","958","959"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig, toastEditErrorMessageConfig, toastEditSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {formatSelectOption} from \"../../helpers/function\";\r\nimport Select from \"react-select\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\r\n\r\nconst FaqsForm = (props) => {\r\n\r\n    const defaultData = {\r\n        faq_category_id: \"\",\r\n        question: \"\",\r\n        answer: \"\",\r\n    };\r\n    const defaultError = {\r\n        faq_category_id: [],\r\n        question: [],\r\n        answer: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [categorieData, setCategorieData] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const {editfaqid} = useParams();\r\n\r\n    if (!editfaqid) {\r\n        if (!verifyPermission(props.userPermissions, 'store-faq'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-faq'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + '/faq-categories')\r\n                .then(response => {\r\n                    setCategorieData(response.data)\r\n                });\r\n            if (editfaqid) {\r\n                axios.get(appConfig.apiDomaine + `/faqs/${editfaqid}`)\r\n                    .then(response => {\r\n                        // console.log(response.data, \"FAQS_Edit\")\r\n                        const newFaq = {\r\n                            faq_category_id: response.data.faq_category.id,\r\n                            question: response.data.question[\"fr\"],\r\n                            answer: response.data.answer[\"fr\"]\r\n                        };\r\n                        setData(newFaq);\r\n                        setCategory({value: response.data.faq_category.id, label: response.data.faq_category.name.fr});\r\n                    })\r\n            }\r\n        }\r\n    }, []);\r\n    const onChangeCategory = (selected) => {\r\n        const newData = {...data};\r\n        newData.faq_category_id = selected.value;\r\n        setCategory(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeQuiz = (e) => {\r\n        const newData = {...data};\r\n        newData.question = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeAnswers = (e) => {\r\n        const newData = {...data};\r\n        newData.answer = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if(editfaqid){\r\n                axios.put(appConfig.apiDomaine + `/faqs/${editfaqid}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }else {\r\n                axios.post(appConfig.apiDomaine + `/faqs`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return(\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/faqs/faq\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    FAQs\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        editfaqid ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                editfaqid?\" Modifier une FAQ\" :\"Ajout de FAQs\"\r\n\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n                                                                <div\r\n                                                                    className={error.faq_category_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"exampleSelect1\">Catégorie</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        {categorieData ? (\r\n                                                                            <Select\r\n                                                                                value={category}\r\n                                                                                onChange={onChangeCategory}\r\n                                                                                options={formatSelectOption(categorieData, 'name', \"fr\")}\r\n                                                                            />\r\n                                                                        ) : ''\r\n                                                                        }\r\n\r\n                                                                        {\r\n                                                                            error.faq_category_id.length ? (\r\n                                                                                error.faq_category_id.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.question.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"quiz\">Question</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"quiz\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.question.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Veillez entrer la question\"\r\n                                                                            value={data.question}\r\n                                                                            onChange={(e) => onChangeQuiz(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.question.length ? (\r\n                                                                                error.question.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.answer.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"answer\">Réponse</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                <textarea\r\n                                                                    id=\"answer\"\r\n                                                                    className={error.answer.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    placeholder=\"Veillez entrer la réponse\"\r\n                                                                    cols=\"30\"\r\n                                                                    rows=\"5\"\r\n                                                                    value={data.answer}\r\n                                                                    onChange={(e) => onChangeAnswers(e)}\r\n                                                                />\r\n                                                                        {\r\n                                                                            error.answer.length ? (\r\n                                                                                error.answer.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">{editfaqid?\"Modifier\":\"Enregistrer\"}</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/faqs/add\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/faqs/add\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        editfaqid ?\r\n            verifyPermission(props.userPermissions, 'update-faq') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-faq') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(FaqsForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\notification.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\middleware\\verifyToken.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\EmptyNotification.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Mail.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\PerformanceIndicator.jsx",["960"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst PerformanceIndicator = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"list-performance-indicator\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [performances, setPerformances] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n       async function fetchData () {\r\n           await axios.get(`${appConfig.apiDomaine}/performance-indicators`)\r\n               .then(response => {\r\n                   setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                   setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                   setPerformances(response.data);\r\n                   setLoad(false);\r\n               })\r\n               .catch(error => {\r\n                   setLoad(false);\r\n                   console.log(\"Something is wrong\");\r\n               })\r\n           ;\r\n       }\r\n       if (verifyTokenExpire())\r\n           fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newPerformances = [...performances];\r\n        newPerformances = newPerformances.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.value).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.mesure_unit).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newPerformances;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(performances.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(performances.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(performances.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(performances.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(performances.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                performances.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                performances.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deletePerformanceIndicator = (performanceId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(`${appConfig.apiDomaine}/performance-indicators/${performanceId}`)\r\n                            .then(response => {\r\n                                const newPerformances = [...performances];\r\n                                newPerformances.splice(index, 1);\r\n                                setPerformances(newPerformances);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newPerformances.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newPerformances.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (performance, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{performance.name[\"fr\"]}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"300px\" }}>{performance.description[\"fr\"]}</td>\r\n                <td>{performance.value}</td>\r\n                <td>{performance.mesure_unit}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"update-performance-indicator\") ? (\r\n                            <Link to={`/settings/performance_indicator/${performance.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"destroy-performance-indicator\") ? (\r\n                            <button\r\n                                onClick={(e) => deletePerformanceIndicator(performance.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-performance-indicator\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#/icon\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#indicatorPerformance\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Indicateur de performance\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-performance-indicator\"}\r\n                            title={\"Indicateur de performance\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/performance_indicator/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"250px\" }}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"20px\" }}\r\n                                                            aria-label=\"Ship Address: activate to sort column ascending\">Value\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"15px\" }}\r\n                                                            aria-label=\"Company Agent: activate to sort column ascending\">Unité de mésure\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        performances.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((performance, index) => (\r\n                                                                    printBodyTable(performance, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Valeur</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Unité de mésure</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {performances.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PerformanceIndicator);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Unit.jsx",["961","962","963","964"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/units`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/my/units/${unitId}`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/units`,\r\n            destroy: unitId => `${appConfig.apiDomaine}/any/units/${unitId}`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/units`,\r\n            destroy: unitId => `${appConfig.apiDomaine}/my/units/${unitId}`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/without-link/units`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/without-link/units/${unitId}`,\r\n    }\r\n};\r\n\r\nconst Unit = (props) => {\r\n    if (!(verifyPermission(props.userPermissions, 'list-any-unit') || verifyPermission(props.userPermissions, 'list-my-unit') || verifyPermission(props.userPermissions, 'list-without-link-unit')))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-any-unit'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-my-unit'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n    const [load, setLoad] = useState(true);\r\n    const [units, setUnits] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setUnits(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [endPoint.list, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    {/*<tr key={index} role=\"row\" className=\"odd\">\r\n        {\r\n            verifyPermission(props.userPermissions, 'list-any-unit') ? (\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{unit.institution ? unit.institution.name : null}</td>\r\n            ) : : null\r\n        }\r\n    </tr>*/}\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newUnits = [...units];\r\n        newUnits = newUnits.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.unit_type.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.lead ? el.lead.identite ? el.lead.identite.lastname+\" \"+el.lead.identite.firstname : \"Pas d'identite\" : \"Pas de responsable\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(verifyPermission(props.userPermissions, \"list-any-unit\") ? el.institution ? el.institution.name : \"\" : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newUnits;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(units.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(units.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(units.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(units.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(units.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                units.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                units.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteUnit = (unitId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(endPoint.destroy(unitId))\r\n                            .then(response => {\r\n                                const newUnits = [...units];\r\n                                newUnits.splice(index, 1);\r\n                                setUnits(newUnits);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newUnits.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newUnits.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (unit, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{unit.name[\"fr\"]}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{unit.unit_type.name[\"fr\"]}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>\r\n                    {\r\n                        unit.lead ?\r\n                            unit.lead.identite ? unit.lead.identite.lastname+\" \"+unit.lead.identite.firstname : \"Pas d'identité\"\r\n                            : \"Pas de responsable\"\r\n                    }\r\n                </td>\r\n                {\r\n                    verifyPermission(props.userPermissions, 'list-any-unit') ? (\r\n                        <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{unit.institution ? unit.institution.name : null}</td>\r\n                    ) : null\r\n                }\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-any-unit') || verifyPermission(props.userPermissions, 'update-my-unit') || verifyPermission(props.userPermissions, 'update-without-link-unit') ? (\r\n                            <Link to={`/settings/unit/${unit.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-any-unit') || verifyPermission(props.userPermissions, 'destroy-my-unit') || verifyPermission(props.userPermissions, 'destroy-without-link-unit') ? (\r\n                            <button\r\n                                onClick={(e) => deleteUnit(unit.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-any-unit') || verifyPermission(props.userPermissions, 'list-my-unit') || verifyPermission(props.userPermissions, 'list-without-link-unit') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Unité\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={\"Liste des services, agences, etc...\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={['store-any-unit', 'store-my-unit', 'store-without-link-unit']}\r\n                            title={\"Unité\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/unit/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\"><label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom Unité\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Type Unité\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Responsable\r\n                                                        </th>\r\n                                                        {\r\n                                                            verifyPermission(props.userPermissions, 'list-any-unit') ? (\r\n                                                                <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                    colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                                    aria-label=\"Country: activate to sort column ascending\">Institution\r\n                                                                </th>\r\n                                                            ) : <th style={{display: \"none\"}}/>\r\n                                                        }\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        units.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((unit, index) => (\r\n                                                                    printBodyTable(unit, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom Unité</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Type Unité</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Responsable</th>\r\n                                                        {\r\n                                                            verifyPermission(props.userPermissions, 'list-any-unit') ? (\r\n                                                                <th rowSpan=\"1\" colSpan=\"1\">Institution</th>\r\n                                                            ) : <th style={{display: \"none\"}}/>\r\n                                                        }\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {units.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Unit);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Staff.jsx",["965","966"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport ExportButton from \"../components/ExportButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/staff`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/my/staff/${unitId}`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/staff`,\r\n            destroy: unitId => `${appConfig.apiDomaine}/any/staff/${unitId}`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/staff`,\r\n            destroy: unitId => `${appConfig.apiDomaine}/my/staff/${unitId}`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/maybe/no/staff`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/maybe/no/staff/${unitId}`,\r\n    }\r\n};\r\n\r\nconst   Staff = (props) => {\r\n    if (!(verifyPermission(props.userPermissions, 'list-staff-from-any-unit') || verifyPermission(props.userPermissions, 'list-staff-from-my-unit')|| verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit')) )\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-any-unit'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-my-unit'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [staffs, setStaffs] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setStaffs(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                });\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [endPoint.list, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const separateStringByComa = (arrayString) => {\r\n        let generateString = \"\";\r\n        arrayString.map((t, index) => {\r\n            generateString = index + 1 !== arrayString.length ? generateString + t+\", \" : generateString + t\r\n        });\r\n        return generateString;\r\n    };\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newStaffs = [...staffs];\r\n        newStaffs = newStaffs.filter(el => (\r\n            getLowerCaseString(`${el.is_lead ? 'L' : ''} ${el.identite.lastname} ${el.identite.firstname}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(separateStringByComa(el.identite.telephone)).indexOf(value) >= 0 ||\r\n            getLowerCaseString(separateStringByComa(el.identite.email)).indexOf(value) >= 0 ||\r\n            getLowerCaseString(verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit') ? el.unit ? el.unit.name[\"fr\"] : '' : el.unit.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(verifyPermission(props.userPermissions, 'list-staff-from-any-unit') ?  el.institution.name[\"fr\"] : '').indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.position.name[\"fr\"]).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newStaffs;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(staffs.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(staffs.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(staffs.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(staffs.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(staffs.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                staffs.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                staffs.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteStaff = (staffId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(endPoint.destroy(staffId))\r\n                            .then(response => {\r\n                                const newStaffs = [...staffs];\r\n                                newStaffs.splice(index, 1);\r\n                                setStaffs(newStaffs);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newStaffs.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newStaffs.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (staff, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{staff.is_lead ? (<span className=\"kt-badge kt-badge--success kt-badge--inline\">L</span>) : null} {staff.identite.lastname+\" \"+staff.identite.firstname}</td>\r\n                <td>\r\n                    {\r\n                        staff.identite.telephone.map((tel, index) => (\r\n                            index === staff.identite.telephone.length - 1 ? tel : tel+\", \"\r\n                        ))\r\n                    }\r\n\r\n                </td>\r\n                <td>\r\n                    {\r\n                        staff.identite.email.map((mail, index) => (\r\n                            index === staff.identite.email.length - 1 ? mail : mail+\", \"\r\n                        ))\r\n                    }\r\n                </td>\r\n                {\r\n                    verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit') ? (\r\n                        staff.unit ? (\r\n                            <td>{staff.unit.name[\"fr\"]}</td>\r\n                            ) : null\r\n                    ) : (\r\n                        <td>{staff.unit.name[\"fr\"]}</td>\r\n                    )\r\n                }\r\n                {\r\n                    verifyPermission(props.userPermissions, 'list-staff-from-any-unit') ? (\r\n                        <td>{staff.institution.name}</td>\r\n                    ) : null\r\n                }\r\n                <td>{staff.position.name[\"fr\"]}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"update-staff-from-any-unit\") || verifyPermission(props.userPermissions, 'update-staff-from-my-unit') || verifyPermission(props.userPermissions, 'update-staff-from-maybe-no-unit') ? (\r\n                            <Link to={`/settings/staffs/${staff.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"destroy-staff-from-any-unit\") || verifyPermission(props.userPermissions, 'destroy-staff-from-my-unit') || verifyPermission(props.userPermissions, 'destroy-staff-from-maybe-no-unit') ? (\r\n                            <button\r\n                                onClick={(e) => deleteStaff(staff.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-staff-from-any-unit') || verifyPermission(props.userPermissions, 'list-staff-from-my-unit') || verifyPermission(props.userPermissions, 'list-staff-from-maybe-no-unit') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Agent\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={(<><span className=\"kt-badge kt-badge--success kt-badge--inline\">L</span> : Responsable d'unité</>)}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={[\"store-staff-from-any-unit\", \"store-staff-from-my-unit\", 'list-staff-from-maybe-no-unit']}\r\n                            title={\"Agent\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/staffs/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <ExportButton downloadLink={`${appConfig.apiDomaine}/download-excel/staffs`} pageUrl={\"/settings/staffs/import\"}/>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"50px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Téléphone\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"50px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Email\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Unité\r\n                                                        </th>\r\n                                                        {\r\n                                                            verifyPermission(props.userPermissions, 'list-staff-from-any-unit') ? (\r\n                                                                <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                    colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                                    aria-label=\"Country: activate to sort column ascending\">Institution\r\n                                                                </th>\r\n                                                            ) : <th style={{display: \"none\"}}/>\r\n                                                        }\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Position\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"53px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        staffs.length ? (\r\n                                                            showList ? (\r\n                                                                showList.map((staff, index) => (\r\n                                                                    printBodyTable(staff, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Téléphone</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Email</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Unité</th>\r\n                                                        {\r\n                                                            verifyPermission(props.userPermissions, 'list-staff-from-any-unit') ? (\r\n                                                                <th rowSpan=\"1\" colSpan=\"1\">Institution</th>\r\n                                                            ) : <th style={{display: \"none\"}}/>\r\n                                                        }\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Position</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {staffs.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Staff);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\UnitType.jsx",["967"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst UnitType = (props) => {\r\n    document.title = \"Satis client - Paramètre type d'unité\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-unit-type\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [unitTypes, setUnitTypes] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(`${appConfig.apiDomaine}/unit-types`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setUnitTypes(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newUnitTypes = [...unitTypes];\r\n        newUnitTypes = newUnitTypes.filter(el => (\r\n            getLowerCaseString(el.name ? el.name[\"fr\"] : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.can_be_target ? \"Oui\" : \"Non\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.can_treat ? \"Oui\" : \"Non\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description ? el.description[\"fr\"] : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newUnitTypes;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(unitTypes.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(unitTypes.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(unitTypes.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(unitTypes.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(unitTypes.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                unitTypes.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                unitTypes.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteUnitType = (unitTypeId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(`${appConfig.apiDomaine}/unit-types/${unitTypeId}`)\r\n                            .then(response => {\r\n                                const newUnitTypes = [...unitTypes];\r\n                                newUnitTypes.splice(index, 1);\r\n                                setUnitTypes(newUnitTypes);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (unitType, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{unitType.name ? unitType.name[\"fr\"] : \"-\"}</td>\r\n                <td>{unitType.can_be_target ? \"Oui\" : \"Non\"}</td>\r\n                <td>{unitType.can_treat ? \"Oui\" : \"Non\"}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"300px\" }}>{unitType.description ? unitType.description[\"fr\"] : \"-\"}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-unit-type') ? (\r\n                            <Link to={`/settings/unit_type/${unitType.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-unit-type') ? (\r\n                            <button\r\n                                onClick={(e) => deleteUnitType(unitType.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-unit-type') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Type d'unité\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-unit-type\"}\r\n                            title={\"Type d'unité\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/unit_type/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Peut-être visé par une réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Peut traité une réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"300px\" }}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        unitTypes.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((unitType, index) => (\r\n                                                                    printBodyTable(unitType, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Peut-être visé par une réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Peut traité une réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {unitTypes.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UnitType);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimCategory.jsx",["968"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport ExportButton from \"../components/ExportButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst ClaimCategory = (props) => {\r\n    if (!verifyPermission(props.userPermissions, 'list-claim-category'))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claimCategories, setClaimCategories] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(`${appConfig.apiDomaine}/claim-categories`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setClaimCategories(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaimCategories = [...claimCategories];\r\n        newClaimCategories = newClaimCategories.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newClaimCategories;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimCategories.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimCategories.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimCategories.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimCategories.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimCategories.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimCategories.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimCategories.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteClaimCategory = (claimCategoryId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/claim-categories/${claimCategoryId}`)\r\n                            .then(response => {\r\n                                const newClaimCategories = [...claimCategories];\r\n                                newClaimCategories.splice(index, 1);\r\n                                setClaimCategories(newClaimCategories);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newClaimCategories.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newClaimCategories.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(\r\n                                        toastErrorMessageWithParameterConfig(error.response.data.error)\r\n                                    );\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claimCategory, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claimCategory.name[\"fr\"]}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-claim-category') ? (\r\n                            <Link to={`/settings/claim_categories/${claimCategory.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-claim-category') ? (\r\n                            <button\r\n                                onClick={(e) => deleteClaimCategory(claimCategory.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-claim-category') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Catégorie de réclamation\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-claim-category\"}\r\n                            title={\"Catégories de réclamation\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/claim_categories/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <ExportButton\r\n                                                downloadLink={`${appConfig.apiDomaine}/download-excel/categories`}\r\n                                                pageUrl={\"/settings/claim_category/import\"}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claimCategories.length ? (\r\n                                                            showList ? (\r\n                                                                showList.map((claimCategory, index) => (\r\n                                                                    printBodyTable(claimCategory, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {claimCategories.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        language: state.language.languageSelected\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimCategory);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimObject.jsx",["969"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport ExportButton from \"../components/ExportButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst ClaimObject = (props) => {\r\n    if (!verifyPermission(props.userPermissions, 'list-claim-object'))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claimObjects, setClaimObjects] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(`${appConfig.apiDomaine}/claim-objects`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setClaimObjects(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        let newClaimObjects = [...claimObjects];\r\n        newClaimObjects = newClaimObjects.filter(el => {\r\n            if (el.description[\"fr\"]) {\r\n                return (el.name[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.description[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.claim_category.name[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.time_limit.toString().indexOf(value.toString()) >= 0);\r\n            } else {\r\n                return (el.name[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.claim_category.name[\"fr\"].toLowerCase().indexOf(value) >= 0 || el.time_limit.toString().indexOf(value.toString()) >= 0);\r\n            }\r\n        });\r\n\r\n        return newClaimObjects;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimObjects.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimObjects.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimObjects.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimObjects.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimObjects.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimObjects.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimObjects.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteClaimObject = (claimObjectId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/claim-objects/${claimObjectId}`)\r\n                            .then(response => {\r\n                                const newClaimObjects = [...claimObjects];\r\n                                newClaimObjects.splice(index, 1);\r\n                                setClaimObjects(newClaimObjects);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newClaimObjects.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newClaimObjects.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claimObject, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claimObject.name[\"fr\"]}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"200px\" }}>{claimObject ? claimObject.description[\"fr\"] : null}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"70px\" }}>{claimObject.claim_category.name[props.language]}</td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"50px\" }}>{claimObject.severity_level ? claimObject.time_limit : null}</td>\r\n                <td>\r\n                    {\r\n                        claimObject.severity_level ? (\r\n                            <div className=\"p-2 text-center\" style={{backgroundColor: claimObject.severity_level.color, color: claimObject.severity_level.color === \"#ffffff\" ? \"black\" : \"white\"}}>\r\n                                {\r\n                                    claimObject.severity_level.color ? (\r\n                                            `${claimObject.severity_level.color} ${claimObject.severity_level.color === \"#ffffff\" ? \" Blanc\" : ''}`\r\n                                        )\r\n                                        : (\r\n                                            <strong style={{color: \"black\"}}>-</strong>\r\n                                        )\r\n                                }\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-claim-category') ? (\r\n                            <Link to={`/settings/claim_objects/${claimObject.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-claim-category') ? (\r\n                            <button\r\n                                onClick={(e) => deleteClaimObject(claimObject.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-claim-category') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Objet de réclamation\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-claim-object\"}\r\n                            title={\"Objet de réclamation\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/claim_objects/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <ExportButton\r\n                                                downloadLink={`${appConfig.apiDomaine}/download-excel/objects`}\r\n                                                pageUrl={\"/settings/claim_objects/import\"}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                        <tr role=\"row\">\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"250px\" }}\r\n                                                                aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Nom de la catégorie\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Temps limite\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70px\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Niveau de gravité\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                                Action\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claimObjects.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((claimObject, index) => (\r\n                                                                    printBodyTable(claimObject, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom de la catégorie</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Temps limite</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Niveau de gravité</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {claimObjects.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        language: state.language.languageSelected\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimObject);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\FAQs.jsx",["970","971","972","973","974","975"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {connect} from \"react-redux\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst FAQs = (props) => {\r\n    document.title = \"Satis client - Paramètre FAQs\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-faq\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [faqs, setFaqs] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/faqs\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setFaqs(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newFaqs = [...faqs];\r\n        newFaqs = newFaqs.filter(el => (\r\n            getLowerCaseString(el.faq_category.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.question[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.answer[\"fr\"]).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newFaqs;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(faqs.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(faqs.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(faqs.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(faqs.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(faqs.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                faqs.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                faqs.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteFaqs = (faqId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/faqs/${faqId}`)\r\n                            .then(response => {\r\n                                console.log(response, \"OK\");\r\n                                const newFaq = [...faqs];\r\n                                newFaq.splice(index, 1);\r\n                                setFaqs(newFaq);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newFaq.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newFaq.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n\r\n                }\r\n            })\r\n        ;\r\n    };\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (faq, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{faq.faq_category.name.fr}</td>\r\n                <td>{faq.question.fr}</td>\r\n                <td>{faq.answer.fr}</td>\r\n                <td className='d-flex justify-content-center'>\r\n                    <Link to={`/settings/faqs/faq/edit/${faq.id}`}\r\n                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                          title=\"Modifier\">\r\n                        <i className=\"la la-edit\"/>\r\n                    </Link>\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-faq\")?(\r\n                <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                    <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                        <div className=\"kt-container  kt-container--fluid \">\r\n                            <div className=\"kt-subheader__main\">\r\n                                <h3 className=\"kt-subheader__title\">\r\n                                    Paramètres\r\n                                </h3>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                        FAQs\r\n                                    </a>\r\n                                    <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                    <div className=\"kt-subheader__breadcrumbs\">\r\n                                        <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                        <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                        <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                            FAQ\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                        <InfirmationTable\r\n                            information={\"Liste de FAQs\"}/>\r\n\r\n                        <div className=\"kt-portlet\">\r\n                            <HeaderTablePage\r\n                                addPermission={\"store-faq\"}\r\n                                title={\"FAQs\"}\r\n                                addText={\"Ajouter un FAQs\"}\r\n                                addLink={\"/settings/faqs/faq/add\"}\r\n                            />\r\n\r\n                            {\r\n                                load ? (\r\n                                    <LoadingTable/>\r\n                                ) : (\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 text-left\">\r\n                                                    <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                        <label>\r\n                                                            Recherche:\r\n                                                            <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)}\r\n                                                                   className=\"form-control form-control-sm\" placeholder=\"\"\r\n                                                                   aria-controls=\"kt_table_1\"/>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-12\">\r\n                                                    <table\r\n                                                        className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                        id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                        style={{width: \"952px\"}}>\r\n                                                        <thead>\r\n                                                        <tr role=\"row\">\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{width: \"100.25px\"}}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Catégorie\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                                aria-label=\"Ship City: activate to sort column ascending\">Question\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{width: \"200px\"}}\r\n                                                                aria-label=\"Ship City: activate to sort column ascending\">Réponse\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\" colSpan=\"1\" style={{width: \"40.25px\"}}\r\n                                                                aria-label=\"Type: activate to sort column ascending\">\r\n                                                                Action\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n                                                            faqs.length ? (\r\n                                                                showList.length ? (\r\n                                                                    showList.map((faq, index) => (\r\n                                                                        printBodyTable(faq, index)\r\n                                                                    ))\r\n                                                                ) : (\r\n                                                                    <EmptyTable search={true}/>\r\n                                                                )\r\n                                                            ) : (\r\n                                                                <EmptyTable/>\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-12 col-md-5\">\r\n                                                    <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                         aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {faqs.length} données\r\n                                                    </div>\r\n                                                </div>\r\n                                                {\r\n                                                    showList.length ? (\r\n                                                        <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                            <Pagination\r\n                                                                numberPerPage={numberPerPage}\r\n                                                                onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                                activeNumberPage={activeNumberPage}\r\n                                                                onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                                pages={pages}\r\n                                                                onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                                numberPage={numberPage}\r\n                                                                onClickNextPage={e => onClickNextPage(e)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ): null\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FAQs);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\CategoryFAQs.jsx",["976","977","978","979","980","981"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {connect} from \"react-redux\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst CategoryFAQs = (props) => {\r\n    document.title = \"Satis client - Paramètre Categorie FAQs\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-faq-category\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [categoryFaqs, setCategoryFaqs] = useState(undefined);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine+\"/faq-categories\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setCategoryFaqs(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newCategoryfaqs = [...categoryFaqs];\r\n        newCategoryfaqs = newCategoryfaqs.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.slug[\"fr\"]).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newCategoryfaqs;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(categoryFaqs.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(categoryFaqs.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(categoryFaqs.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(categoryFaqs.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(categoryFaqs.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                categoryFaqs.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                categoryFaqs.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteCategoryFaqs = (categoryId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(appConfig.apiDomaine+`/faq-categories/${categoryId}`)\r\n                            .then(response => {\r\n                                console.log(response, \"OK\");\r\n                                const newCategory = [setCategoryFaqs];\r\n                                newCategory.splice(index, 1);\r\n                                setCategoryFaqs(newCategory);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newCategory.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newCategory.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (category, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{category.name.fr}</td>\r\n                <td >{category.slug.fr}</td>\r\n                <td className=\"d-flex justify-content-center\">\r\n                    <Link to={`/settings/faqs/category/edit/${category.id}`}\r\n                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                          title=\"Modifier\">\r\n                        <i className=\"la la-edit\"/>\r\n                    </Link>\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-faq-category\") ? (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                FAQs\r\n                            </a>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Categorie FAQs\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable\r\n                    information={\"Liste des catégories de FAQs\"}/>\r\n\r\n                <div className=\"kt-portlet\">\r\n\r\n                    <HeaderTablePage\r\n                        addPermission={\"store-faq-category\"}\r\n                        title={\"Catégorie FAQ\"}\r\n                        addText={\"Ajouter une Catégorie FAQ\"}\r\n                        addLink={\"/settings/faqs/category/add\"}\r\n                    />\r\n\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)}\r\n                                                           className=\"form-control form-control-sm\" placeholder=\"\"\r\n                                                           aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <table\r\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{ width: \"952px\" }}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{ width: \"150px\" }}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Libellé\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{ width: \"200px\" }}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Slug\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                        Action\r\n                                                    </th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {\r\n                                                    categoryFaqs?\r\n                                                        categoryFaqs.length ? (\r\n                                                        showList.length ? (\r\n                                                            showList.map((category, index) => (\r\n                                                                printBodyTable(category, index)\r\n                                                            ))\r\n                                                        ) : (\r\n                                                            <EmptyTable search={true}/>\r\n                                                        )\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    ):null\r\n                                                }\r\n                                                </tbody>\r\n                                                <tfoot>\r\n                                                <tr/>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {categoryFaqs?categoryFaqs.length:0} données\r\n                                            </div>\r\n                                        </div>\r\n                                        {\r\n                                            showList.length ? (\r\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                    <Pagination\r\n                                                        numberPerPage={numberPerPage}\r\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                        activeNumberPage={activeNumberPage}\r\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                        pages={pages}\r\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                        numberPage={numberPage}\r\n                                                        onClickNextPage={e => onClickNextPage(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        ): null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CategoryFAQs);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Position.jsx",["982"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\"\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst Position = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"list-position\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [positions, setPositions] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(`${appConfig.apiDomaine}/positions`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setPositions(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newPositions = [...positions];\r\n        newPositions = newPositions.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newPositions;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(positions.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(positions.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(positions.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(positions.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(positions.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                positions.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                positions.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deletePosition = (positionId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/positions/${positionId}`)\r\n                            .then(response => {\r\n                                const newPositions = [...positions];\r\n                                newPositions.splice(index, 1);\r\n                                setPositions(newPositions);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newPositions.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newPositions.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (position, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{position.name[\"fr\"]}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-position') ? (\r\n                            <Link to={`/settings/positions/${position.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-position') ? (\r\n                            <button\r\n                                onClick={(e) => deletePosition(position.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-position\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Fonctions\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={\"Liste des fonctions occupés\"}/>\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-position\"}\r\n                            title={\"Fonctions\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/positions/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\"><label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        positions.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((position, index) => (\r\n                                                                    printBodyTable(position, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {positions.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Position);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\FAQsPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CategoryFaqsForm.jsx",["983","984","985"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {connect} from \"react-redux\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\r\n\r\nconst CategoryFaqsForm = (props) => {\r\n    const {id}=useParams();\r\n\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-faq-category'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-faq-category'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (id){\r\n            if (verifyTokenExpire()) {\r\n                axios.get(appConfig.apiDomaine+`/faq-categories/${id}`)\r\n                    .then(response => {\r\n\r\n                        const newCategory={\r\n                            name:response.data.name.fr,\r\n                        };\r\n                        setData(newCategory)\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if(id){\r\n                axios.put(appConfig.apiDomaine+`/faq-categories/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                        window.location.href=\"/settings/faqs/category\"\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }else{\r\n                axios.post(appConfig.apiDomaine+`/faq-categories`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/faqs/category\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Categorie FAQ\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id?\r\n                                                    \"Modification des catégories de FAQ\":\" Ajout des catégories de FAQ\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n\r\n                                        <div className={error.name.length ? \"form-group  validated\" : \"form-group\"}>\r\n                                            <label htmlFor=\"name\">Libellé <InputRequire/></label>\r\n                                            <div className=\"col-md-6 mb-3\">\r\n                                                <input\r\n                                                    id=\"name\"\r\n                                                    type=\"text\"\r\n                                                    className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le nom\"\r\n                                                    value={data.name}\r\n                                                    onChange={(e) => onChangeName(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.name.length ? (\r\n                                                        error.name.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"kt-portlet__foot\">\r\n                                        <div className=\"kt-form__actions\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id?\"Modifier\":\"Enregistrer\"}</button>\r\n                                                ) : (\r\n                                                    <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/settings/faqs/category\" className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/settings/faqs/category\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-faq-category') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-faq-category') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(CategoryFaqsForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\TypeClientForm.jsx",["986"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link, useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\r\n\r\n\r\nconst TypeClientForm = (props) => {\r\n    const {edittypeid} = useParams();\r\n    if (!edittypeid) {\r\n        if (!verifyPermission(props.userPermissions, 'store-type-client'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-type-client'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        name: \"\",\r\n        description: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (edittypeid) {\r\n            if (verifyTokenExpire()) {\r\n                axios.get(appConfig.apiDomaine + `/type-clients/${edittypeid}`)\r\n                    .then(response => {\r\n                        console.log(response.data, 'DATA');\r\n                        const newType = {\r\n                            name: response.data.name.fr,\r\n                            description: response.data.description.fr\r\n                        };\r\n                        setData(newType);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    },[]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (edittypeid) {\r\n                axios.put(appConfig.apiDomaine + `/type-clients/${edittypeid}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(appConfig.apiDomaine + `/type-clients`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/clients/type\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Type Client\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        edittypeid ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                edittypeid ?\r\n                                                    \"Modification de Type Client\" : \" Ajout de Type Client\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n\r\n                                                                <div\r\n                                                                    className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"name\">Le Nom</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"name\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Veillez entrer le nom\"\r\n                                                                            value={data.name}\r\n                                                                            onChange={(e) => onChangeName(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.name.length ? (\r\n                                                                                error.name.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"description\">La Description</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                        <textarea\r\n                                            id=\"description\"\r\n                                            className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                            placeholder=\"Veillez entrer la description\"\r\n                                            cols=\"30\"\r\n                                            rows=\"5\"\r\n                                            value={data.description}\r\n                                            onChange={(e) => onChangeDescription(e)}\r\n                                        />\r\n                                                                        {\r\n                                                                            error.description.length ? (\r\n                                                                                error.description.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Envoyer</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Loading...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/clients/type\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/clients/type\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        edittypeid ?\r\n            verifyPermission(props.userPermissions, 'update-type-client') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-type-client') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TypeClientForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\TypeClient.jsx",["987","988","989"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {filterDataTableBySearchValue, forceRound, loadCss, loadScript} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst TypeClient = (props) => {\r\n    document.title = \"Satis client - Paramètre Type client\";\r\n    if (!verifyPermission(props.userPermissions, \"list-type-client\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [typeClient, setTypeClient] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/type-clients\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setTypeClient(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(typeClient.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(typeClient.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(typeClient.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                typeClient.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                typeClient.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteTypeClient = (typeClientId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/type-clients/${typeClientId}`)\r\n                            .then(response => {\r\n                                console.log(response, \"OK\");\r\n                                const newType = [...typeClient];\r\n                                newType.splice(index, 1);\r\n                                setTypeClient(newType);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newType.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newType.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (type, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{type.name.fr}</td>\r\n                <td>{type.description.fr}</td>\r\n                <td style={{textAlign:\"center\"}}>\r\n\r\n                    <Link to=\"/settings/clients/type/detail\"\r\n                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                          title=\"Détail\">\r\n                        <i className=\"la la-eye\"/>\r\n                    </Link>\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'show-type-client')?\r\n                            <Link to={`/settings/clients/type/edit/${type.id}`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            :\"\"\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-type-client') ?\r\n                            <button\r\n                                onClick={(e) => deleteTypeClient(type.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                            : null\r\n                    }\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-position\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Client\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Type Client\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"Liste des types client\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-type-client\"}\r\n                            title={\"Type Client\"}\r\n                            addText={\"Ajouter un Type Client\"}\r\n                            addLink={\"/settings/clients/type/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\" placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"200px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        typeClient.length ? (\r\n                                                            search ? (\r\n                                                                typeClient.map((type, index) => (\r\n                                                                    printBodyTable(type, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((type, index) => (\r\n                                                                    printBodyTable(type, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr></tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">\r\n                                                    {typeClient.length ?\r\n                                                        `Affichage de 1 à ${numberPerPage} sur ${typeClient.length} données`\r\n                                                        :\r\n                                                        \"Affichage de 0 page\"\r\n                                                    }\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(TypeClient);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Institution.jsx",["990","991","992"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport ExportButton from \"../components/ExportButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\nimport InfoFormatExcel from \"../../constants/InfoFormatExcel\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst Institution = (props) => {\r\n    document.title = \"Satis client - Paramètre Institution\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-any-institution\")) {\r\n        window.location.href = ERROR_401;\r\n    }\r\n    const [load, setLoad] = useState(true);\r\n    const [institutions, setInstitution] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/any/institutions\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setInstitution(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newInstitutions = [...institutions];\r\n        newInstitutions = newInstitutions.filter(el => (\r\n            getLowerCaseString(el.institution_type ? el.institution_type.name : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.name).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.acronyme).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.iso_code).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newInstitutions;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(institutions.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(institutions.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(institutions.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(institutions.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(institutions.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                institutions.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                institutions.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteInstitution = (institutionId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/any/institutions/${institutionId}`)\r\n                            .then(response => {\r\n                                const newInstitution = [...institutions];\r\n                                newInstitution.splice(index, 1);\r\n                                setInstitution(newInstitution);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newInstitution.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newInstitution.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (institution, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td style={{textAlign: 'center'}}>\r\n                    {institution.logo?(\r\n                        <img id=\"Image1\" src={institution.logo} alt=\"logo\" style={{maxWidth: \"35px\", maxHeight: \"35px\", textAlign: 'center'}}/>)\r\n                        :\"\"\r\n                    }\r\n                </td>\r\n                <td>{institution.institution_type?institution.institution_type.name:\"\"}</td>\r\n                <td>{institution.name}</td>\r\n                <td>{institution.acronyme}</td>\r\n                <td>{institution.iso_code}</td>\r\n                <td style={{textAlign:\"center\"}}>\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"update-institution-message-api\") ? (\r\n                            <Link to={`/settings/institutions/${institution.id}/message-apis`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Parametrer message API\">\r\n                                <i className=\"la flaticon-multimedia-2\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"show-any-institution\") ?\r\n                            <Link to={`/settings/institution/edit/${institution.id}`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            : verifyPermission(props.userPermissions, \"update-my-institution\") ?\r\n                            <Link to={`/settings/institution/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            : null\r\n                    }\r\n\r\n                    {/*{*/}\r\n                    {/*    verifyPermission(props.userPermissions, \"destroy-any-institution\") ?*/}\r\n                    {/*        <button*/}\r\n                    {/*            onClick={(e) => deleteInstitution(institution.id, index)}*/}\r\n                    {/*            className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"*/}\r\n                    {/*            title=\"Supprimer\">*/}\r\n                    {/*            <i className=\"la la-trash\"/>*/}\r\n                    {/*        </button>*/}\r\n                    {/*        : null*/}\r\n                    {/*}*/}\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions,\"list-any-institution\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Institution\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-any-institution\"}\r\n                            title={\"Institution\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/institution/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <ExportButton pageUrl={\"/settings/importInstitutions\"} downloadLink={`${appConfig.apiDomaine}/download-excel/institutions`}/>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"40px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Logo\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Type\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Acronyme\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"80px\"}}\r\n                                                            aria-label=\"Ship Address: activate to sort column ascending\">Iso_Code\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        institutions.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((institution, index) => (\r\n                                                                    printBodyTable(institution, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr style={{textAlign:\"center\"}}>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Logo</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Type</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Acronyme</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Iso_Code</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {institutions.length} données\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Institution);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\CategoryClient.jsx",["993"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst CategoryClient = (props) => {\r\n    document.title = \"Satis client - Paramètre categorie client\";\r\n    if (!verifyPermission(props.userPermissions, \"list-category-client\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [categoryClient, setCategoryClient] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/category-clients\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setCategoryClient(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    },[]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newCategoryClients = [...categoryClient];\r\n        newCategoryClients = newCategoryClients.filter(el => (\r\n            getLowerCaseString(el.name ? el.name[\"fr\"] : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description ? el.description[\"fr\"] : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newCategoryClients;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(categoryClient.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(categoryClient.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(categoryClient.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(categoryClient.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(categoryClient.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                categoryClient.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                categoryClient.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteCategoryClient = (categoryClientId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/category-clients/${categoryClientId}`)\r\n                            .then(response => {\r\n                                const newCategory = [...categoryClient];\r\n                                newCategory.splice(index, 1);\r\n                                setCategoryClient(newCategory);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newCategory.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newCategory.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (category, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{category.name.fr===null?\"\":category.name.fr}</td>\r\n                <td>{category.description.fr===null?\"\":category.description.fr}</td>\r\n                <td style={{textAlign:'center'}}>\r\n                    {/*<Link to=\"/settings/clients/category/detail\"*/}\r\n                    {/*      className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"*/}\r\n                    {/*      title=\"Détail\">*/}\r\n                    {/*    <i className=\"la la-eye\"/>*/}\r\n                    {/*</Link>*/}\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'show-category-client') ?\r\n                            <Link\r\n                                to={`/settings/clients/category/edit/${category.id}`}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            : null\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"destroy-category-client\") ?\r\n                        <button\r\n                            onClick={(e) => deleteCategoryClient(category.id, index)}\r\n                            className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                            title=\"Supprimer\">\r\n                            <i className=\"la la-trash\"/>\r\n                        </button>\r\n                        : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-category-client\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Client\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Categorie Client\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"Liste des catégories client\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-category-client\"}\r\n                            title={\"Catégorie Client\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/clients/category/add\"}\r\n                        />\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        categoryClient.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((category, index) => (\r\n                                                                    printBodyTable(category, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {categoryClient.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CategoryClient);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CategoryClientForm.jsx",["994"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\r\n\r\n\r\nconst CategoryClientForm = (props) => {\r\n    const {editcategoryid} = useParams();\r\n\r\n    if (!editcategoryid) {\r\n        if (!verifyPermission(props.userPermissions, 'store-category-client'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-category-client'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        name: \"\",\r\n        description: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        if (editcategoryid) {\r\n            if (verifyTokenExpire()) {\r\n                axios.get(appConfig.apiDomaine + `/category-clients/${editcategoryid}`)\r\n                    .then(response => {\r\n                        const newCategory = {\r\n                            name: response.data.name.fr,\r\n                            description: response.data.description.fr\r\n                        };\r\n                        setData(newCategory);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n\r\n    },[]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n\r\n        if (verifyTokenExpire()) {\r\n            if (editcategoryid) {\r\n                axios.put(appConfig.apiDomaine + `/category-clients/${editcategoryid}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                        window.location.href='/settings/faqs/category'\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(appConfig.apiDomaine + `/category-clients`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError,...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <Link to=\"/settings/clients/category\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                Catégorie Client\r\n                            </Link>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                {\r\n                                    editcategoryid ? \"Modification\" : \"Ajout\"\r\n                                }\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"kt-portlet\">\r\n                            <div className=\"kt-portlet__head\">\r\n                                <div className=\"kt-portlet__head-label\">\r\n                                    <h3 className=\"kt-portlet__head-title\">\r\n                                        {\r\n                                            editcategoryid ? \"Modification Catégorie Client\" : \"Ajout de Catégorie Client\"\r\n                                        }\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <form method=\"POST\" className=\"kt-form\">\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div className=\"tab-content\">\r\n                                        <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                            <div className=\"kt-form kt-form--label-right\">\r\n                                                <div className=\"kt-form__body\">\r\n                                                    <div className=\"kt-section kt-section--first\">\r\n                                                        <div className=\"kt-section__body\">\r\n\r\n                                                            <div\r\n                                                                className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                       htmlFor=\"name\">Libellé <InputRequire/></label>\r\n                                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                                    <input\r\n                                                                        id=\"name\"\r\n                                                                        type=\"text\"\r\n                                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                        placeholder=\"Veillez entrer le nom\"\r\n                                                                        value={data.name}\r\n                                                                        onChange={(e) => onChangeName(e)}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        error.name.length ? (\r\n                                                                            error.name.map((error, index) => (\r\n                                                                                <div key={index}\r\n                                                                                     className=\"invalid-feedback\">\r\n                                                                                    {error}\r\n                                                                                </div>\r\n                                                                            ))\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div\r\n                                                                className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                       htmlFor=\"description\">Description </label>\r\n                                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                                <textarea\r\n                                                                    id=\"description\"\r\n                                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    placeholder=\"Veillez entrer la description\"\r\n                                                                    cols=\"30\"\r\n                                                                    rows=\"5\"\r\n                                                                    value={data.description}\r\n                                                                    onChange={(e) => onChangeDescription(e)}\r\n                                                                />\r\n                                                                    {\r\n                                                                        error.description.length ? (\r\n                                                                            error.description.map((error, index) => (\r\n                                                                                <div key={index}\r\n                                                                                     className=\"invalid-feedback\">\r\n                                                                                    {error}\r\n                                                                                </div>\r\n                                                                            ))\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"kt-portlet__foot\">\r\n                                                            <div className=\"kt-form__actions text-right\">\r\n                                                                {\r\n                                                                    !startRequest ? (\r\n                                                                        <button type=\"submit\"\r\n                                                                                onClick={(e) => onSubmit(e)}\r\n                                                                                className=\"btn btn-primary\">Enregistrer</button>\r\n                                                                    ) : (\r\n                                                                        <button\r\n                                                                            className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                            type=\"button\" disabled>\r\n                                                                            Loading...\r\n                                                                        </button>\r\n                                                                    )\r\n                                                                }\r\n                                                                {\r\n                                                                    !startRequest ? (\r\n                                                                        <Link to=\"/settings/clients/category\"\r\n                                                                              className=\"btn btn-secondary mx-2\">\r\n                                                                            Quitter\r\n                                                                        </Link>\r\n                                                                    ) : (\r\n                                                                        <Link to=\"/settings/clients/category\"\r\n                                                                              className=\"btn btn-secondary mx-2\"\r\n                                                                              disabled>\r\n                                                                            Quitter\r\n                                                                        </Link>\r\n                                                                    )\r\n                                                                }\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    };\r\n\r\n    return (\r\n        editcategoryid ?\r\n            verifyPermission(props.userPermissions, 'update-category-client') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-category-client') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(CategoryClientForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Clients.jsx",["995","996","997","998","999","1000","1001","1002"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport ExportButton from \"../components/ExportButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/clients`,\r\n        destroy: accountId => `${appConfig.apiDomaine}/my/clients/${accountId}`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/clients`,\r\n            destroy: accountId => `${appConfig.apiDomaine}/any/clients/${accountId}`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/clients`,\r\n            destroy: accountId => `${appConfig.apiDomaine}/my/clients/${accountId}`,\r\n        }\r\n    },\r\n\r\n};\r\n\r\nconst Clients = (props) => {\r\n    document.title = \"Satis client - Paramètre Client\";\r\n    if (!(verifyPermission(props.userPermissions, \"list-client-from-my-institution\") || verifyPermission(props.userPermissions, \"list-client-from-any-institution\"))) {\r\n        window.location.href = ERROR_401;\r\n    }\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-client-from-any-institution') || verifyPermission(props.userPermissions, 'store-client-from-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-client-from-my-institution') || verifyPermission(props.userPermissions, 'store-client-from-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [clients, setClients] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setClients(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const matchByAttribute = (accountNumbers, value, attribute) => {\r\n        var match = false;\r\n        accountNumbers.map(el => {\r\n            match = (\r\n                match ||\r\n                getLowerCaseString(attribute === \"number\" ? el[attribute] : el).indexOf(value) >= 0\r\n            )\r\n        });\r\n        return match;\r\n    };\r\n\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClients = [...clients];\r\n        newClients = newClients.filter(el => (\r\n            getLowerCaseString(el.client.identite.lastname + \" \" + el.client.identite.firstname).indexOf(value) >= 0 ||\r\n            matchByAttribute(el.accounts, value, \"number\") ||\r\n            matchByAttribute(el.client.identite.telephone, value, \"telephone\") ||\r\n            matchByAttribute(el.client.identite.email, value, \"email\")\r\n        ));\r\n\r\n        return newClients;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(clients.length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(clients.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(clients.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(clients.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(clients.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                clients.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                clients.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteClient = (accountId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(endPoint.destroy(accountId))\r\n                            .then(response => {\r\n                                const newClient = [...clients];\r\n                                // newClient.splice(index, 1);\r\n                                // setClients(newClient);\r\n\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newClient.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newClient.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                                window.location.reload()\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (client, index) => {\r\n        return (\r\n            client.accounts ?\r\n                client.accounts.map((account, i) => (\r\n                    <tr key={i} role=\"row\" className=\"odd\">\r\n\r\n                        {\r\n                            i === 0 ?\r\n                                <td rowSpan={client.accounts.length}>{client.client.identite.lastname} &ensp; {client.client.identite.firstname}</td> : null\r\n                        }\r\n\r\n                        {\r\n                            i === 0 ?\r\n                                <td rowSpan={client.accounts.length}>\r\n                                    {\r\n                                        client.client.identite.telephone.length ?\r\n                                            client.client.identite.telephone.map((tel, index) => (\r\n                                                index === client.client.identite.telephone.length - 1 ? tel : tel + \" \" + \"/ \" + \" \"\r\n                                            )) : null\r\n                                    }\r\n                                </td>\r\n                                : null\r\n                        }\r\n                         {\r\n                            i === 0 ?\r\n                                <td rowSpan={client.accounts.length}>\r\n                                    {client.client.identite.email ?\r\n                                        client.client.identite.email.map((mail, index) => (\r\n                                            index === client.client.identite.email.length - 1 ? mail : mail + \" \" + \"/ \" + \" \"\r\n                                        )) : null\r\n                                    }\r\n                                </td>\r\n                                : null\r\n                        }\r\n\r\n                        <td>\r\n                            {account.number}\r\n                        </td>\r\n\r\n                        <td className=\"d-flex justify-content-center\">\r\n\r\n                            {\r\n                                verifyPermission(props.userPermissions, \"update-client-from-any-institution\") ||\r\n                                verifyPermission(props.userPermissions, \"update-client-from-my-institution\") ?\r\n                                    <Link to={`/settings/any/clients/edit/${account.id}`}\r\n                                          className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                          title=\"Modifier\">\r\n                                        <i className=\"la la-edit\"/>\r\n                                    </Link>\r\n                                    : null\r\n                            }\r\n\r\n                            {\r\n                                verifyPermission(props.userPermissions, \"destroy-client-from-my-institution\") ||\r\n                                verifyPermission(props.userPermissions, \"destroy-client-from-any-institution\") ?\r\n                                    <button\r\n                                        onClick={(e) => deleteClient(account.id, index)}\r\n                                        className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                        title=\"Supprimer\">\r\n                                        <i className=\"la la-trash\"/>\r\n                                    </button>\r\n                                    : null\r\n                            }\r\n\r\n                        </td>\r\n                    </tr>\r\n                )) : null\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                Client\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable\r\n                    information={\"Liste des clients\"}/>\r\n\r\n                <div className=\"kt-portlet\">\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"store-client-from-my-institution\") ?\r\n                            (\r\n                                <HeaderTablePage\r\n                                    addPermission={\"store-client-from-my-institution\"}\r\n                                    title={\"Client\"}\r\n                                    addText={\"Ajouter\"}\r\n                                    addLink={\"/settings/any/clients/add\"}\r\n                                />\r\n                            ) : (\r\n                                verifyPermission(props.userPermissions, \"store-client-from-any-institution\") ?\r\n                                    <HeaderTablePage\r\n                                        addPermission={\"store-client-from-any-institution\"}\r\n                                        title={\"Client\"}\r\n                                        addText={\"Ajouter\"}\r\n                                        addLink={\"/settings/any/clients/add\"}\r\n                                    /> : null\r\n                            )\r\n                    }\r\n\r\n\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)}\r\n                                                           className=\"form-control form-control-sm\" placeholder=\"\"\r\n                                                           aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <ExportButton pageUrl={\"/settings/importClients\"} downloadLink={`${appConfig.apiDomaine}/download-excel/clients`}/>\r\n                                    </div>\r\n                                    <div className=\"row table-responsive\">\r\n                                        <div className=\"col-sm-12 \">\r\n                                            <table\r\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline table\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{width: \"100%\"}}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"30%\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                    </th>\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        style={{width: \"15%\"}}\r\n                                                        aria-label=\"Ship Address: activate to sort column ascending\">Téléphone(s)\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        style={{width: \"20%\"}}\r\n                                                        aria-label=\"Ship Address: activate to sort column ascending\">Email(s)\r\n                                                    </th>\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        style={{width: \"20%\"}}\r\n                                                        aria-label=\"Ship Address: activate to sort column ascending\">Numero de compte\r\n                                                    </th>\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        style={{width: \"15%\"}}\r\n                                                        aria-label=\"Type: activate to sort column ascending\">\r\n                                                        Action\r\n                                                    </th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n\r\n                                                {\r\n                                                    clients.length ? (\r\n                                                        showList.length ? (\r\n                                                            showList.map((client, index) => (\r\n                                                                printBodyTable(client, index)\r\n                                                            ))\r\n                                                        ) : (\r\n                                                            <EmptyTable search={true}/>\r\n                                                        )\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    )\r\n                                                }\r\n                                                </tbody>\r\n                                                <tfoot>\r\n                                                <tr style={{textAlign: \"center\"}}>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Téléphone(s)</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Email(s)</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Numero de Compte</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                </tr>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1\r\n                                                à {numberPerPage} sur {clients.length} données\r\n                                            </div>\r\n                                        </div>\r\n                                        {\r\n                                            showList.length ? (\r\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                    <Pagination\r\n                                                        numberPerPage={numberPerPage}\r\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                        activeNumberPage={activeNumberPage}\r\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                        pages={pages}\r\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                        numberPage={numberPage}\r\n                                                        onClickNextPage={e => onClickNextPage(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Clients);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\SeverityLevel.jsx",["1003","1004","1005"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/severity-levels`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/severity-levels/${unitId}`,\r\n    },\r\n    MACRO: {\r\n        plan: \"MACRO\",\r\n        list: `${appConfig.apiDomaine}/severity-levels`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/severity-levels/${unitId}`,\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/severity-levels`,\r\n        destroy: unitId => `${appConfig.apiDomaine}/severity-levels/${unitId}`,\r\n    }\r\n};\r\n\r\nconst SeverityLevel = (props) => {\r\n    if (!verifyPermission(props.userPermissions, 'list-severity-level'))\r\n        window.location.href = ERROR_401;\r\n\r\n    const endPoint = endPointConfig[props.plan];\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [severityLevels, setSeverityLevels] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setSeverityLevels(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        fetchData();\r\n    }, [endPoint.list, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newSeverityLeveles = [...severityLevels];\r\n        newSeverityLeveles = newSeverityLeveles.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.color ? `${el.color} ${el.color === \"#ffffff\" ? \" Blanc\" : \"\"}` : `-`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description ? el.description[\"fr\"] : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newSeverityLeveles;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(severityLevels.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(severityLevels.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(severityLevels.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(severityLevels.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(severityLevels.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                severityLevels.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                severityLevels.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteSeverityLevel = (severityLevelId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(endPoint.destroy(severityLevelId))\r\n                            .then(response => {\r\n                                const newSeverityLevels = [...severityLevels];\r\n                                newSeverityLevels.splice(index, 1);\r\n                                setSeverityLevels(newSeverityLevels);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newSeverityLevels.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newSeverityLevels.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error.response.data);\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (severityLevel, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{severityLevel.name[\"fr\"]}</td>\r\n                <td>\r\n                    <div className=\"p-2 text-center\" style={{backgroundColor: severityLevel.color, color: severityLevel.color === \"#ffffff\" ? \"black\" : \"white\"}}>\r\n                        {severityLevel.color ? `${severityLevel.color} ${severityLevel.color === \"#ffffff\" ? \" Blanc\" : ''}` : <strong style={{color: \"black\"}}>-</strong>}\r\n                    </div>\r\n                </td>\r\n                <td style={{ textOverflow: \"ellipsis\", width: \"300px\" }}>{severityLevel.description ? severityLevel.description[\"fr\"] : null}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-severity-level') ? (\r\n                            <Link to={`/settings/severities/${severityLevel.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-severity-level') ? (\r\n                            <button\r\n                                onClick={(e) => deleteSeverityLevel(severityLevel.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-severity-level') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Niveau de gravité\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-severity-level\"}\r\n                            title={\"Niveau de gravité\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/severities/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom du niveau\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Couleur\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"300px\" }}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        severityLevels.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((severityLevel, index) => (\r\n                                                                    printBodyTable(severityLevel, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom du niveau</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Couleur</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {severityLevels.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SeverityLevel);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\UnitForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\PerformanceIndicatorForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\UnitTypeForm.jsx",["1006"],"import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst UnitTypeForm = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-unit-type'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-unit-type'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        name: \"\",\r\n        can_be_target: false,\r\n        can_treat: false,\r\n        description: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        can_be_target: [],\r\n        can_treat: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/unit-types/${id}/edit`)\r\n                    .then(({data}) => {\r\n                        const newData = {\r\n                            name: data.unitType.name ? data.unitType.name.fr : \"\",\r\n                            can_be_target: data.unitType.can_be_target === 1,\r\n                            can_treat: data.unitType.can_treat === 1,\r\n                            description: data.unitType.description ? data.unitType.description.fr : \"\",\r\n                        };\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [id, appConfig.apiDomaine]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handleCanBeTargetChange = e => {\r\n        const newData = {...data, can_be_target: e.target.checked};\r\n        setData(newData);\r\n    };\r\n\r\n    const handleCanTreatChange = e => {\r\n        const newData = {...data, can_treat: e.target.checked};\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/unit-types/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/unit-types`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        redirectError401Page(errorRequest.response.data.code);\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/unit_type\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Type d'unité\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification de type d'unité\" : \"Ajout d'un type d'unité\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.can_be_target.length || error.can_treat.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Unité <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <div className=\"kt-checkbox-inline\">\r\n                                                        <label className=\"kt-checkbox\">\r\n                                                            <input type=\"checkbox\" checked={data.can_be_target} onChange={handleCanBeTargetChange}/> Peut-être visé par une réclamation ?\r\n                                                            <span/>\r\n                                                            {\r\n                                                                error.can_be_target.length ? (\r\n                                                                    error.can_be_target.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </label>\r\n                                                        <label className=\"kt-checkbox\">\r\n                                                            <input type=\"checkbox\" checked={data.can_treat} onChange={handleCanTreatChange}/> Peut résoudre une réclamation ?\r\n                                                            <span/>\r\n                                                            {\r\n                                                                error.can_treat.length ? (\r\n                                                                    error.can_treat.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Unité <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le nom du type d'unité\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description</label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                <textarea\r\n                                                    id=\"description\"\r\n                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer la description\"\r\n                                                    cols=\"30\"\r\n                                                    rows=\"5\"\r\n                                                    value={data.description}\r\n                                                    onChange={(e) => onChangeDescription(e)}\r\n                                                />\r\n                                                    {\r\n                                                        error.description.length ? (\r\n                                                            error.description.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Envoyer</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/unit_type\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/unit_type\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-unit-type') ? (\r\n                printJsx()\r\n            ) : null\r\n        : verifyPermission(props.userPermissions, 'store-unit-type') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UnitTypeForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\SeverityLevelForm.jsx",["1007"],"import React, {useState, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        store: `${appConfig.apiDomaine}/severity-levels`,\r\n        update: id => `${appConfig.apiDomaine}/severity-levels/${id}`,\r\n        create: `${appConfig.apiDomaine}/severity-levels/create`,\r\n        edit: id => `${appConfig.apiDomaine}/severity-levels/${id}/edit`\r\n    },\r\n    MACRO: {\r\n        plan: \"MACRO\",\r\n        store: `${appConfig.apiDomaine}/severity-levels`,\r\n        update: id => `${appConfig.apiDomaine}/severity-levels/${id}`,\r\n        create: `${appConfig.apiDomaine}/severity-levels/create`,\r\n        edit: id => `${appConfig.apiDomaine}/severity-levels/${id}/edit`\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        store: `${appConfig.apiDomaine}/severity-levels`,\r\n        update: id => `${appConfig.apiDomaine}/severity-levels/${id}`,\r\n        create: `${appConfig.apiDomaine}/severity-levels/create`,\r\n        edit: id => `${appConfig.apiDomaine}/severity-levels/${id}/edit`,\r\n    }\r\n};\r\n\r\nconst SeverityLevelForm = (props) => {\r\n    const {id} = useParams();\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-severity-level'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-severity-level'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const endpoint = endPointConfig[props.plan];\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n        color: \"#000000\",\r\n        description: \"\",\r\n    };\r\n\r\n    const defaultError = {\r\n        name: [],\r\n        color: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/severity-levels/${id}`)\r\n                    .then(response => {\r\n                        const newData = {\r\n                            name: response.data.name[\"fr\"],\r\n                            color: response.data.color,\r\n                            description: response.data.description[\"fr\"],\r\n                        };\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, id]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeColor = (e) => {\r\n        const newData = {...data};\r\n        newData.color = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(endpoint.update(id), data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(endpoint.store, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        console.log(errorRequest.response.data);\r\n                        setStartRequest(false);\r\n                        if (errorRequest.response.data.code === 422) {\r\n                            setError({...defaultError, ...errorRequest.response.data.error});\r\n                            ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        } else {\r\n                            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(errorRequest.response.data.error));\r\n                        }\r\n\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/severities\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Niveau de gravité\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification d'un niveau de gravité\" : \"Ajout d'un niveau de gravité\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Niveau de gravité <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le nom de la gravité\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.color.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"color\">Couleur <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"color\"\r\n                                                        type=\"color\"\r\n                                                        className={error.color.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez choisir la couleur représentative du niveau de gravité\"\r\n                                                        value={data.color}\r\n                                                        onChange={(e) => onChangeColor(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.color.length ? (\r\n                                                            error.color.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description</label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                <textarea\r\n                                                    id=\"description\"\r\n                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer la description\"\r\n                                                    cols=\"30\"\r\n                                                    rows=\"5\"\r\n                                                    value={data.description}\r\n                                                    onChange={(e) => onChangeDescription(e)}\r\n                                                />\r\n                                                    {\r\n                                                        error.description.length ? (\r\n                                                            error.description.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/severities\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/severities\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ? (\r\n            verifyPermission(props.userPermissions, 'update-severity-level') ? (\r\n                printJsx()\r\n            ) : null\r\n        ) : (\r\n            verifyPermission(props.userPermissions, 'store-severity-level') ? (\r\n                printJsx()\r\n            ) : null\r\n        )\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SeverityLevelForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimCategoryForm.jsx",["1008"],"import React, {useState, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst ClaimCategoryForm = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-claim-category'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-claim-category'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/claim-categories/${id}`)\r\n                    .then(response => {\r\n                        const newData = {\r\n                            name: response.data.name.fr,\r\n                        };\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [id, appConfig.apiDomaine]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/claim-categories/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/claim-categories`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/claim_categories\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Catégorie de réclamation\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification de catégorie de réclamation\" : \"Ajout de catégorie de réclamation\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Catégorie <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Nom de la catégorie\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/claim_categories\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/claim_categories\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ? (\r\n            verifyPermission(props.userPermissions, 'update-claim-category') ? (\r\n                printJsx()\r\n            ) : null\r\n        ) : (\r\n            verifyPermission(props.userPermissions, 'store-claim-category') ? (\r\n                printJsx()\r\n            ) : null\r\n        )\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        language: state.language\r\n    }\r\n};\r\n\r\nexport default connect(mapDispatchToProps)(ClaimCategoryForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\PositionForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimObjectForm.jsx",["1009"],"import React, {useState, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport Select from \"react-select\";\r\nimport {formatSelectOption} from \"../../helpers/function\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst ClaimObjectForm = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-claim-object'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-claim-object'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const [claimCategories, setClaimCategories] = useState([]);\r\n    const [claimCategory, setClaimCategory] = useState(null);\r\n    const [severityLevels, setSeverityLevels] = useState([]);\r\n    const [severityLevel, setSeverityLevel] = useState(null);\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n        description: \"\",\r\n        claim_category_id: claimCategories.length ? claimCategories[0].id : \"\",\r\n        severity_levels_id: \"\",\r\n        time_limit: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        description: [],\r\n        claim_category_id: [],\r\n        severity_levels_id: [],\r\n        time_limit: []\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/claim-objects/${id}/edit`)\r\n                    .then( response => {\r\n                        setClaimCategories(formatSelectOption(response.data.claimCategories, \"name\", \"fr\"));\r\n                        setSeverityLevels(formatSelectOption(response.data.severityLevels, \"name\", \"fr\"));\r\n                        const newData = {\r\n                            name: response.data.claimObject.name[\"fr\"],\r\n                            description: response.data.claimObject.description[\"fr\"],\r\n                            claim_category_id: response.data.claimObject.claim_category_id,\r\n                            severity_levels_id: response.data.claimObject.severity_levels_id === null ? \"\" : response.data.claimObject.severity_levels_id,\r\n                            time_limit: response.data.claimObject.time_limit === null ? 0 : response.data.claimObject.time_limit,\r\n                        };\r\n                        setData(newData);\r\n                        setClaimCategory({value: response.data.claimObject.claim_category_id, label: response.data.claimObject.claim_category.name[\"fr\"]});\r\n                        setSeverityLevel(\r\n                            response.data.claimObject.severity_levels_id === null ? {} : {value: response.data.claimObject.severity_levels_id, label: response.data.claimObject.severity_level.name[\"fr\"]}\r\n                        );\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            } else {\r\n                await axios.get(`${appConfig.apiDomaine}/claim-objects/create`)\r\n                    .then(response => {\r\n                        setClaimCategories(formatSelectOption(response.data.claimCategories, \"name\", \"fr\"));\r\n                        setSeverityLevels(formatSelectOption(response.data.severityLevels, \"name\", \"fr\"));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeClaimCategory = (selected) => {\r\n        const newData = {...data};\r\n        newData.claim_category_id = selected ? selected.value : \"\";\r\n        setClaimCategory(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeTimeLimit = (e) => {\r\n        const newData = {...data};\r\n        newData.time_limit = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeSeverityLevel = (selected) => {\r\n        const newData = {...data};\r\n        newData.severity_levels_id = selected ? selected.value : \"\";\r\n        setSeverityLevel(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/claim-objects/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/claim-objects`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setClaimCategory({});\r\n                        setSeverityLevel({});\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <Link to=\"/settings/claim_objects\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                Objet de réclamation\r\n                            </Link>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                {\r\n                                    id ? \"Modification\" : \"Ajout\"\r\n                                }\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"kt-portlet\">\r\n                            <div className=\"kt-portlet__head\">\r\n                                <div className=\"kt-portlet__head-label\">\r\n                                    <h3 className=\"kt-portlet__head-title\">\r\n                                        {\r\n                                            id ? \"Modification d'objet de réclamation\" : \"Ajout d'objet de réclamation\"\r\n                                        }\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <form method=\"POST\" className=\"kt-form\">\r\n                                <div className=\"kt-form kt-form--label-right\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Objet de réclamation <InputRequire/></label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <input\r\n                                                    id=\"name\"\r\n                                                    type=\"text\"\r\n                                                    className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Nom de l'objet de réclamation\"\r\n                                                    value={data.name}\r\n                                                    onChange={(e) => onChangeName(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.name.length ? (\r\n                                                        error.name.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={error.claim_category_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"unit_type\">Catégorie de l'objet <InputRequire/></label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <Select\r\n                                                    isClearable\r\n                                                    value={claimCategory}\r\n                                                    placeholder={\"Catégorie de l'objet de réclamation\"}\r\n                                                    onChange={onChangeClaimCategory}\r\n                                                    options={claimCategories}\r\n                                                />\r\n                                                {\r\n                                                    error.claim_category_id.length ? (\r\n                                                        error.claim_category_id.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"timeLimite\">Délai de traitement (en jour) <InputRequire/></label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <input\r\n                                                    id=\"timeLimite\"\r\n                                                    type=\"number\"\r\n                                                    className={error.time_limit.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Temps limite de l'objet\"\r\n                                                    value={data.time_limit}\r\n                                                    onChange={(e) => onChangeTimeLimit(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.time_limit.length ? (\r\n                                                        error.time_limit.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={error.severity_levels_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"timeLimite\">Niveau de gravité <InputRequire/></label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <Select\r\n                                                    isClearable\r\n                                                    value={severityLevel}\r\n                                                    placeholder={\"Selectioner le niveau de gravité\"}\r\n                                                    onChange={onChangeSeverityLevel}\r\n                                                    options={severityLevels}\r\n                                                />\r\n                                                {\r\n                                                    error.severity_levels_id.length ? (\r\n                                                        error.severity_levels_id.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description</label>\r\n                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                <textarea\r\n                                                    id=\"description\"\r\n                                                    className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Description\"\r\n                                                    cols=\"30\"\r\n                                                    rows=\"5\"\r\n                                                    value={data.description}\r\n                                                    onChange={(e) => onChangeDescription(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.description.length ? (\r\n                                                        error.description.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"kt-portlet__foot\">\r\n                                        <div className=\"kt-form__actions text-right\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                ) : (\r\n                                                    <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/settings/claim_objects\" className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/settings/claim_objects\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        id ? (\r\n            verifyPermission(props.userPermissions, 'update-claim-object') ? (\r\n                printJsx()\r\n            ) : null\r\n        ) : (\r\n            verifyPermission(props.userPermissions, 'store-claim-object') ? (\r\n                printJsx()\r\n            ) : null\r\n        )\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimObjectForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Currency.jsx",["1010","1011"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst Currency = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"list-currency\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [currencies, setCurrencies] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            await axios.get(`${appConfig.apiDomaine}/currencies`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setCurrencies(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newCurrencies = [...currencies];\r\n        newCurrencies = newCurrencies.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.iso_code).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newCurrencies;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(currencies.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(currencies.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(currencies.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(currencies.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(currencies.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                currencies.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                currencies.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteCurrency = (currencyId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/currencies/${currencyId}`)\r\n                            .then(response => {\r\n                                const newCurrencies = [...currencies];\r\n                                newCurrencies.splice(index, 1);\r\n                                setCurrencies(newCurrencies);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newCurrencies.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newCurrencies.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (currency, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{currency.name[\"fr\"]}</td>\r\n                <td>{currency.iso_code}</td>\r\n                <td>\r\n                    {/*{\r\n                        verifyPermission(props.userPermissions, 'update-currency') ? (\r\n                            <Link to={`/settings/currencies/${currency.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }*/}\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-currency') ? (\r\n                            <button\r\n                                onClick={(e) => deleteCurrency(currency.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission([\"list-currency\"], 'list-currency') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Devise\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-currency\"}\r\n                            title={\"Devise\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/currencies/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Search:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom de la devise\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">ISO\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        currencies.length ? (\r\n                                                            showList ? (\r\n                                                                showList.map((currency, index) => (\r\n                                                                    printBodyTable(currency, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom de la devise</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">ISO code</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {currencies.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Currency);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CurrencyForm.jsx",["1012"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport currencies from \"../../constants/currencyContry\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst CurrencyForm = () => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission([\"update-currency\"], 'update-currency'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission([\"store-currency\"], 'store-currency'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const [listCurrency, setListCurrency] = useState(currencies);\r\n    const [currency, setCurrency] = useState(null);\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n        iso_code: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        iso_code: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/currencies/${id}`)\r\n                    .then(({data}) => {\r\n                        const newData = {\r\n                            name: data.currency.name[\"fr\"],\r\n                            iso_code: data.currency.iso_code\r\n                        };\r\n                        setData(newData);\r\n                        setListCurrency(filterCurrency(data.currencies));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            } else {\r\n                await axios.get(`${appConfig.apiDomaine}/currencies`)\r\n                    .then(({data}) => {\r\n                        setListCurrency(filterCurrency(data));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, id]);\r\n\r\n    const filterCurrency = (removeElement) => {\r\n        let newCurrencyList = [...listCurrency];\r\n\r\n        for (let i = 0; i < removeElement.length; i++) {\r\n            newCurrencyList = newCurrencyList.filter(e => e.iso_code !== removeElement[i].iso_code);\r\n        }\r\n\r\n        return newCurrencyList;\r\n    };\r\n\r\n    const onChangeCurrency = (selected) => {\r\n        if (error.iso_code.length || error.name.length)\r\n            setError(defaultError);\r\n        const newData = {...data};\r\n        newData.iso_code = selected ? selected.iso_code : null;\r\n        newData.name = selected ? selected.label : null;\r\n        setCurrency(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/currencies/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setCurrency(null);\r\n                        setError(defaultError);\r\n                        setListCurrency(filterCurrency([data]));\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/currencies`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        setCurrency(null);\r\n                        setListCurrency(filterCurrency([data]));\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        redirectError401Page(errorRequest.response.data.code);\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/unit_type\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Devise\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification de la devise\" : \"Ajout de la devise\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Devise <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        value={currency}\r\n                                                        placeholder={\"Veillez selectioner la devise\"}\r\n                                                        onChange={onChangeCurrency}\r\n                                                        options={listCurrency}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Nom <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        disabled={true}\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"\"\r\n                                                        value={data.name}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.iso_code.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"iso_code\">ISO code <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        disabled={true}\r\n                                                        id=\"iso_code\"\r\n                                                        type=\"text\"\r\n                                                        className={error.iso_code.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"\"\r\n                                                        value={data.iso_code}\r\n                                                    />\r\n                                                    {\r\n                                                        error.iso_code.length ? (\r\n                                                            error.iso_code.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Enregistrer</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/currencies\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/currencies\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission([\"update-currency\"], 'update-currency') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission([\"store-currency\"], 'store-currency') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CurrencyForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Channel.jsx",["1013"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst Channel = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"list-channel\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [channels, setChannels] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            axios.get(`${appConfig.apiDomaine}/channels`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setChannels(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newChannels = [...channels];\r\n        newChannels = newChannels.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.is_response ? \"Oui\" : \"Non\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newChannels;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(channels.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(channels.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(channels.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(channels.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(channels.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                channels.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                channels.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteChannel = (channelId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/channels/${channelId}`)\r\n                            .then(response => {\r\n                                const newChannels = [...channels];\r\n                                newChannels.splice(index, 1);\r\n                                setChannels(newChannels);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newChannels.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newChannels.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (channel, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{channel.name[\"fr\"]}</td>\r\n                <td>{channel.is_response ? \"Oui\" : \"Non\"}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-channel') && channel.is_editable ? (\r\n                            <Link to={`/settings/channels/${channel.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-channel') && channel.is_editable ? (\r\n                            <button\r\n                                onClick={(e) => deleteChannel(channel.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-channel') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Canal\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-channel\"}\r\n                            title={\"Canal\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/channels/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input\r\n                                                            id=\"myInput\"\r\n                                                            type=\"text\"\r\n                                                            onKeyUp={(e) => searchElement(e)}\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            placeholder=\"\" aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Canale de reponse\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        channels.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((channel, index) => (\r\n                                                                    printBodyTable(channel, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canale de reponse</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {channels.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Channel);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAdd.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ChannelForm.jsx",["1014"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ChannelForms = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-channel'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-channel'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n        is_response: 0,\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        is_response: [],\r\n    };\r\n\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                axios.get(`${appConfig.apiDomaine}/channels/${id}`)\r\n                    .then(response => {\r\n                        const newData = {\r\n                            name: response.data.name[\"fr\"],\r\n                            is_response: response.data.is_response\r\n                        };\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, id]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/channels/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/channels`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        redirectError401Page(errorRequest.response.data.code);\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/channels\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Canal\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification d'un canal\" : \"Ajout d'un canal\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Canal <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le nom du Canal\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/channels\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/channels\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-channel') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-channel') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChannelForms);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RelationShip.jsx",["1015","1016","1017","1018","1019"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {filterDataTableBySearchValue, forceRound, loadCss, loadScript} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst RelationShip = (props) => {\r\n    document.title = \"Satis client - Paramètre Type relation client\";\r\n    if (!verifyPermission(props.userPermissions, \"list-relationship\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [relation, setRelation] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/relationships\")\r\n                .then(response => {\r\n                    console.log(response.data,\"DATA\")\r\n                    setRelation(response.data);\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setNumberPage(forceRound(response.data.length / NUMBER_ELEMENT_PER_PAGE));\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(relation.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(relation.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(relation.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                relation.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                relation.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteTypeClient = (relationId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/relationships/${relationId}`)\r\n                            .then(response => {\r\n                                console.log(response, \"OK\");\r\n                                const newType = [...relation];\r\n                                newType.splice(index, 1);\r\n                                setRelation(newType);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newType.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newType.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (typeRelation, index) => {\r\n        return (\r\n            <tr className=\"d-flex justify-content-center align-content-center odd\" key={index} role=\"row\"\r\n                className=\"odd\">\r\n                <td>{typeRelation.name.fr}</td>\r\n                <td>{typeRelation.description?typeRelation.description.fr:null}</td>\r\n                <td style={{textAlign:\"center\"}}>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'show-relationship')?\r\n                            <Link to={`/settings/relationship/edit/${typeRelation.id}`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            :\"\"\r\n                    }\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-relationship') ?\r\n                            <button\r\n                                onClick={(e) => deleteTypeClient(typeRelation.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                            : null\r\n                    }\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-relationship\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Relation client\r\n                                </a>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-relationship\"}\r\n                            title={\"Type de relation client\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/relationship/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\" placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"200px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        relation.length ? (\r\n                                                            search ? (\r\n                                                                relation.map((type, index) => (\r\n                                                                    printBodyTable(type, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((type, index) => (\r\n                                                                    printBodyTable(type, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr></tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">\r\n                                                    {relation.length ?\r\n                                                        `Affichage de 1 à ${numberPerPage} sur ${relation.length} données`\r\n                                                        :\r\n                                                        \"Affichage de 0 page\"\r\n                                                    }\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(RelationShip);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigRequirements.jsx",["1020","1021","1022","1023","1024"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n    loadCss,\r\n    forceRound,\r\n    formatSelectOption,\r\n    getLowerCaseString, debug\r\n} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n     toastEditErrorMessageConfig, toastEditSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst ConfigRequirements = () => {\r\n    document.title = \"Satis client - Paramètre Exigence\";\r\n    const defaultData = {\r\n        objectData: {},\r\n        requirements: [],\r\n    };\r\n    const [load, setLoad] = useState(true);\r\n    const [requirement, setRequirement] = useState([]);\r\n    const [claimObject, setClaimObject] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [data, setData] = useState(defaultData);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/claim-object-requirements\")\r\n                .then(response => {\r\n                    let newObjectData = [];\r\n                    response.data.claimCategories.map((claimCategory) => (\r\n                        claimCategory.claim_objects.map((claimObject) => (\r\n                            newObjectData[claimObject.id] = claimObject.requirements.map(requirement => (\r\n                                {value: requirement.id, label: requirement.description.fr})\r\n                            )\r\n                        ))\r\n                    ));\r\n\r\n                    setData(newObjectData);\r\n                    setLoad(false);\r\n                    setClaimObject(response.data.claimCategories);\r\n                    setRequirement(response.data.requirements);\r\n                    setShowList(response.data.claimCategories.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.claimCategories.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const matchRequirement = (requirement, value) => {\r\n        var match = false;\r\n        requirement.map(el => {\r\n            match = (\r\n                match ||\r\n                getLowerCaseString(el.description[\"fr\"]).indexOf(value) >= 0\r\n            )\r\n        });\r\n        return match;\r\n    };\r\n\r\n    const matchObject = (objects, value) => {\r\n        var match = false;\r\n        objects.map(el => {\r\n            match = (\r\n                match ||\r\n                getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n                matchRequirement(el.requirements, value)\r\n            )\r\n        });\r\n        return match;\r\n    };\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaimObject = [...claimObject];\r\n        debug(newClaimObject, \"object\");\r\n        newClaimObject = newClaimObject.filter(el => (\r\n            getLowerCaseString(el.name.fr).indexOf(value) >= 0 ||\r\n            (!el.claim_objects.length ? false : matchObject(el.claim_objects, value))\r\n        ));\r\n\r\n        return newClaimObject;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimObject.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimObject.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimObject.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimObject.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimObject.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimObject.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimObject.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const onChangeExigence = (e, object_id) => {\r\n        let newData = {...data};\r\n        newData[object_id] = e?e.map(sel => ({value: sel.value, label: sel.label})):\"\";\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        let claimObjects = {...data};\r\n        let values = {};\r\n\r\n        for (const claim_object_id in claimObjects) {\r\n            let requirements = claimObjects[claim_object_id];\r\n            // console.log(requirements, 'requirement_for_' + claim_object_id);\r\n            values[claim_object_id] = requirements?requirements.map(requirement => (requirement.value)):null;\r\n        }\r\n        // console.log(values, 'values');\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios.put(appConfig.apiDomaine + `/claim-object-requirements`, values)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const printBodyTable = (category, index) => {\r\n        return (\r\n\r\n            category.claim_objects ?\r\n                category.claim_objects.map((object, i) => (\r\n                    <tr key={i} role=\"row\" className=\"odd\">\r\n                        {\r\n                            i === 0 ?\r\n                                <td rowSpan={category.claim_objects.length}>{category.name.fr}</td>\r\n                                : null\r\n                        }\r\n                        <td>\r\n                            {object.name.fr}\r\n                        </td>\r\n                        <td>\r\n                            {requirement ? (\r\n                                <Select\r\n                                    value={data[object.id]}\r\n                                    onChange={(e) => onChangeExigence(e, object.id)}\r\n                                    options={formatSelectOption(requirement, 'description', \"fr\")}\r\n                                    isMulti\r\n                                    key={object.id}\r\n                                />\r\n                            ) : null\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                )) : null\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Configuration des Exigences\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable\r\n                    information={\"Configuration des Exigences \"}\r\n                />\r\n\r\n                <div className=\"kt-portlet\">\r\n                    <HeaderTablePage\r\n                        addPermission={\"\"}\r\n                        title={\"Exigences\"}\r\n                        addText={\"Ajouter une Exigence\"}\r\n                        addLink={\"/settings/requirement\"}\r\n                    />\r\n\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\"\r\n                                                           onKeyUp={(e) => searchElement(e)}\r\n                                                           className=\"form-control form-control-sm\"\r\n                                                           placeholder=\"\"\r\n                                                           aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <table\r\n                                                className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{width: \"952px\"}}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"80px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Catégorie\r\n                                                        de plainte\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Objets\r\n                                                        de réclamation\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"170px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Exigences\r\n                                                    </th>\r\n\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {\r\n                                                    claimObject ? (\r\n                                                        showList.length ? (\r\n                                                            showList.map((category, index) => (\r\n                                                                printBodyTable(category, index)\r\n                                                            ))\r\n                                                        ) : <EmptyTable search={true}/>\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    )\r\n                                                }\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <div className=\"kt-portlet__foot\">\r\n                                                <div className=\"kt-form__actions text-right\">\r\n                                                    {\r\n                                                        !startRequest ? (\r\n                                                            <button type=\"submit\"\r\n                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                    className=\"btn btn-primary\">Enregistrer</button>\r\n                                                        ) : (\r\n                                                            <button\r\n                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                type=\"button\" disabled>\r\n                                                                Loading...\r\n                                                            </button>\r\n                                                        )\r\n                                                    }\r\n                                                    {\r\n                                                        !startRequest ? (\r\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\">\r\n                                                                Quitter\r\n                                                            </Link>\r\n                                                        ) : (\r\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\"\r\n                                                                  disabled>\r\n                                                                Quitter\r\n                                                            </Link>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1\r\n                                                à {numberPerPage} sur {claimObject.length} données\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {\r\n                                            showList.length ? (\r\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                    <Pagination\r\n                                                        numberPerPage={numberPerPage}\r\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                        activeNumberPage={activeNumberPage}\r\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                        pages={pages}\r\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                        numberPage={numberPage}\r\n                                                        onClickNextPage={e => onClickNextPage(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ConfigRequirements;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\RelationShipForm.jsx",["1025"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link, useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \"+localStorage.getItem('token');\r\n\r\n\r\nconst RelationShipForm = (props) => {\r\n    const {id} = useParams();\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-relationship'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-relationship'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        name: \"\",\r\n        description: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        description: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.get(appConfig.apiDomaine + `/relationships/${id}`)\r\n                    .then(response => {\r\n                        console.log(response.data, 'DATA');\r\n                        const newType = {\r\n                            name: response.data.name.fr,\r\n                            description: response.data.description?response.data.description.fr:null\r\n                        };\r\n                        setData(newType);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    },[appConfig.apiDomaine, id]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDescription = (e) => {\r\n        const newData = {...data};\r\n        newData.description = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(appConfig.apiDomaine + `/relationships/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(appConfig.apiDomaine + `/relationships`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(({response}) => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/relationship\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Relation client\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ?\r\n                                                    \"Modification d'un type de relation client\" : \" Ajout de relation client\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n\r\n                                                                <div\r\n                                                                    className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Relation <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"name\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Veillez entrer le nom de la relation\"\r\n                                                                            value={data.name}\r\n                                                                            onChange={(e) => onChangeName(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.name.length ? (\r\n                                                                                error.name.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.description.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"description\">Description <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <textarea\r\n                                                                            id=\"description\"\r\n                                                                            className={error.description.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Veillez entrer la description\"\r\n                                                                            cols=\"30\"\r\n                                                                            rows=\"5\"\r\n                                                                            value={data.description}\r\n                                                                            onChange={(e) => onChangeDescription(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.description.length ? (\r\n                                                                                error.description.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Envoyer</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Loading...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/relationship\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/relationship\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-relationship') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-relationship') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(RelationShipForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\IncompleteClaims.jsx",["1026","1027"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    loadCss,\r\n    filterDataTableBySearchValue,\r\n    forceRound,\r\n    formatDateToTime, reduceCharacter\r\n} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/claims-incompletes`,\r\n        destroy: claimId => `${appConfig.apiDomaine}/my/claims-incompletes/${claimId}`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/claims-incompletes`,\r\n            destroy: claimId => `${appConfig.apiDomaine}/any/claims-incompletes/${claimId}`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/claims-incompletes`,\r\n            destroy: claimId => `${appConfig.apiDomaine}/my/claims-incompletes/${claimId}`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/without-client/claims-incompletes `,\r\n        destroy: claimId => `${appConfig.apiDomaine}/without-client/claims-incompletes/${claimId}`,\r\n    }\r\n};\r\n\r\nconst IncompleteClaims = (props) => {\r\n    document.title = \"Satis client - Liste plaintes incomplètes\";\r\n    if (!(verifyPermission(props.userPermissions, \"list-claim-incomplete-against-any-institution\") ||\r\n        verifyPermission(props.userPermissions, \"list-claim-incomplete-against-my-institution\") ||\r\n        verifyPermission(props.userPermissions, \"list-claim-incomplete-without-client\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [incompleteClaims, setIncompleteClaims] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-claim-incomplete-against-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-claim-incomplete-against-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setIncompleteClaims(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(incompleteClaims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(incompleteClaims.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(incompleteClaims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                incompleteClaims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                incompleteClaims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.reference}</td>\r\n                <td>{claim.claimer.lastname}&ensp;{claim.claimer.firstname}{claim.account_targeted !== null ? \"/\" + claim.account_targeted.number : \"\"}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'show-claim-incomplete-against-any-institution') ||\r\n                        verifyPermission(props.userPermissions, \"show-claim-incomplete-without-client\") ?\r\n                            claim.institution_targeted.name\r\n                            : (claim.unit_targeted ? claim.unit_targeted.name.fr : \"-\")\r\n\r\n                    }\r\n                </td>\r\n                <td>{formatDateToTime(claim.created_at)} <br/>\r\n                    {claim.timeExpire >= 0 ?\r\n                        <span style={{color: \"forestgreen\", fontWeight: \"bold\"}}>{\"J+\" + claim.timeExpire}</span> :\r\n                        <span style={{color: \"red\", fontWeight: \"bold\"}}>{\"J\" + claim.timeExpire}</span>}\r\n                </td>\r\n                <td>{claim.claim_object.name.fr}</td>\r\n                <td>{claim.description.length > 30 ? reduceCharacter(claim.description) : claim.description}</td>\r\n                <td style={{textAlign: 'center'}}>\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'show-claim-incomplete-against-any-institution') ||\r\n                        verifyPermission(props.userPermissions, 'show-claim-incomplete-against-my-institution') ||\r\n                        verifyPermission(props.userPermissions, \"show-claim-incomplete-without-client\") ?\r\n                            <Link\r\n                                to={`/process/incomplete_claims/edit/${claim.id}`}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Complèter\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            : null\r\n                    }\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        (\r\n            verifyPermission(props.userPermissions, \"list-claim-incomplete-against-any-institution\") ||\r\n            verifyPermission(props.userPermissions, \"list-claim-incomplete-against-my-institution\") ||\r\n            verifyPermission(props.userPermissions, \"list-claim-incomplete-without-client\")\r\n        ) ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader  kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid\">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Collecte\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                        Réclamations Incomplètes\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"Liste des réclamations imcomplètes\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n\r\n                        <HeaderTablePage\r\n                            addPermission={\"\"}\r\n                            title={\"Réclamations Imcomplètes\"}\r\n                            addText={\"Ajouter de réclamations\"}\r\n                            addLink={\"/settings/claims/add\"}\r\n                        />\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"text-left col-sm-6\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Rechercher:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"25px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Référence\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"85px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Réclamant\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">\r\n                                                            {\r\n                                                                verifyPermission(props.userPermissions, 'show-claim-incomplete-against-any-institution') ||\r\n                                                                verifyPermission(props.userPermissions, \"show-claim-incomplete-without-client\") ?\r\n                                                                    \" Institution concernée\"\r\n                                                                    : \"Pointde service visé\"\r\n                                                            }\r\n                                                        </th>\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Date\r\n                                                            de réception\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"85px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">\r\n                                                            Objet de réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                        </th>\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        incompleteClaims.length ? (\r\n                                                            search ? (\r\n                                                                incompleteClaims.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">\r\n                                                            {\r\n                                                                (props.plan === 'PRO') ?\r\n                                                                    \"Point de service visé\"\r\n                                                                    : \"Institution ciblée\"\r\n                                                            }\r\n                                                        </th>\r\n\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Date de réception</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objet de réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {incompleteClaims.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(IncompleteClaims);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssign.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigProcessingCircuit.jsx",["1028","1029"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n    loadCss,\r\n    forceRound,\r\n    formatSelectOption,\r\n    getLowerCaseString, debug\r\n} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/processing-circuits`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/processing-circuits`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/processing-circuits`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/without-institution/processing-circuits`,\r\n    }\r\n};\r\n\r\n\r\nconst ConfigProcessingCircuit = (props) => {\r\n    document.title = \"Satis client - Paramètre Entités de traitement\";\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'update-processing-circuit-my-institution') ||\r\n        verifyPermission(props.userPermissions, \"update-processing-circuit-any-institution\") ||\r\n        verifyPermission(props.userPermissions, \"update-processing-circuit-without-institution\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'update-processing-circuit-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'update-processing-circuit-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const defaultData = {\r\n        institution_id: []\r\n    };\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [units, setUnits] = useState([]);\r\n    const [claimObject, setClaimObject] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [data, setData] = useState(undefined);\r\n    const [institutionId, setInstitutionId] = useState(undefined);\r\n    const [error] = useState(defaultData);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [institutionData, setInstitutionData] = useState(undefined);\r\n    const [institution, setInstitution] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            if (verifyPermission(props.userPermissions, 'update-processing-circuit-any-institution')) {\r\n                axios.get(endPoint.list)\r\n                    .then(response => {\r\n                        const options = [\r\n                            response.data.institutions.length ? response.data.institutions.map((institution) => ({\r\n                                value: institution.id,\r\n                                label: institution.name\r\n                            })) : null\r\n                        ];\r\n                        setInstitutionData(options);\r\n                    });\r\n            }\r\n\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    let newObjectData = [];\r\n                    response.data.claimCategories.map((claimCategory) => (\r\n                        claimCategory.claim_objects.map((claimObject) => (\r\n                            newObjectData[claimObject.id] = claimObject.units.map(unit => (\r\n                                {value: unit.id, label: unit.name.fr})\r\n                            )\r\n                        ))\r\n                    ));\r\n\r\n                    setData(newObjectData);\r\n                    setLoad(false);\r\n                    setClaimObject(response.data.claimCategories);\r\n                    setUnits(response.data.units);\r\n                    setInstitutionId(response.data.institution_id);\r\n                    setShowList(response.data.claimCategories.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.claimCategories.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, [endPoint.list,numberPerPage, props.userPermissions]);\r\n\r\n    {/*<tr key={i} role=\"row\" className=\"odd\">\r\n        {\r\n            i === 0 ?\r\n                <td rowSpan={category.claim_objects.length}>{category.name.fr}</td>\r\n                : <td style={{display: \"none\"}}/>\r\n        }\r\n        <td>\r\n            {object.name.fr}\r\n        </td>\r\n        <td>\r\n            {units ? (\r\n                <Select\r\n                    value={data[object.id]}\r\n                    onChange={(e) => onChangeProcessing(e, object.id)}\r\n                    options={formatSelectOption(units, 'name', \"fr\")}\r\n                    isMulti\r\n                    placeholder={\"Veillez selectionez le circuit\"}\r\n                    key={object.id}\r\n                />\r\n            ) : null\r\n            }\r\n        </td>\r\n    </tr>*/}\r\n\r\n    const matchToClaimObjectOrEntity = (list, value) => {\r\n        let match = false;\r\n        list.map(el => {\r\n            match = (\r\n                match ||\r\n                getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n                (el.units ? matchToClaimObjectOrEntity(el.units, value) : false)\r\n            )\r\n        });\r\n        return match;\r\n    };\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaimObject = [...claimObject];\r\n        debug(newClaimObject, \"all\");\r\n        newClaimObject = newClaimObject.filter(el => (\r\n            getLowerCaseString(el.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            matchToClaimObjectOrEntity(el.claim_objects, value)\r\n        ));\r\n\r\n        return newClaimObject;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimObject.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimObject.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimObject.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimObject.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimObject.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimObject.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimObject.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const onChangeProcessing = (e, object_id) => {\r\n        let newData = {...data};\r\n        newData[object_id] = e?e.map(sel => ({value: sel.value, label: sel.label})):\"\";\r\n        setData(newData);\r\n    };\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        let claimObjects = {...data};\r\n        let values = {};\r\n\r\n        for (const claim_object_id in claimObjects) {\r\n            let processings = claimObjects[claim_object_id];\r\n\r\n            values[claim_object_id] = processings?processings.map(processing => (processing.value)):null;\r\n        }\r\n\r\n        let newEndPoint = '';\r\n        if (verifyPermission(props.userPermissions, 'update-processing-circuit-any-institution')){\r\n            newEndPoint = endPoint.list + `/${institutionId}`\r\n        } else {\r\n            newEndPoint = endPoint.list\r\n        }\r\n        // {console.log(values, 'valeur à enregistrer')}\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios.put(newEndPoint, values)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const onChangeInstitution = (selected) => {\r\n        setInstitutionId(selected.value);\r\n        setInstitution(selected);\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + `/any/processing-circuits/${selected.value}`)\r\n                .then(response => {\r\n                    setUnits(response.data.units ? response.data.units.map((unit) => (unit)) : null);\r\n                    let newObjectData = [];\r\n                    response.data.claimCategories.map((claimCategory) => (\r\n                        claimCategory.claim_objects.map((claimObject) => (\r\n                            newObjectData[claimObject.id] = claimObject.units.map(unit => (\r\n                                {value: unit.id, label: unit.name.fr})\r\n                            )\r\n                        ))\r\n                    ));\r\n                    setData(newObjectData)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const printBodyTable = (category, index) => {\r\n        return (\r\n\r\n            category.claim_objects ?\r\n                category.claim_objects.map((object, i) => (\r\n                    <tr key={i} role=\"row\" className=\"odd\">\r\n\r\n                        {\r\n                            i === 0 ?\r\n                                <td rowSpan={category.claim_objects.length}>{category.name.fr}</td>\r\n                                : <td style={{display: \"none\"}}/>\r\n                        }\r\n                        <td>\r\n                            {object.name.fr}\r\n                        </td>\r\n                        <td>\r\n                            {units ? (\r\n                                <Select\r\n                                    value={data[object.id]}\r\n                                    onChange={(e) => onChangeProcessing(e, object.id)}\r\n                                    options={formatSelectOption(units, 'name', \"fr\")}\r\n                                    isMulti\r\n                                    placeholder={\"Veillez selectionez le circuit\"}\r\n                                    key={object.id}\r\n                                />\r\n                            ) : null\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                )) : null\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Configuration Entités de traitement\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable\r\n                    information={\"Paramètre de configuration des entités de traitement\"}/>\r\n\r\n                <div className=\"kt-portlet\">\r\n                    <HeaderTablePage\r\n                        addPermission={\"\"}\r\n                        title={\"Entités de Traitement\"}\r\n                        addText={\"Ajouter une entité de traitement\"}\r\n                        addLink={\"/settings/processing-circuit\"}\r\n                    />\r\n\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\"\r\n                                                           onKeyUp={(e) => searchElement(e)}\r\n                                                           className=\"form-control form-control-sm\"\r\n                                                           placeholder=\"\"\r\n                                                           aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <br/>\r\n                                            <br/>\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, \"update-processing-circuit-any-institution\") ?\r\n                                                    <div\r\n                                                        className={error.institution_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"exampleSelect1\">Sélectionnez une Institution</label>\r\n                                                        <div className=\"col-lg-9 col-xl-6\">\r\n                                                            {\r\n                                                                institutionData ? (\r\n                                                                    <Select\r\n                                                                        placeholder={\"Veillez selectionner l'institution\"}\r\n                                                                        value={institution}\r\n                                                                        onChange={onChangeInstitution}\r\n                                                                        options={institutionData.length ? institutionData[0].map(name => name) : null}\r\n                                                                    />\r\n\r\n                                                                ) : (<select name=\"category\"\r\n                                                                             className={error.institution_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                             id=\"category\">\r\n                                                                    <option value=\"\"/>\r\n                                                                </select>)\r\n                                                            }\r\n                                                        </div>\r\n                                                        {\r\n                                                            error.institution_id.length ? (\r\n                                                                error.institution_id.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n\r\n                                                    </div>\r\n                                                    : null\r\n                                            }\r\n\r\n\r\n                                            <table\r\n                                                className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{width: \"952px\"}}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"80px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Catégorie\r\n                                                        de plainte\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Objets\r\n                                                        de plainte\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"170px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Entités\r\n                                                        de traitement\r\n                                                    </th>\r\n\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {/*{console.log(data,'data')}*/}\r\n                                                {\r\n                                                    claimObject ? (\r\n                                                        showList.length ? (\r\n                                                            showList.map((category, index) => (\r\n                                                                printBodyTable(category, index)\r\n                                                            ))\r\n                                                        ) : (\r\n                                                            <EmptyTable search={true}/>\r\n                                                        )\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    )\r\n                                                }\r\n                                                </tbody>\r\n\r\n                                            </table>\r\n                                            <div className=\"kt-portlet__foot\">\r\n                                                <div className=\"kt-form__actions text-right\">\r\n                                                    {\r\n                                                        !startRequest ? (\r\n                                                            <button type=\"submit\"\r\n                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                    className=\"btn btn-primary\">Enregistrer</button>\r\n                                                        ) : (\r\n                                                            <button\r\n                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                type=\"button\" disabled>\r\n                                                                Chargement...\r\n                                                            </button>\r\n                                                        )\r\n                                                    }\r\n                                                    {\r\n                                                        !startRequest ? (\r\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\">\r\n                                                                Quitter\r\n                                                            </Link>\r\n                                                        ) : (\r\n                                                            <Link to=\"/dashboard\" className=\"btn btn-secondary mx-2\"\r\n                                                                  disabled>\r\n                                                                Quitter\r\n                                                            </Link>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1\r\n                                                à {numberPerPage} sur {claimObject.length} données\r\n                                            </div>\r\n                                        </div>\r\n                                        {\r\n                                            showList.length ? (\r\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                    <Pagination\r\n                                                        numberPerPage={numberPerPage}\r\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                        activeNumberPage={activeNumberPage}\r\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                        pages={pages}\r\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                        numberPage={numberPage}\r\n                                                        onClickNextPage={e => onClickNextPage(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ConfigProcessingCircuit);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssignDetail.jsx",["1030","1031","1032","1033"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {formatSelectOption, loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport FusionClaim from \"../components/FusionClaim\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport DoubleButton from \"../components/DoubleButton\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport DoubleButtonDetail from \"../components/DoubleButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport UnfoundedModal from \"../components/UnfoundedModal\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        edit: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\r\n        update: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\r\n    },\r\n    MACRO: {\r\n        plan: \"MACRO\",\r\n        edit: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\r\n        update: id => `${appConfig.apiDomaine}/transfer-claim-to-circuit-unit/${id}`,\r\n\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        edit: id => `${appConfig.apiDomaine}/transfer-claim-to-unit/${id}`,\r\n        update: id => `${appConfig.apiDomaine}/transfer-claim-to-unit/${id}`,\r\n    }\r\n};\r\n\r\n\r\nconst ClaimAssignDetail = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n    const {id} = useParams();\r\n\r\n    if (!(verifyPermission(props.userPermissions, \"show-claim-awaiting-assignment\") && props.activePilot))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = endPointConfig[props.plan];\r\n\r\n    const defaultError = {\r\n        unit_id: [],\r\n    };\r\n    const [error, setError] = useState(defaultError);\r\n\r\n    const [claim, setClaim] = useState(null);\r\n    const [copyClaim, setCopyClaim] = useState(null);\r\n    const [dataId, setDataId] = useState(\"\");\r\n    const [data, setData] = useState({unit_id: null});\r\n    const [unitsData, setUnitsData] = useState({});\r\n    const [unit, setUnit] = useState(null);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [startRequestToUnit, setStartRequestToUnit] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if (verifyTokenExpire()) {\r\n                await axios.get(`${appConfig.apiDomaine}/claim-awaiting-assignment/${id}`)\r\n                    .then(response => {\r\n                        setClaim(response.data);\r\n                        setDataId(response.data.institution_targeted.name);\r\n                    })\r\n                    .catch(error => console.log(\"Something is wrong\"))\r\n                ;\r\n            }\r\n\r\n            if (verifyPermission(props.userPermissions, \"transfer-claim-to-circuit-unit\") || verifyPermission(props.userPermissions, \"transfer-claim-to-unit\")) {\r\n                if (verifyTokenExpire()) {\r\n                    await axios.get(endPoint.edit(`${id}`))\r\n                        .then(response => {\r\n                            let newUnit = Object.values(response.data.units);\r\n                            setUnitsData(formatSelectOption(newUnit, \"name\", \"fr\"))\r\n                        })\r\n                        .catch(error => console.log(\"Something is wrong\"))\r\n                    ;\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const onClickToTranfertInstitution = async (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            await axios.put(`${appConfig.apiDomaine}/transfer-claim-to-targeted-institution/${id}`)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    window.location.href = \"/process/claim-assign\";\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const onClickToTranfert = (e) => {\r\n        e.preventDefault();\r\n        setStartRequestToUnit(true);\r\n\r\n        async function fetchData() {\r\n            await axios.put(endPoint.update(`${id}`), data)\r\n                .then(response => {\r\n                    setStartRequestToUnit(false);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    window.location.href = \"/process/claim-assign\";\r\n                })\r\n                .catch(error => {\r\n                    setStartRequestToUnit(false);\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig)\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData()\r\n    };\r\n\r\n    const onChangeUnits = (selected) => {\r\n        const newData = {...data};\r\n        newData.unit_id = selected ? selected.value : null;\r\n        setUnit(selected);\r\n        setData(newData);\r\n        console.log(newData.unit_id, \"UNIT\")\r\n    };\r\n\r\n    const onClickFusionButton = async (newClaim) => {\r\n        await setCopyClaim(newClaim);\r\n        document.getElementById(`modal-button`).click();\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"show-claim-awaiting-assignment\") && props.activePilot ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\"\r\n                 id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Traitement\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/claim-assign\"\r\n                                          className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Réclamation à Transférer\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()}\r\n                                   style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Détail\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div\r\n                                            className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            {\r\n                                                claim ? (\r\n                                                    claim.active_treatment && claim.active_treatment.rejected_reason && claim.active_treatment.rejected_at ? (\r\n                                                        <div className=\"d-flex justify-content-start\">\r\n                                                            <span className=\"kt-badge kt-badge--danger kt-badge--inline\"\r\n                                                                  style={{fontWeight: \"bold\"}}>RECLAMATION  REJETEE</span>\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                ) : null\r\n                                            }<br/>\r\n\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            <DoubleButton claim={claim}/>\r\n\r\n                                            <div className=\"kt-wizard-v2__nav-item\"\r\n                                                 data-ktwizard-type=\"step\">\r\n                                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                        <i className=\"flaticon-truck\"/>\r\n                                                    </div>\r\n                                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                            Transfert\r\n                                                        </div>\r\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                            Transferer la réclamation\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        {\r\n                                            verifyPermission(props.userPermissions, \"unfounded-claim-awaiting-assignment\") ? (\r\n                                                <div className=\"d-flex justify-content-md-end\">\r\n                                                    <button type=\"button\" data-keyboard=\"false\" data-backdrop=\"static\"\r\n                                                            data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                                                            className=\"btn btn-danger\">\r\n                                                        NON FONDÉE\r\n                                                    </button>\r\n                                                    {\r\n                                                        claim ? (\r\n                                                            <UnfoundedModal\r\n                                                                activeTreatment={\r\n                                                                    claim.active_treatment ? (\r\n                                                                        claim.active_treatment\r\n                                                                    ) : null\r\n                                                                }\r\n                                                                getId={`${id}`}\r\n                                                            />\r\n                                                        ) : (\r\n                                                            <UnfoundedModal\r\n                                                                getId={`${id}`}\r\n                                                            />\r\n                                                        )\r\n                                                    }\r\n\r\n                                                </div>\r\n                                            ): null\r\n                                        }\r\n\r\n\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}\r\n                                                           rejected={claim && claim.active_treatment && claim.active_treatment.rejected_reason ? true : false}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        <DoubleButtonDetail\r\n                                            claim={claim}\r\n                                            onClickFusionButton={onClickFusionButton}\r\n                                            userPermissions={props.userPermissions}\r\n                                        />\r\n\r\n                                        <div className=\"kt-wizard-v2__content\"\r\n                                             data-ktwizard-type=\"step-content\">\r\n                                            <div className=\"kt-heading kt-heading--md\">Transfert de la\r\n                                                réclamation\r\n                                            </div>\r\n                                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                                <div className=\"kt-wizard-v2__review\">\r\n                                                    {\r\n                                                        verifyPermission(props.userPermissions, \"transfer-claim-to-targeted-institution\") ?\r\n                                                            <div className=\"kt-wizard-v2__review-item\">\r\n                                                                <div\r\n                                                                    className=\"kt-wizard-v2__review-content\"\r\n                                                                    style={{fontSize: \"15px\"}}>\r\n                                                                    <label\r\n                                                                        className=\"col-xl-6 col-lg-6 col-form-label\"><strong>Institution\r\n                                                                        concernée</strong></label>\r\n                                                                    <span\r\n                                                                        className=\"kt-widget__data\">{dataId}</span>\r\n                                                                </div>\r\n                                                                <div className=\"modal-footer\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-outline-success\"\r\n                                                                                onClick={onClickToTranfertInstitution}>\r\n                                                                                TRANSFÉRER A L'INSTITUTION\r\n                                                                            </button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-success kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            : null\r\n                                                    }\r\n                                                    {\r\n                                                        (verifyPermission(props.userPermissions, \"transfer-claim-to-circuit-unit\") ||\r\n                                                            verifyPermission(props.userPermissions, \"transfer-claim-to-unit\")) ?\r\n                                                            <div className=\"kt-wizard-v2__review-item\">\r\n                                                                <div className=\"kt-wizard-v2__review-title\">\r\n                                                                    Tranferer à une unité\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className=\"kt-wizard-v2__review-content\">\r\n                                                                    <div\r\n                                                                        className={error.unit_id.length ? \"form-group validated\" : \"form-group\"}>\r\n                                                                        <label>Unité</label>\r\n                                                                        <Select\r\n                                                                            isClearable\r\n                                                                            value={unit}\r\n                                                                            onChange={onChangeUnits}\r\n                                                                            options={unitsData}\r\n                                                                            placeholder={\"Veuillez sélectionner l'unité de traitement\"}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.unit_id.length ? (\r\n                                                                                error.unit_id.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : \"\"\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"modal-footer\">\r\n                                                                    {\r\n                                                                        !startRequestToUnit ? (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-outline-success\"\r\n                                                                                onClick={onClickToTranfert}>\r\n                                                                                TRANSFÉRER A UNE UNITÉ\r\n                                                                            </button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-success kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANT\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                    {\r\n                                        verifyPermission(props.userPermissions, \"merge-claim-awaiting-assignment\") ? (\r\n                                            <div>\r\n                                                <button style={{display: \"none\"}} id={`modal-button`}\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-bold btn-label-brand btn-sm\"\r\n                                                        data-toggle=\"modal\" data-target=\"#kt_modal_4\"/>\r\n                                                {\r\n                                                    copyClaim ? (\r\n                                                        <FusionClaim\r\n                                                            claim={claim}\r\n                                                            copyClaim={copyClaim}\r\n                                                            onCloseModal={() => setCopyClaim(null)}\r\n                                                        />\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        ) : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n        activePilot: state.user.user.staff.is_active_pilot\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimAssignDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\IncompleteClaimsEdit.jsx",["1034","1035","1036"],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssignToStaff.jsx",["1037"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {\r\n    forceRound, formatDateToTime,\r\n    formatDateToTimeStampte,\r\n    getLowerCaseString,\r\n    loadCss, reduceCharacter\r\n} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimAssignToStaff = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-claim-assignment-to-staff\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claims, setClaims] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            axios.get(`${appConfig.apiDomaine}/claim-assignment-staff`)\r\n                .then(response => {\r\n                    console.log(response.data, \"DATA\");\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setClaims(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaims = [...claims];\r\n        newClaims = newClaims.filter(el => (\r\n            getLowerCaseString(`${el.reference} ${el.isInvalidTreatment ? \"(R)\" : \"\"}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(`${el.claimer.lastname} ${el.claimer.firstname}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(formatDateToTimeStampte(el.created_at)).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.claim_object.name[\"fr\"]).indexOf(value) >= 0 ||\r\n            getLowerCaseString(`${el.active_treatment.responsible_staff ? el.active_treatment.responsible_staff.identite.lastname : \"\"} ${el.active_treatment.responsible_staff ? el.active_treatment.responsible_staff.identite.firstname : \"\"}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.institution_targeted.name).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newClaims;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claims.length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claims.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claims.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.reference} {claim.isInvalidTreatment ? (\r\n                    <span className=\"kt-badge kt-badge--danger kt-badge--md\">R</span>) : null}</td>\r\n                <td>{`${claim.claimer.lastname} ${claim.claimer.firstname}`} {claim.account_targeted !== null ? \"/\" + claim.account_targeted.number : \"\"}</td>\r\n                <td>\r\n                    {\r\n                        (props.plan === 'PRO') ?\r\n                            (claim.unit_targeted ? claim.unit_targeted.name.fr : \"-\")\r\n                            : claim.institution_targeted.name\r\n                    }\r\n                </td>\r\n                <td>{formatDateToTime(claim.created_at)} <br/>\r\n                    {claim.timeExpire >= 0 ? <span style={{color: \"forestgreen\", fontWeight:\"bold\"}}>{\"J+\" + claim.timeExpire}</span> :\r\n                        <span style={{color: \"red\", fontWeight:\"bold\"}}>{\"J\" + claim.timeExpire}</span>}\r\n                </td>\r\n                <td>{claim.claim_object.name[\"fr\"]}</td>\r\n                <td>{claim.description.length >= 15 ? reduceCharacter(claim.description) : claim.description}</td>\r\n\r\n                {/*<td>{`${claim.active_treatment.responsible_staff?claim.active_treatment.responsible_staff.identite.lastname:\"\"} ${claim.active_treatment.responsible_staff?claim.active_treatment.responsible_staff.identite.firstname:\"\"}`}</td>*/}\r\n                <td>\r\n                    <a href={`/process/claim-assign/to-staff/${claim.id}/detail`}\r\n                       className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                       title=\"Détail\">\r\n                        <i className=\"la la-eye\"/>\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-claim-assignment-to-staff') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Réclamations à traiter\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={(\r\n                        <div>\r\n                            Liste des réclamations qui vous sont assignées pour traitement\r\n                            <br/>\r\n                            <span className=\"kt-badge kt-badge--danger kt-badge--md mr-2\">R</span> représente les\r\n                            traitements réjetés\r\n                        </div>\r\n                    )}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Réclamations à traiter\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\" placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Référence\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\r\n                                                        </th>\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">\r\n                                                            {(props.plan === 'PRO') ? \"  Point de service visé\" : \"Institution ciblée\"}\r\n\r\n                                                        </th>\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Date\r\n                                                            de réception\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Objet\r\n                                                            de réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Description\r\n                                                        </th>\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"40.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claims.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n\r\n                                                        <th rowSpan=\"1\"\r\n                                                            colSpan=\"1\">{(props.plan === 'PRO') ? \"Point de service visé\" : \"Institution ciblée\"}\r\n                                                        </th>\r\n\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Date de réception</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objet de réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {claims.length} données\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                <Pagination\r\n                                                    numberPerPage={numberPerPage}\r\n                                                    onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                    activeNumberPage={activeNumberPage}\r\n                                                    onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                    pages={pages}\r\n                                                    onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                    numberPage={numberPage}\r\n                                                    onClickNextPage={e => onClickNextPage(e)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        plan: state.plan.plan,\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimAssignToStaff);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimList.jsx",["1038","1039"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {\r\n    forceRound,\r\n    getLowerCaseString,\r\n    loadCss,\r\n    truncateString,\r\n    formatDateToTime,\r\n} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimList = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"list-claim-awaiting-treatment\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claims, setClaims] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            axios.get(`${appConfig.apiDomaine}/claim-awaiting-treatment`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setClaims(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaims = [...claims];\r\n        newClaims = newClaims.filter(el => {\r\n            return (\r\n                getLowerCaseString(el.reference).indexOf(value) >= 0 ||\r\n                getLowerCaseString(`${el.claimer.lastname} ${el.claimer.firstname}  ${el.account_targeted ? \" / \"+el.account_targeted.number : \"\"}`).indexOf(value) >= 0 ||\r\n                getLowerCaseString(formatDateToTime(el.created_at)).indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.claim_object.name[\"fr\"]).indexOf(value) >= 0 ||\r\n                getLowerCaseString(truncateString(el.description, 41)).indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.institution_targeted.name).indexOf(value) >= 0\r\n            )\r\n        });\r\n\r\n        return newClaims;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claims.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claims.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claims.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.reference}</td>\r\n                <td>{`${claim.claimer.lastname} ${claim.claimer.firstname} ${claim.account_targeted ? \" / \"+claim.account_targeted.number : \"\"}`}</td>\r\n                <td>{props.plan === 'PRO' ? claim.unit_targeted ? claim.unit_targeted.name.fr : \"-\" : claim.institution_targeted ? claim.institution_targeted.name : \"\"}</td>\r\n                <td>\r\n                    {formatDateToTime(claim.created_at)} <br/>\r\n                    <strong className={claim.timeExpire >= 0 ? \"text-success\" : \"text-danger\"}>\r\n                        {`${claim.timeExpire >= 0 ? 'J+'+claim.timeExpire : 'J'+claim.timeExpire}`}\r\n                    </strong>\r\n                </td>\r\n                <td>{claim.claim_object.name[\"fr\"]}</td>\r\n                <td>{truncateString(claim.description, 37)}</td>\r\n                {\r\n                    verifyPermission(props.userPermissions, \"assignment-claim-awaiting-treatment\") ? (\r\n                        <td>\r\n                            <a href={`/process/claim-list-detail/${claim.id}/detail`}\r\n                               className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                               title=\"Détail\">\r\n                                <i className=\"la la-eye\"/>\r\n                            </a>\r\n                        </td>\r\n                    ) : <td/>\r\n                }\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-claim-awaiting-treatment') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Liste des réclamations\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"Cette page vous présente la liste des réclamations transférées à votre unité et qui sont en attente d'affectetion\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Liste des réclamations\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"70.25px\" }} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Référence\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"70.25px\" }} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Réclamant\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"70.25px\" }} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            {props.plan === \"PRO\" ? \"Point de service visé\" : \"Institution concernée\"}\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"70.25px\" }} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Date de réception\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"70.25px\" }} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Objet de réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"70.25px\" }} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Description\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            claims.length ? (\r\n                                                                search ? (\r\n                                                                    showList.map((claim, index) => (\r\n                                                                        printBodyTable(claim, index)\r\n                                                                    ))\r\n                                                                ) : (\r\n                                                                    showList.map((claim, index) => (\r\n                                                                        printBodyTable(claim, index)\r\n                                                                    ))\r\n                                                                )\r\n                                                            ) : (\r\n                                                                <EmptyTable/>\r\n                                                            )\r\n                                                        }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">{props.plan === \"PRO\" ? \"Point de service visé\" : \"Institution concernée\"}</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Date de réception</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objet de réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {claims.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        plan: state.plan.plan,\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimList);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimToValidatedList.jsx",["1040"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport axios from \"axios\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {filterDataTableBySearchValue, forceRound, formatDateToTimeStampte, loadCss} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimToValidatedList = (props) => {\r\n    if (!((verifyPermission(props.userPermissions, \"list-claim-awaiting-validation-any-institution\") || verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-my-institution')) && props.activePilot))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claims, setClaims] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let endpoint = \"\";\r\n        if (props.plan === \"MACRO\" || props.plan === \"PRO\")\r\n            endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-my-institution`;\r\n        else\r\n            endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-any-institution`;\r\n        async function fetchData () {\r\n            axios.get(endpoint)\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    setNumberPage(forceRound((Object.values(response.data)).length/numberPerPage));\r\n                    setShowList((Object.values(response.data)).slice(0, numberPerPage));\r\n                    setClaims(Object.values(response.data));\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claims.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.reference}</td>\r\n                <td>{`${claim.claimer.lastname} ${claim.claimer.firstname}`}</td>\r\n                <td>{formatDateToTimeStampte(claim.created_at)}</td>\r\n                <td>{claim.claim_object.name[\"fr\"]}</td>\r\n                <td>{claim.active_treatment.responsible_staff?`${claim.active_treatment.responsible_staff.identite.lastname} ${claim.active_treatment.responsible_staff.identite.firstname}`:\"\"}</td>\r\n                <td>{claim.institution_targeted.name}</td>\r\n                {/*<td>{claim.unit_targeted_id ? claim.unit_targeted_id.name  : null}</td>*/}\r\n                {\r\n                    verifyPermission(props.userPermissions, \"show-claim-awaiting-validation-any-institution\") || verifyPermission(props.userPermissions, \"show-claim-awaiting-validation-my-institution\") ? (\r\n                        <td>\r\n                            <a href={`/process/claim-to-validated/${claim.id}/detail`}\r\n                               className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                               title=\"Détail\">\r\n                                <i className=\"la la-eye\"/>\r\n                            </a>\r\n                        </td>\r\n                    ) : <td/>\r\n                }\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        (verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-my-institution') || verifyPermission(props.userPermissions, 'list-claim-awaiting-validation-any-institution')) && props.activePilot ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                               Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                   Traitement\r\n                                </a>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Réclamations à valider\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={\"Liste des réclamations à valider\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Liste des réclamations\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Search:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/*<ExportButton/>*/}\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Référence\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Date de réception\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Objet de Réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Agent\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">{props.plan ? \"Unité concernée\" : \"Institution concernée\"}\r\n                                                        </th>\r\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"*/}\r\n                                                        {/*    colSpan=\"1\" style={{ width: \"70.25px\" }}*/}\r\n                                                        {/*    aria-label=\"Country: activate to sort column ascending\">Unité*/}\r\n                                                        {/*</th>*/}\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claims.length ? (\r\n                                                            search ? (\r\n                                                                claims.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Date de réception</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objet de réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Agent</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">{props.plan === \"PRO\" ? \"Unité conernée\" : \"Institution concernée\"}</th>\r\n                                                        {/*<th rowSpan=\"1\" colSpan=\"1\">Unité</th>*/}\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {claims.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        plan: state.plan.plan,\r\n        userPermissions: state.user.user.permissions,\r\n        activePilot: state.user.user.staff.is_active_pilot\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimToValidatedList);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimMonitoring.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\SatisfactionMeasure.jsx",["1041"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    loadCss,\r\n    filterDataTableBySearchValue,\r\n    forceRound,\r\n    formatDateToTime,\r\n    reduceCharacter\r\n} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/any/claim-satisfaction-measured`,\r\n    }\r\n};\r\n\r\nconst SatisfactionMeasure = (props) => {\r\n    document.title = \"Satis client - Mesure satisfaction\";\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'list-satisfaction-measured-my-claim') ||\r\n        verifyPermission(props.userPermissions, \"list-satisfaction-measured-any-claim\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-satisfaction-measured-my-claim'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-satisfaction-measured-my-claim'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [satisfactionMeasure, setSatisfactionMeasure] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setSatisfactionMeasure(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(satisfactionMeasure.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(satisfactionMeasure.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(satisfactionMeasure.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                satisfactionMeasure.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                satisfactionMeasure.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (measure, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{measure.reference === null ? \"\" : measure.reference}</td>\r\n                <td>{`${measure.claimer.lastname} ${measure.claimer.firstname}`} {measure.account_targeted !== null ? \"/\" + measure.account_targeted.number : \"\"}</td>\r\n                <td>\r\n                    {\r\n                        (props.plan === 'PRO') ?\r\n                            (measure.unit_targeted ? measure.unit_targeted.name.fr : \"-\")\r\n                            : measure.institution_targeted.name\r\n                    }\r\n                </td>\r\n                <td>{formatDateToTime(measure.created_at)} <br/>\r\n                    {measure.timeExpire >= 0 ? <span style={{color: \"forestgreen\", fontWeight:\"bold\"}}>{\"J+\" + measure.timeExpire}</span> :\r\n                        <span style={{color: \"red\", fontWeight:\"bold\"}}>{\"J\" + measure.timeExpire}</span>}\r\n                </td>\r\n                <td>{measure.claim_object.name[\"fr\"]}</td>\r\n                <td>{measure.description.length >= 15 ? reduceCharacter(measure.description) : measure.description}</td>\r\n                {/*<td>{measure.active_treatment.solution === null ? \"\" : measure.active_treatment.solution}</td>*/}\r\n\r\n                <td>{`${measure.active_treatment.responsible_staff ? measure.active_treatment.responsible_staff.identite.lastname : \"\"} ${measure.active_treatment.responsible_staff ? measure.active_treatment.responsible_staff.identite.firstname : \"\"}/${measure.active_treatment.responsible_staff.unit.name[\"fr\"]}`}</td>\r\n\r\n                {\r\n                    verifyPermission(props.userPermissions, \"update-satisfaction-measured-my-claim\") ||\r\n                    verifyPermission(props.userPermissions, \"update-satisfaction-measured-any-claim\") ? (\r\n                        <td style={{textAlign: 'center'}}>\r\n                            <a href={`/process/claim_measure/${measure.id}/detail`}\r\n                               className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                               title=\"Détail\">\r\n                                <i className=\"la la-eye\"/>\r\n                            </a>\r\n\r\n                        </td>\r\n                    ) : null\r\n                }\r\n\r\n            </tr>\r\n        )\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Processus\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                               className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                Traitement\r\n                            </a>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Mesure de Satisfaction\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable information={\"La liste des réclamations à mésurer la satisfaction\"}/>\r\n\r\n                <div className=\"kt-portlet\">\r\n\r\n                    <HeaderTablePage\r\n                        title={\"Mesure de Satisfaction\"}\r\n                    />\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Rechercher:\r\n                                                    <input id=\"myInput\" type=\"text\"\r\n                                                           onKeyUp={(e) => searchElement(e)}\r\n                                                           className=\"form-control form-control-sm\"\r\n                                                           placeholder=\"\"\r\n                                                           aria-controls=\"kt_table_1\"/>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <table\r\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{width: \"952px\"}}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Référence\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Réclamant\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"80.25px\"}}\r\n\r\n                                                        aria-label=\"Country: activate to sort column ascending\">\r\n                                                        {(props.plan === 'PRO') ? \"  Point de service visé\" : \"Institution ciblée\"}\r\n\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Date\r\n                                                        de réception\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Objet\r\n                                                        de réclamation\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Description\r\n                                                    </th>\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Agent\r\n                                                        traiteur\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\" colSpan=\"1\" style={{width: \"40.25px\"}}\r\n                                                        aria-label=\"Type: activate to sort column ascending\">\r\n                                                        Action\r\n                                                    </th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {console.log(satisfactionMeasure, \"Mesure\")}\r\n                                                {\r\n                                                    satisfactionMeasure.length ? (\r\n                                                        search ? (\r\n                                                            satisfactionMeasure.map((measure, index) => (\r\n                                                                printBodyTable(measure, index)\r\n                                                            ))\r\n                                                        ) : (\r\n                                                            showList.map((measure, index) => (\r\n                                                                printBodyTable(measure, index)\r\n                                                            ))\r\n                                                        )\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    )\r\n                                                }\r\n                                                </tbody>\r\n                                                <tfoot>\r\n                                                <tr>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                    <th rowSpan=\"1\"\r\n                                                        colSpan=\"1\">{(props.plan === 'PRO') ? \"Point de service visé\" : \"Institution ciblée\"}\r\n                                                    </th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Date de réception</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Objet de réclamation</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Agent traiteur</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                </tr>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1\r\n                                                à {numberPerPage} sur {satisfactionMeasure.length} données\r\n                                            </div>\r\n                                        </div>\r\n                                        {\r\n                                            !search ? (\r\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                    <Pagination\r\n                                                        numberPerPage={numberPerPage}\r\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                        activeNumberPage={activeNumberPage}\r\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                        pages={pages}\r\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                        numberPage={numberPage}\r\n                                                        onClickNextPage={e => onClickNextPage(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SatisfactionMeasure);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReporting.jsx",["1042","1043","1044","1045","1046"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport FileSaver from \"file-saver\";\r\nimport ApexCharts from \"apexcharts\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastErrorMessageWithParameterConfig,\r\n    toastInvalidPeriodMessageConfig,\r\n    toastValidPeriodMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {debug, formatSelectOption} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {month} from \"../../constants/date\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimReporting = props => {\r\n    document.title = \"Satis client - Reporting\";\r\n    if (!(verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, \"list-reporting-claim-my-institution\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endpoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, \"list-reporting-claim-any-institution\"))\r\n            endpoint = `${appConfig.apiDomaine}/any/reporting-claim`;\r\n        else if (verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution'))\r\n            endpoint = `${appConfig.apiDomaine}/my/reporting-claim`;\r\n    } else if(props.plan === \"HUB\")\r\n        endpoint = `${appConfig.apiDomaine}/any/reporting-claim`;\r\n    else if(props.plan === \"PRO\")\r\n        endpoint = `${appConfig.apiDomaine}/my/reporting-claim`;\r\n\r\n\r\n    const [fetchData, setFetchData] = useState(null);\r\n    const [institution, setInstitution] = useState(null);\r\n    const [startDate, setStartDate] = useState(\"\");\r\n    const [endDate, setEndDate] = useState(\"\");\r\n    const [typeFilter, setTypeFilter] = useState(\"months\");\r\n    const [startFilter, setStartFilter] = useState(false);\r\n    const [startExportation, setStartExportation] = useState(false);\r\n    const [pdfTitle, setPdfTitle] = useState(`reporting_${new Date().getFullYear()}`);\r\n    const [possibleFilter, setPossibleFilter] = useState(\r\n        {\r\n            months: true,\r\n            weeks: true,\r\n            days: true\r\n        }\r\n    );\r\n    const [stateChartOne, setStateChartOne] = useState(\"\");\r\n    const [stateChartTwo, setStateChartTwo] = useState(\"\");\r\n\r\n    var totalCollect = 0;\r\n    var totalIncomplete = 0;\r\n    var totalToAssignUnit = 0;\r\n    var totalToAssignStaff = 0;\r\n    var totalAwaitingTreatment= 0;\r\n    var totalToValidate = 0;\r\n    var totalToMeasureSatisfaction = 0;\r\n    var totalPercentage = 0;\r\n\r\n    const calculateTotal = () => {\r\n        fetchData.statistiqueObject.map(row => {\r\n            row.claim_objects.map(elRow => {\r\n                totalCollect = totalCollect + elRow.total;\r\n                totalIncomplete = totalIncomplete + elRow.incomplete;\r\n                totalToAssignUnit = totalToAssignUnit + elRow.toAssignementToUnit;\r\n                totalToAssignStaff = totalToAssignStaff + elRow.toAssignementToStaff;\r\n                totalAwaitingTreatment = totalAwaitingTreatment + elRow.awaitingTreatment;\r\n                totalToValidate = totalToValidate + elRow.toValidate;\r\n                totalToMeasureSatisfaction = totalToMeasureSatisfaction + elRow.toMeasureSatisfaction;\r\n                totalPercentage = totalPercentage + elRow.percentage\r\n            });\r\n        });\r\n        totalPercentage = parseFloat((isNaN(totalPercentage / fetchData.statistiqueObject.length) ? 0 : totalPercentage / fetchData.statistiqueObject.length).toFixed(2));\r\n    };\r\n\r\n    if (fetchData)\r\n        calculateTotal();\r\n\r\n    const applyPossibleFilter = (data) => {\r\n        const newPossibleFilter = {...possibleFilter};\r\n\r\n        newPossibleFilter.days = Object.keys(data.days.claims_received).length <= 17;\r\n        newPossibleFilter.weeks = Object.keys(data.weeks.claims_received).length <= 5;\r\n        setPossibleFilter(newPossibleFilter);\r\n    };\r\n\r\n    const getGraphOneOptions = (dataGraphOne) => {\r\n        var labels = [];\r\n        var series = [];\r\n        dataGraphOne.map(el => {\r\n            labels.push(el.name[\"fr\"]);\r\n            series.push(el.pourcentage)\r\n        });\r\n\r\n        return {\r\n            series: series,\r\n            chart: {\r\n                width: 450,\r\n                type: 'pie',\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                formatter: function (val) {\r\n                    return val + \"%\"\r\n                }\r\n            },\r\n            labels: labels,\r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                    chart: {\r\n                        width: 200\r\n                    },\r\n                    legend: {\r\n                        position: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        };\r\n    };\r\n\r\n    const getGraphTwoOptions = (dataGraphTwo, type = null) => {\r\n        var categories = [];\r\n        var newSeries = {\r\n            claims_received: [],\r\n            claims_resolved: []\r\n        };\r\n        const getDetailData = () => {\r\n            for (const property in dataGraphTwo[type ? type : typeFilter].claims_received) {\r\n                categories.push(property);\r\n                newSeries.claims_received.push(dataGraphTwo[type ? type : typeFilter].claims_received[property]);\r\n            }\r\n            for (const property in dataGraphTwo[type ? type : typeFilter].claims_resolved) {\r\n                newSeries.claims_resolved.push(dataGraphTwo[type ? type : typeFilter].claims_resolved[property]);\r\n            }\r\n        };\r\n\r\n        const formatCategoriesMouths = () => {\r\n            for (var i = 0; i < categories.length; i++)\r\n                categories[i] = `${ month[categories[i].split(\"-\")[1]] } ${ categories[i].split(\"-\")[0][2] }${ categories[i].split(\"-\")[0][3] }`;\r\n        };\r\n\r\n        const formatCategoriesDays = () => {\r\n            for (var i = 0; i < categories.length; i++) {\r\n                categories[i] = `${ categories[i].split(\"-\")[2] } ${ month[categories[i].split(\"-\")[1]] } ${ categories[i].split(\"-\")[0][2] }${ categories[i].split(\"-\")[0][3] }`;\r\n            }\r\n        };\r\n\r\n        const formatCategoriesWeeks = () => {\r\n            var start = \"\";\r\n            var end = \"\";\r\n            for (var i = 0; i < categories.length; i++) {\r\n                start = `${categories[i].replace(/\\s/g, '').split(\"-\")[2]} ${month[categories[i].replace(/\\s/g, '').split(\"-\")[1]]} ${categories[i].replace(/\\s/g, '').split(\"-\")[0][2]}${categories[i].replace(/\\s/g, '').split(\"-\")[0][3]}`;\r\n                end = `${categories[i].replace(/\\s/g, '').split(\"-\")[5]} ${month[categories[i].replace(/\\s/g, '').split(\"-\")[4]]} ${categories[i].replace(/\\s/g, '').split(\"-\")[3][2]}${categories[i].replace(/\\s/g, '').split(\"-\")[3][3]}`;\r\n                categories[i] = `${start} - ${end}`;\r\n            }\r\n        };\r\n\r\n        getDetailData();\r\n\r\n        if (type === null) {\r\n            if (typeFilter === \"months\")\r\n                formatCategoriesMouths();\r\n            else if (typeFilter === \"days\")\r\n                formatCategoriesDays();\r\n            else\r\n                formatCategoriesWeeks();\r\n        } else {\r\n            if (type === \"months\")\r\n                formatCategoriesMouths();\r\n            else if (type === \"days\")\r\n                formatCategoriesDays();\r\n            else\r\n                formatCategoriesWeeks();\r\n        }\r\n\r\n        const series = [\r\n            {\r\n                name: 'Réclamtions réçues',\r\n                data: newSeries.claims_received\r\n            },\r\n            {\r\n                name: 'Réclamations résolues',\r\n                data: newSeries.claims_resolved\r\n            }\r\n        ];\r\n\r\n        return {\r\n            series: [{\r\n                name: series[0].name,\r\n                data: series[0].data\r\n            }, {\r\n                name: series[1].name,\r\n                data: series[1].data\r\n            }],\r\n            chart: {\r\n                height: 350,\r\n                type: 'area'\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            xaxis: {\r\n                categories: categories\r\n            },\r\n            tooltip: {\r\n                x: {\r\n                    format: 'MMM \\'yyyy'\r\n                },\r\n            },\r\n        };\r\n    };\r\n\r\n    const renderChart = (dataGraphOne, dataGraphTwo) => {\r\n        const chartOne = new ApexCharts(document.getElementById(\"graphOne\"), getGraphOneOptions(dataGraphOne));\r\n        const chartTwo = new ApexCharts(document.getElementById(\"graphTwo\"), getGraphTwoOptions(dataGraphTwo));\r\n\r\n        setStateChartOne(chartOne);\r\n        setStateChartTwo(chartTwo);\r\n\r\n        chartOne.render();\r\n        chartTwo.render();\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await axios.get(endpoint)\r\n                .then(response => {\r\n                    applyPossibleFilter(response.data.statistiqueGraphePeriod);\r\n                    setFetchData(response.data);\r\n\r\n                    renderChart(response.data.statistiqueChannel, response.data.statistiqueGraphePeriod);\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"))\r\n            ;\r\n        };\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const handleTypeFilterChange = (e) => {\r\n        setTypeFilter(e.target.value);\r\n        const parent = document.getElementById(\"parentGraphTwo\");\r\n        document.getElementById(\"graphTwo\").remove();\r\n        const div = document.createElement(\"div\");\r\n        div.id = \"graphTwo\";\r\n        parent.appendChild(div);\r\n        const chartTwo = new ApexCharts(document.getElementById(\"graphTwo\"), getGraphTwoOptions(fetchData.statistiqueGraphePeriod, e.target.value));\r\n        setStateChartTwo(chartTwo);\r\n        chartTwo.render();\r\n    };\r\n\r\n    const handleStartDateChange = e => {\r\n        if (endDate && e.target.value) {\r\n            if (!(new Date(endDate) > new Date(e.target.value)))\r\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n            else\r\n                ToastBottomEnd.fire(toastValidPeriodMessageConfig);\r\n        }\r\n        setStartDate(e.target.value);\r\n    };\r\n\r\n    const handleEndDateChange = e => {\r\n        if (startDate && e.target.value) {\r\n            if (!(new Date(startDate) < new Date(e.target.value)))\r\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n            else\r\n                ToastBottomEnd.fire(toastValidPeriodMessageConfig);\r\n        }\r\n        setEndDate(e.target.value);\r\n    };\r\n\r\n    const handleInstitutionChange = selected => {\r\n        setInstitution(selected)\r\n    };\r\n\r\n    const filterRequest = () => {\r\n        const oldData = {...fetchData};\r\n        setStartFilter(true);\r\n        setTypeFilter(\"months\");\r\n        setFetchData(null);\r\n        setPossibleFilter(\r\n            {\r\n                months: true,\r\n                weeks: true,\r\n                days: true\r\n            }\r\n        );\r\n        var parameter = \"\";\r\n        if (institution && startDate && endDate)\r\n            parameter = `?date_start=${startDate}&date_end=${endDate}&institution_id=${institution.value}`;\r\n        else if (institution && !startDate && !endDate)\r\n            parameter = `?institution_id=${institution.value}`;\r\n        else  if(!institution && startDate && endDate)\r\n            parameter = `?date_start=${startDate}&date_end=${endDate}`;\r\n        if (verifyTokenExpire()) {\r\n            axios.get(`${endpoint}${parameter}`)\r\n                .then(response => {\r\n                    setPdfTitle(formatPdfTitle());\r\n                    setStartFilter(false);\r\n                    applyPossibleFilter(response.data.statistiqueGraphePeriod);\r\n                    setFetchData(response.data);\r\n\r\n                    renderChart(response.data.statistiqueChannel, response.data.statistiqueGraphePeriod);\r\n                })\r\n                .catch(error => {\r\n                    setStartFilter(false);\r\n                    setFetchData(oldData);\r\n                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error.date_end))\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const filterData = () => {\r\n        if (institution && startDate && endDate) {\r\n            if (startDate && endDate) {\r\n                if (!(new Date(startDate) <= new Date(endDate)))\r\n                    ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n                else {\r\n                    filterRequest()\r\n                }\r\n            } else {\r\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n            }\r\n        } else if (institution && !startDate && !endDate) {\r\n            filterRequest();\r\n        } else if (!institution && startDate && endDate) {\r\n            if (startDate && endDate) {\r\n                if (!(new Date(startDate) <= new Date(endDate)))\r\n                    ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n                else {\r\n                    filterRequest()\r\n                }\r\n            } else {\r\n                ToastBottomEnd.fire(toastInvalidPeriodMessageConfig);\r\n            }\r\n        } else {\r\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Veillez renseigner les parametres correctement\"))\r\n        }\r\n    };\r\n\r\n    const formatPdfTitle = () => {\r\n        let newStartDate = startDate;\r\n        let newEndDate = endDate;\r\n        while (newStartDate.includes(\"-\") && newEndDate.includes(\"-\")) {\r\n            newStartDate = newStartDate.replace(\"-\", \"_\");\r\n            newEndDate = newEndDate.replace(\"-\", \"_\");\r\n        }\r\n        if (institution && (newStartDate && newEndDate))\r\n            return `reporting_${institution.label}_${newStartDate}_at_${newEndDate}`;\r\n        else if(institution && !(newStartDate && newEndDate))\r\n            return `reporting_${institution.label}`;\r\n        else if(!institution && (newStartDate && newEndDate))\r\n            return `reporting_${newStartDate}_at_${newEndDate}`;\r\n        else\r\n            return `reporting_${new Date().getFullYear()}`;\r\n    };\r\n\r\n    const exportToPdf = async () => {\r\n        var uriOne = \"\";\r\n        var uriTwo = \"\";\r\n        await stateChartOne.dataURI().then(({ imgURI, blob }) => {\r\n            uriOne = imgURI;\r\n        });\r\n\r\n        await stateChartTwo.dataURI().then(({ imgURI, blob }) => {\r\n            uriTwo = imgURI;\r\n            });\r\n\r\n        if (fetchData) {\r\n            setStartExportation(true);\r\n            const sendData = {\r\n                filter: {\r\n                    institution: institution ? institution.value : \"\",\r\n                    startDate: startDate,\r\n                    endDate: endDate\r\n                },\r\n                statistiqueObject: {\r\n                    data: fetchData.statistiqueObject,\r\n                    total: {\r\n                        totalCollect: totalCollect,\r\n                        totalIncomplete: totalIncomplete,\r\n                        totalToAssignUnit: totalToAssignUnit,\r\n                        totalToAssignStaff: totalToAssignStaff,\r\n                        totalAwaitingTreatment: totalAwaitingTreatment,\r\n                        totalToValidate: totalToValidate,\r\n                        totalToMeasureSatisfaction: totalToMeasureSatisfaction,\r\n                        totalPercentage: totalPercentage,\r\n                    }\r\n                },\r\n                statistiqueQualificationPeriod: fetchData.statistiqueQualificationPeriod,\r\n                statistiqueTreatmentPeriod: fetchData.statistiqueTreatmentPeriod,\r\n                statistiqueChannel: fetchData.statistiqueChannel,\r\n                chanelGraph: {\r\n                    image: uriOne\r\n                },\r\n                evolutionClaim: {\r\n                    image: uriTwo,\r\n                    filter: typeFilter\r\n                },\r\n                headerBackground: \"#7F9CF5\",\r\n            };\r\n\r\n            if (verifyTokenExpire()) {\r\n                axios({\r\n                    method: 'post',\r\n                    url: `${appConfig.apiDomaine}/any/reporting-claim/export-pdf`,\r\n                    responseType: 'blob',\r\n                    data: {data_export: sendData}\r\n                })\r\n                    .then(({data}) => {\r\n                        setStartExportation(false);\r\n                        FileSaver.saveAs(data, `${pdfTitle}.pdf`);\r\n                    })\r\n                    .catch(({response}) => {\r\n                        setStartExportation(false);\r\n                    })\r\n                ;\r\n            }\r\n        } else {\r\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Donné indisponible pour l'exportation\"));\r\n        }\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Monitoring\r\n                            </h3>\r\n\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Reporting\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={\"Page de reporting\"}/>\r\n\r\n                    <div className=\"alert alert-light alert-elevate\" role=\"alert\">\r\n                        <div className=\"alert-icon\">\r\n                            {\r\n                                startExportation ? (\r\n                                    <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\">\r\n                                        Chargement...\r\n                                    </button>\r\n                                ) : (\r\n                                    <button className=\"btn btn-info btn-circle\" onClick={exportToPdf}>\r\n                                        <i className=\"fa fa-file-export\" style={{color: \"white\"}}/> Exportez\r\n                                    </button>\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"alert-text align-items-center\">\r\n\r\n                            <div className=\"row col-12 d-flex justify-content-center align-items-center\">\r\n                                {\r\n                                    verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                        <div className=\"form-group col-3\">\r\n                                            <label htmlFor=\"institution\">Institutions</label>\r\n                                            <Select\r\n                                                isClearable\r\n                                                value={institution}\r\n                                                placeholder={\"Choix institution\"}\r\n                                                onChange={handleInstitutionChange}\r\n                                                options={formatSelectOption(fetchData ? fetchData.institutions : [], 'name', false)}\r\n                                            />\r\n                                        </div>\r\n                                    ) : null\r\n                                }\r\n\r\n                                <div className=\"form-group col-3\">\r\n                                    <label htmlFor=\"start\">Date de début</label>\r\n                                    <input\r\n                                        id=\"start\"\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        value={startDate}\r\n                                        onChange={handleStartDateChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-3\">\r\n                                    <label htmlFor=\"end\">Date de début</label>\r\n                                    <input\r\n                                        id=\"end\"\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        value={endDate}\r\n                                        onChange={handleEndDateChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-3\">\r\n                                    {\r\n                                        !startFilter ? (\r\n                                            <button\r\n                                                className=\"btn btn-primary\"\r\n                                                style={{marginTop: \"25px\"}}\r\n                                                onClick={() => filterData()}\r\n                                            >\r\n                                                <i className=\"fa fa-filter\"/> Filtrer\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button\r\n                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                type=\"button\" disabled\r\n                                                style={{marginTop: \"25px\"}}\r\n                                            >\r\n                                                Chargement...\r\n                                            </button>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Reporting Reclamation\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div className=\"col-sm-12\">\r\n                                                <strong>Légende: <br/>R </strong>{\"<===>\"} Réclamtions\r\n                                                <table className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{ width: \"952px\" }}>\r\n                                                    <thead style={{backgroundColor: \"#7F9CF5\"}}>\r\n                                                        <tr role=\"row\">\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Catégorie de <strong>R</strong>\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Objets de <strong>R</strong>\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> collectées\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> incomplète\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à assigner à une unité\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à assigner à un agent\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à traiter\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à valider\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\"><strong>R</strong> à mesurer satisfaction\r\n                                                            </th>\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Pourcentage de Résolues\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            fetchData.statistiqueObject.map((row, index) => (\r\n                                                                row.claim_objects.map((elRow, indexEleRow) => (\r\n                                                                    indexEleRow === 0 ? (\r\n                                                                        <tr key={index}>\r\n                                                                            {\r\n                                                                                row.claim_objects.length === 0 ? (\r\n                                                                                    <td>{row.name[\"fr\"]}</td>\r\n                                                                                ) : (\r\n                                                                                    <td rowSpan={row.claim_objects.length}>{row.name[\"fr\"]}</td>\r\n                                                                                )\r\n                                                                            }\r\n                                                                            <td>{elRow.name[\"fr\"]}</td>\r\n                                                                            <td>{elRow.total}</td>\r\n                                                                            <td>{elRow.incomplete}</td>\r\n                                                                            <td>{elRow.toAssignementToUnit}</td>\r\n                                                                            <td>{elRow.toAssignementToStaff}</td>\r\n                                                                            <td>{elRow.awaitingTreatment}</td>\r\n                                                                            <td>{elRow.toValidate}</td>\r\n                                                                            <td>{elRow.toMeasureSatisfaction}</td>\r\n                                                                            <td>{elRow.percentage} %</td>\r\n                                                                        </tr>\r\n                                                                    ) : (\r\n                                                                        <tr key={indexEleRow}>\r\n                                                                            <td>{elRow.name[\"fr\"]}</td>\r\n                                                                            <td>{elRow.total}</td>\r\n                                                                            <td>{elRow.incomplete}</td>\r\n                                                                            <td>{elRow.toAssignementToUnit}</td>\r\n                                                                            <td>{elRow.toAssignementToStaff}</td>\r\n                                                                            <td>{elRow.awaitingTreatment}</td>\r\n                                                                            <td>{elRow.toValidate}</td>\r\n                                                                            <td>{elRow.toMeasureSatisfaction}</td>\r\n                                                                            <td>{elRow.percentage} %</td>\r\n                                                                        </tr>\r\n                                                                    )\r\n                                                                ))\r\n                                                            ))\r\n                                                        }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th colSpan=\"2\" className=\"text-center\">Total</th>\r\n                                                        <th>{totalCollect}</th>\r\n                                                        <th>{totalIncomplete}</th>\r\n                                                        <th>{totalToAssignUnit}</th>\r\n                                                        <th>{totalToAssignStaff}</th>\r\n                                                        <th>{totalAwaitingTreatment}</th>\r\n                                                        <th>{totalToValidate}</th>\r\n                                                        <th>{totalToMeasureSatisfaction}</th>\r\n                                                        <th>{totalPercentage} %</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Délai de qualification des réclamations\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{ width: \"952px\" }}>\r\n                                                    <thead style={{backgroundColor: \"#7F9CF5\", borderLeft: \"none\", borderRight: \"none\"}}>\r\n                                                        <tr role=\"row\">\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Délai de qualification (en jour)\r\n                                                            </th>\r\n                                                            {\r\n                                                                fetchData.statistiqueQualificationPeriod.map((el, index) => (\r\n                                                                    <th key={index} tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                        colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                        aria-label=\"Country: activate to sort column ascending\">{el.libelle}\r\n                                                                    </th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td style={{borderRight: \"none\", borderLeft: \"none\"}}>Nombre</td>\r\n                                                            {\r\n                                                                fetchData.statistiqueQualificationPeriod.map((el, index) => (\r\n                                                                    <td key={index} style={{borderRight: \"none\", borderLeft: \"none\"}}>{el.total}</td>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                        <tr>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\" style={{borderRight: \"none\", borderLeft: \"none\"}}>Taux (%)</th>\r\n                                                            {\r\n                                                                fetchData.statistiqueQualificationPeriod.map((el, index) => (\r\n                                                                    <th key={index} rowSpan=\"1\" colSpan=\"1\" style={{borderRight: \"none\", borderLeft: \"none\"}}>{el.pourcentage}</th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Délai de traitement des réclamations\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead style={{backgroundColor: \"#7F9CF5\"}}>\r\n                                                        <tr role=\"row\">\r\n                                                            <th tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                aria-label=\"Country: activate to sort column ascending\">Délai de Traitement (en jour)\r\n                                                            </th>\r\n                                                            {\r\n                                                                fetchData.statistiqueTreatmentPeriod.map((el, index) => (\r\n                                                                    <th key={index} tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                                        colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                        aria-label=\"Country: activate to sort column ascending\">{el.libelle}\r\n                                                                    </th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td style={{ borderLeft: \"none\", borderRight: \"none\" }}>Nombre</td>\r\n                                                            {\r\n                                                                fetchData.statistiqueTreatmentPeriod.map((el, index) => (\r\n                                                                    <td key={index} style={{ borderLeft: \"none\", borderRight: \"none\" }}>{el.total}</td>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                        <tr>\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\" style={{ borderLeft: \"none\", borderRight: \"none\" }}>Taux</th>\r\n                                                            {\r\n                                                                fetchData.statistiqueTreatmentPeriod.map((el, index) => (\r\n                                                                    <th key={index} rowSpan=\"1\" colSpan=\"1\" style={{ borderLeft: \"none\", borderRight: \"none\" }}>{el.pourcentage}</th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Utilisation de canaux\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{ width: \"952px\" }}>\r\n                                                    <thead style={{ backgroundColor: \"#7F9CF5\" }}>\r\n                                                        <tr role=\"row\">\r\n                                                            {\r\n                                                                fetchData.statistiqueChannel.map((channel, index) => (\r\n                                                                    <th\r\n                                                                        key={index}\r\n                                                                        tabIndex=\"0\"\r\n                                                                        aria-controls=\"kt_table_1\"\r\n                                                                        rowSpan=\"1\"\r\n                                                                        colSpan=\"1\" style={{ width: \"70.25px\", color: \"white\", borderLeft: \"none\", borderRight: \"none\" }}\r\n                                                                        aria-label=\"Country: activate to sort column ascending\">\r\n                                                                        {channel.name[\"fr\"]}\r\n                                                                    </th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody/>\r\n                                                    <tfoot>\r\n                                                        <tr>\r\n                                                            {\r\n                                                                fetchData.statistiqueChannel.map((channel, index) => (\r\n                                                                    <th key={index} rowSpan=\"1\" colSpan=\"1\" style={{borderLeft: \"none\", borderRight: \"none\"}}>{channel.total_claim}</th>\r\n                                                                ))\r\n                                                            }\r\n                                                        </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n\r\n                                                {\r\n                                                    fetchData ? (\r\n                                                        <div className=\"col-12 d-flex justify-content-center\">\r\n                                                            <div id=\"graphOne\" style={{position: \"relative\", zIndex: \"1\"}}/>\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Evolution des réclamations\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                <div className=\"row d-flex justify-content-center\">\r\n                                    <div className=\"form-group col-6\">\r\n                                        <label htmlFor=\"filter\">filtre</label>\r\n                                        <select\r\n                                            id=\"filter\"\r\n                                            className=\"form-control\"\r\n                                            value={typeFilter}\r\n                                            onChange={(e) => handleTypeFilterChange(e)}\r\n                                        >\r\n                                            <option value=\"\" disabled={true}>Veillez choisir le filtre</option>\r\n                                            {\r\n                                                possibleFilter.months ? (\r\n                                                    <option value=\"months\">Mois</option>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                possibleFilter.weeks ? (\r\n                                                    <option value=\"weeks\">Semaine</option>\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                possibleFilter.days ? (\r\n                                                    <option value=\"days\">Jour</option>\r\n                                                ) : null\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {\r\n                                        fetchData ? (\r\n                                            <div id=\"parentGraphTwo\" className=\"col-sm-12\">\r\n                                                <div id=\"graphTwo\" style={{position: \"relative\", zIndex: 1}}/>\r\n                                            </div>\r\n                                        ) : <LoadingTable/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimReporting);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Dashboards.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimsArchived.jsx",["1047","1048","1049"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    loadCss,\r\n    forceRound,\r\n    getLowerCaseString, formatDateToTime, reduceCharacter,\r\n} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/claim-archived`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/claim-archived`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/claim-archived`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        list: `${appConfig.apiDomaine}/any/claim-archived`,\r\n    }\r\n};\r\n\r\nconst ClaimsArchived = (props) => {\r\n    document.title = \"Satis client - Liste réclamations archivées\";\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'list-any-claim-archived') ||\r\n        verifyPermission(props.userPermissions, \"list-my-claim-archived\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'list-any-claim-archived'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'list-my-claim-archived'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claimsArchived, setClaimsArchived] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setClaimsArchived(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaims = [...claimsArchived];\r\n        newClaims = newClaims.filter(el => (\r\n            getLowerCaseString(el.reference).indexOf(value) >= 0 ||\r\n            getLowerCaseString(`${el.claimer.lastname} ${el.claimer.firstname}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.active_treatment.solution === null ? \"-\" : el.active_treatment.solution).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newClaims;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimsArchived.length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimsArchived.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimsArchived.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimsArchived.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimsArchived.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimsArchived.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimsArchived.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (archived, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{archived.reference === null ? \"-\" : archived.reference}</td>\r\n                <td>{`${archived.claimer.lastname} ${archived.claimer.firstname} ${archived.account_targeted !== null ? \"/\" + archived.account_targeted.number : \"\"}`}</td>\r\n                <td>\r\n                    {\r\n                        (props.plan === 'PRO') ?\r\n                            (archived.unit_targeted ? archived.unit_targeted.name.fr : \"-\")\r\n                            : archived.institution_targeted.name\r\n                    }\r\n                </td>\r\n                <td>{archived.claim_object.name[\"fr\"]}</td>\r\n                <td>{archived.description.length > 15 ? reduceCharacter(archived.description) : archived.description}</td>\r\n                <td style={{textAlign: 'center'}}>{archived.claim_object.time_limit}</td>\r\n                <td style={{textAlign: 'center'}}>\r\n                    {\r\n                        archived.active_treatment.is_claimer_satisfied === 1 ?\r\n                            <span className=\"kt-badge kt-badge--inline kt-badge--success\">Oui</span>\r\n                            : archived.active_treatment.is_claimer_satisfied === 0 ?\r\n                            <span className=\"kt-badge kt-badge--inline kt-badge--danger\">Non</span>\r\n                            : \" \"\r\n                    }\r\n                </td>\r\n                {\r\n                    verifyPermission(props.userPermissions, \"show-any-claim-archived\") ||\r\n                    verifyPermission(props.userPermissions, \"show-my-claim-archived\") ? (\r\n                        <td style={{textAlign: 'center'}}>\r\n                            <a href={`/process/claim_archived/${archived.id}/detail`}\r\n                               className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                               title=\"Détail\">\r\n                                <i className=\"la la-eye\"/>\r\n                            </a>\r\n                        </td>\r\n                    ) : null\r\n                }\r\n\r\n            </tr>\r\n        )\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Processus\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                               className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                Traitement\r\n                            </a>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Archivage\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <InfirmationTable\r\n                    information={\"Liste des réclamtions archivées\"}\r\n                />\r\n\r\n                <div className=\"kt-portlet\">\r\n\r\n                    <HeaderTablePage\r\n                        title={\"Réclamations Archivées\"}\r\n                    />\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Rechercher:\r\n                                                    <input id=\"myInput\" type=\"text\"\r\n                                                           onKeyUp={(e) => searchElement(e)}\r\n                                                           className=\"form-control form-control-sm\"\r\n                                                           placeholder=\"\"\r\n                                                           aria-controls=\"kt_table_1\"\r\n                                                    />\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <table\r\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{width: \"952px\"}}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"50.25px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Référence\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"50.25px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Réclamant\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"50.25px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">\r\n                                                        {(props.plan === 'PRO') ? \"  Point de service visé\" : \"Institution ciblée\"}\r\n\r\n                                                    </th>\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"50.25px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Objet de\r\n                                                        réclamation\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"50.25px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Description\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"25px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Durée du\r\n                                                        traitement\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"25px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Satisfaction\r\n                                                        du client\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\" colSpan=\"1\" style={{width: \"40.25px\"}}\r\n                                                        aria-label=\"Type: activate to sort column ascending\">\r\n                                                        Action\r\n                                                    </th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {console.log(claimsArchived, \"données\")}\r\n                                                {\r\n                                                    claimsArchived.length ? (\r\n                                                        showList.length ? (\r\n                                                            showList.map((archived, index) => (\r\n                                                                printBodyTable(archived, index)\r\n                                                            ))\r\n                                                        ) : <EmptyTable search={true}/>\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    )\r\n                                                }\r\n                                                </tbody>\r\n                                                <tfoot>\r\n                                                <tr>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                    <th rowSpan=\"1\"\r\n                                                        colSpan=\"1\">{(props.plan === 'PRO') ? \"Point de service visé\" : \"Institution ciblée\"}\r\n                                                    </th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Objet de réclamation</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Durée du traitement</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Satisfaction du client</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                </tr>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1\r\n                                                à {numberPerPage} sur {claimsArchived.length} données\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                            <Pagination\r\n                                                numberPerPage={numberPerPage}\r\n                                                onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                activeNumberPage={activeNumberPage}\r\n                                                onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                pages={pages}\r\n                                                onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                numberPage={numberPage}\r\n                                                onClickNextPage={e => onClickNextPage(e)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimsArchived);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigNotification.jsx",["1050"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {notificationConfig} from \"../../constants/notification\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastEditErrorMessageConfig,\r\n    toastSuccessMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ConfigNotification = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"update-notifications\"))\r\n        window.location.href = ERROR_401;\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState({\r\n        \"notifications.acknowledgment-of-receipt\": [],\r\n        \"notifications.register-a-claim\": [],\r\n        \"notifications.complete-a-claim\": [],\r\n        \"notifications.transferred-to-targeted-institution\": [],\r\n        \"notifications.transferred-to-unit\": [],\r\n        \"notifications.assigned-to-staff\": [],\r\n        \"notifications.reject-a-claim\": [],\r\n        \"notifications.treat-a-claim\": [],\r\n        \"notifications.invalidate-a-treatment\": [],\r\n        \"notifications.validate-a-treatment\": [],\r\n        \"notifications.communicate-the-solution\": [],\r\n        \"notifications.communicate-the-solution-unfounded\": [],\r\n        \"notifications.add-contributor-to-discussion\": [],\r\n        \"notifications.post-discussion-message\": [],\r\n        \"notifications.reminder-before-deadline\": [],\r\n        \"notifications.reminder-after-deadline\": [],\r\n        \"notifications.recurrence-alert\": [],\r\n    });\r\n    const [load, setLoad] = useState(true);\r\n    const [startUpdate, setStartUpdate] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${appConfig.apiDomaine}/notifications/edit`)\r\n                .then(({data}) => {\r\n                    console.log(\"data:\", data);\r\n                    setData(data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"something is wrong\")\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine]);\r\n\r\n    const handleTextChange = (e, index) => {\r\n        const newData = [...data];\r\n        newData[index].text = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const formatUpdateData = () => {\r\n        const updateData = {};\r\n        for (const key in data)\r\n            updateData[data[key].event] = data[key].text;\r\n        return updateData;\r\n    };\r\n\r\n    const updateConfig = () => {\r\n        setStartUpdate(true);\r\n        const updateData = {\r\n            \"notifications\": formatUpdateData(),\r\n        };\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios.put(`${appConfig.apiDomaine}/notifications`, updateData)\r\n                .then(({data}) => {\r\n                    setStartUpdate(false);\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Succès de la modification\"));\r\n                })\r\n                .catch(({response}) => {\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    setError({...error, ...response.data.error});\r\n                    setStartUpdate(false);\r\n                    console.log(\"error\", response.data.error)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"update-notifications\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Notification\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Configuration notification\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div>\r\n                                            <strong>\r\n                                                Légende: <br/> <br/>\r\n                                            </strong>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-6\">{\"{claim_reference}\"} {\"<===>\"} Référence de la reclamation</div>\r\n                                                <div className=\"col-6\">{\"{claim_object}\"} {\"<===>\"} Objet de la reclamtion</div>\r\n                                                <br/> <br/>\r\n                                                <div className=\"col-6\">{\"{claim_status}\"} {\"<===>\"} Status de la réclamaion</div>\r\n                                                <div className=\"col-6\">{\"{responsible_staff}\"} {\"<===>\"} Staff en charge du traitement</div>\r\n                                                <br/> <br/>\r\n                                                <div className=\"col-6\">{\"{solution_communicated}\"} {\"<===>\"} Solution à communiquer</div>\r\n                                                <div className=\"col-6\">{\"{created_by}\"} {\"<===>\"} Celui qui à enregister la réclamation</div>\r\n                                                <br/> <br/>\r\n                                                <div className=\"col-6\">{\"{discussion_name}\"} {\"<===>\"} Nom de la discussion</div>\r\n                                                <div className=\"col-6\">{\"{posted_by}\"} {\"<===>\"} Celui qui à poster la réclamation</div>\r\n                                            </div>\r\n                                            <br/><br/>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            {\r\n                                                data.map((el, index) => (\r\n                                                    <div key={index} className={error[`notifications.${el.event}`].length ? \"col-6 form-group validated\" : \"col-6 form-group\"}>\r\n                                                        <label htmlFor={el.event}>{notificationConfig[el.event]} <InputRequire/></label>\r\n                                                        <textarea\r\n                                                            id={el.event}\r\n                                                            cols=\"30\"\r\n                                                            rows=\"3\"\r\n                                                            className={ error[`notifications.${el.event}`].length ? \"form-control is-invalid\" :  \"form-control\"}\r\n                                                            value={el.text}\r\n                                                            onChange={e => handleTextChange(e, index)}\r\n                                                        />\r\n\r\n                                                        {\r\n                                                            error[`notifications.${el.event}`].length ? (\r\n                                                                error[`notifications.${el.event}`].map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n\r\n                                            <div className=\"col-12 form-group text-center\">\r\n                                                {\r\n                                                    !startUpdate ? (\r\n                                                        <button onClick={updateConfig} className=\"btn btn-primary\">Modifier</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ConfigNotification);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\PercentageMinFusion.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RejectLimitPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RecurencePage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimImportPage.jsx",["1051","1052","1053","1054","1055","1056","1057"],"import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastErrorMessageWithParameterConfig, toastSuccessMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ImportFileForm from \"../components/ImportFileForm\";\r\n\r\nconst ClaimImportPage = (props) => {\r\n    document.title = \"Satis client - Importation reclamation\";\r\n\r\n    let endpoint = \"\";\r\n    if (!(verifyPermission(props.userPermissions, 'store-claim-against-any-institution') || verifyPermission(props.userPermissions, \"store-claim-against-my-institution\") || verifyPermission(props.userPermissions, \"store-claim-without-client\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    if (verifyPermission(props.userPermissions, 'store-claim-against-any-institution'))\r\n        endpoint = `${appConfig.apiDomaine}/any/import-claim`;\r\n    else if(verifyPermission(props.userPermissions, 'store-claim-against-my-institution'))\r\n        endpoint = `${appConfig.apiDomaine}/my/import-claim`;\r\n    else if(verifyPermission(props.userPermissions, 'store-claim-without-client'))\r\n        endpoint = `${appConfig.apiDomaine}/without-client/import-claim`;\r\n\r\n    return (\r\n        <ImportFileForm\r\n            submitEndpoint={endpoint}\r\n            pageTitleLink=\"/process/claims/add\"\r\n            pageTitle=\"Enregistrement reclamation\"\r\n            panelTitle=\"Importation de reclamation au format excel\"\r\n            claimImport={true}\r\n        />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimImportPage);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ProfilePage.jsx",["1058","1059","1060","1061","1062","1063","1064"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink, Route, Switch} from \"react-router-dom\";\r\nimport PersonalInfo from \"../components/profile/PersonalInfo\";\r\nimport UpdatePassword from \"../components/profile/UpdatePassword\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst ProfilePage = ({user}) => {\r\n    const defaultData = {\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        sexe: \"\",\r\n        telephone: [],\r\n        email: [],\r\n        ville: \"\"\r\n    };\r\n\r\n    const [data, setData] = useState(defaultData);\r\n\r\n    const username = user.data.username;\r\n    const formatRole = (rules) => {\r\n        const newRules = [];\r\n        rules.map(r => newRules.push(r.name));\r\n        return newRules.join(' / ');\r\n    };\r\n\r\n    const role = formatRole(user.data.roles);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${appConfig.apiDomaine}/edit-profil`)\r\n                .then(({data}) => {\r\n                    setData({\r\n                        firstname: data.identite.firstname,\r\n                        lastname: data.identite.lastname,\r\n                        sexe: data.identite.sexe,\r\n                        telephone: data.identite.telephone,\r\n                        email: data.identite.email,\r\n                        ville: data.identite.ville ? data.identite.ville : \"\"\r\n                    });\r\n                })\r\n                .catch(({response}) => {\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const handleLastNameChange = (lastname) => {\r\n        setData({...data, lastname: lastname});\r\n    };\r\n\r\n    const handleFirstNameChange = (firstname) => {\r\n        setData({...data, firstname: firstname});\r\n    };\r\n\r\n    const handleTelephoneChange = (tags) => {\r\n        setData({...data, telephone: tags});\r\n    };\r\n\r\n    const handleEmailChange = (tags) => {\r\n        setData({...data, email: tags});\r\n    };\r\n\r\n    const handleVilleChange = (ville) => {\r\n        setData({...data, ville: ville});\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            <button className=\"kt-subheader__mobile-toggle kt-subheader__mobile-toggle--left\" id=\"kt_subheader_mobile_toggle\">\r\n                                <span/>\r\n                            </button>\r\n                            Paramètre\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                <i className=\"flaticon2-shelter\"/>\r\n                            </a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"\" style={{cursor: \"default\"}} onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                Profile\r\n                            </a>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n\r\n                <div className=\"kt-grid kt-grid--desktop kt-grid--ver kt-grid--ver-desktop kt-app\">\r\n\r\n                    <button className=\"kt-app__aside-close\" id=\"kt_user_profile_aside_close\">\r\n                        <i className=\"la la-close\"/>\r\n                    </button>\r\n\r\n                    <div className=\"kt-grid__item kt-app__toggle kt-app__aside\" id=\"kt_user_profile_aside\">\r\n                        <div className=\"kt-portlet \">\r\n                            <div className=\"kt-portlet__head  kt-portlet__head--noborder\">\r\n                                <div className=\"kt-portlet__head-label\">\r\n                                    <h3 className=\"kt-portlet__head-title\">\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"kt-portlet__body kt-portlet__body--fit-y\">\r\n                                <div className=\"kt-widget kt-widget--user-profile-1\">\r\n                                    <div className=\"kt-widget__head\">\r\n                                        <div className=\"kt-widget__media\">\r\n                                            <img src=\"/assets/media/users/default.jpg\" alt=\"image\"/>\r\n                                        </div>\r\n                                        <div className=\"kt-widget__content\">\r\n                                            <div className=\"kt-widget__section\">\r\n                                                <a href=\"#\" className=\"kt-widget__username\">\r\n                                                    {`${data.lastname} ${data.firstname}`}\r\n                                                </a>\r\n                                                {/*<span className=\"kt-widget__subtitle\">\r\n                                                    Head of Development\r\n                                                </span>*/}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"kt-widget__body\">\r\n                                        <div className=\"kt-widget__content\">\r\n                                            <div className=\"kt-widget__info\">\r\n                                                <span className=\"kt-widget__label\">Username:</span>\r\n                                                <a href=\"#\" className=\"kt-widget__data\">{username}</a>\r\n                                            </div>\r\n                                            <div className=\"kt-widget__info\">\r\n                                                <span className=\"kt-widget__label\">Téléphone:</span>\r\n                                                <a href=\"#\" className=\"kt-widget__data\">{data.telephone.join(\"/\")}</a>\r\n                                            </div>\r\n                                            <div className=\"kt-widget__info\">\r\n                                                <span className=\"kt-widget__label\">Roles:</span>\r\n                                                <span className=\"kt-widget__data\">{role}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-widget__items\">\r\n                                            <NavLink to=\"/settings/account/personal-information\" className=\"kt-widget__item\" activeClassName=\"kt-widget__item--active\">\r\n                                                <span className=\"kt-widget__section\">\r\n                                                    <span className=\"kt-widget__icon\">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0h24v24H0z\"/><path d=\"M12 11a4 4 0 110-8 4 4 0 010 8z\" fill=\"#000\" fillRule=\"nonzero\" opacity=\".3\"/><path d=\"M3 20.2c.388-4.773 4.262-7.2 8.983-7.2 4.788 0 8.722 2.293 9.015 7.2.012.195 0 .8-.751.8H3.727c-.25 0-.747-.54-.726-.8z\" fill=\"#000\" fillRule=\"nonzero\"/></g></svg>\r\n                                                    </span>\r\n                                                    <span className=\"kt-widget__desc\">\r\n                                                        Informations personnelles\r\n                                                    </span>\r\n                                                </span>\r\n                                            </NavLink>\r\n\r\n                                            <NavLink to=\"/settings/account/change-password\" className=\"kt-widget__item \" activeClassName=\"kt-widget__item--active\">\r\n                                                <span className=\"kt-widget__section\">\r\n                                                    <span className=\"kt-widget__icon\">\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0h24v24H0z\"/><path d=\"M4 4l7.631-1.43a2 2 0 01.738 0L20 4v9.283a8.51 8.51 0 01-4 7.217l-3.47 2.169a1 1 0 01-1.06 0L8 20.5a8.51 8.51 0 01-4-7.217V4z\" fill=\"#000\" opacity=\".3\"/><path d=\"M12 11a2 2 0 110-4 2 2 0 010 4zM7 16.5c.216-2.983 2.368-4.5 4.99-4.5 2.66 0 4.846 1.433 5.009 4.5.006.122 0 .5-.418.5H7.404c-.14 0-.415-.338-.404-.5z\" fill=\"#000\" opacity=\".3\"/></g></svg>\r\n                                                    </span>\r\n                                                    <span className=\"kt-widget__desc\">\r\n                                                        Changer le mot de passe\r\n                                                    </span>\r\n                                                </span>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-grid__item kt-grid__item--fluid kt-app__content\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-12\">\r\n                                <Route exact path=\"/settings/account\">\r\n                                    <PersonalInfo\r\n                                        data={data}\r\n                                        handleLastNameChange={handleLastNameChange}\r\n                                        handleFirstNameChange={handleFirstNameChange}\r\n                                        handleTelephoneChange={handleTelephoneChange}\r\n                                        handleEmailChange={handleEmailChange}\r\n                                        handleVilleChange={handleVilleChange}\r\n                                    />\r\n                                </Route>\r\n\r\n                                <Route exact path=\"/settings/account/personal-information\">\r\n                                    <PersonalInfo\r\n                                        data={data}\r\n                                        handleLastNameChange={handleLastNameChange}\r\n                                        handleFirstNameChange={handleFirstNameChange}\r\n                                        handleTelephoneChange={handleTelephoneChange}\r\n                                        handleEmailChange={handleEmailChange}\r\n                                        handleVilleChange={handleVilleChange}\r\n                                    />\r\n                                </Route>\r\n\r\n                                <Route exact path=\"/settings/account/change-password\">\r\n                                    <UpdatePassword/>\r\n                                </Route>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user.user\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProfilePage);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RuleEditPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RuleAddPage.jsx",["1065","1066"],"import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\nimport {formatPermissions, formatSelectOption} from \"../../helpers/function\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig, toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig, toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst RuleAddPage = (props) => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!(verifyPermission(props.userPermissions, 'update-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role')))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!(verifyPermission(props.userPermissions, 'store-any-institution-type-role') || verifyPermission(props.userPermissions, 'store-my-institution-type-role')))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        name: \"\",\r\n        institution_type: [],\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        institutionTypes: [],\r\n        permissions: []\r\n    };\r\n    const [institutionTypes, setInstitutionTypes] = useState([]);\r\n    const [institutionType, setInstitutionType] = useState([]);\r\n    const [modulesPermissions, setModulesPermissions] = useState(null);\r\n    const [proModule, setProModule] = useState(null);\r\n    const [permissions, setPermissions] = useState([]);\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            var endpoint = '';\r\n            if (id) {\r\n                if (verifyPermission(props.userPermissions, 'update-any-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/any/roles/${id}/edit`;\r\n                if (verifyPermission(props.userPermissions, 'update-my-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/my/roles/${id}/edit`;\r\n                await axios.get(endpoint)\r\n                    .then(response => {\r\n                        if (verifyPermission(props.userPermissions, 'update-any-institution-type-role')) {\r\n                            const newInstitutionTypes = [];\r\n                            response.data.role.institution_types.map((el, index) => newInstitutionTypes.push({value: index, label: el}));\r\n\r\n                            setInstitutionTypes(formatSelectOption(response.data.institutionTypes, 'name'));\r\n                            setModulesPermissions(response.data.modulesPermissions);\r\n\r\n                            const newData = {...data};\r\n                            newData.name = response.data.role.name;\r\n                            newData.institution_type = response.data.role.institution_types;\r\n                            setPermissions(formatPermissions(response.data.role.permissions));\r\n                            setData(newData);\r\n                            setInstitutionType(newInstitutionTypes);\r\n                        } else if (verifyPermission(props.userPermissions, 'update-my-institution-type-role')) {\r\n                            setPermissions(formatPermissions(response.data.role.permissions));\r\n                            const newData = {...data};\r\n                            newData.name = response.data.role.name;\r\n                            setData(newData);\r\n                            setProModule(response.data.modulesPermissions.independant);\r\n                        }\r\n                    })\r\n                    .catch(({response}) => {\r\n                        if (response.data && response.data.error)\r\n                            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(response.data.error));\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            } else {\r\n                if (verifyPermission(props.userPermissions, 'store-any-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/any/roles/create`;\r\n                if (verifyPermission(props.userPermissions, 'store-my-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/my/roles/create`;\r\n                await axios.get(endpoint)\r\n                    .then(response => {\r\n                        if (verifyPermission(props.userPermissions, 'store-any-institution-type-role')) {\r\n                            setInstitutionTypes(formatSelectOption(response.data.institutionTypes, 'name'));\r\n                            setModulesPermissions(response.data.modulesPermissions);\r\n                        } else if (verifyPermission(props.userPermissions, 'store-my-institution-type-role'))\r\n                            setProModule(response.data);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [id, props.userPermissions]);\r\n\r\n    const handleNameChange = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handleInstitutionType = (selected) => {\r\n        const values = [];\r\n        const newData = {...data};\r\n        if (selected)\r\n            selected.map(el => values.push(el.label));\r\n        newData.institution_type = values;\r\n        setPermissions([]);\r\n        setData(newData);\r\n\r\n        setInstitutionType(selected);\r\n        setInstitutionType(selected ? selected : []);\r\n    };\r\n\r\n    const handlePermissionChange = (e) => {\r\n        var newPermission = [...permissions];\r\n        if (newPermission.includes(e.target.name))\r\n            newPermission.splice(newPermission.indexOf(e.target.name), 1);\r\n        else\r\n            newPermission.push(e.target.name);\r\n        setPermissions(newPermission);\r\n    };\r\n\r\n    const printModule = (module, index, allModule) => {\r\n        return (\r\n            <div key={index}>\r\n                <h5 className=\"text-center\">Module: {module.name[\"fr\"]}</h5>\r\n                <div className={error.permissions.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                    <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"unit_type\">Permissions <InputRequire/></label>\r\n                    <div className=\"col-lg-9 col-xl-6\">\r\n                        <div className=\"kt-checkbox-inline\">\r\n                            {\r\n                                module.permissions.map((el, ind) => (\r\n                                    <label className=\"kt-checkbox\" key={ind}>\r\n                                        <input className={\"checkInput\"} type=\"checkbox\" name={el.name} onClick={handlePermissionChange} defaultChecked={permissions.includes(el.name)}/> {el.name}<span/>\r\n                                    </label>\r\n                                ))\r\n                            }\r\n                            {\r\n                                error.permissions.length ? (\r\n                                    index === allModule.length - 1 ? (\r\n                                        error.permissions.map((error, indEr) => (\r\n                                            <div key={indEr} className=\"invalid-feedback text-center\">\r\n                                                {error}\r\n                                            </div>\r\n                                        ))\r\n                                    ) : null\r\n                                ) : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const resetAllCheckbox = () => {\r\n        const checkbox = document.getElementsByClassName(\"checkInput\");\r\n        for (var i = 0; i < checkbox.length; i++)\r\n            checkbox[i].checked = false;\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/rules\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Roles\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification de role\" : \"Ajout de role\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Nom <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le nom du type d'unité\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => handleNameChange(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'store-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-any-institution-type-role') ? (\r\n                                                    <div className={error.institutionTypes.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"unit_type\">Type d'institution <InputRequire/></label>\r\n                                                        <div className=\"col-lg-9 col-xl-6\">\r\n                                                            <Select\r\n                                                                isClearable\r\n                                                                isMulti\r\n                                                                value={institutionType}\r\n                                                                placeholder={\"filial\"}\r\n                                                                onChange={handleInstitutionType}\r\n                                                                options={institutionTypes}\r\n                                                            />\r\n                                                            {\r\n                                                                error.institutionTypes.length ? (\r\n                                                                    error.institutionTypes.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'store-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-any-institution-type-role') ? (\r\n                                                    institutionType.length ? (\r\n                                                        <>\r\n                                                            {\r\n                                                                data.institution_type.length ? (\r\n                                                                    data.institution_type.length === 2 ? (\r\n                                                                        modulesPermissions.all.map((el, index) => (\r\n                                                                            printModule(el, index, modulesPermissions.all)\r\n                                                                        ))\r\n                                                                    ) : (\r\n                                                                        modulesPermissions[data.institution_type[0]].map((el, index) => (\r\n                                                                            printModule(el, index, modulesPermissions[data.institution_type[0]])\r\n                                                                        ))\r\n                                                                    )\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </>\r\n                                                    ) : null\r\n                                                ) : (\r\n                                                    verifyPermission(props.userPermissions, 'store-my-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role') ? (\r\n                                                        proModule ? (\r\n                                                            proModule.map((el, index) => (\r\n                                                                printModule(el, index, proModule)\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    ) : null\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">\r\n                                                            {\r\n                                                                id ? \"Modifier\" : \"Enregistrer\"\r\n                                                            }\r\n                                                        </button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/rules\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/rules\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        const sendData = {\r\n            name: data.name,\r\n            permissions: permissions,\r\n            institutionTypes: data.institution_type\r\n        };\r\n        if (verifyPermission(props.userPermissions, 'store-my-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role'))\r\n            delete sendData.institutionTypes;\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                var endpoint = \"\";\r\n                if (verifyPermission(props.userPermissions, 'update-any-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/any/roles/${id}`;\r\n                if (verifyPermission(props.userPermissions, 'update-my-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/my/roles/${id}`;\r\n\r\n                axios.put(endpoint, sendData)\r\n                    .then(() => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(({response}) => {\r\n                        setError({...defaultError, ...response.data.error});\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                var endpoint = \"\";\r\n                if (verifyPermission(props.userPermissions, 'store-any-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/any/roles`;\r\n                if (verifyPermission(props.userPermissions, 'store-my-institution-type-role'))\r\n                    endpoint = `${appConfig.apiDomaine}/my/roles`;\r\n                axios.post(endpoint, sendData)\r\n                    .then(() => {\r\n                        if (verifyPermission(props.userPermissions, 'store-any-institution-type-role'))\r\n                            setInstitutionType([]);\r\n                        if (verifyPermission(props.userPermissions, 'store-my-institution-type-role'))\r\n                            resetAllCheckbox();\r\n                        setPermissions([]);\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(({response}) => {\r\n                        setError({...defaultError, ...response.data.error});\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-any-institution-type-role') || verifyPermission(props.userPermissions, 'store-my-institution-type-role') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RuleAddPage);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\RulePage.jsx",["1067"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst RulePage = (props) => {\r\n    document.title = \"Satis client - Paramètre role\";\r\n    if (!(verifyPermission(props.userPermissions, \"list-any-institution-type-role\") || verifyPermission(props.userPermissions ,'list-my-institution-type-role')))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [rules, setRulePages] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        var endpoint = ``;\r\n        if (verifyPermission(props.userPermissions, 'list-any-institution-type-role'))\r\n            endpoint = `${appConfig.apiDomaine}/any/roles`;\r\n        if (verifyPermission(props.userPermissions, 'list-my-institution-type-role'))\r\n            endpoint = `${appConfig.apiDomaine}/my/roles`;\r\n        async function fetchData () {\r\n            await axios.get(endpoint)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setRulePages(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newRulePages = [...rules];\r\n        newRulePages = newRulePages.filter(el => (\r\n            getLowerCaseString(el.name ? el.name : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description ? el.description: \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newRulePages;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(rules.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(rules.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(rules.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(rules.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(rules.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                rules.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                rules.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteRulePage = (ruleId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        var endpoint = \"\";\r\n                        if (verifyPermission(props.userPermissions, 'destroy-any-institution-type-role'))\r\n                            endpoint = `${appConfig.apiDomaine}/any/roles/${ruleId}`;\r\n                        if (verifyPermission(props.userPermissions, 'destroy-my-institution-type-role'))\r\n                            endpoint = `${appConfig.apiDomaine}/my/roles/${ruleId}`;\r\n\r\n                        axios.delete(endpoint)\r\n                            .then(response => {\r\n                                const newRulePages = [...rules];\r\n                                newRulePages.splice(index, 1);\r\n                                setRulePages(newRulePages);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newRulePages.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newRulePages.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (rule, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{rule.name ? rule.name : \"-\"}</td>\r\n                <td>\r\n                    {\r\n                        rule.is_editable === 1 ? (\r\n                            verifyPermission(props.userPermissions, 'update-any-institution-type-role') || verifyPermission(props.userPermissions, 'update-my-institution-type-role') ? (\r\n                                <Link to={`/settings/rules/${rule.name}/edit`}\r\n                                      className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                      title=\"Modifier\">\r\n                                    <i className=\"la la-edit\"/>\r\n                                </Link>\r\n                            ) : null\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-any-institution-type-role') || verifyPermission(props.userPermissions, 'destroy-my-institution-type-role') ? (\r\n                            <button\r\n                                onClick={(e) => deleteRulePage(rule.name, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-any-institution-type-role') || verifyPermission(props.userPermissions, 'list-my-institution-type-role') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Roles\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={[\"store-any-institution-type-role\", 'store-my-institution-type-role']}\r\n                            title={\"Roles\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/rules/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        rules.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((rule, index) => (\r\n                                                                    printBodyTable(rule, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {rules.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RulePage);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ActivatePilotPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimCategoryImportPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\StaffImportPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimObjectImportPage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\HistoricClaimsTraetment.jsx",["1068"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {forceRound, formatDateToTime, getLowerCaseString, loadCss, reduceCharacter} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\n\r\nconst HistoricClaimsAdd = (props) => {\r\n    document.title = \"Satis client - Paramètre Historique\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"history-list-treat-claim\")) {\r\n        window.location.href = ERROR_401;\r\n    }\r\n    const [load, setLoad] = useState(true);\r\n    const [claimsAdd, setClaimsAdd] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/history/list-treat\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setClaimsAdd(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaimsAdd = [...claimsAdd];\r\n        newClaimsAdd = newClaimsAdd.filter(el => (\r\n            getLowerCaseString(el.reference).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.claim_object ? el.claim_object.name.fr : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description).indexOf(value) >= 0 ||\r\n            getLowerCaseString(`${el.claimer.lastname} ${el.claimer.firstname}  ${el.account_targeted ? \" / \"+el.account_targeted.number : \"\"}`).indexOf(value) >= 0\r\n    ));\r\n\r\n        return newClaimsAdd;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimsAdd.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimsAdd.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimsAdd.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimsAdd.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimsAdd.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimsAdd.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimsAdd.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.reference} </td>\r\n                <td>{`${claim.claimer.lastname} ${claim.claimer.firstname}`} {claim.account_targeted !== null ? \"/\" + claim.account_targeted.number : \"\"}</td>\r\n                <td>{claim.claim_object.name[\"fr\"]}</td>\r\n                <td>{claim.description.length > 15 ? reduceCharacter(claim.description) : claim.description}</td>\r\n                <td>\r\n                    {\r\n                        (props.plan === 'PRO') ?\r\n                            (claim.unit_targeted ? claim.unit_targeted.name.fr : \"-\")\r\n                            : claim.institution_targeted.name\r\n                    }\r\n                </td>\r\n                <td style={{textAlign: \"center\"}}>\r\n                    {\r\n                        claim.status === \"archived\" ?\r\n                            <span className=\"kt-badge kt-badge--inline kt-badge--dark\">Archivé</span>\r\n                            : claim.status === \"validated\" ?\r\n                            <span className=\"kt-badge kt-badge--inline kt-badge--success\">Traité</span>\r\n                            : <span className=\"kt-badge kt-badge--inline kt-badge--warning\">En cours de traitement</span>\r\n\r\n                    }\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Historiques\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Réclamations traitées\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Réclamations traitées\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Référence\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"80px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Réclamant\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Objets\r\n                                                            de réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Description\r\n                                                            de la Réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">\r\n                                                            {(props.plan === 'PRO') ? \"  Point de service visé\" : \"Institution ciblée\"}\r\n\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Statut\r\n                                                        </th>\r\n\r\n                                                        {/*<th className=\"sorting\" tabIndex=\"0\"*/}\r\n                                                        {/*    aria-controls=\"kt_table_1\"*/}\r\n                                                        {/*    rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}*/}\r\n                                                        {/*    aria-label=\"Type: activate to sort column ascending\">*/}\r\n                                                        {/*    Action*/}\r\n                                                        {/*</th>*/}\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claimsAdd.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr style={{textAlign:\"center\"}}>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objets de réclamtions</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                        <th rowSpan=\"1\"\r\n                                                            colSpan=\"1\">{(props.plan === 'PRO') ? \"Point de service visé\" : \"Institution ciblée\"}\r\n                                                        </th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Statut</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {claimsAdd.length} données\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan:state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HistoricClaimsAdd);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\HistoricClaimsAdd.jsx",["1069","1070"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {forceRound, formatDateToTime, getLowerCaseString, loadCss, reduceCharacter} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\n\r\nconst HistoricClaimsAdd = (props) => {\r\n    document.title = \"Satis client - Paramètre Historique\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"history-list-create-claim\")) {\r\n        window.location.href = ERROR_401;\r\n    }\r\n    const [load, setLoad] = useState(true);\r\n    const [claimsAdd, setClaimsAdd] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/history/list-claim\")\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setClaimsAdd(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaimsAdd = [...claimsAdd];\r\n        newClaimsAdd = newClaimsAdd.filter(el => (\r\n            getLowerCaseString(el.reference).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.claim_object ? el.claim_object.name.fr : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.description).indexOf(value) >= 0 ||\r\n            getLowerCaseString(`${el.claimer.lastname} ${el.claimer.firstname}  ${el.account_targeted ? \" / \"+el.account_targeted.number : \"\"}`).indexOf(value) >= 0 \r\n\r\n        ));\r\n\r\n        return newClaimsAdd;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claimsAdd.length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claimsAdd.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claimsAdd.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claimsAdd.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claimsAdd.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claimsAdd.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claimsAdd.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{claim.reference} </td>\r\n                <td>{`${claim.claimer.lastname} ${claim.claimer.firstname}`} {claim.account_targeted !== null ? \"/\" + claim.account_targeted.number : \"\"}</td>\r\n                <td>{claim.claim_object.name[\"fr\"]}</td>\r\n                <td>{claim.description.length > 15 ? reduceCharacter(claim.description) : claim.description}</td>\r\n                <td>\r\n                    {\r\n                        (props.plan === 'PRO') ?\r\n                            (claim.unit_targeted ? claim.unit_targeted.name.fr : \"-\")\r\n                            : claim.institution_targeted.name\r\n                    }\r\n                </td>\r\n                <td style={{textAlign: \"center\"}}>\r\n                    {\r\n                        claim.status === \"archived\" ?\r\n                            <span className=\"kt-badge kt-badge--inline kt-badge--dark\">Archivé</span>\r\n                            : claim.status === \"validated\" ?\r\n                            <span className=\"kt-badge kt-badge--inline kt-badge--success\">Traité</span>\r\n                            : <span className=\"kt-badge kt-badge--inline kt-badge--warning\">En cours de traitement</span>\r\n\r\n                    }\r\n                </td>\r\n                <td>\r\n                    <a href={`/process/claims/${claim.reference}/detail`} className=\"btn btn-sm btn-clean btn-icon btn-icon-md\" title=\"Détail\">\r\n                        <i className=\"la la-eye\"/>\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Historiques\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                               className=\"kt-subheader__breadcrumbs-link\">\r\n                                Réclamations Créées\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"kt-portlet\">\r\n                    <HeaderTablePage\r\n                        title={\"Réclamations Créées\"}\r\n                    />\r\n\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6 text-left\">\r\n                                            <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                <label>\r\n                                                    Recherche:\r\n                                                    <input id=\"myInput\" type=\"text\"\r\n                                                           onKeyUp={(e) => searchElement(e)}\r\n                                                           className=\"form-control form-control-sm\"\r\n                                                           placeholder=\"\"\r\n                                                           aria-controls=\"kt_table_1\"\r\n                                                    />\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <table\r\n                                                className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                style={{width: \"952px\"}}>\r\n                                                <thead>\r\n                                                <tr role=\"row\">\r\n                                                    <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Référence\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Réclamant\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"80px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Objets\r\n                                                        de réclamation\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">Description\r\n                                                        de la Réclamation\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"70px\"}}\r\n                                                        aria-label=\"Country: activate to sort column ascending\">\r\n                                                        {(props.plan === 'PRO') ? \"  Point de service visé\" : \"Institution ciblée\"}\r\n\r\n                                                    </th>\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\"\r\n                                                        colSpan=\"1\" style={{width: \"70px\"}}\r\n                                                        aria-label=\"Ship City: activate to sort column ascending\">Statut\r\n                                                    </th>\r\n\r\n                                                    <th className=\"sorting\" tabIndex=\"0\"\r\n                                                        aria-controls=\"kt_table_1\"\r\n                                                        rowSpan=\"1\" colSpan=\"1\" style={{width: \"25px\"}}\r\n                                                        aria-label=\"Type: activate to sort column ascending\">\r\n                                                        Action\r\n                                                    </th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {\r\n                                                    claimsAdd.length ? (\r\n                                                        showList.length ? (\r\n                                                            showList.map((claim, index) => (\r\n                                                                printBodyTable(claim, index)\r\n                                                            ))\r\n                                                        ) : (\r\n                                                            <EmptyTable search={true}/>\r\n                                                        )\r\n                                                    ) : (\r\n                                                        <EmptyTable/>\r\n                                                    )\r\n                                                }\r\n                                                </tbody>\r\n                                                <tfoot>\r\n                                                <tr style={{textAlign: \"center\"}}>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Référence</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Réclamant</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Objets de réclamtions</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Description</th>\r\n                                                    <th rowSpan=\"1\"\r\n                                                        colSpan=\"1\">{(props.plan === 'PRO') ? \"Point de service visé\" : \"Institution ciblée\"}\r\n                                                    </th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Statut</th>\r\n                                                    <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                </tr>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-5\">\r\n                                            <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                 aria-live=\"polite\">Affichage de 1\r\n                                                à {numberPerPage} sur {claimsAdd.length} données\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {\r\n                                            showList.length ? (\r\n                                                <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                    <Pagination\r\n                                                        numberPerPage={numberPerPage}\r\n                                                        onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                        activeNumberPage={activeNumberPage}\r\n                                                        onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                        pages={pages}\r\n                                                        onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                        numberPage={numberPage}\r\n                                                        onClickNextPage={e => onClickNextPage(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        plan: state.plan.plan,\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HistoricClaimsAdd);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ConfigCoefficient.jsx",["1071","1072"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastEditErrorMessageConfig, toastEditSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\nimport {connect} from \"react-redux\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst ConfigCoefficient = (props) => {\r\n\r\n    if (!verifyPermission(props.userPermissions, \"update-relance-parameters\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const defaultData = {\r\n        coef: \"\",\r\n    };\r\n    const defaultError = {\r\n        coef: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + `/configurations/relance`)\r\n                .then(response => {\r\n                    console.log(response.data, \"Data\");\r\n                    const newConfig = {\r\n                        coef: response.data.coef,\r\n                    };\r\n                    setData(newConfig)\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const onChangeCoef = (e) => {\r\n        const newData = {...data};\r\n        newData.coef = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            axios.put(appConfig.apiDomaine + `/configurations/relance`, data)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    setError(defaultError);\r\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    setError({...defaultError, ...error.response.data.error});\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Coefficient\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Coefficient\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n\r\n                                        <div className={error.coef.length ? \"form-group  validated\" : \"form-group\"}>\r\n                                            <label htmlFor=\"coef\"\r\n                                                   title=\"Coefficient de la relance\"\r\n                                                   data-toggle=\"tooltip\"\r\n                                                   data-placement=\"bottom\">\r\n                                                Coefficient <InputRequire/><i className=\"fa fa-info-circle\"/>\r\n                                            </label>\r\n                                            <div className=\"col-md-6 mb-3\">\r\n                                                <input\r\n                                                    id=\"coef\"\r\n                                                    type=\"text\"\r\n                                                    className={error.coef.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le Coefficient\"\r\n                                                    value={data.coef}\r\n                                                    onChange={(e) => onChangeCoef(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.coef.length ? (\r\n                                                        error.coef.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"kt-portlet__foot\">\r\n                                        <div className=\"kt-form__actions\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                            className=\"btn btn-primary\">Modifier</button>\r\n                                                ) : (\r\n                                                    <button\r\n                                                        className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                        type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/dashbord\"\r\n                                                          className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/dashbord\"\r\n                                                          className=\"btn btn-secondary mx-2\" disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        verifyPermission(props.userPermissions, \"update-relance-parameters\") ?\r\n            printJsx()\r\n            : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ConfigCoefficient);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\UserEdit.jsx",["1073"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastEditErrorMessageConfig, toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {formatSelectOption} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst UserEdit = (props) => {\r\n    const {id} = useParams();\r\n\r\n    document.title = \"Satis client - Paramètre Envoie de mail\";\r\n    if (!(verifyPermission(props.userPermissions, 'show-user-any-institution') || verifyPermission(props.userPermissions, \"show-user-my-institution\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    const defaultData = {\r\n        roles: [],\r\n        new_password: \"\",\r\n        new_password_confirmation: \"\",\r\n    };\r\n    const defaultError = {\r\n        roles: [],\r\n        new_password: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [user, setUser] = useState(null);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [roles, setRoles] = useState([]);\r\n    const [role, setRole] = useState([]);\r\n\r\n    const formatDefaultRoles = (userRoles) => {\r\n        const listRoles = [];\r\n        userRoles.map(r => listRoles.push(r.name));\r\n        return listRoles;\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            let endpoint = \"\";\r\n            if (props.plan === \"MACRO\" || props.plan === \"HUB\") {\r\n                if (verifyPermission(props.userPermissions, \"show-user-any-institution\"))\r\n                    endpoint = `${appConfig.apiDomaine}/any/users/${id}/change-role-password`;\r\n                if (verifyPermission(props.userPermissions, \"show-user-my-institution\"))\r\n                    endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\r\n            }\r\n            else if(props.plan === \"PRO\")\r\n                endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\r\n\r\n            if (verifyTokenExpire()) {\r\n                await axios.get(endpoint)\r\n                    .then(({data}) => {\r\n                        const newData = {...defaultData};\r\n                        newData.roles = formatDefaultRoles(data.user.roles);\r\n                        setRole(formatSelectOption(data.user.roles, \"name\", false, \"name\"));\r\n                        setRoles(formatSelectOption(data.roles, \"name\", false, \"name\"));\r\n                        setUser(data.user);\r\n                        setData(newData);\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [props.plan, appConfig.apiDomaine]);\r\n\r\n    const formatSelected = (selected) => {\r\n        const newSelected = [];\r\n        selected.map(s => newSelected.push(s.value));\r\n        return newSelected;\r\n    };\r\n\r\n    const handleRoleChange = (selected) => {\r\n        const newData = {...data};\r\n        newData.roles = selected ? formatSelected(selected) : [];\r\n        setRole(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const newData = {...data};\r\n        newData.new_password = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handlePasswordConfirmationChange = (e) => {\r\n        const newData = {...data};\r\n        newData.new_password_confirmation = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setStartRequest(true);\r\n        let endpoint = \"\";\r\n        if (props.plan === \"MACRO\" || props.plan === \"HUB\") {\r\n            if (verifyPermission(props.userPermissions, \"show-user-any-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/any/users/${id}/change-role-password`;\r\n            if (verifyPermission(props.userPermissions, \"show-user-my-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\r\n        }\r\n        else if(props.plan === \"PRO\")\r\n            endpoint = `${appConfig.apiDomaine}/my/users/${id}/change-role-password`;\r\n\r\n        if (verifyTokenExpire()) {\r\n            console.log(\"enpoint:\", endpoint);\r\n            await axios.put(endpoint, data)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    const newData = {...data};\r\n                    newData.new_password = \"\";\r\n                    newData.new_password_confirmation = \"\";\r\n                    setError(defaultError);\r\n                    setData(newData);\r\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                })\r\n                .catch(errorRequest => {\r\n                    console.log(errorRequest.response.data.error,\"ERROR\")\r\n                    setStartRequest(false);\r\n                    setError({...defaultError, ...errorRequest.response.data.error});\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'show-user-any-institution') || verifyPermission(props.userPermissions, \"show-user-my-institution\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètre\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/users\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Utilisateur\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Modification\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Utilisateur\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.roles.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\">\r\n                                                    <strong>Utilisateur</strong>\r\n                                                </label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <h4>{ user ? user.identite.lastname : \".......\" } { user ? user.identite.firstname : \".......\" }</h4>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.roles.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={\"role\"}>Role <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        isMulti\r\n                                                        value={role}\r\n                                                        placeholder={\"admin-satis\"}\r\n                                                        onChange={handleRoleChange}\r\n                                                        options={roles}\r\n                                                    />\r\n                                                    {\r\n                                                        error.roles.length ? (\r\n                                                            error.roles.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.new_password.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password\">Mot de passe</label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"password\"\r\n                                                        type=\"password\"\r\n                                                        className={error.new_password.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"************\"\r\n                                                        value={data.new_password}\r\n                                                        onChange={(e) => handlePasswordChange(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.new_password.length ? (\r\n                                                            error.new_password.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={\"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password_confirmation\">Confirmation</label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"password_confirmation\"\r\n                                                        type=\"password\"\r\n                                                        className={\"form-control\"}\r\n                                                        placeholder=\"************\"\r\n                                                        value={data.new_password_confirmation}\r\n                                                        onChange={(e) => handlePasswordConfirmationChange(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Modifier</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n\r\n                                                <Link to={\"/settings/users\"} className=\"btn btn-secondary mx-2\">Quitter</Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserEdit);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ParametersComponentEdit.jsx",["1074","1075","1076"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\naxios.defaults.headers.common['Content-Type'] = \"multipart/form-data\";\r\n\r\nconst ParametersComponentEdit = (props) => {\r\n    const {id} = useParams();\r\n    const [dataType, setDataType] = useState({});\r\n    const [logo, setDataLogo] = useState({});\r\n    const [data, setData] = useState({});\r\n    const [error, setError] = useState({});\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    const formatState = (params, paramData = null) => {\r\n        const newState = {};\r\n        const newDataType = {};\r\n        const newDatalogo = {};\r\n        const newError = {};\r\n        params.map(param => {\r\n            newState[`params_${param}`] = paramData ? paramData[param].type === 'image' ? (paramData[param].value !== null ? paramData[param].value.url : null) : paramData[param].value : \"\";\r\n            newDataType[`params_${param}`] = paramData ? paramData[param].type : \"\";\r\n            newError[`params_${param}`] = [];\r\n            if (paramData) {\r\n                paramData[param].type === \"image\" ? newDatalogo[`params_${param}`] = false : delete newDatalogo[`params_${param}`]\r\n            }\r\n        });\r\n        setData(newState);\r\n        setDataLogo(newDatalogo);\r\n        setDataType(newDataType);\r\n        setError(newError);\r\n    };\r\n\r\n    const initialState = (stateData) => {\r\n        let componentParams = [];\r\n        for (const param in stateData) {\r\n            componentParams.push(param);\r\n        }\r\n        formatState(componentParams, stateData);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + `/components/${id}`)\r\n                .then(response => {\r\n                    initialState(response.data.params.fr);\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const handleChange = (e, param) => {\r\n        const newData = {...data};\r\n        newData[param] = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const handleChangeImage = (e, param) => {\r\n        const newData = {...data};\r\n        newData[param] = Object.values(e.target.files)[0];\r\n        setData(newData);\r\n        console.log(Object.values(e.target.files)[0], \"NEW_DATA\");\r\n        console.log(newData[param], 'new data param');\r\n        const newLogo = {...logo};\r\n        newLogo[param] = true;\r\n        setDataLogo(newLogo);\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            var image = document.getElementById(param);\r\n            console.log(image, 'image');\r\n            image.src = e.target.result;\r\n        };\r\n        reader.readAsDataURL(newData[param]);\r\n    };\r\n\r\n    const executeSave = (url, saveData) => {\r\n        if (verifyTokenExpire()) {\r\n            axios.post(url, saveData)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    window.location.href = \"/settings/config\"\r\n                })\r\n                .catch(errorRequest => {\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n\r\n    const formatFormData = (newData, newType) => {\r\n\r\n        const formData = new FormData();\r\n        formData.set(\"_method\", \"put\");\r\n        for (const key in newData) {\r\n            if (newType[key] === \"image\") {\r\n                formData.append(key, newData[key]);\r\n            } else {\r\n                formData.set(key, newData[key]);\r\n            }\r\n        }\r\n        return formData;\r\n    };\r\n\r\n    const saveData = (e) => {\r\n        e.preventDefault();\r\n        const newData = {...data};\r\n        const newType = {...dataType};\r\n        const values = [];\r\n\r\n        const cle = Object.keys(logo);\r\n        const valeurs = Object.values(logo);\r\n\r\n        for (let i = 0; i < cle.length; i++) {\r\n            values.push({[cle[i]]: valeurs[i]});\r\n            values.map(param => (\r\n                (param[cle[i]] === false) ?\r\n                    delete newData[cle[i]]\r\n                    : \"\"\r\n            ))\r\n        }\r\n        // Debut de Log du contenu du formData\r\n        let dataToSend = formatFormData(newData, newType);\r\n        // fin de Log du contenu du formData\r\n\r\n        setStartRequest(true);\r\n        executeSave(`${appConfig.apiDomaine}/components/${id}`, dataToSend);\r\n    };\r\n\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Configuration\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Modification Configuration\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            {/*{console.log(logo, \"Logo_Data\")}*/}\r\n                                            {\r\n                                                Object.keys(error).length ? (\r\n                                                    Object.values(data).map((param, index) => (\r\n                                                        dataType[Object.keys(dataType)[index]] === \"image\" ?\r\n                                                            <div key={index}\r\n                                                                 className={error[Object.keys(error)[index]].length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                       htmlFor={Object.keys(data)[index]}>{(Object.keys(data)[index]).slice(7)}\r\n                                                                    <InputRequire/></label>\r\n                                                                {/*{console.log(error,\"ERRor\")}*/}\r\n                                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                                    <div className=\"kt-avatar kt-avatar--outline\"\r\n                                                                         id=\"kt_user_add_avatar\">\r\n                                                                        <div className=\"kt-avatar__holder\"\r\n                                                                             style={{textAlign: 'center'}}>\r\n\r\n                                                                            <img\r\n                                                                                id={Object.keys(data)[index]}\r\n                                                                                src={appConfig.apiDomaine + data[Object.keys(data)[index]]}\r\n                                                                                alt={Object.keys(data)[index]}\r\n                                                                                style={{\r\n                                                                                    maxWidth: \"110px\",\r\n                                                                                    maxHeight: \"110px\",\r\n                                                                                    textAlign: 'center'\r\n                                                                                }}\r\n                                                                            />\r\n\r\n                                                                        </div>\r\n                                                                        <label className=\"kt-avatar__upload\"\r\n                                                                               id=\"files\"\r\n                                                                               data-toggle=\"kt-tooltip\"\r\n                                                                               title=\"Change avatar\">\r\n                                                                            <i className=\"fa fa-pen\"/>\r\n                                                                            <input type=\"file\"\r\n                                                                                   id=\"file\"\r\n                                                                                   name=\"kt_user_add_user_avatar\"\r\n                                                                                   onChange={(e) => handleChangeImage(e, Object.keys(data)[index])}\r\n                                                                            />\r\n                                                                        </label>\r\n                                                                        <span className=\"kt-avatar__cancel\"\r\n                                                                              data-toggle=\"kt-tooltip\"\r\n                                                                              title=\"Cancel avatar\">\r\n                                                                            <i className=\"fa fa-times\"/>\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            :\r\n                                                            <div key={index}\r\n                                                                 className={error[Object.keys(error)[index]].length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                       htmlFor={Object.keys(data)[index]}>{(Object.keys(data)[index]).slice(7)}\r\n                                                                    <InputRequire/></label>\r\n                                                                <div className=\"col-lg-9 col-xl-6\">\r\n\r\n                                                                    <input\r\n                                                                        id={Object.keys(data)[index]}\r\n                                                                        type={dataType[Object.keys(dataType)[index]]}\r\n                                                                        className={error[Object.keys(error)[index]].length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                        placeholder={\"Veuillez entrer\" + \" \" + (Object.keys(data)[index]).slice(7)}\r\n                                                                        value={data[Object.keys(data)[index]]}\r\n                                                                        onChange={(e) => handleChange(e, Object.keys(data)[index])}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        error[Object.keys(error)[index]].length ? (\r\n                                                                            error[Object.keys(error)[index]].map((error, index) => (\r\n                                                                                <div key={index}\r\n                                                                                     className=\"invalid-feedback\">\r\n                                                                                    {error}\r\n                                                                                </div>\r\n                                                                            ))\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                    ))\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => saveData(e)}\r\n                                                                className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button\r\n                                                            className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                            type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/config\"\r\n                                                              className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/config\"\r\n                                                              className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        printJsx()\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ParametersComponentEdit);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Clients\\ImportClientForm.jsx",["1077","1078"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport InputRequire from \"../InputRequire\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        store: `${appConfig.apiDomaine}/my/import-clients`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            store: `${appConfig.apiDomaine}/any/import-clients`,\r\n        },\r\n        filial: {\r\n            store: `${appConfig.apiDomaine}/my/import-clients`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        store: `${appConfig.apiDomaine}/any/import-clients `,\r\n    }\r\n};\r\n\r\nconst ImportClientForm = (props) => {\r\n    document.title = \"Satis client - Importation de fichier excel\";\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'store-client-from-any-institution') ||\r\n        verifyPermission(props.userPermissions, 'store-client-from-my-institution')))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'store-client-from-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'store-client-from-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n\r\n    const option1 = 1;\r\n    const option2 = 0;\r\n\r\n    const defaultData = {\r\n        file: \"\",\r\n        etat_update: \"\",\r\n        stop_identite_exist: \"\",\r\n    };\r\n    const defaultError = {\r\n        file: [],\r\n        etat_update: \"\",\r\n        stop_identite_exist: \"\",\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    const onChangeFile = (e) => {\r\n        const newData = {...data};\r\n        newData.file = Object.values(e.target.files)[0];\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeOption = (e) => {\r\n        const newData = {...data};\r\n        newData.stop_identite_exist = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeEtatOption = (e) => {\r\n        const newData = {...data};\r\n        newData.etat_update = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const formatFormData = (newData) => {\r\n        const formData = new FormData();\r\n        formData.append(\"_method\", \"post\");\r\n        for (const key in newData) {\r\n            // console.log(`${key}:`, newData[key]);\r\n            if (key === \"file\") {\r\n                formData.append(\"file\", newData.file);\r\n            } else\r\n                formData.set(key, newData[key]);\r\n        }\r\n        console.log(formData.get('file'), 'FORMDATA');\r\n        return formData;\r\n\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios.post(endPoint.store, formatFormData(data))\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    setError(defaultError);\r\n                    setData(defaultData);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    setError({...defaultError, ...error.response.data.error});\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Importation\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Importation de clients\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n                                {console.log(data, \"DATA_OPTION\")}\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n\r\n                                        <div\r\n                                            className={error.stop_identite_exist.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\">Identité existe déjà\r\n                                                ? <InputRequire/></label>\r\n                                            <div className=\"kt-radio-inline col-lg-9 col-xl-6\">\r\n\r\n                                                <label className=\"kt-radio kt-radio--bold kt-radio--success\">\r\n                                                    <input\r\n                                                        className={error.stop_identite_exist.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        type=\"radio\"\r\n                                                        name=\"radio3\"\r\n                                                        value={option1}\r\n                                                        onChange={(e) => onChangeOption(e)}\r\n                                                    /> Oui\r\n                                                    <span/>\r\n                                                </label>\r\n                                                <label className=\"kt-radio kt-radio--bold kt-radio--danger\">\r\n                                                    <input\r\n                                                        className={error.stop_identite_exist.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        type=\"radio\"\r\n                                                        name=\"radio3\"\r\n                                                        value={option2}\r\n                                                        onChange={(e) => onChangeOption(e)}\r\n                                                    /> Non\r\n                                                    <span/>\r\n                                                </label>\r\n                                            </div>\r\n                                            {\r\n                                                error.stop_identite_exist.length ? (\r\n                                                    error.stop_identite_exist.map((error, index) => (\r\n                                                        <div key={index}\r\n                                                             className=\"invalid-feedback\">\r\n                                                            {error}\r\n                                                        </div>\r\n                                                    ))\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            className={error.etat_update.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\">Est ce une mise a\r\n                                                jour? <InputRequire/></label>\r\n                                            <div className=\"kt-radio-inline col-lg-9 col-xl-6\">\r\n\r\n                                                <label className=\"kt-radio kt-radio--bold kt-radio--success\">\r\n                                                    <input\r\n                                                        className={error.etat_update.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        type=\"radio\"\r\n                                                        name=\"radio4\"\r\n                                                        value={option1}\r\n                                                        onChange={(e) => onChangeEtatOption(e)}\r\n                                                    /> Oui\r\n                                                    <span/>\r\n                                                </label>\r\n                                                <label className=\"kt-radio kt-radio--bold kt-radio--danger\">\r\n                                                    <input\r\n                                                        className={error.etat_update.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        type=\"radio\"\r\n                                                        name=\"radio4\"\r\n                                                        value={option2}\r\n                                                        onChange={(e) => onChangeEtatOption(e)}\r\n                                                    /> Non\r\n                                                    <span/>\r\n                                                </label>\r\n                                            </div>\r\n                                            {\r\n                                                error.etat_update.length ? (\r\n                                                    error.etat_update.map((error, index) => (\r\n                                                        <div key={index}\r\n                                                             className=\"invalid-feedback\">\r\n                                                            {error}\r\n                                                        </div>\r\n                                                    ))\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            className={error.file.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                   htmlFor=\"file\">Fichier <InputRequire/></label>\r\n                                            <div className=\"col-md-9 mb-3\">\r\n                                                <input\r\n                                                    id=\"file\"\r\n                                                    type=\"file\"\r\n                                                    className={error.file.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez télécharger le fichier excel\"\r\n                                                    onChange={(e) => onChangeFile(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.file.length ? (\r\n                                                        error.file.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"kt-portlet__foot text-right\">\r\n                                        <div className=\"kt-form__actions\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                            className=\"btn btn-primary\">Enregistrer</button>\r\n                                                ) : (\r\n                                                    <button\r\n                                                        className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                        type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/settings/clients\"\r\n                                                          className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/settings/clients\"\r\n                                                          className=\"btn btn-secondary mx-2\" disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        verifyPermission(props.userPermissions, 'store-client-from-any-institution') ||\r\n        verifyPermission(props.userPermissions, 'store-client-from-my-institution') ?\r\n            printJsx()\r\n            : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ImportClientForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\staff\\StaffForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Clients\\ClientForm.jsx",["1079","1080","1081","1082"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport '../staff/react-tagsinput.css'\r\nimport IdentityForm from \"../IdentityForm\";\r\nimport Select from \"react-select\";\r\nimport {formatSelectOption} from \"../../../helpers/function\";\r\nimport {connect} from \"react-redux\";\r\nimport {addIdentity} from \"../../../store/actions/IdentityAction\";\r\nimport {AUTH_TOKEN} from \"../../../constants/token\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst EditClients = (props) => {\r\n    const {id} = useParams();\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-client-from-my-institution'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-client-from-my-institution'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        account_type_id: \"\",\r\n        number: \"\",\r\n        category_client_id: \"\",\r\n\r\n\r\n    };\r\n    const defaultError = {\r\n        account_type_id: [],\r\n        number: [],\r\n        category_client_id: [],\r\n\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [identity, setIdentity] = useState(undefined);\r\n    const [accountType, setAccountTypes] = useState(undefined);\r\n    const [categoryClient, setCategoryClient] = useState(undefined);\r\n    const [type, setType] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + '/my/clients/create')\r\n                .then(response => {\r\n                    setAccountTypes(response.data.AccountTypes);\r\n                    setCategoryClient(response.data.clientCategories);\r\n                })\r\n            ;\r\n\r\n            if (id) {\r\n                axios.get(appConfig.apiDomaine + `/my/clients/${id}/edit`)\r\n                    .then(response => {\r\n                        const newClient = {\r\n                            number: response.data.client_institution.accounts[0].number,\r\n                            account_type_id: response.data.client_institution.accounts[0].account_type_id,\r\n                            category_client_id: response.data.client_institution.category_client_id,\r\n\r\n                        };\r\n                        setData(newClient);\r\n                        const newIdentity = {\r\n                            firstname: response.data.client_institution.client.identite.firstname,\r\n                            lastname: response.data.client_institution.client.identite.lastname,\r\n                            sexe: response.data.client_institution.client.identite.sexe,\r\n                            telephone: response.data.client_institution.client.identite.telephone,\r\n                            email: response.data.client_institution.client.identite.email,\r\n                            ville: response.data.client_institution.client.identite.ville === null ? \"\" : response.data.client_institution.client.identite.ville,\r\n                        };\r\n                        setIdentity(newIdentity);\r\n                        props.addIdentite(newIdentity);\r\n                        setType({\r\n                            value: response.data.client_institution.accounts[0].account_type.id,\r\n                            label: response.data.client_institution.accounts[0].account_type.name.fr\r\n                        });\r\n                        setCategory({\r\n                            value: response.data.client_institution.category_client.id,\r\n                            label: response.data.client_institution.category_client.name.fr\r\n                        });\r\n\r\n                    });\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const onChangeAccountType = (selected) => {\r\n        const newData = {...data};\r\n        newData.account_type_id = selected.value;\r\n        setType(selected);\r\n        setData(newData);\r\n    };\r\n    const onChangeAccount = (e) => {\r\n        const newData = {...data};\r\n        newData.number = e.target.value;\r\n        setData(newData);\r\n\r\n    };\r\n\r\n    const onChangeCategoryClient = (selected) => {\r\n        const newData = {...data};\r\n        newData.category_client_id = selected.value;\r\n        setCategory(selected);\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        {\r\n            console.log(...props.identite, \"props\")\r\n        }\r\n        const formData = {...props.identite, ...data};\r\n        console.log(formData, \"FORM_DATA\");\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(appConfig.apiDomaine + `/my/clients/${id}`, formData)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch((errorRequest) => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\r\n                            errorRequest.response.data.identite.lastname + \" \" + errorRequest.response.data.identite.firstname + \": \" + errorRequest.response.data.message)\r\n                        );\r\n                    })\r\n                ;\r\n            } else {\r\n                console.log(props.identite.client_id, \"CLIENT_ID\");\r\n                if (props.identite.client_id) {\r\n                    axios.post(appConfig.apiDomaine + `/my/accounts/${props.identite.client_id}/clients`, formData)\r\n                        .then(response => {\r\n                            setStartRequest(false);\r\n                            setError(defaultError);\r\n                            setData(defaultData);\r\n                            setType({});\r\n                            setCategory({});\r\n                            setIdentity({});\r\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                        })\r\n                        .catch((errorRequest) => {\r\n                            setStartRequest(false);\r\n                            setError({...defaultError, ...errorRequest.response.data.error});\r\n                            ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        })\r\n                    ;\r\n                } else {\r\n                    axios.post(appConfig.apiDomaine + `/my/clients`, formData)\r\n                        .then(response => {\r\n                            setStartRequest(false);\r\n                            setError(defaultError);\r\n                            setData(defaultData);\r\n                            setType({});\r\n                            setCategory({});\r\n                            setIdentity({});\r\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                        })\r\n                        .catch(async (errorRequest) => {\r\n\r\n                            console.log(errorRequest.response.data.identite, 'ERROR');\r\n\r\n                            if (errorRequest.response.data.identite) {\r\n                                await axios.post(appConfig.apiDomaine + `/my/identites/${errorRequest.response.data.identite.id}/client`, formData)\r\n                                    .then(response => {\r\n                                        setStartRequest(false);\r\n                                        setError(defaultError);\r\n                                        setData(defaultData);\r\n                                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                                    })\r\n                            } else if (errorRequest.response.data.client) {\r\n                                setStartRequest(false);\r\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\r\n                                    errorRequest.response.data.client.identite.lastname + \" \" + errorRequest.response.data.client.identite.firstname + \": \" + errorRequest.response.data.message)\r\n                                );\r\n                            } else {\r\n                                setStartRequest(false);\r\n                                setError({...defaultError, ...errorRequest.response.data.error});\r\n                                ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <Link to=\"/settings/clients\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                Client\r\n                            </Link>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                {\r\n                                    id ? \"Modification\" : \"Ajout\"\r\n                                }\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"kt-portlet\">\r\n                            <div className=\"kt-portlet__head\">\r\n                                <div className=\"kt-portlet__head-label\">\r\n                                    <h3 className=\"kt-portlet__head-title\">\r\n                                        {\r\n                                            id ?\r\n                                                \"Modification de Clients\" : \" Ajout de Clients\"\r\n                                        }\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n                            <form method=\"POST\" className=\"kt-form\">\r\n\r\n                                <div className=\"kt-portlet\">\r\n\r\n                                    {\r\n\r\n                                        !id ? (\r\n                                            <IdentityForm/>\r\n\r\n                                        ) : (\r\n                                            identity ?\r\n                                                <IdentityForm\r\n                                                    getIdentite={identity}\r\n                                                    getLoading={true}\r\n                                                />\r\n                                                : null\r\n                                        )\r\n                                    }\r\n\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"kt-section kt-section--first\">\r\n                                            <h5 className=\"kt-section__title kt-section__title-lg\">\r\n                                                Informations Techniques\r\n                                            </h5>\r\n\r\n                                            <div className=\"form-group row\">\r\n                                                <div className={error.account_type_id.length ? \"col validated\" : \"col\"}>\r\n                                                    <label htmlFor=\"exampleSelect1\">Type de Compte</label>\r\n                                                    {accountType ? (\r\n                                                        <Select\r\n                                                            value={type}\r\n                                                            onChange={onChangeAccountType}\r\n                                                            placeholder={\"Veillez selectionner le type de compte\"}\r\n                                                            options={formatSelectOption(accountType, 'name', 'fr')}\r\n                                                        />\r\n                                                    ) : (<select name=\"typeClient\"\r\n                                                                 className={error.account_type_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                 id=\"typeClient\">\r\n                                                        <option value=\"\"/>\r\n                                                    </select>)\r\n                                                    }\r\n\r\n                                                    {\r\n                                                        error.account_type_id.length ? (\r\n                                                            error.account_type_id.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                                <div\r\n                                                    className={error.category_client_id.length ? \"col validated\" : \"col\"}>\r\n                                                    <label htmlFor=\"exampleSelect1\">Catégorie Client</label>\r\n\r\n                                                    {categoryClient ? (\r\n                                                        <Select\r\n                                                            value={category}\r\n                                                            onChange={onChangeCategoryClient}\r\n                                                            placeholder={\"Veillez selectionner la catégorie client\"}\r\n                                                            options={formatSelectOption(categoryClient, 'name', 'fr')}\r\n                                                        />\r\n                                                    ) : (<select name=\"category\"\r\n                                                                 className={error.category_client_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                 id=\"category\">\r\n                                                        <option value=\"\"/>\r\n                                                    </select>)\r\n                                                    }\r\n\r\n                                                    {\r\n                                                        error.category_client_id.length ? (\r\n                                                            error.category_client_id.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group row\">\r\n\r\n                                                <div className={error.number.length ? \"col validated\" : \"col\"}>\r\n                                                    <label htmlFor=\"number\">Numero de Compte</label>\r\n                                                    <input\r\n                                                        id=\"number\"\r\n                                                        type=\"text\"\r\n                                                        className={error.number.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le numero de compte\"\r\n                                                        value={data.number}\r\n                                                        onChange={(e) => onChangeAccount(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.number.length ? (\r\n                                                            error.number.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"kt-portlet__foot\">\r\n                                    <div className=\"kt-form__actions text-right\">\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                        className=\"btn btn-primary\">Envoyer</button>\r\n                                            ) : (\r\n                                                <button\r\n                                                    className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                    type=\"button\" disabled>\r\n                                                    Loading...\r\n                                                </button>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\">\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            ) : (\r\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\"\r\n                                                      disabled>\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        identite: state.identity,\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {addIdentite: addIdentity})(EditClients);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Institutions\\InstitutionForm.jsx",["1083"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig, toastEditSuccessMessageConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport Select from \"react-select\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport InputRequire from \"../InputRequire\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\n\r\nconst InstitutionForm = (props) => {\r\n    const {id} = useParams();\r\n    if (!id) {\r\n        if (!verifyPermission(props.userPermissions, 'store-any-institution'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-any-institution'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n    const defaultData = {\r\n        institution_type_id: \"\",\r\n        name: \"\",\r\n        acronyme: \"\",\r\n        iso_code: \"\",\r\n        logo: \"/assets/media/users/Icon.png\",\r\n        default_currency_slug:\"\"\r\n    };\r\n    const defaultError = {\r\n        institution_type_id: [],\r\n        name: [],\r\n        acronyme: [],\r\n        iso_code: [],\r\n        logo: \"/assets/media/users/Icon.png\",\r\n        default_currency_slug:[]\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [logo, setLogo] = useState(undefined);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [defaultCurrency, setDefaultCurrency] = useState(null);\r\n    const [defaultCurrencyData, setDefaultCurrencyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            if (verifyPermission(props.userPermissions, 'store-any-institution')) {\r\n                axios.get(appConfig.apiDomaine + '/any/institutions/create')\r\n                    .then(response => {\r\n                        setDefaultCurrencyData(response.data.currencies.length ?\r\n                            response.data.currencies.map((currencie) => ({\r\n                                value: currencie.slug,\r\n                                label: currencie.name.fr\r\n                            })) : null\r\n                        )\r\n                        // setDefaultCurrencyData(options);\r\n                    })\r\n                ;\r\n            }\r\n\r\n            if (id) {\r\n                axios.get(appConfig.apiDomaine + `/any/institutions/${id}`)\r\n                    .then(response => {\r\n                        const newInstitution = {\r\n                            default_currency_slug: (response.data.default_currency_slug !== null) ? (response.data.default_currency_slug) : '',\r\n                            name: response.data.name,\r\n                            acronyme: response.data.acronyme,\r\n                            iso_code: response.data.iso_code,\r\n                            logo: response.data.logo,\r\n                        };\r\n                        setData(newInstitution);\r\n                        if (response.data.default_currency_slug !== null) {\r\n                            setDefaultCurrency({\r\n                                value: response.data.default_currency.slug,\r\n                                label: response.data.default_currency.name.fr\r\n                            });\r\n                        }\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeCurrencies = (selected) => {\r\n        const newData = {...data};\r\n        newData.default_currency_slug = selected.value;\r\n        setDefaultCurrency(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeAcronyme = (e) => {\r\n        const newData = {...data};\r\n        newData.acronyme = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeIsoCode = (e) => {\r\n        const newData = {...data};\r\n        newData.iso_code = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeFile = (e) => {\r\n        const newData = {...data};\r\n        newData.logo = e.target.files[0];\r\n        setData(newData);\r\n        setLogo(newData);\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            var image = document.getElementById('Image1');\r\n            image.src = e.target.result;\r\n        };\r\n        reader.readAsDataURL(newData.logo);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        if (logo) {\r\n            formData.append('logo', data.logo);\r\n        }\r\n        formData.set('name', data.name);\r\n        formData.set('default_currency_slug', data.default_currency_slug);\r\n        formData.set('acronyme', data.acronyme);\r\n        formData.set('iso_code', data.iso_code);\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                formData.append(\"_method\", \"put\");\r\n                axios.post(appConfig.apiDomaine + `/any/institutions/${id}`, formData)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(appConfig.apiDomaine + `/any/institutions`, formData)\r\n                    .then(response => {\r\n                        setError(defaultError);\r\n                        setStartRequest(false);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setError({...defaultError, ...error.response.data.error});\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/institution\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Institution\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ?\r\n                                                    \"Modification d'une institution\" : \"Ajout d'une institution\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n                                                                <div className=\"form-group row\">\r\n                                                                    <label\r\n                                                                        className=\"col-xl-3 col-lg-3 col-form-label\">Logo</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <div className=\"kt-avatar kt-avatar--outline\"\r\n                                                                             id=\"kt_user_add_avatar\">\r\n                                                                            <div className=\"kt-avatar__holder\"\r\n                                                                                 style={{textAlign: 'center'}}>\r\n                                                                                {\r\n                                                                                    data.logo?(\r\n                                                                                        <img\r\n                                                                                            id=\"Image1\"\r\n                                                                                            src={data.logo}\r\n                                                                                            alt=\"logo\"\r\n                                                                                            style={{\r\n                                                                                                maxWidth: \"115px\",\r\n                                                                                                maxHeight: \"115px\",\r\n                                                                                                textAlign: 'center'\r\n                                                                                            }}\r\n                                                                                        />\r\n                                                                                )\r\n                                                                                :(\r\n                                                                                            <img\r\n                                                                                                id=\"Image1\"\r\n                                                                                                src={\"/assets/media/users/Icon.png\"}\r\n                                                                                                alt=\"logo\"\r\n                                                                                                style={{\r\n                                                                                                    maxWidth: \"115px\",\r\n                                                                                                    maxHeight: \"115px\",\r\n                                                                                                    textAlign: 'center'\r\n                                                                                                }}\r\n                                                                                            />\r\n                                                                                        )}\r\n\r\n\r\n                                                                            </div>\r\n                                                                            <label className=\"kt-avatar__upload\"\r\n                                                                                   id=\"files\"\r\n                                                                                   data-toggle=\"kt-tooltip\"\r\n                                                                                   title=\"Change avatar\">\r\n                                                                                <i className=\"fa fa-pen\"/>\r\n                                                                                <input type=\"file\"\r\n                                                                                       id=\"file\"\r\n                                                                                       name=\"kt_user_add_user_avatar\"\r\n                                                                                       onChange={(e) => onChangeFile(e)}\r\n                                                                                />\r\n                                                                            </label>\r\n                                                                            <span className=\"kt-avatar__cancel\"\r\n                                                                                  data-toggle=\"kt-tooltip\"\r\n                                                                                  title=\"Cancel avatar\">\r\n                                                                            <i className=\"fa fa-times\"/>\r\n                                                                        </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                {defaultCurrencyData ? (\r\n                                                                    <div\r\n                                                                        className={error.default_currency_slug.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                        <label\r\n                                                                            className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                            htmlFor=\"exampleSelect1\">Devise</label>\r\n                                                                        <div className=\"col-lg-9 col-xl-6\">\r\n\r\n                                                                            <Select\r\n                                                                                value={defaultCurrency}\r\n                                                                                onChange={onChangeCurrencies}\r\n                                                                                options={defaultCurrencyData.length ? defaultCurrencyData.map(name => name) : ''}\r\n                                                                            />\r\n                                                                            {\r\n                                                                                error.default_currency_slug.length ? (\r\n                                                                                    error.default_currency_slug.map((error, index) => (\r\n                                                                                        <div key={index}\r\n                                                                                             className=\"invalid-feedback\">\r\n                                                                                            {error}\r\n                                                                                        </div>\r\n                                                                                    ))\r\n                                                                                ) : null\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                ) : ''\r\n                                                                }\r\n                                                                <div\r\n                                                                    className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"name\">Nom <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"name\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Ex:  Satis\"\r\n                                                                            value={data.name}\r\n                                                                            onChange={(e) => onChangeName(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.name.length ? (\r\n                                                                                error.name.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.acronyme.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"Acronyme\">Acronyme <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"Acronyme\"\r\n                                                                            className={error.acronyme.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Ex:  Satis Acronyme\"\r\n                                                                            type=\"text\"\r\n                                                                            value={data.acronyme}\r\n                                                                            onChange={(e) => onChangeAcronyme(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.acronyme.length ? (\r\n                                                                                error.acronyme.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.iso_code.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"value\">Code Iso <InputRequire/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <input\r\n                                                                            id=\"value\"\r\n                                                                            type=\"text\"\r\n                                                                            className={error.iso_code.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            placeholder=\"Ex: 0000-Satis\"\r\n                                                                            value={data.iso_code}\r\n                                                                            onChange={(e) => onChangeIsoCode(e)}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.iso_code.length ? (\r\n                                                                                error.iso_code.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Enregistrer</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/institution\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/institution\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-any-institution') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-any-institution') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(InstitutionForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Institutions\\ImportInstitutionForm.jsx",["1084","1085"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport InputRequire from \"../InputRequire\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst ImportInstitutionForm = (props) => {\r\n    document.title = \"Satis institution - Importation de fichier excel\";\r\n\r\n    if (!verifyPermission(props.userPermissions, 'store-any-institution'))\r\n        window.location.href = ERROR_401;\r\n\r\n    const defaultData = {\r\n        file: \"\",\r\n    };\r\n    const defaultError = {\r\n        file: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    const onChangeFile = (e) => {\r\n        const newData = {...data};\r\n        newData.file = Object.values(e.target.files)[0];\r\n        setData(newData);\r\n    };\r\n\r\n\r\n    const formatFormData = (newData) => {\r\n        const formData = new FormData();\r\n        formData.append(\"_method\", \"post\");\r\n        for (const key in newData) {\r\n            // console.log(`${key}:`, newData[key]);\r\n            if (key === \"file\") {\r\n                formData.append(\"file\", newData.file);\r\n            } else\r\n                formData.set(key, newData[key]);\r\n        }\r\n        console.log(formData.get('file'), 'FORMDATA');\r\n        return formData;\r\n\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n\r\n        if (verifyTokenExpire()) {\r\n            if (verifyTokenExpire()) {\r\n                axios.post(`${appConfig.apiDomaine}/any/import-institutions`, formatFormData(data))\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Importation\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Importation de clients\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n\r\n                                        <div\r\n                                            className={error.file.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                            <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                   htmlFor=\"file\">Fichier <InputRequire/></label>\r\n                                            <div className=\"col-md-9 mb-3\">\r\n                                                <input\r\n                                                    id=\"file\"\r\n                                                    type=\"file\"\r\n                                                    className={error.file.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez télécharger le fichier excel\"\r\n                                                    onChange={(e) => onChangeFile(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.file.length ? (\r\n                                                        error.file.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"kt-portlet__foot text-right\">\r\n                                        <div className=\"kt-form__actions\">\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                            className=\"btn btn-primary\">Enregistrer</button>\r\n                                                ) : (\r\n                                                    <button\r\n                                                        className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                        type=\"button\" disabled>\r\n                                                        Chargement...\r\n                                                    </button>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                !startRequest ? (\r\n                                                    <Link to=\"/settings/clients\"\r\n                                                          className=\"btn btn-secondary mx-2\">\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    <Link to=\"/settings/clients\"\r\n                                                          className=\"btn btn-secondary mx-2\" disabled>\r\n                                                        Quitter\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        verifyPermission(props.userPermissions, 'store-any-institution') ?\r\n            printJsx()\r\n            : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ImportInstitutionForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ParametersComponent.jsx",["1086"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst ParametersComponent = (props) => {\r\n    document.title = \"Satis Paramètre - Configuration formulaire\";\r\n\r\n    if (!verifyPermission(props.userPermissions, \"update-components-parameters\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [component, setComponent] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/components\")\r\n                .then(response => {\r\n                    console.log(response.data, 'RESPONSE');\r\n                    setLoad(false);\r\n                    setComponent(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n    },[]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newComponent = [...component];\r\n        newComponent = newComponent.filter(el => (\r\n            getLowerCaseString(el.params[\"fr\"].title ? el.params[\"fr\"].title.value : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newComponent;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(component.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(component.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(component.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(component.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(component.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                component.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                component.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (component, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                {/*<td>{component.params.fr.title===null?\"\":component.params.fr.title.value}</td>*/}\r\n                <td>{component.name===null?\"\":component.name}</td>\r\n                <td style={{textAlign:'center'}}>\r\n                    <Link\r\n                        to={`/settings/config/edit/${component.id}`}\r\n                        className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                        title=\"Modifier\">\r\n                        <i className=\"la la-edit\"/>\r\n                    </Link>\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"update-components-parameters\")?(\r\n                <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                    <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                        <div className=\"kt-container  kt-container--fluid \">\r\n                            <div className=\"kt-subheader__main\">\r\n                                <h3 className=\"kt-subheader__title\">\r\n                                    Paramètres\r\n                                </h3>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                    <div className=\"kt-subheader__breadcrumbs\">\r\n                                        <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                            className=\"flaticon2-shelter\"/></a>\r\n                                        <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                        <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                           className=\"kt-subheader__breadcrumbs-link\">\r\n                                            Configurations\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                        <InfirmationTable\r\n                            information={\"Configuration des formulaires\"}/>\r\n\r\n                        <div className=\"kt-portlet\">\r\n\r\n                            <HeaderTablePage\r\n                                title={\"Configuration\"}\r\n                            />\r\n                            {\r\n                                load ? (\r\n                                    <LoadingTable/>\r\n                                ) : (\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-6 text-left\">\r\n                                                    <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                        <label>\r\n                                                            Recherche:\r\n                                                            <input id=\"myInput\" type=\"text\"\r\n                                                                   onKeyUp={(e) => searchElement(e)}\r\n                                                                   className=\"form-control form-control-sm\"\r\n                                                                   placeholder=\"\"\r\n                                                                   aria-controls=\"kt_table_1\"/>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-12\">\r\n                                                    <table\r\n                                                        className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                        id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                        style={{width: \"952px\"}}>\r\n                                                        <thead>\r\n                                                        <tr role=\"row\">\r\n                                                            <th className=\"sorting\" tabIndex=\"0\"\r\n                                                                aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\"\r\n                                                                colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                                aria-label=\"Ship City: activate to sort column ascending\">Description\r\n                                                            </th>\r\n                                                            <th className=\"sorting\" tabIndex=\"0\"\r\n                                                                aria-controls=\"kt_table_1\"\r\n                                                                rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                                aria-label=\"Type: activate to sort column ascending\">\r\n                                                                Action\r\n                                                            </th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n                                                            component.length ? (\r\n                                                                showList ? (\r\n                                                                    showList.map((component, index) => (\r\n                                                                        printBodyTable(component, index)\r\n                                                                    ))\r\n                                                                ) : (\r\n                                                                    <EmptyTable search={true}/>\r\n                                                                )\r\n                                                            ) : (\r\n                                                                <EmptyTable/>\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                        <tfoot>\r\n                                                        <tr>\r\n\r\n                                                        </tr>\r\n                                                        </tfoot>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-12 col-md-5\">\r\n                                                    <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                         aria-live=\"polite\">Affichage de 1\r\n                                                        à {numberPerPage} sur {component.length} données\r\n                                                    </div>\r\n                                                </div>\r\n                                                {\r\n                                                    showList.length ? (\r\n                                                        <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                            <Pagination\r\n                                                                numberPerPage={numberPerPage}\r\n                                                                onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                                activeNumberPage={activeNumberPage}\r\n                                                                onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                                pages={pages}\r\n                                                                onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                                numberPage={numberPage}\r\n                                                                onClickNextPage={e => onClickNextPage(e)}\r\n                                                            />\r\n                                                        </div>\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ):null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ParametersComponent);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\TreatmentPeriodAdd.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\APP_MACRO\\Holding\\HoldingClientForm.jsx",["1087","1088","1089","1090","1091"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../../views/components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastDeleteErrorMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport '../../views/components/staff/react-tagsinput.css';\r\nimport Select from \"react-select\";\r\nimport {formatSelectOption} from \"../../helpers/function\";\r\nimport {connect} from \"react-redux\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport InputRequire from \"../../views/components/InputRequire\";\r\nimport WithoutCode from \"../../views/components/WithoutCode\";\r\nimport ConfirmClientSaveForm from \"../../views/components/Clients/ConfirmClientSaveForm\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        store: `${appConfig.apiDomaine}/my/clients`,\r\n        storeAccount: id=> `${appConfig.apiDomaine}/my/accounts/${id}/clients`,\r\n        update: id => `${appConfig.apiDomaine}/my/clients/${id}`,\r\n        create: `${appConfig.apiDomaine}/my/clients/create`,\r\n        edit: id => `${appConfig.apiDomaine}/my/clients/${id}`\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            store: `${appConfig.apiDomaine}/any/clients`,\r\n            storeAccount: id=> `${appConfig.apiDomaine}/any/accounts/${id}/clients`,\r\n            update: id => `${appConfig.apiDomaine}/any/clients/${id}`,\r\n            create: `${appConfig.apiDomaine}/any/clients/create`,\r\n            edit: id => `${appConfig.apiDomaine}/any/clients/${id}`\r\n        },\r\n        filial: {\r\n            store: `${appConfig.apiDomaine}/my/clients`,\r\n            storeAccount: id=> `${appConfig.apiDomaine}/my/accounts/${id}/clients`,\r\n            update: id => `${appConfig.apiDomaine}/my/clients/${id}`,\r\n            create: `${appConfig.apiDomaine}/my/clients/create`,\r\n            edit: id => `${appConfig.apiDomaine}/my/clients/${id}`\r\n        }\r\n    },\r\n};\r\n\r\nconst HoldingClientForm = (props) => {\r\n\r\n    const {id} = useParams();\r\n    if (!id) {\r\n        if (!(verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'store-client-from-my-institution')))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!(verifyPermission(props.userPermissions, 'update-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-my-institution')))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'store-client-from-my-institution') || verifyPermission(props.userPermissions, 'update-client-from-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const defaultData = {\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        sexe: \"\",\r\n        ville: \"\",\r\n        telephone: [],\r\n        email: [],\r\n        client_id: \"\",\r\n        institution_id: [],\r\n        account_type_id: \"\",\r\n        number: [],\r\n        category_client_id: \"\",\r\n    };\r\n\r\n    const defaultError = {\r\n        firstname: [],\r\n        lastname: [],\r\n        sexe: [],\r\n        ville: [],\r\n        telephone: [],\r\n        email: [],\r\n        client_id: [],\r\n        institution_id: [],\r\n        account_type_id: [],\r\n        number: [],\r\n        category_client_id: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [accountType, setAccountTypes] = useState(undefined);\r\n    const [categoryClient, setCategoryClient] = useState(undefined);\r\n    const [type, setType] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n    const [nameClient, setNameClient] = useState(undefined);\r\n    const [client, setClient] = useState([]);\r\n    const [institutionData, setInstitutionData] = useState(undefined);\r\n    const [institution, setInstitution] = useState([]);\r\n    const [disableInput, setDisableInput] = useState(true);\r\n    const [foundIdentity, setFoundIdentity] = useState(undefined);\r\n\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.create)\r\n                .then(response => {\r\n                    // console.log(response.data,\"RESPONSE\")\r\n                    if (verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution')){\r\n                        const options =\r\n                            response.data.institutions.length ? response.data.institutions.map((institution) => ({\r\n                                value: institution.id,\r\n                                label: institution.name\r\n                            })) : \"\";\r\n                        setInstitutionData(options);\r\n                    }\r\n                    if (verifyPermission(props.userPermissions, 'store-client-from-my-institution') || verifyPermission(props.userPermissions, 'update-client-from-my-institution')) {\r\n                        const clientOptions =\r\n                            response.data.client_institutions ? response.data.client_institutions.map((client) => ({\r\n                                value: client.client_id,\r\n                                label: client.client.identite.firstname + ' ' + client.client.identite.lastname\r\n                            })) : \"\";\r\n                        setNameClient(clientOptions);\r\n                    }\r\n                    setAccountTypes(response.data.accountTypes);\r\n                    setCategoryClient(response.data.clientCategories);\r\n                })\r\n            ;\r\n\r\n            if (id) {\r\n                axios.get(endPoint.edit(id))\r\n                    .then(response => {\r\n                        const newClient = {\r\n                            firstname: response.data.client_institution.client.identite.firstname,\r\n                            lastname: response.data.client_institution.client.identite.lastname,\r\n                            sexe: response.data.client_institution.client.identite.sexe,\r\n                            telephone: response.data.client_institution.client.identite.telephone,\r\n                            email: response.data.client_institution.client.identite.email,\r\n                            institution_id: response.data.client_institution.institution_id,\r\n                            ville: response.data.client_institution.client.identite.ville === null ? \"\" : response.data.client_institution.client.identite.ville,\r\n\r\n                            number: response.data.number,\r\n                            account_type_id: response.data.account_type_id,\r\n                            category_client_id: response.data.client_institution.category_client_id,\r\n                        };\r\n                        setData(newClient);\r\n                        setType({\r\n                            value: response.data.account_type?response.data.account_type.id:\"\",\r\n                            label: response.data.account_type?response.data.account_type.name.fr:\"\"\r\n                        });\r\n                        setCategory({\r\n                            value: response.data.client_institution.category_client ? response.data.client_institution.category_client.id : \"\",\r\n                            label: response.data.client_institution.category_client ? response.data.client_institution.category_client.name.fr : \"\"\r\n                        });\r\n\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const onChangeAccountType = (selected) => {\r\n        const newData = {...data};\r\n        newData.account_type_id = selected.value;\r\n        setType(selected);\r\n        setData(newData);\r\n    };\r\n    const onChangeAccount = (e) => {\r\n        const newData = {...data};\r\n        newData.number = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeCategoryClient = (selected) => {\r\n        const newData = {...data};\r\n        newData.category_client_id = selected.value;\r\n        setCategory(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeFirstName = (e) => {\r\n        const newData = {...data};\r\n        newData.firstname = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeLastName = (e) => {\r\n        const newData = {...data};\r\n        newData.lastname = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeTelephone = (tel) => {\r\n        const newData = {...data};\r\n        newData.telephone = tel;\r\n        setData(newData);\r\n    };\r\n    const onChangeSexe = (e) => {\r\n        const newData = {...data};\r\n        newData.sexe = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeEmail = (mail) => {\r\n        const newData = {...data};\r\n        newData.email = mail;\r\n        setData(newData);\r\n    };\r\n    const onChangeVille = (e) => {\r\n        const newData = {...data};\r\n        newData.ville = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeInstitution = (selected) => {\r\n        const newData = {...data};\r\n        if (selected) {\r\n            newData.institution_id = selected.value;\r\n            setInstitution(selected);\r\n            if (verifyTokenExpire()) {\r\n                axios.get(appConfig.apiDomaine + `/any/clients/${newData.institution_id}/institutions`)\r\n                    .then(response => {\r\n                        const options =\r\n                            response.data ? response.data.map((client) => ({\r\n                                value: client.client_id,\r\n                                label: client.client.identite.firstname + ' ' + client.client.identite.lastname\r\n                            })) : \"\";\r\n                        setNameClient(options);\r\n                    })\r\n                ;\r\n            }\r\n            setCategory([]);\r\n            setClient([]);\r\n            newData.firstname = \"\";\r\n            newData.lastname = \"\";\r\n            newData.sexe = \"\";\r\n            newData.telephone = [];\r\n            newData.email = [];\r\n            newData.ville = \"\";\r\n            newData.client_id = [];\r\n            newData.account_type_id = \"\";\r\n            newData.number = [];\r\n            newData.category_client_id = \"\";\r\n        }\r\n        setData(newData);\r\n        setDisableInput(false)\r\n    };\r\n\r\n    const onChangeClient = (selected) => {\r\n        const newData = {...data};\r\n        newData.client_id = selected.value;\r\n        setClient(selected);\r\n        if (newData.client_id) {\r\n            if (verifyTokenExpire()) {\r\n                axios.get(endPoint.update(`${newData.client_id}`))\r\n                    .then(response => {\r\n                        const newIdentity = {\r\n                            firstname: response.data.client.identite.firstname,\r\n                            lastname: response.data.client.identite.lastname,\r\n                            sexe: response.data.client.identite.sexe,\r\n                            telephone: response.data.client.identite.telephone,\r\n                            email: response.data.client.identite.email,\r\n                            ville: response.data.client.identite.ville === null ? \"\" : response.data.client.identite.ville,\r\n                            client_id: response.data.client_id,\r\n                            institution_id: response.data.institution_id,\r\n                            category_client_id: response.data.category_client_id\r\n                        };\r\n                        setData(newIdentity);\r\n                        setCategory({\r\n                            value: response.data.category_client ? response.data.category_client.id : \"\",\r\n                            label: response.data.category_client ? response.data.category_client.name.fr : \"\"\r\n                        });\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        let newData = {...data};\r\n        if (verifyTokenExpire()) {\r\n            if (!(verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution')))\r\n                delete newData.institution_id;\r\n\r\n            if (id) {\r\n                axios.put(endPoint.update(`${id}`), newData)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch((errorRequest) => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        if (error.response.data.error)\r\n                            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error.message));\r\n                        else\r\n                            ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n\r\n                if (data.client_id.length !== 0) {\r\n                    axios.post(endPoint.storeAccount(`${data.client_id}`), data)\r\n\r\n                        .then(response => {\r\n                            setStartRequest(false);\r\n                            setError(defaultError);\r\n                            setData(defaultData);\r\n                            setInstitution(null);\r\n                            setType(null);\r\n                            setCategory(null);\r\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                        })\r\n                        .catch((errorRequest) => {\r\n                            setStartRequest(false);\r\n                            setError({...defaultError, ...errorRequest.response.data.error});\r\n                            ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        })\r\n                    ;\r\n                } else {\r\n                    axios.post(endPoint.store, newData)\r\n                        .then(response => {\r\n                            setStartRequest(false);\r\n                            setError(defaultError);\r\n                            setData(defaultData);\r\n                            setType(null);\r\n                            setCategory(null);\r\n                            setInstitution(null);\r\n                            ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                        })\r\n                        .catch(async (errorRequest) => {\r\n                            if (errorRequest.response.data.error.identite) {\r\n                                await setFoundIdentity(errorRequest.response.data.error);\r\n                                await document.getElementById(\"confirmClientSaveForm\").click();\r\n                                await setInstitution(null);\r\n                                await setType(null);\r\n                                await setCategory(null);\r\n                                setStartRequest(false);\r\n                                setError(defaultError);\r\n                                setData(defaultData);\r\n                            } else if (errorRequest.response.data.client) {\r\n                                setStartRequest(false);\r\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\r\n                                    errorRequest.response.data.client.identite.lastname + \" \" + errorRequest.response.data.client.identite.firstname + \": \" + errorRequest.response.data.message)\r\n                                );\r\n                            } else {\r\n                                setStartRequest(false);\r\n                                setError({...defaultError, ...errorRequest.response.data.error});\r\n                                ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                            }\r\n                        });\r\n                }\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Paramètres\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <Link to=\"/settings/clients\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                Client\r\n                            </Link>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                {\r\n                                    id ? \"Modification\" : \"Ajout\"\r\n                                }\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"kt-portlet\">\r\n                            <div className=\"kt-portlet__head\">\r\n                                <div className=\"kt-portlet__head-label\">\r\n                                    <h3 className=\"kt-portlet__head-title\">\r\n                                        {\r\n                                            id ?\r\n                                                \"Modification de Clients\" : \" Ajout de Clients\"\r\n                                        }\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n                            <form method=\"POST\" className=\"kt-form\">\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div className=\"kt-section kt-section--first\">\r\n                                        <h5 className=\"kt-section__title kt-section__title-lg\">Identité:</h5>\r\n                                        {\r\n                                            !id ?\r\n                                                <div className=\"form-group row\">\r\n                                                    {\r\n                                                        verifyPermission(props.userPermissions, \"store-client-from-any-institution\") ?\r\n                                                            <div\r\n                                                                className={error.institution_id.length ? \"col validated\" : \"col\"}>\r\n                                                                <label htmlFor=\"exampleSelect1\"> Institution <span\r\n                                                                    style={{color: \"red\"}}>*</span></label>\r\n                                                                {institutionData ? (\r\n                                                                    <Select\r\n                                                                        value={institution}\r\n                                                                        placeholder={\"Veillez selectionner l'institution\"}\r\n                                                                        onChange={onChangeInstitution}\r\n                                                                        options={institutionData ? institutionData.map(name => name) : ''}\r\n                                                                    />\r\n                                                                ) : (\r\n                                                                    <select name=\"institution\"\r\n                                                                            className={error.institution_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                            id=\"institution\">\r\n                                                                        <option value=\"\"/>\r\n                                                                    </select>\r\n                                                                )\r\n                                                                }\r\n\r\n                                                                {\r\n                                                                    error.institution_id.length ? (\r\n                                                                        error.institution_id.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                            : null\r\n                                                    }\r\n                                                    <div\r\n                                                        className={error.client_id.length ? \"col validated\" : \"col\"}>\r\n                                                        <label htmlFor=\"exampleSelect1\"> Client</label>\r\n                                                        {/*{console.log(nameClient,\"NAME\")}*/}\r\n                                                        {nameClient ? (\r\n                                                            <Select\r\n\r\n                                                                placeholder={\"Veillez selectionner le client\"}\r\n                                                                value={client}\r\n                                                                onChange={onChangeClient}\r\n                                                                options={nameClient ? nameClient.map(name => name) : ''}\r\n                                                            />\r\n                                                        ) : (<select name=\"client\"\r\n                                                                     className={error.client_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                     id=\"client\">\r\n                                                            <option value=\"\"/>\r\n                                                        </select>)\r\n                                                        }\r\n\r\n                                                        {\r\n                                                            error.client_id.length ? (\r\n                                                                error.client_id.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                : null\r\n                                        }\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.lastname.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"lastname\">Nom<span style={{color: \"red\"}}>*</span>\r\n                                                </label>\r\n                                                <input\r\n                                                    id=\"lastname\"\r\n                                                    type=\"text\"\r\n                                                    className={error.lastname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le nom de famille\"\r\n                                                    value={data.lastname}\r\n                                                    onChange={(e) => onChangeLastName(e)}\r\n                                                    disabled={props.getDisable ? props.getDisable : false}\r\n                                                />\r\n                                                {\r\n                                                    error.lastname.length ? (\r\n                                                        error.lastname.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className={error.firstname.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"firstname\">Prénom(s) <span\r\n                                                    style={{color: \"red\"}}>*</span></label>\r\n                                                <input\r\n                                                    id=\"firstname\"\r\n                                                    type=\"text\"\r\n                                                    className={error.firstname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le prénom\"\r\n                                                    value={data.firstname}\r\n                                                    onChange={(e) => onChangeFirstName(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.firstname.length ? (\r\n                                                        error.firstname.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.sexe.length ? \" col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"sexe\">Sexe <span\r\n                                                    style={{color: \"red\"}}>*</span></label>\r\n                                                <select\r\n                                                    id=\"sexe\"\r\n                                                    className={error.sexe.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    value={data.sexe}\r\n                                                    onChange={(e) => onChangeSexe(e)}\r\n                                                >\r\n                                                    <option value=\"\" disabled={true}>Veillez choisir le Sexe\r\n                                                    </option>\r\n                                                    <option value=\"F\">Féminin</option>\r\n                                                    <option value=\"M\">Masculin</option>\r\n                                                    <option value=\"M\">Autres</option>\r\n                                                </select>\r\n                                                {\r\n                                                    error.sexe.length ? (\r\n                                                        error.sexe.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                            <div className={error.ville.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"ville\">Ville <InputRequire/></label>\r\n                                                <input\r\n                                                    id=\"ville\"\r\n                                                    type=\"text\"\r\n                                                    className={error.ville.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer votre ville\"\r\n                                                    value={data.ville}\r\n                                                    onChange={(e) => onChangeVille(e)}\r\n                                                    disabled={props.getDisable ? props.getDisable : false}\r\n                                                />\r\n                                                {\r\n                                                    error.ville.length ? (\r\n                                                        error.ville.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.telephone.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"telephone\">Téléphone(s) <WithoutCode/>\r\n                                                    <InputRequire/> </label>\r\n                                                <TagsInput\r\n                                                    value={data.telephone}\r\n                                                    onChange={onChangeTelephone}\r\n                                                    disabled={props.getDisable ? props.getDisable : false}\r\n                                                    inputProps={{\r\n                                                        className: \"react-tagsinput-input\",\r\n                                                        placeholder: \"Numéro(s)\"\r\n                                                    }}\r\n                                                />\r\n                                                {\r\n                                                    error.telephone.length ? (\r\n                                                        error.telephone.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className={error.email.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"email\"> Email(s) <InputRequire/></label>\r\n                                                <TagsInput\r\n                                                    value={data.email}\r\n                                                    onChange={onChangeEmail}\r\n                                                    // disabled={props.getDisable ? props.getDisable : false}\r\n                                                    inputProps={{\r\n                                                        className: \"react-tagsinput-input\",\r\n                                                        placeholder: \"Email(s)\"\r\n                                                    }}\r\n                                                />\r\n                                                {\r\n                                                    error.email.length ? (\r\n                                                        error.email.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div className=\"kt-section kt-section--first\">\r\n                                        <h5 className=\"kt-section__title kt-section__title-lg\">\r\n                                            Informations Techniques\r\n                                        </h5>\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.account_type_id.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"exampleSelect1\">Type de\r\n                                                    Compte <InputRequire/></label>\r\n                                                {accountType ? (\r\n                                                    <Select\r\n                                                        placeholder={\"Veillez selectionner le type de compte\"}\r\n                                                        value={type}\r\n                                                        onChange={onChangeAccountType}\r\n                                                        options={formatSelectOption(accountType, 'name', 'fr')}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <select name=\"type\"\r\n                                                            className={error.account_type_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            id=\"type\">\r\n                                                        <option value=\"\"/>\r\n                                                    </select>\r\n                                                )\r\n                                                }\r\n\r\n                                                {\r\n                                                    error.account_type_id.length ? (\r\n                                                        error.account_type_id.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                            <div\r\n                                                className={error.category_client_id.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"exampleSelect1\">Catégorie\r\n                                                    Client <InputRequire/></label>\r\n\r\n                                                {categoryClient ? (\r\n                                                    <Select\r\n                                                        placeholder={\"Veillez selectionner la catégorie client\"}\r\n                                                        value={category}\r\n                                                        onChange={onChangeCategoryClient}\r\n                                                        options={formatSelectOption(categoryClient, 'name', 'fr')}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <select name=\"category\"\r\n                                                            className={error.category_client_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                            id=\"category\">\r\n                                                        <option value=\"\"/>\r\n                                                    </select>\r\n                                                )\r\n                                                }\r\n\r\n                                                {\r\n                                                    error.category_client_id.length ? (\r\n                                                        error.category_client_id.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.number.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"number\">Numero de Compte <InputRequire/></label>\r\n                                                <input\r\n                                                    id=\"number\"\r\n                                                    type=\"text\"\r\n                                                    className={error.number.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le numero de compte\"\r\n                                                    value={data.number}\r\n                                                    onChange={onChangeAccount}\r\n                                                />\r\n                                                {\r\n                                                    error.number.length ? (\r\n                                                        error.number.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"kt-portlet__foot\">\r\n                                    <div className=\"kt-form__actions text-right\">\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                        className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                            ) : (\r\n                                                <button\r\n                                                    className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                    type=\"button\" disabled>\r\n                                                    Chargement...\r\n                                                </button>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\">\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            ) : (\r\n                                                <Link to=\"/settings/clients\" className=\"btn btn-secondary mx-2\"\r\n                                                      disabled>\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            )\r\n                                        }\r\n                                        <button style={{display: \"none\"}} id=\"confirmClientSaveForm\" type=\"button\" className=\"btn btn-bold btn-label-brand btn-sm\"\r\n                                                data-toggle=\"modal\" data-target=\"#kt_modal_4\">Launch Modal\r\n                                        </button>\r\n                                        {\r\n                                            foundIdentity? (\r\n                                                <ConfirmClientSaveForm\r\n                                                    plan={props.plan}\r\n                                                    userPermissions={props.userPermissions}\r\n                                                    message={foundIdentity.message}\r\n                                                    institution={institution}\r\n                                                    category={category}\r\n                                                    categories={categoryClient}\r\n                                                    type={type}\r\n                                                    identite={foundIdentity}\r\n                                                    client={client}\r\n                                                    clients={nameClient}\r\n                                                    types={accountType}\r\n                                                    institutions={institutionData}\r\n                                                    client_id={data.client_id}\r\n                                                    institution_id={data.institution_id}\r\n                                                    account_type_id={data.account_type_id}\r\n                                                    category_id={data.category_client_id}\r\n                                                    number={data.number}\r\n                                                    resetFoundIdentity={() => setFoundIdentity({})}\r\n                                                />\r\n                                            ) :  null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        identite: state.identity,\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(HoldingClientForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\APP_MACRO\\Filiale\\FilialeInstitutionForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\QualificationPeriodAdd.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\TreatmentPeriod.jsx",["1092"],"import React, {useEffect, useState} from \"react\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst TreatmentPeriod = props => {\r\n    document.title = \"Satis client - Paramètre délai de qualification\";\r\n    if (!verifyPermission(props.userPermissions, \"list-delai-treatment-parameters\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [TreatmentPeriods, setTreatmentPeriods] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            axios.get(`${appConfig.apiDomaine}/delai-treatment-parameters`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setTreatmentPeriods(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire()) {\r\n            fetchData();\r\n        }\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newTreatmentPeriods = [...TreatmentPeriods];\r\n        newTreatmentPeriods = newTreatmentPeriods.filter(el => (\r\n            getLowerCaseString(`${el.borne_sup === \"+\" ? `Plus de ${el.borne_inf}` : `${el.borne_inf}-${el.borne_sup}`} jours`).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newTreatmentPeriods;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(TreatmentPeriods.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(TreatmentPeriods.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(TreatmentPeriods.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(TreatmentPeriods.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(TreatmentPeriods.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                TreatmentPeriods.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                TreatmentPeriods.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deletePeriod = (TreatmentPeriodId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(`${appConfig.apiDomaine}/delai-treatment-parameters/${TreatmentPeriodId}`)\r\n                            .then(response => {\r\n                                const newUnitTypes = [...TreatmentPeriods];\r\n                                newUnitTypes.splice(index, 1);\r\n                                setTreatmentPeriods(newUnitTypes);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (TreatmentPeriod, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd text-center\">\r\n                <td>\r\n                    {\r\n                        TreatmentPeriod.borne_sup === \"+\" ? (\r\n                            `Plus de ${TreatmentPeriod.borne_inf}`\r\n                        ) : (\r\n                            `${TreatmentPeriod.borne_inf}-${TreatmentPeriod.borne_sup}`\r\n                        )\r\n                    } Jours\r\n                </td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-delai-treatment-parameters') ? (\r\n                            <button\r\n                                onClick={(e) => deletePeriod(TreatmentPeriod.uuid, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-delai-treatment-parameters') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Délai traitement\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={!TreatmentPeriods.length ? \"\" : TreatmentPeriods[TreatmentPeriods.length - 1].borne_sup === \"+\" ? \"\" : \"store-delai-treatment-parameters\"}\r\n                            title={\"Délai traitement\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/treatment-period/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input\r\n                                                            id=\"myInput\"\r\n                                                            type=\"text\"\r\n                                                            onKeyUp={(e) => searchElement(e)}\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            placeholder=\"\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\" className=\"text-center\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Période\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"15%\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        TreatmentPeriods.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((TreatmentPeriod, index) => (\r\n                                                                    printBodyTable(TreatmentPeriod, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr className=\"text-center\">\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Période</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {TreatmentPeriods.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TreatmentPeriod);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\UserAdd.jsx",["1093"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastSuccessMessageWithParameterConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {formatSelectOption} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst UserAdd = (props) => {\r\n    document.title = \"Satis client - Paramètre Envoie de mail\";\r\n    if (!(verifyPermission(props.userPermissions, 'store-user-any-institution') || verifyPermission(props.userPermissions, \"store-user-my-institution\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    const optionOne = 1;\r\n    const optionTwo = 0;\r\n    const defaultData = {\r\n        identite_id: \"\",\r\n        roles: [],\r\n        activate: optionTwo,\r\n        institution_id: \"\",\r\n        password: \"\",\r\n        password_confirmation: \"\",\r\n    };\r\n    const defaultError = {\r\n        identite_id: [],\r\n        roles: [],\r\n        activate: [],\r\n        institution_id: [],\r\n        password: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [institutions, setInstitutions] = useState([]);\r\n    const [institution, setInstitution] = useState(null);\r\n    const [identities, setIdentities] = useState([]);\r\n    const [identity, setIdentity] = useState(null);\r\n    const [roles, setRoles] = useState([]);\r\n    const [role, setRole] = useState([]);\r\n    const activePilot = institution ? institution.value === props.activeUserInstitution : \"\" === props.activeUserInstitution;\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            let endpoint = \"\";\r\n            if (props.plan === \"MACRO\") {\r\n                if (verifyPermission(props.userPermissions, \"store-user-any-institution\"))\r\n                    endpoint = `${appConfig.apiDomaine}/any/users/create`;\r\n                if (verifyPermission(props.userPermissions, \"store-user-my-institution\"))\r\n                    endpoint = `${appConfig.apiDomaine}/my/users/create`;\r\n            }\r\n            else if(props.plan === \"HUB\")\r\n                endpoint = `${appConfig.apiDomaine}/any/users/create`;\r\n            else if(props.plan === \"PRO\")\r\n                endpoint = `${appConfig.apiDomaine}/my/users/create`;\r\n\r\n            await axios.get(endpoint)\r\n                .then(({data}) => {\r\n                    if (verifyPermission(props.userPermissions, \"store-user-any-institution\"))\r\n                        setInstitutions(formatSelectOption(data, \"name\", false));\r\n                    else {\r\n                        setRoles(formatSelectOption(data.roles, \"name\", false, \"name\"));\r\n                        setIdentities(formatSelectOption(formatIdentities(data.identites), \"fullName\", false));\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [props.plan, appConfig.apiDomaine]);\r\n\r\n    const handleIdentityChange = (selected) => {\r\n        const newData = {...data};\r\n        newData.identite_id = selected ? selected.value : \"\";\r\n        setIdentity(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const formatSelected = (selected) => {\r\n        const newSelected = [];\r\n        selected.map(s => newSelected.push(s.value));\r\n        return newSelected;\r\n    };\r\n\r\n    const handleRoleChange = (selected) => {\r\n        const newData = {...data};\r\n        newData.roles = selected ? formatSelected(selected) : [];\r\n        setRole(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const handleOptionChange = (e) => {\r\n        const newData = {...data};\r\n        newData.activate = parseInt(e.target.value);\r\n        setData(newData);\r\n    };\r\n\r\n    const handlePasswordChange = (e) => {\r\n        const newData = {...data};\r\n        newData.password = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handlePasswordConfirmationChange = (e) => {\r\n        const newData = {...data};\r\n        newData.password_confirmation = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const formatStaff = function (options, labelKey, valueKey = \"id\") {\r\n        const newOptions = [];\r\n        for (let i = 0; i < options.length; i++) {\r\n            newOptions.push({value: (options[i])[valueKey], label: (options[i])[labelKey], staff_id: options[i].staff.id});\r\n        }\r\n        return newOptions;\r\n    };\r\n\r\n    const formatIdentities = (identityList) => {\r\n        for (let i = 0; i < identityList.length; i++)\r\n            identityList[i].fullName = `${identityList[i].lastname} ${identityList[i].firstname}`;\r\n        return identityList\r\n    };\r\n\r\n    const loadStaff = async (institutionId) => {\r\n        if (institutionId) {\r\n            if (verifyTokenExpire()) {\r\n                await axios.get(`${appConfig.apiDomaine}/any/users/${institutionId}/create`)\r\n                    .then(({data}) => {\r\n                        setRoles(formatSelectOption(data.roles, \"name\", false, \"name\"));\r\n                        setIdentities(formatStaff(formatIdentities(data.identites), \"fullName\"));\r\n                    })\r\n                    .catch(() => console.log(\"Something is wrong\"))\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInstitutionChange = (selected) => {\r\n        const newData = {...defaultData, roles: []};\r\n        newData.institution_id = selected ? selected.value : \"\";\r\n        setInstitution(selected);\r\n        setRole(null);\r\n        setIdentity(null);\r\n        setData(newData);\r\n        loadStaff(selected ? selected.value : null);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setStartRequest(true);\r\n        let endpoint = \"\";\r\n        if (props.plan === \"MACRO\") {\r\n            if (verifyPermission(props.userPermissions, \"store-user-any-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/any/users`;\r\n            if (verifyPermission(props.userPermissions, \"store-user-my-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/my/users`;\r\n        }\r\n        else if(props.plan === \"HUB\")\r\n            endpoint = `${appConfig.apiDomaine}/any/users`;\r\n        else if(props.plan === \"PRO\")\r\n            endpoint = `${appConfig.apiDomaine}/my/users`;\r\n\r\n        if (verifyTokenExpire()) {\r\n            if ((data.roles.includes(\"pilot-filial\") || data.roles.includes('pilot-holding')) && activePilot) {\r\n                const addUser = await axios.post(endpoint, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        setRole(null);\r\n                        setInstitution(null);\r\n                        return true;\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        return false;\r\n                    })\r\n                ;\r\n\r\n                if (addUser) {\r\n                    if (data.activate === 1) {\r\n                        setStartRequest(true);\r\n                        const active = await axios.put(`${appConfig.apiDomaine}/active-pilot/institutions/${data.institution_id}`, {staff_id: identity.staff_id})\r\n                            .then(({data}) => {\r\n                                setStartRequest(false);\r\n                                setIdentity(null);\r\n                                return true;\r\n                            })\r\n                            .catch(({response}) => {\r\n                                setStartRequest(false);\r\n                                setIdentity(null);\r\n                                return false;\r\n                            })\r\n                        ;\r\n\r\n                        if (addUser && active) {\r\n                            ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Utilisateur enregistré et désigné comme pilote\"));\r\n                        }\r\n\r\n                        if (addUser && !active) {\r\n                            ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Utilisateur enregistré mais non défini comme pilote actif\"));\r\n                        }\r\n                    } else {\r\n                        setIdentity(null);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig)\r\n                    }\r\n                }\r\n            } else {\r\n                const addUser = await axios.post(endpoint, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        setRole(null);\r\n                        setInstitution(null);\r\n                        return true;\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                        return false;\r\n                    })\r\n                ;\r\n\r\n                if (addUser) {\r\n                    setIdentity(null);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig)\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'store-user-any-institution') || verifyPermission(props.userPermissions, \"store-user-my-institution\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètre\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/users\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Utilisateur\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Ajout\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Utilisateur\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, \"store-user-any-institution\") ? (\r\n                                                    <div className={error.institution_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"institution\">Institution <InputRequire/></label>\r\n                                                        <div className=\"col-lg-9 col-xl-6\">\r\n                                                            <Select\r\n                                                                isClearable\r\n                                                                value={institution}\r\n                                                                placeholder={\"SATIS\"}\r\n                                                                onChange={handleInstitutionChange}\r\n                                                                options={institutions}\r\n                                                            />\r\n                                                            {\r\n                                                                error.institution_id.length ? (\r\n                                                                    error.institution_id.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            <div className={error.identite_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"staff\">Agent<InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        value={identity}\r\n                                                        placeholder={\"HOUNSSOU Romaric\"}\r\n                                                        onChange={handleIdentityChange}\r\n                                                        options={identities}\r\n                                                    />\r\n                                                    {\r\n                                                        error.identite_id.length ? (\r\n                                                            error.identite_id.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.roles.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={\"role\"}>Role <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        isMulti\r\n                                                        value={role}\r\n                                                        placeholder={\"admin-satis\"}\r\n                                                        onChange={handleRoleChange}\r\n                                                        options={roles}\r\n                                                    />\r\n                                                    {\r\n                                                        error.roles.length ? (\r\n                                                            error.roles.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                (data.roles.includes(\"pilot-filial\") || data.roles.includes('pilot-holding')) && activePilot ? (\r\n                                                    <div className={error.activate.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                        <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={\"role\"}>Pilote actif <InputRequire/></label>\r\n                                                        <div className=\"col-lg-9 col-xl-6\">\r\n                                                            <div className=\"kt-radio-inline\">\r\n                                                                <label className=\"kt-radio\">\r\n                                                                    <input type=\"radio\" className={error.activate.length ? \"form-control is-invalid\" : \"form-control\"}  value={optionOne} onChange={handleOptionChange} checked={optionOne === data.activate}/> OUI<span/>\r\n                                                                </label>\r\n                                                                <label className=\"kt-radio\">\r\n                                                                    <input type=\"radio\" className={error.activate.length ? \"form-control is-invalid\" : \"form-control\"} value={optionTwo} onChange={handleOptionChange} checked={optionTwo === data.activate}/> NON<span/>\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            {\r\n                                                                error.activate.length ? (\r\n                                                                    error.activate.map((error, index) => (\r\n                                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                                            {error}\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n\r\n                                            <div className={error.password.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password\">Mot de passe <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"password\"\r\n                                                        type=\"password\"\r\n                                                        className={error.password.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"************\"\r\n                                                        value={data.password}\r\n                                                        onChange={(e) => handlePasswordChange(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.password.length ? (\r\n                                                            error.password.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={\"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"password_confirmation\">Confirmation <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"password_confirmation\"\r\n                                                        type=\"password\"\r\n                                                        className={\"form-control\"}\r\n                                                        placeholder=\"************\"\r\n                                                        value={data.password_confirmation}\r\n                                                        onChange={(e) => handlePasswordConfirmationChange(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Enregistrer</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n\r\n                                                <Link to={\"/settings/users\"} className=\"btn btn-secondary mx-2\">Quitter</Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        activeUserInstitution: state.user.user.institution.id,\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserAdd);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\QualificationPeriod.jsx",["1094"],"import React, {useEffect, useState} from \"react\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst QualificationPeriod = props => {\r\n    document.title = \"Satis client - Paramètre délai de qualification\";\r\n    if (!verifyPermission(props.userPermissions, \"list-delai-qualification-parameters\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [qualificationPeriods, setQualificationPeriods] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            axios.get(`${appConfig.apiDomaine}/delai-qualification-parameters`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setQualificationPeriods(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire()) {\r\n            fetchData();\r\n        }\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newQualificationPeriods = [...qualificationPeriods];\r\n        newQualificationPeriods = newQualificationPeriods.filter(el => (\r\n            getLowerCaseString(`${el.borne_sup === \"+\" ? `Plus de ${el.borne_inf}` : `${el.borne_inf}-${el.borne_sup}`} jours`).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newQualificationPeriods;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(qualificationPeriods.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(qualificationPeriods.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(qualificationPeriods.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(qualificationPeriods.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(qualificationPeriods.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                qualificationPeriods.slice(\r\n                    getEndByPosition(activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                qualificationPeriods.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deletePeriod = (qualificationPeriodId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/delai-qualification-parameters/${qualificationPeriodId}`)\r\n                            .then(response => {\r\n                                const newUnitTypes = [...qualificationPeriods];\r\n                                newUnitTypes.splice(index, 1);\r\n                                setQualificationPeriods(newUnitTypes);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newUnitTypes.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (qualificationPeriod, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd text-center\">\r\n                <td>\r\n                    {\r\n                        qualificationPeriod.borne_sup === \"+\" ? (\r\n                            `Plus de ${qualificationPeriod.borne_inf}`\r\n                        ) : (\r\n                            `${qualificationPeriod.borne_inf}-${qualificationPeriod.borne_sup}`\r\n                        )\r\n                    } Jours\r\n                </td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-delai-qualification-parameters') ? (\r\n                            <button\r\n                                onClick={(e) => deletePeriod(qualificationPeriod.uuid, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-delai-qualification-parameters') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Délai qualification\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\r\n                                !qualificationPeriods.length ? \"\" : qualificationPeriods[qualificationPeriods.length - 1 ].borne_sup === \"+\" ? \"\" : \"store-delai-qualification-parameters\"\r\n                            }\r\n                            title={\"Délai qualification\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/qualification-period/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input\r\n                                                            id=\"myInput\"\r\n                                                            type=\"text\"\r\n                                                            onKeyUp={(e) => searchElement(e)}\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            placeholder=\"\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\" className=\"text-center\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Période\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"15%\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        qualificationPeriods.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((qualificationPeriod, index) => (\r\n                                                                    printBodyTable(qualificationPeriod, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr className=\"text-center\">\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Période</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {qualificationPeriods.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(QualificationPeriod);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\User.jsx",["1095","1096"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {forceRound, getLowerCaseString, loadCss} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmActivation} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastErrorMessageWithParameterConfig, toastSuccessMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst User = (props) => {\r\n    if (!(verifyPermission(props.userPermissions, \"list-user-any-institution\") || (verifyPermission(props.userPermissions, \"list-user-my-institution\"))))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [users, setUsers] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let endpoint = \"\";\r\n        if (props.plan === \"MACRO\") {\r\n            if (verifyPermission(props.userPermissions, \"list-user-any-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/any/users`;\r\n            if (verifyPermission(props.userPermissions, \"list-user-my-institution\"))\r\n                endpoint = `${appConfig.apiDomaine}/my/users`;\r\n        }\r\n        else if(props.plan === \"HUB\")\r\n            endpoint = `${appConfig.apiDomaine}/any/users`;\r\n        else if(props.plan === \"PRO\")\r\n            endpoint = `${appConfig.apiDomaine}/my/users`;\r\n\r\n        async function fetchData () {\r\n            await axios.get(endpoint)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setUsers(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, props.plan, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newUsers = [...users];\r\n        newUsers = newUsers.filter(el => (\r\n            getLowerCaseString(`${el.identite.lastname} ${el.identite.firstname}`).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.username).indexOf(value) >= 0 ||\r\n            getLowerCaseString(printRole(el.roles)).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.disabled_at === null ? \"Active\" : \"Désactiver\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newUsers;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(users.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(users.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(users.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(users.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(users.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                users.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                users.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printRole = (roles) => {\r\n        const newRoles = [];\r\n        roles.map(r => newRoles.push(r.name));\r\n        return newRoles.join(' / ');\r\n    };\r\n\r\n    const activeAccount = (e, user, index, label) => {\r\n        e.preventDefault();\r\n        DeleteConfirmation.fire(confirmActivation(label))\r\n            .then(async (result) => {\r\n                if (result.value) {\r\n                    document.getElementById(`user-spinner-${user.id}`).style.display = \"block\";\r\n                    document.getElementById(`user-${user.id}`).style.display = \"none\";\r\n                    document.getElementById(`user-edit-${user.id}`).style.display = \"none\";\r\n\r\n                    let endpoint = \"\";\r\n                    if (props.plan === \"MACRO\") {\r\n                        if (verifyPermission(props.userPermissions, \"list-user-any-institution\"))\r\n                            endpoint = `${appConfig.apiDomaine}/any/users/${user.id}/enabled-desabled`;\r\n                        if (verifyPermission(props.userPermissions, \"list-user-my-institution\"))\r\n                            endpoint = `${appConfig.apiDomaine}/my/users/${user.id}/enabled-desabled`;\r\n                    }\r\n                    else if(props.plan === \"HUB\")\r\n                        endpoint = `${appConfig.apiDomaine}/any/users/${user.id}/enabled-desabled`;\r\n                    else if(props.plan === \"PRO\")\r\n                        endpoint = `${appConfig.apiDomaine}/my/users/${user.id}/enabled-desabled`;\r\n\r\n                    if (verifyTokenExpire()) {\r\n                        await axios.put(endpoint)\r\n                            .then(response => {\r\n                                const newUsers = [...users];\r\n                                newUsers[index].disabled_at = newUsers[index].disabled_at === null ? true : null;\r\n                                document.getElementById(`user-spinner-${user.id}`).style.display = \"none\";\r\n                                document.getElementById(`user-${user.id}`).style.display = \"block\";\r\n                                document.getElementById(`user-edit-${user.id}`).style.display = \"block\";\r\n                                setUsers(newUsers);\r\n                                ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Succes de l'opération\"));\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Echec de l'opération\"));\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const rulesInclude = (rules, ...rule) => {\r\n        let value = false;\r\n        rules.map(r => {\r\n            value = r.name === rule[0] || r.name === rule[1];\r\n        });\r\n\r\n        return value;\r\n    };\r\n\r\n    const printBodyTable = (user, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                {console.log('user:', user)}\r\n                <td>\r\n                    {`${user.identite.lastname} ${user.identite.firstname} `}\r\n                    {\r\n                        rulesInclude(user.roles, \"pilot-filial\", \"pilot-holding\") ?\r\n                            user.identite.staff ? (\r\n                                    user.identite.staff.is_active_pilot ? (\r\n                                        <span className=\"kt-badge kt-badge--success kt-badge--inline\">pilot actif</span>\r\n                                    ) : null\r\n                            ) : null\r\n                            : null\r\n                    }\r\n                </td>\r\n                <td>{user.username}</td>\r\n                <td>\r\n                    {printRole(user.roles)}\r\n                </td>\r\n                <td>\r\n                    {\r\n                        user.disabled_at === null ? (\r\n                            <span className=\"kt-badge kt-badge--success kt-badge--inline\">Active</span>\r\n                        ) : (\r\n                            <span className=\"kt-badge kt-badge--danger kt-badge--inline\">Désactiver</span>\r\n                        )\r\n                    }\r\n                </td>\r\n                <td className=\"d-flex justify-content-between align-items-center\">\r\n                    <div id={`user-spinner-${user.id}`} className=\"kt-spinner kt-spinner--lg kt-spinner--dark mt-2 mx-3\" style={{display: \"none\"}}/>\r\n                    <a\r\n                        className=\"mt-2\"\r\n                        id={`user-${user.id}`}\r\n                        href={user.disabled_at === null ? `desactive/${user.id}` : `reactive/${user.id}`}\r\n                        onClick={(e) => activeAccount(e, user, index, user.disabled_at === null ? \"désactiver\" : \"réactiver\")}\r\n                        title={user.disabled_at === null ? \"Désactiver\" : \"Réactiver\"}>\r\n                        {user.disabled_at === null ? \"Désactiver\" : \"Réactiver\"}\r\n                    </a>\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, \"show-user-any-institution\") || verifyPermission(props.userPermissions, \"show-user-my-institution\") ? (\r\n                            <Link to={`/settings/users/${user.id}/edit`}\r\n                                  id={`user-edit-${user.id}`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md mx-3\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-user-any-institution') || verifyPermission(props.userPermissions, 'list-user-my-institution') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Utilisateur\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={[\"store-user-any-institution\", \"store-user-my-institution\"]}\r\n                            title={\"Utilisateur\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/users/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Email\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Role\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Statut\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"70.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        users.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((user, index) => (\r\n                                                                    printBodyTable(user, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Email</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">role</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Statut</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {users.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(User);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\config\\errorPage.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FaqListe.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\dataTable.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\date.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimsArchivedDetail.jsx",["1097","1098"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport TreatmentButtonDetail from \"../components/TreatmentButtonDetail\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\nconst ClaimArchivedDetail = (props) => {\r\n    document.title = \"Satis client - Détail plainte\";\r\n    const {id} = useParams();\r\n\r\n    const [claim, setClaim] = useState(null);\r\n\r\n    const endPointConfig = {\r\n        PRO: {\r\n            plan: \"PRO\",\r\n            list: `${appConfig.apiDomaine}/my/claim-archived`,\r\n        },\r\n        MACRO: {\r\n            holding: {\r\n                list: `${appConfig.apiDomaine}/any/claim-archived`,\r\n            },\r\n            filial: {\r\n                list: `${appConfig.apiDomaine}/my/claim-archived`,\r\n            }\r\n        },\r\n        HUB: {\r\n            plan: \"HUB\",\r\n            list: `${appConfig.apiDomaine}/any/claim-archived`,\r\n        }\r\n    };\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'show-any-claim-archived') ||\r\n        verifyPermission(props.userPermissions, \"show-my-claim-archived\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'show-any-claim-archived'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'show-my-claim-archived'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(endPoint.list + `/${id}`)\r\n                .then(response => {\r\n                    setClaim(response.data);\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"))\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"show-any-claim-archived\") ||\r\n        verifyPermission(props.userPermissions, \"show-my-claim-archived\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/claim_archived\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Archivage\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {claim?claim.reference: 'Detail'}\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                        <i className=\"flaticon-list\"/>\r\n                                                    </div>\r\n                                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                            Traitement Effectué\r\n                                                        </div>\r\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                            Détails du traitement effectué\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        <TreatmentButtonDetail archive={true} claim={claim}/>\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANT\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimArchivedDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimToValidatedListDetail.jsx",["1099","1100","1101","1102"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, loadScript, validatedClaimRule} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport ReasonModal from \"../components/ReasonModal\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastErrorMessageWithParameterConfig} from \"../../config/toastConfig\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\n\r\nconst ClaimToValidatedListDetail = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n    const {id} = useParams();\r\n    const validation = validatedClaimRule(id);\r\n\r\n    if (!((verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-my-institution') ||\r\n        verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-any-institution')) && props.activePilot))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [claim, setClaim] = useState(null);\r\n    const [showReason, setShowReason] = useState(false);\r\n    const [reasonTitle, setReasonTitle] = useState(\"\");\r\n    const [reasonLabel, setReasonLabel] = useState(\"\");\r\n    const [action, setAction] = useState(\"\");\r\n    const [startRequest, setStartRequest] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let endpoint = \"\";\r\n            if (verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-my-institution'))\r\n                endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-my-institution/${id}`;\r\n            else if (verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-any-institution'))\r\n                endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-any-institution/${id}`;\r\n\r\n            await axios.get(endpoint)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    setClaim(response.data);\r\n                })\r\n                .catch(({response}) => {\r\n                    setStartRequest(false);\r\n                    if (response.data && response.data.code === 409)\r\n                        ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(response.data.error));\r\n                    else\r\n                        console.log(\"Something is wrong\")\r\n                });\r\n        }\r\n        if (verifyTokenExpire()) {\r\n            fetchData();\r\n        }\r\n    }, [id]);\r\n\r\n    const showReasonInput = async (type) => {\r\n        if (type === \"validateReject\") {\r\n            await setReasonTitle('Motif de rejet');\r\n            await setReasonLabel('Le motif');\r\n        } else if (type === \"validateSolution\") {\r\n            await setReasonTitle('Solution à communiquer au client');\r\n            await setReasonLabel('Solution');\r\n        }\r\n        await setAction(type);\r\n        await setShowReason(true);\r\n        document.getElementById(\"reason-modal\").click();\r\n    };\r\n\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-claim-awaiting-validation-my-institution\") ||\r\n        verifyPermission(props.userPermissions, 'show-claim-awaiting-validation-any-institution') && props.activePilot) ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/claim-to-validated\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Réclamations à valider\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Détail réclamation\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, validation[props.plan].permission) ? (\r\n                                                    <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                        <div className=\"kt-wizard-v2__nav-body\">\r\n                                                            <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                                <i className=\"flaticon-list\"/>\r\n                                                            </div>\r\n                                                            <div className=\"kt-wizard-v2__nav-label\">\r\n                                                                <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                                    Validation du traitement\r\n                                                                </div>\r\n                                                                <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                                    Valider du traitement de l'agent\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        {\r\n                                            verifyPermission(props.userPermissions, validation[props.plan].permission) ? (\r\n                                                <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\">\r\n                                                    <div className=\"kt-heading kt-heading--md\">\r\n                                                        Validation du traitement\r\n                                                    </div>\r\n                                                    <div className=\"kt-form__section kt-form__section--first\">\r\n                                                        <div className=\"kt-wizard-v2__review\">\r\n                                                            {\r\n                                                                !startRequest ? (\r\n                                                                    claim ? (\r\n                                                                        <div className=\"kt-wizard-v2__review-item\">\r\n                                                                            {\r\n                                                                                claim.active_treatment.solved_at !== null ? (\r\n                                                                                    <>\r\n                                                                                        <div className=\"kt-wizard-v2__review-item\">\r\n                                                                                            <div className=\"kt-wizard-v2__review-title\">\r\n                                                                                                <h5><strong>Traitement</strong></h5>\r\n                                                                                            </div>\r\n                                                                                            <div className=\"kt-wizard-v2__review-content\">\r\n                                                                                                <strong>Statut</strong>: <span className=\"mx-2\">Traité</span><br/>\r\n                                                                                                <strong>Montant retourné</strong>: <span className=\"mx-2\">{claim.active_treatment.amount_returned ? claim.active_treatment.amount_returned : \"Pas de montant\"}</span><br/>\r\n                                                                                                <strong>Solution</strong>: <span className=\"mx-2\">{claim.active_treatment.solution ? claim.active_treatment.solution : \"Pas de solution\"}</span><br/>\r\n                                                                                                <strong>Commentaires</strong>: <span className=\"mx-2\">{claim.active_treatment.comments ? claim.active_treatment.comments : \"Pas de commentaire\"}</span><br/>\r\n                                                                                                <strong>Mésures préventives</strong>: <span className=\"mx-2\">{claim.active_treatment.preventive_measures ? claim.active_treatment.preventive_measures : \"Pas de mésures préventives\"}</span><br/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"kt-widget__action\">\r\n                                                                                            {\r\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-my-institution\") ||\r\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-any-institution\") ? (\r\n                                                                                                    <button\r\n                                                                                                        type=\"button\"\r\n                                                                                                        className=\"btn btn-label-danger btn-sm btn-upper\"\r\n                                                                                                        onClick={() => showReasonInput(\"validateReject\")}>\r\n                                                                                                        Rejeter\r\n                                                                                                    </button>\r\n                                                                                                ) : null\r\n                                                                                            }\r\n\r\n                                                                                            &nbsp;\r\n                                                                                            {\r\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-my-institution\") ||\r\n                                                                                                verifyPermission(props.userPermissions, \"validate-treatment-any-institution\") ? (\r\n                                                                                                    <button\r\n                                                                                                        type=\"button\"\r\n                                                                                                        className=\"btn btn-brand btn-sm btn-upper\"\r\n                                                                                                        onClick={() => showReasonInput(\"validateSolution\")}>\r\n                                                                                                        Valider\r\n                                                                                                    </button>\r\n                                                                                                ) : null\r\n                                                                                            }\r\n\r\n                                                                                        </div>\r\n                                                                                    </>\r\n                                                                                ) : null\r\n                                                                            }\r\n\r\n                                                                            {\r\n                                                                                claim.active_treatment.declared_unfounded_at !== null ? (\r\n                                                                                    <>\r\n                                                                                        <div className=\"kt-wizard-v2__review-item\">\r\n                                                                                            <div className=\"kt-wizard-v2__review-title\">\r\n                                                                                                <h5><strong>Traitement</strong></h5>\r\n                                                                                            </div>\r\n                                                                                            <div className=\"kt-wizard-v2__review-content\">\r\n                                                                                                <strong>Statut</strong>: <span className=\"mx-2\">Non fondé</span>\r\n                                                                                                <br/>\r\n                                                                                                <strong>Motif</strong>: <span className=\"mx-2\">{claim.active_treatment.unfounded_reason ? claim.active_treatment.unfounded_reason : \"Pas de motif\"}</span>\r\n                                                                                                <br/>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                        <div className=\"kt-widget__action\">\r\n                                                                                            <button type=\"button\" className=\"btn btn-label-danger btn-sm btn-upper\" onClick={() => showReasonInput(\"validateReject\")}>\r\n                                                                                                Rejeter\r\n                                                                                            </button>\r\n                                                                                            &nbsp;\r\n                                                                                            <button type=\"button\" className=\"btn btn-brand btn-sm btn-upper\" onClick={() => showReasonInput(\"validateSolution\")}>\r\n                                                                                                Valider\r\n                                                                                            </button>\r\n                                                                                        </div>\r\n                                                                                    </>\r\n                                                                                ) : null\r\n                                                                            }\r\n                                                                            <button id={\"reason-modal\"}\r\n                                                                                    style={{display: \"none\"}} type=\"button\"\r\n                                                                                    className=\"btn btn-bold btn-label-brand btn-sm\"\r\n                                                                                    data-toggle=\"modal\"\r\n                                                                                    data-target=\"#kt_modal_4_2\"/>\r\n                                                                        </div>\r\n                                                                    ) : null\r\n                                                                ) : null\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANT\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                    {\r\n                                        showReason ? (\r\n                                            <ReasonModal\r\n                                                plan={props.plan}\r\n                                                id={id}\r\n                                                action={action}\r\n                                                reasonTitle={reasonTitle}\r\n                                                reasonLabel={reasonLabel}\r\n                                                onClose={() => setShowReason(false)}\r\n                                            />\r\n                                        ) : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n        activePilot: state.user.user.staff.is_active_pilot\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimToValidatedListDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\SatisfactionMeasureDetail.jsx",["1103","1104"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport ReasonSatisfaction from \"../components/ReasonSatisfaction\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport TreatmentButtonDetail from \"../components/TreatmentButtonDetail\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        edit: `${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            edit: `${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\r\n        },\r\n        filial: {\r\n            edit: `${appConfig.apiDomaine}/my/claim-satisfaction-measured`,\r\n        }\r\n    },\r\n    HUB: {\r\n        plan: \"HUB\",\r\n        edit: `${appConfig.apiDomaine}/any/claim-satisfaction-measured`,\r\n    }\r\n};\r\n\r\n\r\nconst SatisfactionMeasureDetail = (props) => {\r\n    document.title = \"Satis client - Détail plainte\";\r\n    const {id} = useParams();\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'update-satisfaction-measured-any-claim') ||\r\n        verifyPermission(props.userPermissions, \"update-satisfaction-measured-my-claim\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'update-satisfaction-measured-my-claim'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'update-satisfaction-measured-my-claim'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const [claim, setClaim] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(endPoint.edit + `/${id}`)\r\n                .then(response => {\r\n                    setClaim(response.data);\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"));\r\n        }\r\n\r\n        if (verifyTokenExpire()) {\r\n            fetchData();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"update-satisfaction-measured-any-claim\") ||\r\n        verifyPermission(props.userPermissions, \"update-satisfaction-measured-my-claim\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/claim_measure\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Mesure de Satisfaction\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {claim ? claim.reference : 'Detail'}\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                        <i className=\"flaticon-list\"/>\r\n                                                    </div>\r\n                                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                            Traitement Effectué\r\n                                                        </div>\r\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                            Détails du traitement effectué\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                        <i className=\"flaticon-list\"/>\r\n                                                    </div>\r\n                                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                            Mesure de Satisfaction\r\n                                                        </div>\r\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                            Mesurer la satisfaction du client\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        <TreatmentButtonDetail claim={claim}/>\r\n\r\n                                        <div className=\"kt-wizard-v2__content\"\r\n                                             data-ktwizard-type=\"step-content\">\r\n                                            <div className=\"kt-heading kt-heading--md\">Mesure de Satisfaction\r\n                                            </div>\r\n                                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                                <div className=\"kt-wizard-v2__review\">\r\n                                                    <div className=\"kt-wizard-v2__review-content\">\r\n\r\n                                                        <ReasonSatisfaction\r\n                                                            getId={`${id}`}\r\n                                                            getEndPoint={endPoint.edit}\r\n                                                        />\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANT\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SatisfactionMeasureDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\InputRequire.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ExportButton.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\InfirmationTable.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\WithoutCode.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\UnfoundedModal.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Pagination.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ImportFileForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\DetailModal.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\ClaimToPointOfServices.jsx",["1105"],"import React, {useEffect, useState} from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\n\r\nconst ClaimToInstitution = (props) => {\r\n    const [load, setLoad] = useState(true);\r\n    const [pointOfServiceData, setPointOfServiceData] = useState(\"\");\r\n\r\n    const defaultData = {\r\n        series: pointOfServiceData ? pointOfServiceData.series : [],\r\n        options: {\r\n            chart: {\r\n                width: 380,\r\n                type: 'pie',\r\n            },\r\n            labels: pointOfServiceData ? pointOfServiceData.options.labels : [],\r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                    chart: {\r\n                        width: 200\r\n                    },\r\n                    legend: {\r\n                        position: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n          await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    if (!isCancelled) {\r\n                        let pointOfService = response.data.pointOfServicesTargeted;\r\n                        let ServiceData = [];\r\n                        for (const processus in pointOfService) {\r\n                            ServiceData.push(processus);\r\n                        }\r\n                        let newData = {...defaultData};\r\n\r\n                        newData.options.labels = ServiceData;\r\n                        newData.series = Object.values(pointOfService).map(serie => serie.myInstitution);\r\n                        setPointOfServiceData(newData);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"kt-portlet__head\">\r\n                <div className=\"kt-portlet__head-label\">\r\n                    <h3 className=\"kt-portlet__head-title\">Statistique les services techniques qui reçoivent plus de\r\n                        réclamations sur les 30 derniers jours</h3>\r\n                </div>\r\n            </div>\r\n            {\r\n                load ? (\r\n                    <LoadingTable/>\r\n                ) : (\r\n                    <div className=\"kt-portlet__body\">\r\n                        <div id=\"chart\" className=\"d-flex justify-content-center\" style={{position: \"relative\"}}>\r\n                            {pointOfServiceData?(\r\n                                <Chart options={pointOfServiceData.options} series={pointOfServiceData.series}\r\n                                       type=\"pie\" width={550}/>\r\n                            ):\"\"\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimToInstitution);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\profile\\UpdatePassword.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\HeaderTablePage.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\EmptyTable.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\LoadingTable.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\PeriodForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\institution.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\helpers\\unit.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Clients\\ConfirmClientSaveForm.jsx",["1106","1107","1108","1109","1110","1111"],"import React, {useState} from \"react\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport axios from \"axios\";\r\nimport {ToastBottomEnd} from \"../Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport {formatSelectOption} from \"../../../helpers/function\";\r\nimport {formatInstitutions} from \"../../../helpers/institution\";\r\nimport Select from \"react-select\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport FormInformation from \"../FormInformation\";\r\nimport InputRequire from \"../InputRequire\";\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        confirm: id => `${appConfig.apiDomaine}/my/identites/${id}/clients`\r\n    },\r\n    MACRO: {\r\n        plan: \"MACRO\",\r\n        holding: {\r\n            confirm: id => `${appConfig.apiDomaine}/any/identites/${id}/clients`\r\n        },\r\n        filial: {\r\n            confirm: id => `${appConfig.apiDomaine}/my/identites/${id}/clients`\r\n        }\r\n    },\r\n};\r\n\r\nconst ConfirmClientSaveForm = (props) => {\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'store-client-from-my-institution') || verifyPermission(props.userPermissions, 'update-client-from-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else\r\n        endPoint = endPointConfig[props.plan];\r\n\r\n    const [types, setTypes] = useState(props.types);\r\n    const [clients, setClients] = useState(props.clients);\r\n    const [category, setCategory] = useState(props.category);\r\n    const [categories, setCategories] = useState(props.categories);\r\n    // const institution = props.institution;\r\n    const [institution, setInstitution] = useState(props.institution);\r\n    const [institutions, setInstitutions] = useState(props.institutions);\r\n    const [type, setType] = useState(props.type);\r\n    const [client, setClient] = useState(props.client);\r\n\r\n\r\n    const defaultData = {\r\n        firstname: props.identite.identite.identite.firstname,\r\n        lastname: props.identite.identite.identite.lastname,\r\n        sexe: props.identite.identite.identite.sexe,\r\n        telephone: (props.identite.identite.identite.telephone),\r\n        email: (props.identite.identite.identite.email),\r\n        ville: props.identite.identite.identite.ville === null ? \"\" : props.identite.identite.identite.ville,\r\n        number:props.number,\r\n        account_type_id: props.account_type_id,\r\n        client_id: props.client_id,\r\n        institution_id: props.institution_id,\r\n        category_client_id:props.category_id\r\n    };\r\n\r\n    const defaultError = {\r\n        firstname: [],\r\n        lastname: [],\r\n        sexe: [],\r\n        telephone: [],\r\n        email: [],\r\n        ville: [],\r\n        number:[],\r\n        account_type_id: [],\r\n        client_id: [],\r\n        institution_id: [],\r\n        category_client_id:[]\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    const onChangeFirstName = (e) => {\r\n        const newData = {...data};\r\n        newData.firstname = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeLastName = (e) => {\r\n        const newData = {...data};\r\n        newData.lastname = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeSexe = (e) => {\r\n        const newData = {...data};\r\n        newData.sexe = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeVille = (e) => {\r\n        const newData = {...data};\r\n        newData.ville = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeTelephone = (tel) => {\r\n        const newData = {...data};\r\n        newData.telephone = tel;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeEmail = (mail) => {\r\n        const newData = {...data};\r\n        newData.email = mail;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeType = (selected) => {\r\n        const newData = {...data};\r\n        newData.account_type_id = selected.value;\r\n        setType(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeAccount = (e) => {\r\n        const newData = {...data};\r\n        newData.number = e.target.value;\r\n        setData(newData);\r\n    };\r\n    const onChangeCategory = (selected) => {\r\n        const newData = {...data};\r\n        newData.category_client_id = selected.value;\r\n        setCategory(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeInstitution = (selected) => {\r\n        const newData = {...data};\r\n        newData.institution_id = selected.value;\r\n        setInstitution(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        axios.post(endPoint.confirm(props.identite.identite.identites_id), data)\r\n            .then(async (response) => {\r\n                ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                await setStartRequest(false);\r\n                await setError(defaultError);\r\n                await setTypes([]);\r\n                await setCategories([]);\r\n                await setInstitutions([]);\r\n                await setInstitution({});\r\n                await setType({});\r\n                await setCategory({});\r\n                document.getElementById(\"closeConfirmSaveForm\").click();\r\n                // await props.resetFoundIdentity();\r\n            })\r\n            .catch(errorRequest => {\r\n                setStartRequest(false);\r\n                setError({...defaultError, ...errorRequest.response.data.error});\r\n                ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n            })\r\n        ;\r\n    };\r\n\r\n    const onClickClose = async (e) => {\r\n        await setStartRequest(false);\r\n        await setError(defaultError);\r\n        await setData(defaultError);\r\n        await setTypes([]);\r\n        await setCategory({});\r\n        await setCategories([]);\r\n        await setInstitutions([]);\r\n        await setInstitution({});\r\n        await setType({});\r\n        await document.getElementById(\"closeButton\").click();\r\n        // await props.resetFoundIdentity();\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"kt_modal_4\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" role=\"dialog\" data-backdrop=\"false\"\r\n             style={{ display: \"block\", paddingRight: \"17px\"}} aria-modal=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\" style={{boxShadow: \"0px 4px 23px 6px rgba(0,0,0,0.75)\"}}>\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Ajout d'un client avec des identifiants existant</h5>\r\n                        <button onClick={(e) => onClickClose(e)} type=\"button\" className=\"close\"/>\r\n                        <button id=\"closeButton\" style={{display: \"none\"}} type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"/>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form>\r\n                            <div className=\"kt-portlet__body\">\r\n                                <FormInformation\r\n                                    information={props.message}\r\n                                />\r\n\r\n                                <div className=\"kt-section kt-section--first\">\r\n                                    <div className=\"kt-section__body\">\r\n                                        <h3 className=\"kt-section__title kt-section__title-lg\">Informations personnelles:</h3>\r\n\r\n                                        <div className={\"form-group row \"}>\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, 'store-client-from-any-institution') || verifyPermission(props.userPermissions, 'update-client-from-any-institution') ? (\r\n\r\n                                                    <div className=\"col\">\r\n                                                        <label htmlFor=\"type\">Institution <InputRequire/></label>\r\n                                                        <Select\r\n                                                            value={institution}\r\n                                                            onChange={onChangeInstitution}\r\n                                                            options={institutions}\r\n                                                        />\r\n                                                        {\r\n                                                            error.institution_id.length ? (\r\n                                                                error.institution_id.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.lastname.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"lastname\">Nom <InputRequire/></label>\r\n                                                <input\r\n                                                    id=\"lastname\"\r\n                                                    type=\"text\"\r\n                                                    className={error.lastname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le nom de famille\"\r\n                                                    value={data.lastname}\r\n                                                    onChange={(e) => onChangeLastName(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.lastname.length ? (\r\n                                                        error.lastname.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className={error.firstname.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"firstname\">Prénom(s) <InputRequire/></label>\r\n                                                <input\r\n                                                    id=\"firstname\"\r\n                                                    type=\"text\"\r\n                                                    className={error.firstname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le prénom\"\r\n                                                    value={data.firstname}\r\n                                                    onChange={(e) => onChangeFirstName(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.firstname.length ? (\r\n                                                        error.firstname.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className={error.firstname.length ? \"form-group col validated\" : \"form-group col\"}>\r\n                                                <label htmlFor=\"sexe\">Sexe <InputRequire/></label>\r\n                                                <select\r\n                                                    id=\"sexe\"\r\n                                                    className={error.sexe.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    value={data.sexe}\r\n                                                    onChange={(e) => onChangeSexe(e)}\r\n                                                >\r\n                                                    <option value=\"\" disabled={true}>Veillez choisir le Sexe</option>\r\n                                                    <option value=\"F\">Féminin</option>\r\n                                                    <option value=\"M\">Masculin</option>\r\n                                                    <option value=\"A\">Autres</option>\r\n                                                </select>\r\n                                                {\r\n                                                    error.sexe.length ? (\r\n                                                        error.sexe.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.telephone.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"telephone\"> Téléphone(s) <InputRequire/></label>\r\n                                                <TagsInput value={data.telephone} onChange={onChangeTelephone} />\r\n                                                {\r\n                                                    error.telephone.length ? (\r\n                                                        error.telephone.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className={error.email.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"email\"> Email(s) <InputRequire/></label>\r\n                                                <TagsInput value={data.email} onChange={onChangeEmail} />\r\n                                                {\r\n                                                    error.email.length ? (\r\n                                                        error.email.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className={error.ville.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"ville\">Ville <InputRequire/></label>\r\n                                                <input\r\n                                                    id=\"ville\"\r\n                                                    type=\"text\"\r\n                                                    className={error.ville.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer votre ville\"\r\n                                                    value={data.ville}\r\n                                                    onChange={(e) => onChangeVille(e)}\r\n                                                />\r\n                                                {\r\n                                                    error.ville.length ? (\r\n                                                        error.ville.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-section\">\r\n                                    <div className=\"kt-section__body\">\r\n                                        <h3 className=\"kt-section__title kt-section__title-lg\">Informations professionnelles:</h3>\r\n                                        <div className={\"form-group row \"}>\r\n\r\n                                            <div className=\"col\">\r\n                                                <label htmlFor=\"type\">Categorie client <InputRequire/></label>\r\n                                                <Select\r\n                                                    value={category}\r\n                                                    onChange={onChangeCategory}\r\n                                                    options={formatSelectOption(categories, \"name\", \"fr\")}\r\n                                                />\r\n                                                {\r\n                                                    error.category_client_id.length ? (\r\n                                                        error.category_client_id.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className={\"form-group row\"}>\r\n                                              <div className=\"col\">\r\n                                                        <label htmlFor=\"institution\">Type de compte <InputRequire/></label>\r\n                                                        <Select\r\n                                                            value={type}\r\n                                                            onChange={onChangeType}\r\n                                                            options={formatSelectOption(types, \"name\", \"fr\")}\r\n                                                        />\r\n                                                        {\r\n                                                            error.account_type_id.length ? (\r\n                                                                error.account_type_id.map((error, index) => (\r\n                                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                                        {error}\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : null\r\n                                                        }\r\n                                                    </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <div className={error.number.length ? \"col validated\" : \"col\"}>\r\n                                                <label htmlFor=\"number\">Numero de Compte <InputRequire/></label>\r\n                                                <input\r\n                                                    id=\"number\"\r\n                                                    type=\"text\"\r\n                                                    className={error.number.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    placeholder=\"Veillez entrer le numero de compte\"\r\n                                                    value={data.number}\r\n                                                    onChange={onChangeAccount}\r\n                                                />\r\n                                                {\r\n                                                    error.number.length ? (\r\n                                                        error.number.map((error, index) => (\r\n                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                {error}\r\n                                                            </div>\r\n                                                        ))\r\n                                                    ) : \"\"\r\n                                                }\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        {\r\n                            !startRequest ? (\r\n                                <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">Enregistrer</button>\r\n                            ) : (\r\n                                <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                    Chargement...\r\n                                </button>\r\n                            )\r\n                        }\r\n                        <button id=\"closeConfirmSaveForm\" style={{display: \"none\"}} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConfirmClientSaveForm;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\currencyContry.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\IdentityForm.jsx",["1112","1113"],"import React, {useEffect, useState} from \"react\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport './staff/react-tagsinput.css';\r\nimport {connect} from \"react-redux\";\r\nimport {addIdentity} from \"../../store/actions/IdentityAction\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Select from \"react-select\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InputRequire from \"./InputRequire\";\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/clients`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/clients`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/clients`,\r\n        }\r\n    },\r\n\r\n};\r\n\r\nconst IndentiteForm = (props) => {\r\n    const {id} = useParams();\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'store-client-from-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'store-client-from-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n    const defaultData = {\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        sexe: \"\",\r\n        ville: \"\",\r\n        telephone: [],\r\n        email: [],\r\n        client_id: [],\r\n        institution_id: []\r\n    };\r\n    const defaultError = {\r\n        firstname: [],\r\n        lastname: [],\r\n        sexe: [],\r\n        ville: [],\r\n        telephone: [],\r\n        email: [],\r\n        client_id: [],\r\n        institution_id: []\r\n    };\r\n    const [data, setData] = useState(props.getLoading ? props.getIdentite : defaultData);\r\n    const [error] = useState(defaultError);\r\n    const [nameClient, setNameClient] = useState([]);\r\n    const [client, setClient] = useState([]);\r\n    const [institutionData, setInstitutionData] = useState(undefined);\r\n    const [institution, setInstitution] = useState([]);\r\n    const [disableInput,setDisableInput]=useState(true);\r\n\r\n    useEffect(() => {\r\n        if(verifyPermission(props.userPermissions,'store-client-from-my-institution')){\r\n        axios.get(endPoint.list)\r\n            .then(response => {\r\n                const options = [\r\n                    response.data? response.data.map((client) => ({\r\n                        value: client.client_id,\r\n                        label: client.client.identite.firstname + ' ' + client.client.identite.lastname\r\n                    })) : \"\"\r\n                ];\r\n                setNameClient(options);\r\n            });\r\n        }\r\n        axios.get(appConfig.apiDomaine + `/any/clients/create`)\r\n            .then(response => {\r\n                const options = [\r\n                    response.data.institutions.length ? response.data.institutions.map((institution) => ({\r\n                        value: institution.id,\r\n                        label: institution.name\r\n                    })) : \"\"\r\n                ];\r\n                setInstitutionData(options);\r\n            });\r\n    }, []);\r\n    const onChangeFirstName = (e) => {\r\n        const newData = {...data};\r\n        newData.firstname = e.target.value;\r\n        setData(newData);\r\n        props.addIdentite(newData)\r\n    };\r\n\r\n    const onChangeLastName = (e) => {\r\n        const newData = {...data};\r\n        newData.lastname = e.target.value;\r\n        setData(newData);\r\n        props.addIdentite(newData)\r\n    };\r\n\r\n    const onChangeTelephone = (tel) => {\r\n        const newData = {...data};\r\n        newData.telephone = tel;\r\n        setData(newData);\r\n        props.addIdentite(newData)\r\n    };\r\n\r\n    const onChangeSexe = (e) => {\r\n        const newData = {...data};\r\n        newData.sexe = e.target.value;\r\n        setData(newData);\r\n        props.addIdentite(newData)\r\n    };\r\n    const onChangeEmail = (mail) => {\r\n        const newData = {...data};\r\n        newData.email = mail;\r\n        setData(newData);\r\n        props.addIdentite(newData)\r\n    };\r\n    const onChangeVille = (e) => {\r\n        const newData = {...data};\r\n        newData.ville = e.target.value;\r\n        setData(newData);\r\n        props.addIdentite(newData)\r\n    };\r\n    const onChangeInstitution = (selected) => {\r\n        const newData = {...data};\r\n        newData.institution_id = selected.value;\r\n        setInstitution(selected);\r\n        props.addIdentite(selected);\r\n        axios.get(appConfig.apiDomaine + `/any/clients/${newData.institution_id}/institutions`)\r\n            .then(response => {\r\n                console.log(response.data, \"CLIENT D'UNE INSTITUTION\");\r\n                const options = [\r\n                    response.data ? response.data.map((client) => ({\r\n                        value: client.client_id,\r\n                        label: client.client.identite.firstname + ' ' + client.client.identite.lastname\r\n                    })) : \"\"\r\n                ];\r\n                    setNameClient(options);\r\n            });\r\n\r\n        setData(newData);\r\n        setDisableInput(false)\r\n    };\r\n\r\n\r\n    const onChangeClient = (selected) => {\r\n        const newData = {...data};\r\n        newData.client_id = selected.value;\r\n        setClient(selected);\r\n        setData(newData);\r\n        props.addIdentite(selected);\r\n        axios.get(endPoint.list + `/${newData.client_id}`)\r\n            .then(response => {\r\n                console.log(response.data,\"IDENTITE\")\r\n                const newIdentity = {\r\n                    firstname: response.data.client.identite.firstname,\r\n                    lastname: response.data.client.identite.lastname,\r\n                    sexe: response.data.client.identite.sexe,\r\n                    telephone: response.data.client.identite.telephone,\r\n                    email: response.data.client.identite.email,\r\n                    ville: response.data.client.identite.ville === null ? \"\" : response.data.client.identite.ville,\r\n                    client_id: response.data.client_id,\r\n                    institution_id:response.data.institution_id\r\n                };\r\n                setData(newIdentity);\r\n                props.addIdentite(newIdentity);\r\n\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"kt-portlet__body\">\r\n                <div className=\"kt-section kt-section--first\">\r\n                    <h5 className=\"kt-section__title kt-section__title-lg\">Identité:</h5>\r\n                    {!id ?\r\n                        <div className=\"form-group row\">\r\n                            {\r\n                                verifyPermission(props.userPermissions, \"store-client-from-any-institution\") ?\r\n                                    <div\r\n                                        className={error.institution_id.length ? \"col validated\" : \"col\"}>\r\n                                        <label htmlFor=\"exampleSelect1\"> Institution</label>\r\n                                        {institutionData ? (\r\n                                            <Select\r\n                                                value={institution}\r\n                                                placeholder={\"Veillez selectionner l'institution\"}\r\n                                                onChange={onChangeInstitution}\r\n                                                options={institutionData.length ? institutionData[0].map(name => name) : ''}\r\n                                            />\r\n                                        ) : (\r\n                                            <select name=\"category\"\r\n                                                    className={error.institution_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                    id=\"category\">\r\n                                                <option value=\"\"/>\r\n                                            </select>\r\n                                        )\r\n                                        }\r\n\r\n                                        {\r\n                                            error.institution_id.length ? (\r\n                                                error.institution_id.map((error, index) => (\r\n                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                        {error}\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : \"\"\r\n                                        }\r\n                                    </div>\r\n                                    : \"\"\r\n                            }\r\n                            <div\r\n                                className={error.client_id.length ? \"col validated\" : \"col\"}>\r\n                                <label htmlFor=\"exampleSelect1\"> Client</label>\r\n                                {nameClient ? (\r\n                                    <Select\r\n                                        placeholder={\"Veillez selectionner le client\"}\r\n                                        value={client}\r\n                                        onChange={onChangeClient}\r\n                                        options={nameClient.length ? nameClient[0].map(name => name) : ''}\r\n                                    />\r\n                                ) : (<select name=\"category\"\r\n                                             className={error.client_id.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                             id=\"category\">\r\n                                    <option value=\"\"/>\r\n                                </select>)\r\n                                }\r\n\r\n                                {\r\n                                    error.client_id.length ? (\r\n                                        error.client_id.map((error, index) => (\r\n                                            <div key={index} className=\"invalid-feedback\">\r\n                                                {error}\r\n                                            </div>\r\n                                        ))\r\n                                    ) : \"\"\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        : \"\"\r\n                    }\r\n                    <div className=\"form-group row\">\r\n                        <div className={error.lastname.length ? \"col validated\" : \"col\"}>\r\n                            <label htmlFor=\"lastname\">Nom <InputRequire/></label>\r\n                            <input\r\n                                id=\"lastname\"\r\n                                type=\"text\"\r\n                                className={error.lastname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                placeholder=\"Veillez entrer le nom de famille\"\r\n                                value={data.lastname}\r\n                                onChange={(e) => onChangeLastName(e)}\r\n                                disabled={props.getDisable ? props.getDisable : false}\r\n                            />\r\n                            {\r\n                                error.lastname.length ? (\r\n                                    error.lastname.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                ) : \"\"\r\n                            }\r\n                        </div>\r\n\r\n                        <div className={error.firstname.length ? \"col validated\" : \"col\"}>\r\n                            <label htmlFor=\"firstname\">Prénom(s) <InputRequire/></label>\r\n                            <input\r\n                                id=\"firstname\"\r\n                                type=\"text\"\r\n                                className={error.firstname.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                placeholder=\"Veillez entrer le prénom\"\r\n                                value={data.firstname}\r\n                                onChange={(e) => onChangeFirstName(e)}\r\n                                disabled={props.getDisable ? props.getDisable : false}\r\n                            />\r\n                            {\r\n                                error.firstname.length ? (\r\n                                    error.firstname.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                ) : \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className={error.sexe.length ? \" col validated\" : \"col\"}>\r\n                            <label htmlFor=\"sexe\">Sexe <InputRequire/></label>\r\n                            <select\r\n                                id=\"sexe\"\r\n                                className={error.sexe.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                value={data.sexe}\r\n                                onChange={(e) => onChangeSexe(e)}\r\n                                disabled={props.getDisable ? props.getDisable : false}\r\n                            >\r\n                                <option value=\"\" disabled={true}>Veillez choisir le Sexe\r\n                                </option>\r\n                                <option value=\"F\">Féminin</option>\r\n                                <option value=\"M\">Masculin</option>\r\n                                <option value=\"A\">Autres</option>\r\n                            </select>\r\n                            {\r\n                                error.sexe.length ? (\r\n                                    error.sexe.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                ) : \"\"\r\n                            }\r\n                        </div>\r\n                        <div className={error.ville.length ? \"col validated\" : \"col\"}>\r\n                            <label htmlFor=\"ville\">Ville <InputRequire/></label>\r\n                            <input\r\n                                id=\"ville\"\r\n                                type=\"text\"\r\n                                className={error.ville.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                placeholder=\"Veillez entrer votre ville\"\r\n                                value={data.ville}\r\n                                onChange={(e) => onChangeVille(e)}\r\n                                disabled={props.getDisable ? props.getDisable : false}\r\n                            />\r\n                            {\r\n                                error.ville.length ? (\r\n                                    error.ville.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                ) : \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                        <div className={error.telephone.length ? \"col validated\" : \"col\"}>\r\n                            <label htmlFor=\"telephone\"> Téléphone(s) <InputRequire/></label>\r\n                            <TagsInput\r\n                                value={data.telephone}\r\n                                onChange={onChangeTelephone}\r\n                                disabled={props.getDisable ? props.getDisable : false}\r\n                                inputProps={{className: \"react-tagsinput-input\", placeholder: \"Numéro(s)\"}}\r\n                            />\r\n                            {\r\n                                error.telephone.length ? (\r\n                                    error.telephone.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                ) : \"\"\r\n                            }\r\n                        </div>\r\n\r\n                        <div className={error.email.length ? \"col validated\" : \"col\"}>\r\n                            <label htmlFor=\"email\">Email(s) <InputRequire/></label>\r\n                            <TagsInput\r\n                                value={data.email}\r\n                                onChange={onChangeEmail}\r\n                                disabled={props.getDisable ? props.getDisable : false}\r\n                                inputProps={{className: \"react-tagsinput-input\", placeholder: \"Email(s)\"}}\r\n                            />\r\n                            {\r\n                                error.email.length ? (\r\n                                    error.email.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                ) : \"\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        identite: state.identite,\r\n        plan: state.plan.plan,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {addIdentite: addIdentity})(IndentiteForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\staff\\ConfirmSaveForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\profile\\PersonalInfo.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\ClaimToInstitution.jsx",["1114","1115"],"import React, {useEffect, useState} from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\n\r\nconst ClaimToInstitution = (props) => {\r\n    const [load, setLoad] = useState(true);\r\n    const [institutionData, setInstitutionData] = useState(\"\");\r\n\r\n    const defaultData = {\r\n        series: institutionData?institutionData.series:[],\r\n        options: {\r\n            chart: {\r\n                width: 380,\r\n                type: 'pie',\r\n            },\r\n            labels: institutionData?institutionData.options.labels:[],\r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                    chart: {\r\n                        width: 200\r\n                    },\r\n                    legend: {\r\n                        position: 'bottom'\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        let institutionTarget = props.response.data.institutionsTargeted;\r\n        let institutionData = [];\r\n        for (const processus in institutionTarget) {\r\n            institutionData.push(processus);\r\n        }\r\n        let newData = {...defaultData};\r\n        newData.options.labels = institutionData;\r\n        newData.series = Object.values(institutionTarget).map(serie => serie.allInstitution);\r\n        setInstitutionData(newData);\r\n        setLoad(false)\r\n    }, []);\r\n\r\n    return (\r\n\r\n                <div>\r\n                    <div className=\"kt-portlet__head\">\r\n                        <div className=\"kt-portlet__head-label\">\r\n                            <h3 className=\"kt-portlet__head-title\">Satisfaction des institutions qui reçoivent plus de\r\n                                réclamations sur les 30 derniers jours</h3>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div id=\"chart\" className=\"d-flex justify-content-center\" style={{position: \"relative\"}}>\r\n                                <Chart options={institutionData.options} series={institutionData.series} type=\"pie\"\r\n                                       width={380}/>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimToInstitution);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\GraphChannel.jsx",["1116"],"import React, {useEffect, useState} from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst GraphChannel = (props) => {\r\n\r\n    const [channelData, setChannelData] = useState(\"\");\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const defaultData = {\r\n\r\n        series: [{\r\n            name: 'Total',\r\n            data: channelData ? channelData.series.data : []\r\n        }],\r\n        options: {\r\n            chart: {\r\n                height: 350,\r\n                type: 'bar',\r\n                events: {\r\n                    click: function (chart, w, e) {\r\n                    }\r\n                }\r\n            },\r\n            // colors: \"#f3f3f8\",\r\n            plotOptions: {\r\n                bar: {\r\n                    columnWidth: '45%',\r\n                    distributed: true\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            xaxis: {\r\n                categories: channelData ? channelData.options.xaxis.categories : [],\r\n                labels: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n           await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    // console.log(response.data, \"CANAL_STAT\")\r\n                    if (!isCancelled) {\r\n                        let channels = [];\r\n                        for (const channel in response.data.channelsUse) {\r\n                            channels.push(channel);\r\n                        }\r\n                        let newChannels = {...defaultData};\r\n                        newChannels.options.xaxis.categories = channels;\r\n                        if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\r\n                            newChannels.series[0].data = Object.values(response.data.channelsUse).map(serie => serie.allInstitution)\r\n                        } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\r\n                            newChannels.series[0].data = Object.values(response.data.channelsUse).map(serie => serie.myInstitution)\r\n                        }\r\n                        setChannelData(newChannels);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\r\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\r\n            <div className=\"kt-portlet\">\r\n                <div className=\"kt-portlet__head\">\r\n                    <div className=\"kt-portlet__head-label\">\r\n                        <h3 className=\"kt-portlet__head-title\">Total des Réclamations reçues par Canal sur les 30 derniers jours</h3>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    load ? (\r\n                        <LoadingTable/>\r\n                    ) : (\r\n                        channelData ?\r\n                            <div id=\"chart\" className=\"kt-portlet__body\">\r\n                                <Chart options={channelData.options} series={channelData.series} type=\"bar\"\r\n                                       height={350}/>\r\n                            </div>\r\n                            : null\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(GraphChannel);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsActivity.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardStatClaim.jsx",["1117"],"import React, {useEffect, useState} from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {connect} from \"react-redux\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\n\r\nconst DashboardStatClaim = (props) => {\r\n\r\n    const [satisfactionData, setSatisfactionData] = useState(\"\");\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const tooltipHoverFormatter = (val, opts) => {\r\n        return val + ' : ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n    };\r\n\r\n    const defaultData = {\r\n        series: [\r\n\r\n            {\r\n                name: \"Mesure Satisfaction\",\r\n                data: satisfactionData ? satisfactionData.series.data1 : []\r\n            },\r\n            {\r\n                name: \"Satisfaisantes\",\r\n                data: satisfactionData ? satisfactionData.series.data2 : []\r\n            },\r\n            {\r\n                name: 'Non Satisfaisantes',\r\n                data: satisfactionData ? satisfactionData.series.data3 : []\r\n            }\r\n        ],\r\n        options: {\r\n            chart: {\r\n                height: 350,\r\n                type: 'line',\r\n                zoom: {\r\n                    enabled: false\r\n                },\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                width: [3, 5, 3],\r\n                curve: 'smooth',\r\n                dashArray: [0, 3, 3]\r\n            },\r\n            title: {\r\n                text: 'Evolution des satisfactions par mois',\r\n                align: 'left'\r\n            },\r\n            legend: {\r\n                tooltipHoverFormatter\r\n            },\r\n\r\n            grid: {\r\n                row: {\r\n                    colors: ['#f3f3f3', 'transparent'],\r\n                    opacity: 0.2\r\n                },\r\n            },\r\n            xaxis: {\r\n                categories:satisfactionData ? satisfactionData.options.xaxis.categories : [],\r\n                title: {\r\n                    text: 'Mois'\r\n                }\r\n            },\r\n\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n            await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    // console.log(response.data, \"claimerSatisfactionEvolution\")\r\n                    if (!isCancelled) {\r\n                        let claimSatifaction = response.data.claimerSatisfactionEvolution;\r\n                        let satisfiedData = [];\r\n                        for (const satisfied in Object.values(claimSatifaction)[0]) {\r\n                            satisfiedData.push(satisfied);\r\n                        }\r\n                        // console.log(satisfiedData,\"satisfiedData\")\r\n                        let newData = [];\r\n                        for (const key in claimSatifaction) {\r\n                            let totalSatisfaction = claimSatifaction[key];\r\n                            if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\r\n                                newData.push({\r\n                                    month: key,\r\n                                    data0: totalSatisfaction.measured.allInstitution,\r\n                                    data1: totalSatisfaction.satisfied.allInstitution,\r\n                                    data2: totalSatisfaction.unsatisfied.allInstitution\r\n                                })\r\n                            } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\r\n                                newData.push({\r\n                                    month: key,\r\n                                    data0: totalSatisfaction.measured.myInstitution,\r\n                                    data1: totalSatisfaction.satisfied.myInstitution,\r\n                                    data2: totalSatisfaction.unsatisfied.myInstitution\r\n                                })\r\n                            }\r\n                        }\r\n                        let newSatisfaction = {...defaultData};\r\n                        newSatisfaction.options.xaxis.categories=Object.values(newData.map(label=>label.month));\r\n                        for (let i = 0; i <= satisfiedData.length - 1; i++) {\r\n                            newSatisfaction.series[i].data = Object.values(newData).map(serie => serie['data' + i]);\r\n                        }\r\n                        // console.log(newSatisfaction,\"WITH_MONTH\");\r\n                        setSatisfactionData(newSatisfaction);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                });\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, [props.userPermissions, defaultData]);\r\n\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\r\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\r\n            <div className=\"kt-portlet\">\r\n                <div className=\"kt-portlet__head\">\r\n                    <div className=\"kt-portlet__head-label\">\r\n                        <h3 className=\"kt-portlet__head-title\">Evolution de la satisfaction des réclamants sur les 11\r\n                            derniers mois</h3>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    load ? (\r\n                        <LoadingTable/>\r\n                    ) : (\r\n                        satisfactionData ?\r\n                            <div id=\"chart\" className=\"kt-portlet__body\">\r\n                                <Chart options={satisfactionData.options} series={satisfactionData.series} type=\"line\"\r\n                                       height={350}/>\r\n                            </div>\r\n                            : null\r\n                    )\r\n                }\r\n            </div>\r\n            : null\r\n    )\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DashboardStatClaim);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardStatistic.jsx",["1118"],"import React, {useEffect, useState} from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\nconst DashboardStatistic = (props) => {\r\n    const [data, setProcessData] = useState(\"\");\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const tooltipHoverFormatter = (val, opts) => {\r\n        return val + ' : ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n    };\r\n\r\n    const defaultData = {\r\n        series: [{\r\n            name: \"Enregistrées\",\r\n            data: data ? data.series.data1 : []\r\n        },\r\n            {\r\n                name: \"Tranférées à une Unité\",\r\n                data: data ? data.series.data2 : []\r\n            },\r\n            {\r\n                name: 'Traitées',\r\n                data: data ? data.series.data3 : []\r\n            },\r\n            {\r\n                name: 'Non Fondées',\r\n                data: data ? data.series.data4 : []\r\n            },\r\n            {\r\n                name: 'Mesure Satisfaction',\r\n                data: data ? data.series.data5 : []\r\n            }\r\n        ],\r\n        options: {\r\n            chart: {\r\n                height: 350,\r\n                type: 'line',\r\n                zoom: {\r\n                    enabled: false\r\n                },\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                width: [3, 5, 3, 2, 3],\r\n                curve: 'smooth',\r\n                dashArray: [0, 3, 3, 0, 3]\r\n            },\r\n            title: {\r\n                text: 'Evolution des satisfactions par mois',\r\n                align: 'left'\r\n            },\r\n            legend: {\r\n                tooltipHoverFormatter\r\n            },\r\n            fill: {\r\n                opacity: 0.05,\r\n                type: 'gradient',\r\n                gradient: {\r\n                    shadeIntensity: 1,\r\n                    inverseColors: false,\r\n                    opacityFrom: 0.45,\r\n                    opacityTo: 0.05,\r\n                    stops: [20, 100, 100, 100]\r\n                },\r\n            },\r\n            grid: {\r\n                row: {\r\n                    colors: ['#f3f3f3', 'transparent'],\r\n                    opacity: 0.2\r\n                },\r\n            },\r\n\r\n            xaxis: {\r\n                categories: data ? data.options.xaxis.categories : [],\r\n                title: {\r\n                    text: 'Mois'\r\n                }\r\n            },\r\n\r\n        },\r\n    };\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n           await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    if (!isCancelled) {\r\n                        // console.log(response.data, \"claimerProcessEvolution\");\r\n                        let claimProcess = response.data.claimerProcessEvolution;\r\n                        let processData = [];\r\n                        for (const processus in Object.values(claimProcess)[0]) {\r\n                            processData.push(processus);\r\n                        }\r\n                        // console.log(processData,\"processData\");\r\n                        let newData = [];\r\n                        for (const key in claimProcess) {\r\n                            let totalProcess = claimProcess[key];\r\n                            if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\r\n                                newData.push({\r\n                                    month: key,\r\n                                    data0: totalProcess.registered.allInstitution,\r\n                                    data1: totalProcess.transferred_to_unit.allInstitution,\r\n                                    data2: totalProcess.treated.allInstitution,\r\n                                    data3: totalProcess.unfounded.allInstitution,\r\n                                    data4: totalProcess.measured.allInstitution\r\n                                })\r\n                            } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\r\n                                newData.push({\r\n                                    month: key,\r\n                                    data0: totalProcess.registered.myInstitution,\r\n                                    data1: totalProcess.transferred_to_unit.myInstitution,\r\n                                    data2: totalProcess.treated.myInstitution,\r\n                                    data3: totalProcess.unfounded.myInstitution,\r\n                                    data4: totalProcess.measured.myInstitution\r\n                                })\r\n                            }\r\n                        }\r\n                        let newProcess = {...defaultData};\r\n                        newProcess.options.xaxis.categories=Object.values(newData.map(label=>label.month));\r\n                        for (let i = 0; i <= processData.length - 1; i++) {\r\n                            newProcess.series[i].data = Object.values(newData).map(serie => serie['data' + i]);\r\n                        }\r\n                        // console.log(newProcess,\"WITH_MONTH\");\r\n                        setProcessData(newProcess);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\r\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\r\n            <div className=\"kt-portlet\">\r\n                <div className=\"kt-portlet__head\">\r\n                    <div className=\"kt-portlet__head-label\">\r\n                        <h3 className=\"kt-portlet__head-title\">Evolution de la satisfaction des réclamations sur les 11\r\n                            derniers mois</h3>\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    load ? (\r\n                        <LoadingTable/>\r\n                    ) : (\r\n                    data ?\r\n                        <div id=\"chart\" className=\"kt-portlet__body\">\r\n                            <Chart options={data.options} series={data.series} type=\"area\" height={350}/>\r\n                        </div>\r\n                        : null\r\n                    )\r\n                }\r\n            </div>\r\n            : null\r\n    )\r\n\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DashboardStatistic);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsUnit.jsx",["1119"],"import React, {useEffect, useState} from 'react';\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {connect} from \"react-redux\";\r\nimport {percentageData} from \"../../../helpers/function\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst DashboardClaimsUnit = (props) => {\r\n\r\n    const [data, setData] = useState(\"\");\r\n    const [totalData, setTotalData] = useState(\"\");\r\n    const [load, setLoad] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n           await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    if (!isCancelled) {\r\n                        setData(response.data.statistics);\r\n                        setTotalData(response.data.totalClaimsRegisteredStatistics);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"show-dashboard-data-my-unit\") ?\r\n            (\r\n                <div>\r\n                    <div className=\"kt-portlet__head\">\r\n                        <div className=\"kt-portlet__head-label\">\r\n                            <h5 className=\"kt-portlet__head-title\">\r\n                                Statistiques des Réclamations de mon Unité sur les 30 derniers jours\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                                <div className=\"row row-no-padding row-col-separator-lg\">\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Enregistrées\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-brand\">\r\n\t\t\t\t\t\t\t\t\t{data.totalRegistered ? data.totalRegistered.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Incomplètes\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-danger\">\r\n\t\t\t\t\t\t\t\t\t{data.totalIncomplete ? data.totalIncomplete.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalIncomplete ?\r\n                                                        <div className=\"progress-bar kt-bg-danger\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalIncomplete.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalIncomplete.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\r\n\t\t\t\t\t\t\t\t\t% Réclamations Incomplètes\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n\r\n                                                {\r\n                                                    data.totalIncomplete ?\r\n                                                        <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalIncomplete.myUnit), totalData)}\r\n                                           </span>\r\n                                                        : \"\"\r\n                                                }\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Complètes\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-success\">\r\n\t\t\t\t\t\t\t\t\t{data.totalComplete ? data.totalComplete.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalComplete ?\r\n                                                        <div className=\"progress-bar kt-bg-success\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalComplete.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalComplete.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\r\n\t\t\t\t\t\t\t\t\t% Réclamations Complètes\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalComplete ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalComplete.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Transférées à une Unité\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-brand\">\r\n                                        {data.totalTransferredToUnit ? data.totalTransferredToUnit.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n\r\n                                                {\r\n                                                    data.totalTransferredToUnit ?\r\n                                                        <div className=\"progress-bar kt-bg-brand\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalTransferredToUnit.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalTransferredToUnit.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Réclamations Transférées à une Unité\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalTransferredToUnit ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalTransferredToUnit.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations en Cours de Traitement\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-warning\">\r\n\t\t\t\t\t\t\t\t\t   {data.totalBeingProcess ? data.totalBeingProcess.myUnit : \"\"}\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalBeingProcess ?\r\n                                                        <div className=\"progress-bar kt-bg-warning\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalBeingProcess.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalBeingProcess.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Réclamations en Cours de Traitement\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalBeingProcess ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalBeingProcess.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Traitées\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-success\">\r\n                                        {data.totalTreated ? data.totalTreated.myUnit : \"\"}\r\n                                    </span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalTreated ?\r\n                                                        <div className=\"progress-bar kt-bg-success\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalTreated.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalTreated.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : ''\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Réclamations Traitées\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalTreated ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalTreated.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Réclamations Non Fondées\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-success\">\r\n                                        {data.totalUnfounded ? data.totalUnfounded.myUnit : \"\"}\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalUnfounded ?\r\n                                                        <div className=\"progress-bar kt-bg-success\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalUnfounded.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalUnfounded.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Réclamations Non Fondées\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalUnfounded ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalUnfounded.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 col-lg-3 col-xl-3\">\r\n                                        <div className=\"kt-widget24\">\r\n                                            <div className=\"kt-widget24__details\">\r\n                                                <div className=\"kt-widget24__info\">\r\n                                                    <h5 className=\"kt-widget24__title\">\r\n                                                        Total Satisfaction Mesurée\r\n                                                    </h5>\r\n                                                    <span className=\"kt-widget24__desc\">\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                                </div>\r\n                                                <span className=\"kt-widget24__stats kt-font-danger\">\r\n                                        {data.totalMeasuredSatisfaction ? data.totalMeasuredSatisfaction.myUnit : \"\"}\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                            <div className=\"progress progress--sm\">\r\n                                                {\r\n                                                    data.totalMeasuredSatisfaction ?\r\n                                                        <div className=\"progress-bar kt-bg-danger\" role=\"progressbar\"\r\n                                                             aria-valuenow={percentageData((data.totalMeasuredSatisfaction.myUnit), totalData)}\r\n                                                             aria-valuemin=\"0\" aria-valuemax=\"100\"\r\n                                                             style={{width: percentageData((data.totalMeasuredSatisfaction.myUnit), totalData)}}>\r\n                                                        </div>\r\n                                                        : \"\"\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"kt-widget24__action\">\r\n\t\t\t\t\t\t\t\t<span className=\"kt-widget24__change\">\r\n\t\t\t\t\t\t\t\t\t% Satisfaction Mesurée\r\n\t\t\t\t\t\t\t\t</span>\r\n                                                <span className=\"kt-widget24__number\">\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        data.totalMeasuredSatisfaction ?\r\n                                            <span className=\"kt-widget24__number\">\r\n                                                {percentageData((data.totalMeasuredSatisfaction.myUnit), totalData)}\r\n                                           </span>\r\n                                            : \"\"\r\n                                    }\r\n\t\t\t\t\t\t\t\t</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            ) : \"\"\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DashboardClaimsUnit);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardSummaryReport.jsx",["1120"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport LoadingTable from \"../LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\nconst DashboardSummaryReport = (props) => {\r\n    const [load, setLoad] = useState(true);\r\n\r\n    const reportColor = [\r\n        {\r\n            id: 0,\r\n            rowColor: \"table-primary\",\r\n            rang:1,\r\n        },\r\n        {\r\n            id: 1,\r\n            rowColor: \"table-success\",\r\n            rang:2,\r\n        },\r\n        {\r\n            id: 2,\r\n            rowColor: \"table-bland\",\r\n            rang:3,\r\n        },\r\n        {\r\n            id: 3,\r\n            rowColor: \"table-warning\",\r\n            rang:4,\r\n        },\r\n        {\r\n            id: 4,\r\n            rowColor: \"table-danger\",\r\n            rang:5\r\n        },\r\n\r\n    ];\r\n\r\n    const [data, setData] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        async function fetchData() {\r\n            await axios.get(appConfig.apiDomaine + \"/dashboard\")\r\n                .then(response => {\r\n                    if (!isCancelled) {\r\n                        let claimObjects = response.data.claimObjectsUse;\r\n                        let newData = [];\r\n                        for (const key in claimObjects) {\r\n                            let totalObjectUse = claimObjects[key];\r\n                            if (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\")) {\r\n                                newData.push({canal: key, label: totalObjectUse.allInstitution})\r\n                            } else if (verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) {\r\n                                newData.push({canal: key, label: totalObjectUse.myInstitution})\r\n                            }\r\n                        }\r\n                        newData.sort(function (a, b) {\r\n                            return b.label - a.label;\r\n                        });\r\n                        const result = newData.filter(function (event) {\r\n                            return newData.indexOf(event) < 5\r\n                        });\r\n                        setData(result);\r\n                        setLoad(false)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n        return () => {\r\n            isCancelled = true;\r\n        }\r\n    }, []);\r\n    return (\r\n        (verifyPermission(props.userPermissions, \"show-dashboard-data-all-institution\") ||\r\n            verifyPermission(props.userPermissions, \"show-dashboard-data-my-institution\")) ?\r\n            <div className=\"kt-portlet\">\r\n                    <div className=\"kt-portlet__head\">\r\n                        <div className=\"kt-portlet__head-label\">\r\n                            <h3 className=\"kt-portlet__head-title\">\r\n                                Statistique des cinq (05) plus fréquents Objets de Réclamations sur les 30 derniers jours\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div className=\"kt-portlet__body\">\r\n                                <table className=\"table table-striped table-bordered\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>Rang</th>\r\n                                        <th>Objets de Réclamations</th>\r\n                                        <th>Total</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n\r\n                                    {data ?\r\n                                        data.map((report, i) => (\r\n                                            reportColor.map((color, j) => (\r\n                                                i === j ?\r\n                                                    report.label!==0?\r\n                                                    <tr key={i}>\r\n                                                        <td>{color.rang}</td>\r\n\r\n                                                        <td>{report.canal}</td>\r\n\r\n                                                        <td>{report.label}</td>\r\n                                                    </tr> : null\r\n                                                    : null\r\n                                            ))\r\n                                        ))\r\n                                        : null\r\n                                    }\r\n\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n                        )\r\n                    }\r\n            </div>\r\n            : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DashboardSummaryReport);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\APP_MACRO\\Holding\\DashboardClaimsAll.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DashboardForm\\DashboardClaimsMy.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToValidate.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToMeasure.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DoubleButtonDetail.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToAssignStaff.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToAssignUnit.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToComplete.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\AttachmentsButtonDetail.jsx",["1121"],"import React from \"react\";\r\nimport appConfig from \"../../config/appConfig\";\r\n\r\nconst AttachmentsButtonDetail = ({claim}) => {\r\n    return (\r\n        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\">\r\n            <div className=\"kt-heading kt-heading--md\">Liste de pièces jointes\r\n            </div>\r\n            <div className=\"kt-form__section kt-form__section--first\">\r\n                <div className=\"kt-wizard-v2__review\">\r\n                    {\r\n                        !claim ? \"\" : (\r\n                            claim.files.length ? (\r\n                                claim.files.map((file, index) => (\r\n                                    <div className=\"kt-wizard-v2__review-item\"\r\n                                         key={index}>\r\n                                        {/*<div className=\"kt-wizard-v2__review-title\">*/}\r\n                                        {/*    Pièce jointe Nº{index + 1}*/}\r\n                                        {/*</div>*/}\r\n                                        <div className=\"kt-wizard-v2__review-content\">\r\n                                            <a href={`${appConfig.apiDomaine}${file.url}`}\r\n                                               download={true} target={\"_blank\"}>\r\n                                                {file.title}\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            ) : (\r\n                                <div className=\"kt-wizard-v2__review-item\">\r\n                                    <div className=\"kt-wizard-v2__review-title\">\r\n                                        Pas de pièce jointe\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AttachmentsButtonDetail;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\DoubleButton.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimButtonDetail.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClaimButton.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\AttachmentsButton.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClientButtonDetail.jsx",["1122","1123"],"import React from \"react\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst ClientButtonDetail = ({claim}) => {\r\n    return (\r\n        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\"\r\n             data-ktwizard-state=\"current\">\r\n            <div className=\"kt-heading kt-heading--md\">Détails du client</div>\r\n            <div className=\"kt-form__section kt-form__section--first\">\r\n                <div className=\"kt-wizard-v2__review\">\r\n                    <div className=\"kt-wizard-v2__review-item\">\r\n                        <div className=\"kt-widget kt-widget--user-profile-1\">\r\n                            <div className=\"kt-widget__head\">\r\n                                <div className=\"kt-widget__media\">\r\n                                    <img src=\"/personal/img/default-avatar.png\"\r\n                                         alt=\"image\"/>\r\n                                </div>\r\n                                <div className=\"kt-widget__content\"\r\n                                     style={{marginTop: \"auto\", marginBottom: \"auto\"}}>\r\n                                    <div className=\"kt-widget__section\">\r\n                                        {\r\n                                            !claim ? (\r\n                                                <Loader/>\r\n                                            ) : (\r\n                                                <a href=\"#\"\r\n                                                   className=\"kt-widget__username\">\r\n                                                    {`${claim.claimer.lastname} ${claim.claimer.firstname}`}\r\n                                                    <i className=\"flaticon2-correct kt-font-success\"/>\r\n                                                </a>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"kt-widget__body\">\r\n                                {\r\n                                    !claim ? \"\" : (\r\n                                        <div className=\"kt-widget__content\">\r\n                                            <div className=\"kt-widget__info\">\r\n                                                <span className=\"fa fa-venus-mars\" style={{fontSize: \"1.5rem\"}}/>\r\n                                                <span className=\"kt-widget__data\">{claim.claimer.sexe === 'F' ? \"Féminin\" : \"Masculin\"}</span>\r\n                                            </div>\r\n                                            <div className=\"kt-widget__info\">\r\n                                                <span className=\"fa fa-envelope\" style={{fontSize: \"1.5rem\"}}/>\r\n                                                <span className=\"kt-widget__data\">\r\n                                                    {\r\n                                                        claim.claimer.email.map((mail, index) => (\r\n                                                            index === claim.claimer.email.length - 1 ? mail : mail + \"/ \"\r\n                                                        ))\r\n                                                    }\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className=\"kt-widget__info\">\r\n                                                <span className=\"fa fa-phone-alt\" style={{fontSize: \"1.5rem\"}}/>\r\n                                                <span className=\"kt-widget__data\">\r\n                                                    {\r\n                                                        claim.claimer.telephone.map((telephone, index) => (\r\n                                                            index === claim.claimer.telephone.length - 1 ? telephone : telephone + \"/ \"\r\n                                                        ))\r\n                                                    }\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className=\"kt-widget__info\">\r\n                                                <span className=\"fa fa-location-arrow\" style={{fontSize: \"1.5rem\"}}/>\r\n                                                <span className=\"kt-widget__data\">\r\n                                                    {console.log(\"ville:\", claim)}\r\n                                                    {claim.claimer.ville && claim.claimer.ville !== \"null\" ? claim.claimer.ville : \"-\"}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClientButtonDetail;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ClientButton.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FusionClaim.jsx",["1124","1125"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastErrorMessageWithParameterConfig,\r\n    toastMergeSuccessMessageConfig,\r\n    toastSuccessMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {debug, formatDateToTimeStampte} from \"../../helpers/function\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst FusionClaim = props => {\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [choice, setChoice] = useState({\r\n        original: false,\r\n        duplicate: false\r\n    });\r\n\r\n    const onClickFusion = () => {\r\n        if (choice.original || choice.duplicate) {\r\n            setStartRequest(true);\r\n            if (choice.original && choice.duplicate)\r\n                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Veuillez choisir une seule réclamation.\"));\r\n            else {\r\n                setStartRequest(true);\r\n                if (verifyTokenExpire()) {\r\n                    axios.put(`${appConfig.apiDomaine}/claim-awaiting-assignment/${props.claim.id}/merge/${props.copyClaim.id}`, {keep_claim: !choice.original && !choice.duplicate ? null : choice.original})\r\n                        .then(response => {\r\n                            ToastBottomEnd.fire(toastMergeSuccessMessageConfig);\r\n                            setStartRequest(false);\r\n                            document.getElementById(\"close-button\").click();\r\n                            window.location.href = `/process/claim-assign/${response.data.id}/detail`;\r\n                        })\r\n                        .catch(({response}) => {\r\n                            if (response.data.error.keep_claim)\r\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(response.data.error.keep_claim[0]));\r\n                            setStartRequest(false);\r\n                            console.log(\"Something is wrong\")\r\n                        })\r\n                    ;\r\n                }\r\n            }\r\n        } else\r\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Veillez choisir la réclamation à conserver.\"));\r\n    };\r\n\r\n    const handleChoiceChange = (e) => {\r\n        const newChoice = {...choice};\r\n        if (e.target.id === \"original\")\r\n            setChoice({...newChoice, original: e.target.checked, duplicate: !e.target.checked});\r\n        else if(e.target.id === \"duplicate\")\r\n            setChoice({...newChoice, duplicate: e.target.checked, original: !e.target.checked});\r\n    };\r\n\r\n    const onClickCloseButton = () => {\r\n        document.getElementById(\"close-button\").click();\r\n        props.onCloseModal();\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal fade\" id=\"kt_modal_4\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Fusion de réclamation</h5>\r\n                        <button disabled={startRequest} onClick={() => onClickCloseButton()} type=\"button\" className=\"close\"/>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form>\r\n                            <table className=\"table table-bordered text-center\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th><strong>Paramètre</strong></th>\r\n                                        <th style={{width: \"40%\"}}><strong>Réclamation</strong></th>\r\n                                        <th style={{width: \"40%\"}}><strong>Doublon</strong></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td><strong>Réclamant</strong></td>\r\n                                        <td>{props.claim.claimer ? `${props.claim.claimer.lastname} ${props.claim.claimer.firstname}` : \"-\"}</td>\r\n                                        <td>{props.copyClaim.claimer ? `${props.copyClaim.claimer.lastname} ${props.copyClaim.claimer.firstname}` : \"-\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Montant réclamé</strong></td>\r\n                                        <td>{props.claim.amount_disputed ? `${props.claim.amount_disputed} ${props.claim.amount_currency ? props.claim.amount_currency.name[\"fr\"] : \"\"}` : \"-\"}</td>\r\n                                        <td>{props.copyClaim.amount_disputed ? `${props.copyClaim.amount_disputed} ${props.copyClaim.amount_currency ? props.copyClaim.amount_currency.name[\"fr\"] : \"\"}` : \"-\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Date de réception</strong></td>\r\n                                        <td>{props.claim.created_at ? formatDateToTimeStampte(props.claim.created_at) : \"-\"}</td>\r\n                                        <td>{props.copyClaim.created_at ? formatDateToTimeStampte(props.copyClaim.created_at) : \"-\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Date de l'évenement</strong></td>\r\n                                        <td>{props.claim.event_occured_at ? formatDateToTimeStampte(props.claim.event_occured_at) : \"-\"}</td>\r\n                                        <td>{props.copyClaim.event_occured_at ? formatDateToTimeStampte(props.copyClaim.event_occured_at) : \"-\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Catégorie de reclamation</strong></td>\r\n                                        <td>{props.claim.claim_object ? props.claim.claim_object.claim_category.name[\"fr\"] : \"-\"}</td>\r\n                                        <td>{props.copyClaim.claim_object ? props.copyClaim.claim_object.claim_category.name[\"fr\"] : \"-\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Objet de reclamation</strong></td>\r\n                                        <td>{props.claim.claim_object ? props.claim.claim_object.name[\"fr\"] : \"-\"}</td>\r\n                                        <td>{props.copyClaim.claim_object ? props.copyClaim.claim_object.name[\"fr\"] : \"-\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Description</strong></td>\r\n                                        <td>{props.claim.description ? props.claim.description: \"-\"}</td>\r\n                                        <td>{props.copyClaim.description ? props.copyClaim.description : \"-\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Attente</strong></td>\r\n                                        <td>{props.claim.claimer_expectation ? props.claim.claimer_expectation : \"-\"}</td>\r\n                                        <td>{props.copyClaim.claimer_expectation ? props.copyClaim.claimer_expectation : \"-\"}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><strong>Choix</strong></td>\r\n                                        <td>\r\n                                            <label className=\"kt-checkbox\">\r\n                                                <input id={\"original\"} type=\"checkbox\" checked={choice.original} onChange={handleChoiceChange}/><span/>\r\n                                            </label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <label className=\"kt-checkbox\">\r\n                                                <input id={\"duplicate\"} type=\"checkbox\" checked={choice.duplicate} onChange={handleChoiceChange}/><span/>\r\n                                            </label>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button disabled={startRequest} onClick={() => onClickCloseButton()} type=\"button\" className=\"btn btn-secondary\">Fermer</button>\r\n                        <button style={{display: \"none\"}} id={\"close-button\"} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Fermer</button>\r\n                        {\r\n                            !startRequest ? (\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={() => onClickFusion()}>Fusioner</button>\r\n                            ) : (\r\n                                <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                    Chargement...\r\n                                </button>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FusionClaim;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ColToTreat.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\Modal\\ConfirmClaimAddModal.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimAssignToStaffDetail.jsx",["1126","1127"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport UnfoundedModal from \"../components/UnfoundedModal\";\r\nimport TreatmentForm from \"../components/TreatmentForm\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\n\r\nconst ClaimAssignToStaffDetail = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n    const {id} = useParams();\r\n\r\n    if (!verifyPermission(props.userPermissions, \"show-claim-assignment-to-staff\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [claim, setClaim] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${appConfig.apiDomaine}/claim-assignment-staff/${id}`)\r\n                .then(response => {\r\n                    setClaim(response.data);\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"));\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"show-claim-assignment-to-staff\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/claim-assign/to-staff\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Réclamations à traitrer\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"default\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {claim?claim.reference: 'Detail'}\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                        <i className=\"flaticon-clipboard\"/>\r\n                                                    </div>\r\n                                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                            Traitement de la réclamtion\r\n                                                        </div>\r\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                            Procédez au traitement de la réclamation\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <button type=\"button\"\r\n                                                    data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                                                    className=\"btn btn-danger\">\r\n                                                NON FONDÉE\r\n                                            </button>\r\n                                            {\r\n                                                claim ? (\r\n                                                    <UnfoundedModal\r\n                                                        activeTreatment={\r\n                                                            claim.active_treatment ? (\r\n                                                                claim.active_treatment\r\n                                                            ) : null\r\n                                                        }\r\n                                                        getId={`${id}`}\r\n                                                    />\r\n                                                ) : (\r\n                                                    <UnfoundedModal\r\n                                                        getId={`${id}`}\r\n                                                    />\r\n                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        <div className=\"kt-wizard-v2__content\"\r\n                                             data-ktwizard-type=\"step-content\">\r\n                                            <div className=\"kt-heading kt-heading--md\">Traitement de la\r\n                                                réclamation\r\n                                            </div>\r\n                                            {\r\n                                                claim ? (\r\n                                                    claim.active_treatment ? (\r\n                                                        claim.active_treatment.validated_at && claim.active_treatment.invalidated_reason ? (\r\n                                                            <div className=\"kt-wizard-v2__review-item mb-4\">\r\n                                                                <div className=\"kt-wizard-v2__review-title\">\r\n                                                                    <h5><strong className=\"text-danger\">Traitement rejeté</strong></h5>\r\n                                                                </div>\r\n                                                                <div className=\"kt-wizard-v2__review-content\">\r\n                                                                    <strong>Motif</strong>: <span className=\"mx-2\">{claim.active_treatment.invalidated_reason ? claim.active_treatment.invalidated_reason : \"Pas de raison\"}</span><br/>\r\n                                                                    <hr/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        ) : null\r\n                                                    ) : null\r\n                                                ) : null\r\n                                            }\r\n                                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                                <div className=\"kt-wizard-v2__review\">\r\n                                                    <div className=\"kt-wizard-v2__review-content\">\r\n                                                        {console.log(claim ,\"claim_treatment\" )}\r\n                                                        {\r\n                                                            claim ? (\r\n                                                                <TreatmentForm\r\n                                                                    amount_disputed={claim?claim.amount_disputed:null}\r\n                                                                    activeTreatment={\r\n                                                                        claim.active_treatment ? (\r\n                                                                            claim.active_treatment\r\n                                                                        ) : null\r\n                                                                    }\r\n                                                                    getId={`${id}`}\r\n                                                                />\r\n                                                            ) : (\r\n                                                                <TreatmentForm\r\n                                                                    amount_disputed={claim?claim.amount_disputed:null}\r\n                                                                    getId={`${id}`}\r\n                                                                />\r\n                                                            )\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANT\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimAssignToStaffDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ConfigRapportAutoForm.jsx",["1128","1129"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig, toastEditSuccessMessageConfig,\r\n} from \"../../config/toastConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport Select from \"react-select\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/reporting-claim/config`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\r\n        }\r\n    },\r\n\r\n};\r\n\r\nconst ConfigRapportAutoForm = (props) => {\r\n    const {id} = useParams();\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'config-reporting-claim-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n\r\n    const defaultData = {\r\n        institution_id: \"\",\r\n        period: \"\",\r\n        email: [],\r\n    };\r\n    const defaultError = {\r\n        institution_id: \"\",\r\n        period: [],\r\n        email: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [periodData, setPeriodData] = useState(null);\r\n    const [period, setPeriod] = useState(null);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [disabledInput, setDisabledInput] = useState(false);\r\n    const [institution, setInstitution] = useState(null);\r\n    const [institutions, setInstitutions] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.get(endPoint.list + `/${id}/edit`)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                        const newRapport = {\r\n                            period: (response.data.reportingTask.period !== null) ? (response.data.reportingTask.period) : '',\r\n                            email: response.data.reportingTask.email,\r\n                            institution_id:response.data.reportingTask.institution_targeted_id!==null?response.data.reportingTask.institution_targeted_id:\"\"\r\n                        };\r\n\r\n                        setData(newRapport);\r\n\r\n                        if (response.data.reportingTask.period !== null) {\r\n                            setPeriodData(response.data.period);\r\n                            setPeriod(response.data.reportingTask.period_tag);\r\n                        }\r\n                        if (response.data.reportingTask.institution_targeted_id !== null) {\r\n                            setInstitutions(response.data.institutions);\r\n                            setInstitution({value: response.data.reportingTask.institution_targeted.id, label: response.data.reportingTask.institution_targeted.name});\r\n\r\n                        }\r\n                    })\r\n            }\r\n            axios.get(endPoint.list + `/create`)\r\n                .then(response => {\r\n                    let options =\r\n                        response.data.institutions.length ? response.data.institutions.map(institution => ({\r\n                            value: institution.id, label: institution.name\r\n                        })) : \"\"\r\n                    ;\r\n                    setInstitutions(options);\r\n                    setPeriodData(response.data.period)\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const onChangePeriod = (selected) => {\r\n        const newData = {...data};\r\n        newData.period = selected.value;\r\n        setPeriod(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeEmail = (mail) => {\r\n        const newData = {...data};\r\n        newData.email = mail;\r\n        setData(newData);\r\n    };\r\n\r\n    const handleDisabledInputChange = () => {\r\n        setDisabledInput(!disabledInput);\r\n    };\r\n    const onChangeInstitution = (selected) => {\r\n        const newData = {...data};\r\n        if (selected) {\r\n            newData.institution_id = selected.value;\r\n            setInstitution(selected);\r\n        } else setInstitution(null);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(endPoint.list + `/${id}`, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                        window.location.href=\"/settings/rapport-auto\"\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(endPoint.list, data)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...error.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/clients/category\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Rapport Automatique\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification des rapports automatiques\" : \"Ajout des rapports automatiques\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n\r\n                                                                <div className=\"form-group row\">\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"institution\">\r\n                                                                        <input\r\n                                                                            type=\"checkbox\"\r\n                                                                            value={disabledInput}\r\n                                                                            onChange={handleDisabledInputChange}/>\r\n                                                                        <span/>    Toutes les institutions<span/></label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        <Select\r\n                                                                            isClearable\r\n                                                                            isDisabled={disabledInput}\r\n                                                                            placeholder={\"Veuillez sélectionner une institution\"}\r\n                                                                            value={institution}\r\n                                                                            onChange={onChangeInstitution}\r\n                                                                            options={institutions?institutions.map(institution=>institution):\"\"}\r\n                                                                        />\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className={error.period.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"exampleSelect1\">Période(s)</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                            <Select\r\n                                                                                value={period}\r\n                                                                                onChange={onChangePeriod}\r\n                                                                                options={periodData }\r\n                                                                            />\r\n                                                                        {\r\n                                                                            error.period.length ? (\r\n                                                                                error.period.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className={error.email.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"email\">Votre Email(s)</label>\r\n                                                                    <div className=\" col-lg-9 col-xl-6\">\r\n                                                                        <TagsInput\r\n                                                                            value={data.email}\r\n                                                                            onChange={onChangeEmail}\r\n                                                                            inputProps={{\r\n                                                                                className: \"react-tagsinput-input\",\r\n                                                                                placeholder: \"Email(s)\"\r\n                                                                            }}\r\n                                                                        />\r\n                                                                        {\r\n                                                                            error.email.length ? (\r\n                                                                                error.email.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Enregistrer</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Loading...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/settings/rapport-auto\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/settings/rapport-auto\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution') ? (\r\n            printJsx()\r\n        ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ConfigRapportAutoForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\InstitutionMessageApi.jsx",["1130","1131"],"import React, {useEffect, useState} from \"react\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig, toastErrorMessageWithParameterConfig,\r\n} from \"../../config/toastConfig\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport Select from \"react-select\";\r\nimport {debug} from \"../../helpers/function\";\r\nimport InputRequire from \"../components/InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst InstitutionMessageApi = props => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-institution-message-api'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'update-my-institution-message-api'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const [defaultData, setDefaultData] = useState({});\r\n    const [defaultError, setDefaultError] = useState({});\r\n\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [messageApis, setMessageApis] = useState([]);\r\n    const [messageApi, setMessageApi] = useState(null);\r\n    const [editData, setEditData] = useState(null);\r\n\r\n    const formatMessageApiOptions = (messageApis) => {\r\n        const messageApiOptions = [];\r\n        messageApis.map(messageApi => messageApiOptions.push({value: messageApi.id, label: messageApi.method, params: messageApi.params}));\r\n        return messageApiOptions;\r\n    };\r\n\r\n    const formatState = (params, paramData = null) => {\r\n        const newState = {};\r\n        const newError = {};\r\n        console.log(paramData,\"PARAMS\");\r\n        params.map(param => {\r\n            if (param !== \"to\" && param !== \"text\") {\r\n                newState[param] = paramData ? paramData[param] : \"\";\r\n                newError[`params.${param}`] = [];\r\n            }\r\n        });\r\n        setData(newState);\r\n        setDefaultData(newState);\r\n        setError(newError);\r\n        setDefaultError(newError);\r\n    };\r\n\r\n    const initialState = (stateData) => {\r\n        setEditData({...stateData.params, value: stateData.message_api.id});\r\n        formatState(stateData.message_api.params, stateData.params);\r\n        setMessageApi({\r\n            value: stateData.message_api.id,\r\n            label: stateData.message_api.method,\r\n            params: stateData.message_api.params\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/any/institutions/${id}/message-apis/create`)\r\n                    .then(({data}) => {\r\n                        setMessageApis(formatMessageApiOptions(data.messageApis));\r\n                        if (data.institutionMessageApi) {\r\n                            initialState(data.institutionMessageApi);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            } else {\r\n                await axios.get(`${appConfig.apiDomaine}/my/institutions/message-apis/create`)\r\n                    .then(({data}) => {\r\n                        debug(data, \"data\");\r\n                        setMessageApis(formatMessageApiOptions(data.messageApis));\r\n                        if (data.institutionMessageApi) {\r\n                            initialState(data.institutionMessageApi);\r\n                        }\r\n                    })\r\n                    .catch(({response}) => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const handleMessageApiChange = (selected) => {\r\n        if (selected)\r\n            formatState(selected.params, editData ? selected.value === editData.value ? editData : null : null);\r\n        else {\r\n            setData({});\r\n            setDefaultData({});\r\n            setError({});\r\n            setDefaultError({});\r\n        }\r\n        setMessageApi(selected);\r\n    };\r\n\r\n    const handleChange = (e, param) => {\r\n        const newData = {...data};\r\n        newData[param] = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const executeSave = (url, saveData) => {\r\n        if (verifyTokenExpire()) {\r\n            axios.post(url, saveData)\r\n                .then(() => {\r\n                    setStartRequest(false);\r\n                    setError(defaultError);\r\n                    ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                })\r\n                .catch(errorRequest => {\r\n                    setStartRequest(false);\r\n                    setError({...defaultError, ...errorRequest.response.data.error});\r\n                    ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const saveData = (e) => {\r\n        e.preventDefault();\r\n        const sendData = {\r\n            \"message_api_id\": messageApi ? messageApi.value : \"\",\r\n            \"params\": data\r\n        };\r\n        debug(!sendData.message_api_id.length, \"sendData\");\r\n        if (sendData.message_api_id.length) {\r\n            setStartRequest(true);\r\n            if (id)\r\n                executeSave(`${appConfig.apiDomaine}/any/institutions/${id}/message-apis`, sendData);\r\n            else\r\n                executeSave(`${appConfig.apiDomaine}/my/institutions/message-apis`, sendData);\r\n        } else\r\n            ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(\"Veillez renseigner les informations\"));\r\n    };\r\n\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Fournisseur SMS\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            Modification Fournisseur SMS\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n\r\n                                            <div className={\"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Fournisseur SMS <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        value={messageApi}\r\n                                                        placeholder=\"oceanique\"\r\n                                                        onChange={handleMessageApiChange}\r\n                                                        options={messageApis}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                Object.keys(error).length ? (\r\n                                                    Object.keys(data).map((param, index) => (\r\n                                                        <div key={index} className={ error[Object.keys(error)[index]].length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                            <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor={Object.keys(data)[index]}>{Object.keys(data)[index]} <InputRequire/></label>\r\n                                                            <div className=\"col-lg-9 col-xl-6\">\r\n                                                                <input\r\n                                                                    id={Object.keys(data)[index]}\r\n                                                                    type={Object.keys(data)[index] === \"password\" ? \"password\" : \"text\"}\r\n                                                                    className={error[Object.keys(error)[index]].length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                                    placeholder={Object.keys(data)[index]}\r\n                                                                    value={data[Object.keys(data)[index]]}\r\n                                                                    onChange={(e) => handleChange(e, param)}\r\n                                                                />\r\n                                                                {\r\n                                                                    error[Object.keys(error)[index]].length ? (\r\n                                                                        error[Object.keys(error)[index]].map((error, index) => (\r\n                                                                            <div key={index} className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    ) : null\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    ))\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => saveData(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/institution\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/institution\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-institution-message-api') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'update-my-institution-message-api') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(InstitutionMessageApi);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\MessageAPIForm.jsx",["1132"],"import React, {useEffect, useState} from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401, redirectError401Page} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n    toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport InputRequire from \"./InputRequire\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst MessageAPIForm = props => {\r\n    const {id} = useParams();\r\n    if (id) {\r\n        if (!verifyPermission(props.userPermissions, 'update-message-apis'))\r\n            window.location.href = ERROR_401;\r\n    } else {\r\n        if (!verifyPermission(props.userPermissions, 'store-message-apis'))\r\n            window.location.href = ERROR_401;\r\n    }\r\n\r\n    const defaultData = {\r\n        name: \"\",\r\n    };\r\n    const defaultError = {\r\n        name: [],\r\n        method: [],\r\n    };\r\n\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [method, setMethod] = useState(null);\r\n    const [methods, setMethods] = useState([]);\r\n\r\n    const formatMethodOptions = ({methods}) => {\r\n        const methodOptions = [];\r\n        methods.map((method, index) => methodOptions.push({value: index, label: method}) );\r\n        return methodOptions;\r\n    };\r\n\r\n    const formatSelectMethod = (methods, option) => {\r\n        let formatOption;\r\n        formatOption = methods.filter(el => el.label === option);\r\n        return formatOption[0];\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            if (id) {\r\n                await axios.get(`${appConfig.apiDomaine}/message-apis/${id}/edit`)\r\n                    .then(response => {\r\n                        const newData = {\r\n                            name: response.data.messageApi.name,\r\n                        };\r\n                        setData(newData);\r\n                        setMethod(formatSelectMethod(formatMethodOptions(response.data), response.data.messageApi.method));\r\n                        setMethods(formatMethodOptions(response.data));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            } else {\r\n                await axios.get(`${appConfig.apiDomaine}/message-apis/create`)\r\n                    .then(({data}) => {\r\n                        setMethods(formatMethodOptions(data));\r\n                    })\r\n                    .catch(({response}) => {\r\n                        console.log(\"Something is wrong\");\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, id]);\r\n\r\n    const onChangeName = (e) => {\r\n        const newData = {...data};\r\n        newData.name = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const handleMethodChange = (selected) => {\r\n        setMethod(selected);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        const submitData = {name: data.name, method: method ? method.label : \"\"};\r\n        if (verifyTokenExpire()) {\r\n            if (id) {\r\n                axios.put(`${appConfig.apiDomaine}/message-apis/${id}`, submitData)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        setError(defaultError);\r\n                        ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n                    })\r\n                ;\r\n            } else {\r\n                axios.post(`${appConfig.apiDomaine}/message-apis`, submitData)\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        const oldMethod = method;\r\n                        let newMethods = [...methods];\r\n                        newMethods = newMethods.filter(el => el.label !== oldMethod.label );\r\n                        setMethod(null);\r\n                        setMethods(newMethods);\r\n                        setError(defaultError);\r\n                        setData(defaultData);\r\n                        ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    })\r\n                    .catch(errorRequest => {\r\n                        redirectError401Page(errorRequest.response.data.code);\r\n                        setStartRequest(false);\r\n                        setError({...defaultError, ...errorRequest.response.data.error});\r\n                        ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/settings/message-apis\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Message API\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    {\r\n                                        id ? \"Modification\" : \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                id ? \"Modification d'un méssage API\" : \"Ajout d'un méssage API\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-form kt-form--label-right\">\r\n                                        <div className=\"kt-portlet__body\">\r\n                                            <div className={error.name.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Méssage API <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <input\r\n                                                        id=\"name\"\r\n                                                        type=\"text\"\r\n                                                        className={error.name.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                                        placeholder=\"Veillez entrer le nom du Méssage API\"\r\n                                                        value={data.name}\r\n                                                        onChange={(e) => onChangeName(e)}\r\n                                                    />\r\n                                                    {\r\n                                                        error.name.length ? (\r\n                                                            error.name.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className={error.method.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                <label className=\"col-xl-3 col-lg-3 col-form-label\" htmlFor=\"name\">Méthode <InputRequire/></label>\r\n                                                <div className=\"col-lg-9 col-xl-6\">\r\n                                                    <Select\r\n                                                        isClearable\r\n                                                        value={method}\r\n                                                        placeholder=\"Veillez selectionner la méthod\"\r\n                                                        onChange={handleMethodChange}\r\n                                                        options={methods}\r\n                                                    />\r\n                                                    {\r\n                                                        error.method.length ? (\r\n                                                            error.method.map((error, index) => (\r\n                                                                <div key={index} className=\"invalid-feedback\">\r\n                                                                    {error}\r\n                                                                </div>\r\n                                                            ))\r\n                                                        ) : null\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"kt-portlet__foot\">\r\n                                            <div className=\"kt-form__actions text-right\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"btn btn-primary\">{id ? \"Modifier\" : \"Enregistrer\"}</button>\r\n                                                    ) : (\r\n                                                        <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <Link to=\"/settings/message-apis\" className=\"btn btn-secondary mx-2\">\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    ) : (\r\n                                                        <Link to=\"/settings/message-apis\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                            Quitter\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        id ?\r\n            verifyPermission(props.userPermissions, 'update-message-apis') ? (\r\n                printJsx()\r\n            ) : null\r\n            : verifyPermission(props.userPermissions, 'store-message-apis') ? (\r\n                printJsx()\r\n            ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MessageAPIForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimListDetail.jsx",["1133"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAssignClaimSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport ReasonModal from \"../components/ReasonModal\";\r\nimport {AssignClaimConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmAssignConfig} from \"../../config/confirmConfig\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\n\r\nconst ClaimListDetail = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n    const {id} = useParams();\r\n\r\n    if (!verifyPermission(props.userPermissions, \"assignment-claim-awaiting-treatment\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [claim, setClaim] = useState(null);\r\n    const [showReason, setShowReason] = useState(false);\r\n    const [reasonTitle, setReasonTitle] = useState(\"\");\r\n    const [reasonLabel, setReasonLabel] = useState(\"\");\r\n    const [action, setAction] = useState(\"\");\r\n    const [staffs, setStaffs] = useState([]);\r\n    const [errors, setErrors] = useState([]);\r\n    const [staff, setStaff] = useState(null);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    const formatStaffsOptions = (data) => {\r\n        const newData = [];\r\n        for (let i = 0; i < data.length; i++)\r\n            newData.push({value: data[i].id, label: `${data[i].identite.lastname} ${data[i].identite.firstname}`});\r\n        return newData;\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${appConfig.apiDomaine}/claim-awaiting-treatment/${id}/edit`)\r\n                .then(response => {\r\n                    setClaim(response.data.claim);\r\n                    setStaffs(formatStaffsOptions(response.data.staffs));\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"))\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [id]);\r\n\r\n    const onChangeStaff = (selected) => {\r\n        setStaff(selected);\r\n    };\r\n\r\n    const selfAssign = () => {\r\n        AssignClaimConfirmation.fire(confirmAssignConfig)\r\n            .then(response => {\r\n                if (verifyTokenExpire()) {\r\n                    if (response.value) {\r\n                        axios.put(`${appConfig.apiDomaine}/claim-awaiting-treatment/${id}/self-assignment`, {})\r\n                            .then(response => {\r\n                                ToastBottomEnd.fire(toastAssignClaimSuccessMessageConfig);\r\n                                window.location.href = \"/process/unit-claims\";\r\n                            })\r\n                            .catch(error => console.log(\"Something is wrong\"))\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n    };\r\n\r\n    const assignClaim = () => {\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            axios.put(`${appConfig.apiDomaine}/claim-awaiting-treatment/${id}/assignment`, {staff_id: staff ? staff.value : null})\r\n                .then(response => {\r\n                    ToastBottomEnd.fire(toastAssignClaimSuccessMessageConfig);\r\n                    setStartRequest(false);\r\n                    setStaff(null);\r\n                    setErrors([]);\r\n                    window.location.href = \"/process/unit-claims\";\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    setErrors(error.response.data.error.staff_id)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const showReasonInput = async (type) => {\r\n        await setReasonTitle(\"Motif de rejet\");\r\n        await setReasonLabel(\"Le motif\");\r\n        await setAction(type);\r\n        await setShowReason(true);\r\n        document.getElementById(\"reason-modal\").click();\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"assignment-claim-awaiting-treatment\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/unit-claims\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Liste des réclamations\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"text\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        claim ? claim.reference : \"Détail réclamation\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            {\r\n                                                props.lead ? (\r\n                                                    <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                        <div className=\"kt-wizard-v2__nav-body\">\r\n                                                            <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                                <i className=\"flaticon-paper-plane\"/>\r\n                                                            </div>\r\n                                                            <div className=\"kt-wizard-v2__nav-label\">\r\n                                                                <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                                    Affectation de la réclamation\r\n                                                                </div>\r\n                                                                <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                                    Affectez la réclamation à un agent\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            {\r\n                                                !props.lead ? (\r\n                                                    verifyPermission(props.userPermissions, \"self-assignment-claim-awaiting-treatment\") ? (\r\n                                                        <button className=\"btn btn-primary btn-sm mx-2\" onClick={selfAssign}>Auto-affectation</button>\r\n                                                    ) : null\r\n                                                ) : null\r\n                                            }\r\n                                            {\r\n                                                verifyPermission(props.userPermissions, \"rejected-claim-awaiting-treatment\") ? (\r\n                                                    <button\r\n                                                        className=\"btn btn-danger btn-sm\"\r\n                                                        onClick={() => showReasonInput(\"reject\")}>\r\n                                                        Rejeter la réclamation\r\n                                                    </button>\r\n                                                ) : null\r\n                                            }\r\n                                            <button id={\"reason-modal\"} style={{display: \"none\"}} type=\"button\"\r\n                                                    className=\"btn btn-bold btn-label-brand btn-sm\"\r\n                                                    data-toggle=\"modal\" data-target=\"#kt_modal_4_2\"/>\r\n                                        </div>\r\n\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        {\r\n                                            props.lead ? (\r\n                                                <div className=\"kt-wizard-v2__content\"\r\n                                                     data-ktwizard-type=\"step-content\">\r\n                                                    <div className=\"kt-heading kt-heading--md\">Affectation de la\r\n                                                        réclamation\r\n                                                    </div>\r\n                                                    <div className=\"kt-form__section kt-form__section--first\">\r\n                                                        <div className=\"kt-wizard-v2__review\">\r\n                                                            <div className=\"kt-wizard-v2__review-content\">\r\n                                                                <div\r\n                                                                    className={errors.length ? \"form-group validated\" : \"form-group\"}>\r\n                                                                    <label>Agent</label>\r\n                                                                    <Select\r\n                                                                        isClearable\r\n                                                                        placeholder={\"Veillez selectioner l'agent\"}\r\n                                                                        value={staff}\r\n                                                                        onChange={onChangeStaff}\r\n                                                                        options={staffs}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        errors.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    className=\"form-group d-flex justify-content-between\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button className=\"btn btn-primary\"\r\n                                                                                    onClick={assignClaim}>Affecter la\r\n                                                                                réclamation</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANT\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                    {\r\n                                        showReason ? (\r\n                                            <ReasonModal\r\n                                                plan={props.plan}\r\n                                                id={id}\r\n                                                action={action}\r\n                                                reasonTitle={reasonTitle}\r\n                                                reasonLabel={reasonLabel}\r\n                                                onClose={() => setShowReason(false)}\r\n                                            />\r\n                                        ) : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimListDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\MessageApi.jsx",["1134"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {Link} from \"react-router-dom\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst MessageApi = props => {\r\n    if (!verifyPermission(props.userPermissions, \"list-message-apis\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [messageAPIs, setMessageAPIs] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(NUMBER_ELEMENT_PER_PAGE);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData () {\r\n            axios.get(`${appConfig.apiDomaine}/message-apis`)\r\n                .then(response => {\r\n                    setNumberPage(forceRound(response.data.length/NUMBER_ELEMENT_PER_PAGE));\r\n                    setShowList(response.data.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n                    setMessageAPIs(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [appConfig.apiDomaine, NUMBER_ELEMENT_PER_PAGE]);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newMessageApis = [...messageAPIs];\r\n        newMessageApis = newMessageApis.filter(el => (\r\n            getLowerCaseString(el.name).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.method).indexOf(value) >= 0\r\n        ));\r\n\r\n        return newMessageApis;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(messageAPIs.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(messageAPIs.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(messageAPIs.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(messageAPIs.length/parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i<position; i++) {\r\n            end = end+numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(messageAPIs.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                messageAPIs.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                messageAPIs.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteMessageAPI = (messageAPIid, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(`${appConfig.apiDomaine}/message-apis/${messageAPIid}`)\r\n                            .then(response => {\r\n                                const newMessageAPIs = [...messageAPIs];\r\n                                newMessageAPIs.splice(index, 1);\r\n                                setMessageAPIs(newMessageAPIs);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newMessageAPIs.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newMessageAPIs.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.data.error)\r\n                                    ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error));\r\n                                else\r\n                                    ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (messageAPI, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{messageAPI.name}</td>\r\n                <td>{messageAPI.method}</td>\r\n                <td>\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'update-message-apis') ? (\r\n                            <Link to={`/settings/message-apis/${messageAPI.id}/edit`}\r\n                                  className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                  title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'destroy-message-apis') ? (\r\n                            <button\r\n                                onClick={(e) => deleteMessageAPI(messageAPI.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Supprimer\">\r\n                                <i className=\"la la-trash\"/>\r\n                            </button>\r\n                        ) : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-message-apis') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Message API\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            addPermission={\"store-message-apis\"}\r\n                            title={\"Message API\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={\"/settings/message-apis/add\"}\r\n                        />\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input\r\n                                                            id=\"myInput\"\r\n                                                            type=\"text\"\r\n                                                            onKeyUp={(e) => searchElement(e)}\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            placeholder=\"\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                        />\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{ width: \"952px\" }}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Nom\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{ width: \"70.25px\" }}\r\n                                                            aria-label=\"Country: activate to sort column ascending\">Méthode\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{ width: \"40.25px\" }} aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        messageAPIs.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((messageAPI, index) => (\r\n                                                                    printBodyTable(messageAPI, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nom</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Méthode</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1 à {numberPerPage} sur {messageAPIs.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MessageApi);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\StaffChannels.jsx",["1135"],"import React, {useEffect, useState} from 'react';\r\nimport HeaderTablePage from \"./HeaderTablePage\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {toastAddErrorMessageConfig, toastAddSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport LoadingTable from \"./LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst StaffChannels = () => {\r\n    const defaultData = {\r\n        feedback_preferred_channels: []\r\n    };\r\n\r\n    const [data, setData] = useState(defaultData);\r\n    const [listChannels, setListChannels] = useState(\"\");\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [load, setLoad] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/feedback-channels\")\r\n                .then(response => {\r\n                    const newChannel={...data};\r\n                    if (response.data.staff.feedback_preferred_channels!==null){\r\n                        newChannel.feedback_preferred_channels=response.data.staff.feedback_preferred_channels;\r\n                        setData(newChannel);\r\n                    }\r\n                    setListChannels(response.data);\r\n                    setLoad(false)\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const onChangeOption = (e, channel) => {\r\n        const newData = {...data};\r\n        console.log(e.target.checked, \"OPTION\");\r\n        if (e.target.checked === true) {\r\n            newData.feedback_preferred_channels.push(channel)\r\n        } else newData.feedback_preferred_channels = newData.feedback_preferred_channels.filter(item => item !== channel);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            axios.put(appConfig.apiDomaine + \"/feedback-channels\", data)\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    setStartRequest(false);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    console.log(\"something is wrong\");\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Canaux\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                               className=\"kt-subheader__breadcrumbs-link\">\r\n                                Canaux du Personnel\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Les canaux du personnel\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <form className=\"kt-form\">\r\n                                {/*{console.log(data, \"DATA\")}*/}\r\n                                {\r\n                                    load ? (\r\n                                        <LoadingTable/>\r\n                                    ) : (\r\n                                    listChannels.channels ?\r\n                                        listChannels.channels.map((channel, index) => (\r\n                                            <div className=\"form-group row\" key={index}>\r\n                                                <label className=\"col col-form-label \">{channel}</label>\r\n                                                <div className=\"col\">\r\n                                                    <span className=\"kt-switch kt-switch--sm kt-switch--outline kt-switch--icon kt-switch--success \">\r\n                                                    <label>\r\n                                                        {data.feedback_preferred_channels.length ?\r\n                                                            data.feedback_preferred_channels.map((feedback, i) => (\r\n                                                                feedback === channel ?\r\n\r\n                                                                    <input\r\n                                                                        key={i}\r\n                                                                        type=\"checkbox\"\r\n                                                                        onChange={(e) => onChangeOption(e, channel)}\r\n                                                                        checked={\"checked\"}\r\n                                                                        name={channel}\r\n                                                                    />\r\n                                                                    :\r\n                                                                    <input\r\n                                                                        key={i}\r\n                                                                        type=\"checkbox\"\r\n                                                                        onChange={(e) => onChangeOption(e, channel)}\r\n                                                                        name={channel}\r\n                                                                    />\r\n                                                            ))\r\n                                                        :\r\n                                                            <input\r\n                                                                type=\"checkbox\"\r\n                                                                onChange={(e) => onChangeOption(e, channel)}\r\n                                                                name={channel}\r\n                                                            />\r\n\r\n                                                        }\r\n                                                        <span/>\r\n                                                    </label>\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        )) : null\r\n                                    )\r\n                                }\r\n                                <div className=\"kt-portlet__foot\">\r\n                                    <div className=\"kt-form__actions text-right\">\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <button type=\"submit\" onClick={(e) => onSubmit(e)}\r\n                                                        className=\"btn btn-primary\">Enregistrer</button>\r\n                                            ) : (\r\n                                                <button\r\n                                                    className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                    type=\"button\" disabled>\r\n                                                    Chargement...\r\n                                                </button>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            !startRequest ? (\r\n                                                <Link to=\"/dashbord\" className=\"btn btn-secondary mx-2\">\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            ) : (\r\n                                                <Link to=\"/dashbord\" className=\"btn btn-secondary mx-2\" disabled>\r\n                                                    Quitter\r\n                                                </Link>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default StaffChannels;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ConfigRapportAuto.jsx",["1136"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {loadCss, forceRound, getLowerCaseString} from \"../../helpers/function\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../config/confirmConfig\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst endPointConfig = {\r\n    PRO: {\r\n        plan: \"PRO\",\r\n        list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\r\n    },\r\n    MACRO: {\r\n        holding: {\r\n            list: `${appConfig.apiDomaine}/any/reporting-claim/config`,\r\n        },\r\n        filial: {\r\n            list: `${appConfig.apiDomaine}/my/reporting-claim/config`,\r\n        }\r\n    },\r\n};\r\n\r\nconst ConfigRapportAuto = (props) => {\r\n    document.title = \"Satis rapport - Paramètre Configuration Rapport Automatique\";\r\n    if (!verifyPermission(props.userPermissions, \"config-reporting-claim-any-institution\")||\r\n        verifyPermission(props.userPermissions, \"config-reporting-claim-my-institution\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    let endPoint = \"\";\r\n    if (props.plan === \"MACRO\") {\r\n        if (verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution'))\r\n            endPoint = endPointConfig[props.plan].holding;\r\n        else if (verifyPermission(props.userPermissions, 'config-reporting-claim-my-institution'))\r\n            endPoint = endPointConfig[props.plan].filial\r\n    } else {\r\n        endPoint = endPointConfig[props.plan]\r\n    }\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [rapportAuto, setRapportAuto] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(endPoint.list)\r\n                .then(response => {\r\n                    setLoad(false);\r\n                    setRapportAuto(response.data);\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    },[]);\r\n\r\n    const getEmailString = (email) => {\r\n        let emailString = \"\";\r\n        email.map((mail, index) => (\r\n            index === email.length - 1 ? emailString + mail : emailString + mail  +\"/ \"\r\n        ));\r\n        return emailString;\r\n    };\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newRapportAuto = [...rapportAuto];\r\n        newRapportAuto = newRapportAuto.filter(el => (\r\n            getLowerCaseString(el.institution_targeted ? el.institution_targeted.name : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.period ? el.period_tag.label : \"\").indexOf(value) >= 0 ||\r\n            getLowerCaseString(getEmailString(el.email)).indexOf(value) >= 0 ||\r\n            getLowerCaseString(el.email ? el.email : \"\").indexOf(value) >= 0\r\n        ));\r\n\r\n        return newRapportAuto;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(rapportAuto.length/NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(rapportAuto.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(rapportAuto.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(rapportAuto.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(rapportAuto.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                rapportAuto.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                rapportAuto.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteCategoryClient = (rapportAutoId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (verifyTokenExpire()) {\r\n                    if (result.value) {\r\n                        axios.delete(endPoint.list + `/${rapportAutoId}`)\r\n                            .then(response => {\r\n                                const newRapport = [...rapportAuto];\r\n                                newRapport.splice(index, 1);\r\n                                setRapportAuto(newRapport);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newRapport.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newRapport.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (rapport, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{rapport.institution_targeted?rapport.institution_targeted.name:\"\"}</td>\r\n                <td>{rapport.period===null?\"\":rapport.period_tag.label}</td>\r\n                <td>\r\n                    {rapport.email ?\r\n                        rapport.email.map((mail, index) => (\r\n                            index === rapport.email.length - 1 ? mail : mail  +\"/ \"\r\n                        )) : null\r\n                    }\r\n                </td>\r\n                {/*<td>{rapport.email===null?\"\":rapport.email}</td>*/}\r\n                <td style={{textAlign:'center'}}>\r\n\r\n                    {\r\n                        verifyPermission(props.userPermissions, 'config-reporting-claim-any-institution') ?\r\n                            <Link\r\n                                to={`/settings/rapport/edit/${rapport.id}`}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Modifier\">\r\n                                <i className=\"la la-edit\"/>\r\n                            </Link>\r\n                            : null\r\n                    }\r\n\r\n                    {verifyPermission(props.userPermissions, \"config-reporting-claim-any-institution\") ?\r\n                        <button\r\n                            onClick={(e) => deleteCategoryClient(rapport.id, index)}\r\n                            className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                            title=\"Supprimer\">\r\n                            <i className=\"la la-trash\"/>\r\n                        </button>\r\n                        : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Paramètres\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Rapport automatique\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"Liste des rapports automatiques\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n\r\n                        <HeaderTablePage\r\n                            addPermission={\"config-reporting-claim-any-institution\"}\r\n                            title={\"Rapport Automatique\"}\r\n                            addText={\"Ajouter une configuration\"}\r\n                            addLink={\"/settings/rapport/add\"}\r\n                        />\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Recherche:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\" style={{textAlign:\"center\"}}>\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Institutions\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"100px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Périodes\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Emails\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        rapportAuto.length ? (\r\n                                                            showList ? (\r\n                                                                showList.map((rapport, index) => (\r\n                                                                    printBodyTable(rapport, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <EmptyTable search={true}/>\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr style={{textAlign:\"center\"}}>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Institutions</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Périodes</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Emails</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Action</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {rapportAuto.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ConfigRapportAuto);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\Participants.jsx",["1137"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {loadCss, filterDataTableBySearchValue, forceRound} from \"../../../helpers/function\";\r\nimport LoadingTable from \"../../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../../config/confirmConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport EmptyTable from \"../../components/EmptyTable\";\r\nimport HeaderTablePage from \"../../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst Participants = (props) => {\r\n    const {id} = useParams();\r\n    if (!verifyPermission(props.userPermissions, \"list-discussion-contributors\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [contributor, setContributor] = useState([]);\r\n    const [responseData, setResponseData] = useState(null);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + `/discussions/${id}/staff`)\r\n                .then(response => {\r\n                    console.log(response.data, 'DONNEES');\r\n                    setLoad(false);\r\n                    setResponseData(response.data);\r\n                    setContributor(response.data.staff);\r\n                    setShowList(response.data.staff.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.staff.length / numberPerPage));\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(contributor.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(contributor.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(contributor.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                contributor.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                contributor.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteContributor = (contributorId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/discussions/${id}/staff/${contributorId}`)\r\n                            .then(response => {\r\n                                const newContributor = [...contributor];\r\n                                newContributor.splice(index, 1);\r\n                                setContributor(newContributor);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newContributor.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newContributor.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (user, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{user.identite.lastname + \"  \" + user.identite.firstname}</td>\r\n                <td>{user.unit.name.fr}</td>\r\n                <td>{user.identite.email ?\r\n                    user.identite.email.map((mail, index) => (\r\n                        index === user.identite.email.length - 1 ? mail : mail + \" \" + <br/> + \" \"\r\n                    )) : null\r\n                }</td>\r\n\r\n                {\r\n                    verifyPermission(props.userPermissions, \"remove-discussion-contributor\") ?\r\n                    <td style={{textAlign: 'center'}}>\r\n                        {\r\n                            user.id === responseData.created_by.id?\r\n                        \"\":\r\n                            <button\r\n                                onClick={(e) => deleteContributor(user.id, index)}\r\n                                className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                                title=\"Retirer du Tchat\">\r\n                                <i className=\"la la-user-times fa-2x\"/>\r\n                            </button>\r\n                        }\r\n\r\n                    </td>\r\n                    : null\r\n                }\r\n\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-discussion-contributors\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Traitement\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Tchat\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Liste des participants\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"A common UI paradigm to use with interactive tables is to present buttons that will trigger some action. See official documentation\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n\r\n                        <HeaderTablePage\r\n                            addPermission={\"add-discussion-contributor\"}\r\n                            addText={\"Ajouter\"}\r\n                            addLink={`/treatment/chat/add_user/${id}`}\r\n                            title={\"Liste des participants\"}\r\n                        />\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Search:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Participants\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Staff\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Email\r\n                                                        </th>\r\n                                                        {\r\n                                                            verifyPermission(props.userPermissions, \"remove-discussion-contributor\") ?\r\n                                                                <th className=\"sorting\" tabIndex=\"0\"\r\n                                                                    aria-controls=\"kt_table_1\"\r\n                                                                    rowSpan=\"1\" colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                                    aria-label=\"Type: activate to sort column ascending\">\r\n                                                                    Action\r\n                                                                </th>\r\n                                                                :\"\"\r\n                                                        }\r\n\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        contributor.length ? (\r\n                                                            search ? (\r\n                                                                contributor.map((user, index) => (\r\n                                                                    printBodyTable(user, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((user, index) => (\r\n                                                                    printBodyTable(user, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {contributor.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Participants);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\RemoveChats.jsx",["1138","1139"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {loadCss, filterDataTableBySearchValue, forceRound} from \"../../../helpers/function\";\r\nimport LoadingTable from \"../../components/LoadingTable\";\r\nimport {ToastBottomEnd} from \"../../components/Toast\";\r\nimport {toastDeleteErrorMessageConfig, toastDeleteSuccessMessageConfig} from \"../../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../../config/confirmConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport EmptyTable from \"../../components/EmptyTable\";\r\nimport ExportButton from \"../../components/ExportButton\";\r\nimport HeaderTablePage from \"../../components/HeaderTablePage\";\r\nimport InfirmationTable from \"../../components/InfirmationTable\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {connect} from \"react-redux\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\n\r\nconst RemoveChats = (props) => {\r\n    if (!verifyPermission(props.userPermissions, \"destroy-discussion\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [chats, setChats] = useState([]);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(5);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [search, setSearch] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + `/discussions`)\r\n                .then(response => {\r\n                    console.log(response.data, 'REMOVE');\r\n                    setShowList(response.data.slice(0, numberPerPage));\r\n                    setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                    setChats(response.data);\r\n                    setLoad(false);\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    },[]);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDataTableBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(chats.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(chats.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(chats.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                chats.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                chats.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteContributor = (chatsId, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/discussions/${chatsId}`)\r\n                            .then(response => {\r\n                                const newChats = [...chats];\r\n                                newChats.splice(index, 1);\r\n                                setChats(newChats);\r\n                                if (showList.length > 1) {\r\n                                    setShowList(\r\n                                        newChats.slice(\r\n                                            getEndByPosition(activeNumberPage) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage)\r\n                                        )\r\n                                    );\r\n                                } else {\r\n                                    setShowList(\r\n                                        newChats.slice(\r\n                                            getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                                            getEndByPosition(activeNumberPage - 1)\r\n                                        )\r\n                                    );\r\n                                }\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (chat, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>{chat.name}</td>\r\n                <td>{chat.claim.reference}</td>\r\n\r\n                <td style={{textAlign:'center'}}>\r\n\r\n                    {verifyPermission(props.userPermissions, \"destroy-discussion\") ?\r\n                        <button\r\n                            onClick={(e) => deleteContributor(chat.id, index)}\r\n                            className=\"btn btn-sm btn-clean btn-icon btn-icon-md\"\r\n                            title=\"Supprimer le Tchat\">\r\n                            <i className=\"la la-trash fa-2x\"/>\r\n                        </button>\r\n                        : null\r\n                    }\r\n                </td>\r\n            </tr>\r\n        )\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"list-my-discussions\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Traitement\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Chat\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                        className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                       className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Suppression\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable\r\n                        information={\"A common UI paradigm to use with interactive tables is to present buttons that will trigger some action. See official documentation\"}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n\r\n                        <HeaderTablePage\r\n                            title={\"Suppression de Discussion\"}\r\n                        />\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Search:\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control form-control-sm\"\r\n                                                               placeholder=\"\"\r\n                                                               aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table\r\n                                                    className=\"table table-striped- table-bordered table-hover table-checkable dataTable dtr-inline\"\r\n                                                    id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\"\r\n                                                    style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Nom du Chat\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\"\r\n                                                            colSpan=\"1\" style={{width: \"150px\"}}\r\n                                                            aria-label=\"Ship City: activate to sort column ascending\">Référence réclamation\r\n                                                        </th>\r\n\r\n                                                        <th className=\"sorting\" tabIndex=\"0\"\r\n                                                            aria-controls=\"kt_table_1\"\r\n                                                            rowSpan=\"1\" colSpan=\"1\" style={{width: \"50px\"}}\r\n                                                            aria-label=\"Type: activate to sort column ascending\">\r\n                                                            Action\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        chats.length ? (\r\n                                                            search ? (\r\n                                                                chats.map((chat, index) => (\r\n                                                                    printBodyTable(chat, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((chat, index) => (\r\n                                                                    printBodyTable(chat, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {chats.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                !search ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(RemoveChats);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\AddMemberForm.jsx",["1140"],"import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../../components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig,\r\n    toastAddSuccessMessageConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport Select from \"react-select\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst AddMemberForm = (props) => {\r\nconst {id}=useParams();\r\n    if (!verifyPermission(props.userPermissions, 'add-discussion-contributor'))\r\n        window.location.href = ERROR_401;\r\n\r\n    const defaultData = {\r\n        staff_id: [],\r\n    };\r\n    const defaultError = {\r\n        staff_id: [],\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [staffId, setStaffId] = useState([]);\r\n    const [staffIdData, setStaffIdData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(`${appConfig.apiDomaine}/discussions/${id}/staff/create`)\r\n                .then(response => {\r\n                    console.log(response.data, \"PARTICIPANT\");\r\n                    let newStaffs=Object.values(response.data.staff).map(staff=>(\r\n                        {value:staff.id, label:staff.identite.lastname+\" \"+staff.identite.firstname}\r\n                    ));\r\n                    setStaffIdData(newStaffs);\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"Something is wrong\");\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    const onChangeClaim = (e,selected) => {\r\n        const newData = {...data};\r\n        newData.staff_id = e?e.map(sel => sel.value):\"\";\r\n        setStaffId(selected);\r\n        setData(newData);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            axios.post(appConfig.apiDomaine + `/discussions/${id}/staff`, data)\r\n                .then(response => {\r\n                    setStartRequest(false);\r\n                    // setError(defaultError);\r\n                    // setData(defaultData);\r\n                    ToastBottomEnd.fire(toastAddSuccessMessageConfig);\r\n                    window.location.href=\"/chat\";\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    setError({...defaultError,...error.response.data.error});\r\n                    ToastBottomEnd.fire(toastAddErrorMessageConfig)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n    const printJsx = () => {\r\n        return (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Traitement\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <Link to=\"/chat\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                    Chat\r\n                                </Link>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        \"Ajout\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"kt-portlet\">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-portlet__head-label\">\r\n                                        <h3 className=\"kt-portlet__head-title\">\r\n                                            {\r\n                                                \"Ajout des Participants\"\r\n                                            }\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <form method=\"POST\" className=\"kt-form\">\r\n                                    <div className=\"kt-portlet__body\">\r\n                                        <div className=\"tab-content\">\r\n                                            <div className=\"tab-pane active\" id=\"kt_user_edit_tab_1\" role=\"tabpanel\">\r\n                                                <div className=\"kt-form kt-form--label-right\">\r\n                                                    <div className=\"kt-form__body\">\r\n                                                        <div className=\"kt-section kt-section--first\">\r\n                                                            <div className=\"kt-section__body\">\r\n                                                                <div\r\n                                                                    className={error.staff_id.length ? \"form-group row validated\" : \"form-group row\"}>\r\n                                                                    <label className=\"col-xl-3 col-lg-3 col-form-label\"\r\n                                                                           htmlFor=\"exampleSelect1\">Participants</label>\r\n                                                                    <div className=\"col-lg-9 col-xl-6\">\r\n                                                                        {staffIdData ? (\r\n                                                                            <Select\r\n                                                                                value={staffId}\r\n                                                                                onChange={(e) => onChangeClaim(e)}\r\n                                                                                options={staffIdData}\r\n                                                                                isMulti\r\n                                                                            />\r\n                                                                        ) : ''\r\n                                                                        }\r\n\r\n\r\n                                                                        {\r\n                                                                            error.staff_id.length ? (\r\n                                                                                error.staff_id.map((error, index) => (\r\n                                                                                    <div key={index}\r\n                                                                                         className=\"invalid-feedback\">\r\n                                                                                        {error}\r\n                                                                                    </div>\r\n                                                                                ))\r\n                                                                            ) : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n                                                            <div className=\"kt-portlet__foot\">\r\n                                                                <div className=\"kt-form__actions text-right\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button type=\"submit\"\r\n                                                                                    onClick={(e) => onSubmit(e)}\r\n                                                                                    className=\"btn btn-primary\">Ajouter</button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <Link to=\"/chat\"\r\n                                                                                  className=\"btn btn-secondary mx-2\">\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        ) : (\r\n                                                                            <Link to=\"/chat\"\r\n                                                                                  className=\"btn btn-secondary mx-2\"\r\n                                                                                  disabled>\r\n                                                                                Quitter\r\n                                                                            </Link>\r\n                                                                        )\r\n                                                                    }\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'add-discussion-contributor') ? (\r\n            printJsx()\r\n        ) : null\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddMemberForm);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\AddChatsForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\TreatmentButtonDetail.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\Chats.jsx",["1141","1142","1143"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport {Link} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport {connect} from \"react-redux\";\r\nimport MessageList from \"./MessageList\";\r\nimport {ToastBottomEnd} from \"../../components/Toast\";\r\nimport {\r\n    toastDeleteErrorMessageConfig,\r\n    toastDeleteSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig,\r\n} from \"../../../config/toastConfig\";\r\nimport {DeleteConfirmation} from \"../../components/ConfirmationAlert\";\r\nimport {confirmDeleteConfig} from \"../../../config/confirmConfig\";\r\nimport {filterDiscussionBySearchValue} from \"../../../helpers/function\";\r\nimport {verifyPermission} from \"../../../helpers/permission\";\r\nimport {ERROR_401} from \"../../../config/errorPage\";\r\nimport LoadingTable from \"../../components/LoadingTable\";\r\nimport {verifyTokenExpire} from \"../../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem('token');\r\n\r\nconst Chats = (props) => {\r\n\r\n    if (!verifyPermission(props.userPermissions, \"list-my-discussions\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const defaultData = {\r\n        text: '',\r\n        files: [],\r\n        parent_id: \"\",\r\n    };\r\n    const defaultError = {\r\n        text: '',\r\n        files: [],\r\n        parent_id: \"\",\r\n    };\r\n    const [data, setData] = useState(defaultData);\r\n    const [listChat, setListChat] = useState(\"\");\r\n    const [listChatUsers, setListChatUsers] = useState([]);\r\n    const [listChatMessages, setListChatMessage] = useState([]);\r\n    const [idChat, setIdChat] = useState(null);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [messageTarget, setMessageTarget] = useState('');\r\n    const [search, setSearch] = useState(false);\r\n    const [load, setLoad] = useState(true);\r\n    const [activeChat, setActiveChat] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire()) {\r\n            axios.get(appConfig.apiDomaine + \"/discussions\")\r\n                .then(response => {\r\n                    setListChat(response.data);\r\n                    setLoad(false)\r\n                })\r\n                .catch(error => {\r\n                    setLoad(false);\r\n                })\r\n            ;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"staffData\") && idChat) {\r\n            window.Echo.private(`Satis2020.ServicePackage.Models.Identite.${localStorage.getItem(\"staffData\")}`)\r\n                .notification((notification) => {\r\n                    if (notification.type.substr(39, notification.type.length) === \"PostDiscussionMessage\") {\r\n                        if (notification.discussion.id===idChat){\r\n                           setListChatMessage(notification.messages.reverse());\r\n                        }\r\n\r\n                    }\r\n                });\r\n        }\r\n    }, [localStorage.getItem(\"staffData\"),idChat]);\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            await setSearch(true);\r\n            filterDiscussionBySearchValue(e);\r\n        } else {\r\n            await setSearch(true);\r\n            filterDiscussionBySearchValue(e);\r\n            setSearch(false);\r\n        }\r\n    };\r\n\r\n    const onChangeText = (e) => {\r\n        let newData = {...data};\r\n        newData.text = e.target.value;\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeFile = (e) => {\r\n        let newData = {...data};\r\n        newData.files = Object.values(e.target.files);\r\n        setData(newData);\r\n    };\r\n\r\n    const responseToMessage = (id, text) => {\r\n        const newData = {...data};\r\n        newData.parent_id = id;\r\n        setMessageTarget(text);\r\n        setData(newData);\r\n    };\r\n\r\n    const closeTag = () => {\r\n        const newData = {...data};\r\n        newData.parent_id = \"\";\r\n        newData.files = \"\";\r\n        setMessageTarget(\"\");\r\n        setData(newData);\r\n    };\r\n\r\n    const onChangeDiscussion = (id) => {\r\n\r\n        async function fetchData() {\r\n            await axios.get(appConfig.apiDomaine + `/discussions/${id}/staff`)\r\n                .then(response => {\r\n                    setActiveChat(true);\r\n                    setListChatUsers(response.data.staff);\r\n                    setIdChat(response.data.id);\r\n                })\r\n                .catch(error => {\r\n                    setActiveChat(false);\r\n                    setLoad(false);\r\n                });\r\n            await getListMessage(id)\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    };\r\n\r\n    const getListMessage = (id) => {\r\n        async function fetchData() {\r\n            await axios.get(appConfig.apiDomaine + `/discussions/${id}/messages`)\r\n                .then(response => {\r\n                    setListChatMessage(response.data.reverse());\r\n                    document.getElementById('kt-scroll').scrollTo(0, 10000);\r\n                    document.getElementById(\"monChamp\").focus();\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    };\r\n\r\n    const formatFormData = (newData) => {\r\n        const formData = new FormData();\r\n        formData.append(\"_method\", \"post\");\r\n        for (const key in newData) {\r\n            if (key === \"files\") {\r\n                for (let i = 0; i < (newData.files).length; i++)\r\n                    formData.append(\"files[]\", (newData[key])[i], ((newData[key])[i]).name);\r\n            } else\r\n                formData.set(key, newData[key]);\r\n        }\r\n        return formData;\r\n    };\r\n\r\n    const addItem = (e) => {\r\n\r\n        e.preventDefault();\r\n        let newData = {...data};\r\n        if (!newData.files.length)\r\n            delete newData.files;\r\n        if (newData.parent_id === \"\")\r\n            delete newData.parent_id;\r\n\r\n        if ((data.text !== '' && idChat) || (data.files !== [] && idChat)) {\r\n            setStartRequest(true);\r\n            if (verifyTokenExpire()) {\r\n                axios.post(appConfig.apiDomaine + `/discussions/${idChat}/messages`, formatFormData(newData))\r\n                    .then(response => {\r\n                        // getListMessage(idChat);\r\n                        const newItems = [...listChatMessages, response.data];\r\n                        setListChatMessage(newItems);\r\n                        setData(defaultError);\r\n                        getListMessage(idChat);\r\n                        setStartRequest(false);\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(error.response.data.error.text));\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    const deletedItem = (key, index) => {\r\n        DeleteConfirmation.fire(confirmDeleteConfig)\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    if (verifyTokenExpire()) {\r\n                        axios.delete(appConfig.apiDomaine + `/discussions/${idChat}/messages/${key}`)\r\n                            .then(response => {\r\n                                getListMessage(idChat);\r\n                                const filteredItems = listChatMessages.filter(item => item.key !== key);\r\n                                setListChatMessage(filteredItems);\r\n                                ToastBottomEnd.fire(toastDeleteSuccessMessageConfig);\r\n                            })\r\n                            .catch(error => {\r\n                                ToastBottomEnd.fire(toastDeleteErrorMessageConfig);\r\n                            })\r\n                        ;\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n            <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                <div className=\"kt-container  kt-container--fluid \">\r\n                    <div className=\"kt-subheader__main\">\r\n                        <h3 className=\"kt-subheader__title\">\r\n                            Traitement\r\n                        </h3>\r\n                        <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                        <div className=\"kt-subheader__breadcrumbs\">\r\n                            <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                className=\"flaticon2-shelter\"/></a>\r\n                            <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                            <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                               className=\"kt-subheader__breadcrumbs-link\">\r\n                                TChats\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n\r\n                <div className=\"kt-grid kt-grid--desktop kt-grid--ver kt-grid--ver-desktop kt-app\">\r\n                    {\r\n                        load ? (\r\n                            <LoadingTable/>\r\n                        ) : (\r\n                            <div\r\n                                className=\"kt-grid__item kt-app__toggle kt-app__aside kt-app__aside--lg kt-app__aside--fit\"\r\n                                id=\"kt_chat_aside\">\r\n                                {\r\n                                    listChat ?\r\n                                        <div className=\"kt-portlet kt-portlet--last\">\r\n\r\n                                            <div className=\"kt-portlet__body\">\r\n                                                <div className=\"kt-searchbar\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\"\r\n                                                  id=\"basic-addon1\">\r\n                                            <svg\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\"\r\n                                                viewBox=\"0 0 24 24\" version=\"1.1\" className=\"kt-svg-icon\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<g stroke=\"none\" strokeWidth=\"1\" fill=\"none\"\r\n                                                                           fillRule=\"evenodd\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"24\"\r\n                                                                                  height=\"24\"></rect>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path\r\n                                                                                d=\"M14.2928932,16.7071068 C13.9023689,16.3165825 13.9023689,15.6834175 14.2928932,15.2928932 C14.6834175,14.9023689 15.3165825,14.9023689 15.7071068,15.2928932 L19.7071068,19.2928932 C20.0976311,19.6834175 20.0976311,20.3165825 19.7071068,20.7071068 C19.3165825,21.0976311 18.6834175,21.0976311 18.2928932,20.7071068 L14.2928932,16.7071068 Z\"\r\n                                                                                fill=\"#000000\" fillRule=\"nonzero\"\r\n                                                                                opacity=\"0.3\"></path>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path\r\n                                                                                d=\"M11,16 C13.7614237,16 16,13.7614237 16,11 C16,8.23857625 13.7614237,6 11,6 C8.23857625,6 6,8.23857625 6,11 C6,13.7614237 8.23857625,16 11,16 Z M11,18 C7.13400675,18 4,14.8659932 4,11 C4,7.13400675 7.13400675,4 11,4 C14.8659932,4 18,7.13400675 18,11 C18,14.8659932 14.8659932,18 11,18 Z\"\r\n                                                                                fill=\"#000000\"\r\n                                                                                fillRule=\"nonzero\"></path>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</svg>\r\n                                            </span>\r\n                                                        </div>\r\n                                                        <input id=\"myInput\" type=\"text\"\r\n                                                               onKeyUp={(e) => searchElement(e)}\r\n                                                               className=\"form-control\"\r\n                                                               placeholder=\"Search\"\r\n                                                               aria-controls=\"basic-addon1\"/>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"kt-widget kt-widget--users kt-mt-20\">\r\n                                                    <div className=\"kt-scroll kt-scroll--pull ps ps--active-y\"\r\n                                                         data-mobile-height=\"300\"\r\n                                                         style={{height: '250px', overflow: 'hidden'}}>\r\n                                                        <ul id=\"myUL\">\r\n                                                            {\r\n                                                                listChat.map((chat, i) => (\r\n                                                                    <li key={i}>\r\n\r\n                                                                        <div className=\"kt-widget__items\">\r\n\r\n\r\n                                                                            <div className=\"kt-widget__item\">\r\n                                                                                <i className=\"fa-2x flaticon2-chat-2\"></i>\r\n                                                                                <div className=\"kt-widget__info\">\r\n                                                                                    <div className=\"kt-widget__section\">\r\n                                                                                        <a href={\"#messageList\"}\r\n                                                                                           activeClassName=\"kt-menu__item--active\"\r\n                                                                                           aria-haspopup=\"true\"\r\n                                                                                           onClick={(e) => onChangeDiscussion(chat.id)}\r\n                                                                                           className=\"kt-widget__username\">{chat.name}\r\n                                                                                        </a>\r\n                                                                                        {\r\n                                                                                            activeChat && idChat === chat.id ?\r\n                                                                                                <span\r\n                                                                                                    className=\"kt-badge kt-badge--success kt-badge--dot\"></span>\r\n                                                                                                : \"\"\r\n                                                                                        }\r\n                                                                                    </div>\r\n\r\n                                                                                    <span className=\"kt-widget__desc\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{chat.claim.reference}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                                                                </div>\r\n                                                                                <div className=\"kt-widget__action\">\r\n                                                                <span\r\n                                                                    className=\"kt-widget__date\">{moment(chat.created_at).format('ll')}</span>\r\n                                                                                    {idChat === chat.id}\r\n                                                                                    {/*<span*/}\r\n                                                                                    {/*    className=\"kt-badge kt-badge--success kt-font-bold\">{listChatUsers.length}</span>*/}\r\n                                                                                    <div\r\n                                                                                        className=\"dropdown dropdown-inline\">\r\n                                                                                        <button type=\"button\"\r\n                                                                                                className=\"btn btn-clean btn-sm btn-icon btn-icon-md\"\r\n                                                                                                data-toggle=\"dropdown\"\r\n                                                                                                aria-haspopup=\"true\"\r\n                                                                                                aria-expanded=\"false\">\r\n                                                                                            <i className=\"flaticon2-menu-1\"></i>\r\n                                                                                        </button>\r\n\r\n                                                                                        <div\r\n                                                                                            className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-md\">\r\n\r\n                                                                                            <ul className=\"kt-nav\">\r\n\r\n                                                                                                <li className=\"kt-nav__item\">\r\n                                                                                                    <Link\r\n                                                                                                        to={chat.id ? `/treatment/chat/contributor/${chat.id}` : \"\"}\r\n                                                                                                        className=\"kt-nav__link\">\r\n                                                                                                        <i className=\"kt-nav__link-icon flaticon2-group\"></i>\r\n                                                                                                        <span\r\n                                                                                                            className=\"kt-nav__link-text\">Liste des Participants</span>\r\n\r\n                                                                                                        <span\r\n                                                                                                            className=\"kt-nav__link-badge\">\r\n                                                                                                        <span\r\n                                                                                                            className=\"kt-badge kt-badge--success  kt-badge--rounded-\">\r\n                                                                                                            {chat.staff ? chat.staff.length : 0}\r\n                                                                                                        </span>\r\n                                                                                                        </span>\r\n                                                                                                    </Link>\r\n                                                                                                </li>\r\n\r\n                                                                                                <li className=\"kt-nav__separator\"></li>\r\n\r\n                                                                                                {/*                                    <li className=\"kt-nav__item\">*/}\r\n                                                                                                {/*                                        <Link*/}\r\n                                                                                                {/*                                            to={chat.id ? `/treatment/chat/add_user/${chat.id}` : \"\"}*/}\r\n                                                                                                {/*                                            className=\"kt-nav__link\">*/}\r\n                                                                                                {/*                                            <i className=\"kt-nav__link-icon flaticon2-group\"></i>*/}\r\n                                                                                                {/*                                            <span*/}\r\n                                                                                                {/*                                                className=\"kt-nav__link-text\">Ajouter un Membre</span>*/}\r\n                                                                                                {/*                                            <span*/}\r\n                                                                                                {/*                                                className=\"kt-nav__link-badge\">*/}\r\n                                                                                                {/*    <span*/}\r\n                                                                                                {/*        className=\"kt-badge kt-badge--brand  kt-badge--rounded-\">{listChatUsers.length}</span>*/}\r\n                                                                                                {/*</span>*/}\r\n                                                                                                {/*                                        </Link>*/}\r\n                                                                                                {/*                                    </li>*/}\r\n\r\n                                                                                                <li className=\"kt-nav__item\">\r\n                                                                                                    <Link to={\"/treatment/chat/remove_chat\"}\r\n                                                                                                        className=\"kt-nav__link\">\r\n                                                                                                        <i className=\"kt-nav__link-icon flaticon-delete\"></i>\r\n                                                                                                        <span\r\n                                                                                                            className=\"kt-nav__link-text\">Supprimer un Tchat</span>\r\n                                                                                                    </Link>\r\n                                                                                                </li>\r\n\r\n                                                                                            </ul>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n                                                                    </li>\r\n                                                                ))\r\n                                                            }\r\n\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        : \"\"\r\n                                }\r\n                            </div>\r\n                        )}\r\n\r\n                    <div className=\"kt-grid__item kt-grid__item--fluid kt-app__content\" id=\"messageList\">\r\n                        <div className=\"kt-chat\" id=\"kt-chat\">\r\n                            <div className=\"kt-portlet kt-portlet--head-lg- \">\r\n                                <div className=\"kt-portlet__head\">\r\n                                    <div className=\"kt-chat__head \">\r\n\r\n                                        <div className=\"kt-chat__left\"><span></span></div>\r\n                                        <div className=\"kt-chat__center\">\r\n                                            <h5>Discussions</h5>\r\n                                        </div>\r\n                                        {\r\n                                            verifyPermission(props.userPermissions, \"store-discussion\") ?\r\n                                                <div className=\"kt-chat__right\">\r\n                                                    <div className=\"dropdown dropdown-inline\">\r\n                                                        <button type=\"button\"\r\n                                                                className=\"btn btn-clean btn-sm btn-icon btn-icon-md\"\r\n                                                                data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                                                                aria-expanded=\"false\">\r\n                                                            <i className=\"flaticon2-add-1\"></i>\r\n                                                        </button>\r\n\r\n                                                        <div\r\n                                                            className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-md\">\r\n\r\n                                                            <ul className=\"kt-nav\">\r\n                                                                {/*<li className=\"kt-nav__head\">*/}\r\n                                                                {/*    Messagerie*/}\r\n                                                                {/*    <Link*/}\r\n                                                                {/*        to={idChat ? `/treatment/chat/contributor/${idChat}` : \"\"}>*/}\r\n                                                                {/*        <i className=\"kt-nav__link-icon flaticon-eye\"></i>*/}\r\n                                                                {/*    </Link>*/}\r\n\r\n                                                                {/*</li>*/}\r\n                                                                {/*<li className=\"kt-nav__separator\"></li>*/}\r\n                                                                <li className=\"kt-nav__item\">\r\n                                                                    <Link to={\"/treatment/chat/add\"}\r\n                                                                          className=\"kt-nav__link\">\r\n                                                                        <i className=\"kt-nav__link-icon flaticon-chat-1\"></i>\r\n                                                                        <span\r\n                                                                            className=\"kt-nav__link-text\">Créer un Tchat</span>\r\n                                                                    </Link>\r\n                                                                </li>\r\n\r\n                                                                {/*    <li className=\"kt-nav__item\">*/}\r\n                                                                {/*        <Link to={\"treatment/chat/remove_chat\"}*/}\r\n                                                                {/*              className=\"kt-nav__link\">*/}\r\n                                                                {/*            <i className=\"kt-nav__link-icon flaticon-delete\"></i>*/}\r\n                                                                {/*            <span*/}\r\n                                                                {/*                className=\"kt-nav__link-text\">Supprimer un Tchat</span>*/}\r\n                                                                {/*        </Link>*/}\r\n                                                                {/*    </li>*/}\r\n\r\n                                                                {/*    <li className=\"kt-nav__separator\"></li>*/}\r\n\r\n                                                                {/*    <li className=\"kt-nav__item\">*/}\r\n                                                                {/*        <Link*/}\r\n                                                                {/*            to={idChat ? `/treatment/chat/add_user/${idChat}` : \"\"}*/}\r\n                                                                {/*            className=\"kt-nav__link\">*/}\r\n                                                                {/*            <i className=\"kt-nav__link-icon flaticon2-group\"></i>*/}\r\n                                                                {/*            <span*/}\r\n                                                                {/*                className=\"kt-nav__link-text\">Ajouter un Membre</span>*/}\r\n                                                                {/*            <span className=\"kt-nav__link-badge\">*/}\r\n                                                                {/*    <span*/}\r\n                                                                {/*        className=\"kt-badge kt-badge--brand  kt-badge--rounded-\">{listChatUsers.length}</span>*/}\r\n                                                                {/*</span>*/}\r\n                                                                {/*        </Link>*/}\r\n                                                                {/*    </li>*/}\r\n                                                                {/*    <li className=\"kt-nav__item\">*/}\r\n                                                                {/*        <Link*/}\r\n                                                                {/*            to={idChat ? `/treatment/chat/contributor/${idChat}` : \"\"}*/}\r\n                                                                {/*            className=\"kt-nav__link\">*/}\r\n                                                                {/*            <i className=\"kt-nav__link-icon flaticon-delete\"></i>*/}\r\n                                                                {/*            <span*/}\r\n                                                                {/*                className=\"kt-nav__link-text\">Retirer un Membre</span>*/}\r\n                                                                {/*        </Link>*/}\r\n                                                                {/*    </li>*/}\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                :\r\n                                                <div className=\"kt-chat__right\"></div>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div className=\"kt-scroll kt-scroll--pull ps ps--active-y overflow-auto\"\r\n                                         id=\"kt-scroll\" data-mobile-height=\"350\"\r\n                                         style={{height: '250px', overflow: 'auto'}}>\r\n                                        <div className=\"message-list\">\r\n\r\n                                            {\r\n                                                listChatUsers && listChatMessages.length ?\r\n                                                    <MessageList\r\n                                                        idChat={idChat}\r\n                                                        load={load}\r\n                                                        getList={listChatUsers}\r\n                                                        getMessage={listChatMessages}\r\n                                                        deletedItem={deletedItem}\r\n                                                        responseItem={responseToMessage}/>\r\n                                                    :  \"\"\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"kt-portlet__foot\">\r\n                                    <div className=\"kt-chat__input\">\r\n\r\n                                        <input style={{display: \"none\"}}\r\n                                               id=\"parent_id\"\r\n                                               type=\"text\"\r\n                                               value={data.parent_id}\r\n                                               onChange={responseToMessage}\r\n                                        />\r\n\r\n                                        <div className=\"kt-chat__editor\">\r\n                                            {\r\n                                                data.parent_id ?\r\n                                                    <div className=\"message_target\">\r\n                                                        <i className=\"d-flex justify-content-end flaticon-close\"\r\n                                                           onClick={(e) => closeTag(e)}></i>\r\n                                                        <i className=\"la la-tags\"></i>\r\n                                                        <br/>\r\n                                                        <em>{messageTarget}</em>\r\n                                                    </div> : \"\"\r\n                                            }\r\n\r\n                                            {\r\n                                                data.files ?\r\n                                                    data.files.map((file, i) => (\r\n                                                        <div className=\"message_target\" key={i}>\r\n                                                            <i className=\"d-flex justify-content-end flaticon-close\"\r\n                                                               onClick={(e) => closeTag(e)}></i>\r\n                                                            <img src=\"/assets/media/users/file-icon.png\" alt=\"\"\r\n                                                                 style={{\r\n                                                                     maxWidth: \"55px\",\r\n                                                                     maxHeight: \"55px\",\r\n                                                                 }}/>\r\n                                                            {\r\n                                                                file.name\r\n                                                            }\r\n                                                        </div>\r\n                                                    ))\r\n                                                    : \"\"\r\n                                            }\r\n\r\n                                            <textarea\r\n                                                id={\"monChamp\"}\r\n                                                style={{height: \"35px\"}}\r\n                                               autoFocus={true}\r\n                                                placeholder=\"Type here...\"\r\n                                                value={data.text}\r\n                                                onChange={(e) => onChangeText(e)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"kt-chat__toolbar\">\r\n                                            <div className=\"image-upload\">\r\n                                                <label htmlFor=\"file-input\"\r\n                                                       data-toggle=\"kt-tooltip\"\r\n                                                       title=\"Ajouter un fichier\">\r\n                                                    <i className=\"fas fa-paperclip\"></i>\r\n                                                </label>\r\n                                                <input id=\"file-input\"\r\n                                                       type=\"file\"\r\n                                                       onChange={onChangeFile}\r\n                                                       multiple={true}\r\n                                                />\r\n\r\n                                            </div>\r\n\r\n                                            <div className=\"kt_chat__actions\">\r\n                                                {\r\n                                                    !startRequest ? (\r\n                                                        <button type=\"button\"\r\n                                                                onClick={(e) => addItem(e)}\r\n                                                                className=\"btn btn-brand btn-md btn-upper btn-bold kt-chat__reply \">Envoyer\r\n                                                        </button>\r\n                                                    ) : (\r\n                                                        <button\r\n                                                            className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                            type=\"button\" disabled>\r\n                                                            Chargement...\r\n                                                        </button>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userPermissions: state.user.user.permissions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Chats);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ReasonSatisfaction.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\ClaimDetails.jsx",["1144","1145","1146","1147","1148"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {formatDateToTimeStampte, loadCss, loadScript} from \"../../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../../constants/token\";\r\nimport appConfig from \"../../../config/appConfig\";\r\nimport Loader from \"../Loader\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\n\r\nconst ClaimDetails = (props) => {\r\n\r\n    console.log(props.claim);\r\n    const claim = props.claim;\r\n\r\n    const [first, setFist] = useState(\"current\");\r\n    const [second, setSecond] = useState(\"pending\");\r\n    const [third, setThird] = useState(\"pending\");\r\n    const [last, setLast] = useState(\"pending\");\r\n\r\n    const onClickFirst = () => {\r\n        setFist(\"current\");\r\n        setSecond(\"pending\");\r\n        setThird(\"pending\");\r\n        setLast(\"pending\");\r\n    };\r\n\r\n    const onClickSecond = () => {\r\n        setFist(\"done\");\r\n        setSecond(\"current\");\r\n        setThird(\"pending\");\r\n        setLast(\"pending\");\r\n    };\r\n\r\n    const onClickThird = () => {\r\n        setFist(\"done\");\r\n        setSecond(\"done\");\r\n        setThird(\"current\");\r\n        setLast(\"pending\");\r\n    };\r\n\r\n    const onClickLast = () => {\r\n        setFist(\"done\");\r\n        setSecond(\"done\");\r\n        setThird(\"done\");\r\n        setLast(\"current\");\r\n    };\r\n\r\n    const onClickPrevious = (e) => {\r\n        e.preventDefault();\r\n        if (last === \"current\")\r\n            onClickThird();\r\n        else if (third === \"current\")\r\n            onClickSecond();\r\n        else if (second === \"current\")\r\n            onClickFirst();\r\n    };\r\n\r\n    const onClickNext = (e) => {\r\n        e.preventDefault();\r\n        if (first === \"current\")\r\n            onClickSecond();\r\n        else if (second === \"current\")\r\n            onClickThird();\r\n        else if (third === \"current\")\r\n            onClickLast()\r\n    };\r\n\r\n    return (\r\n        <div className=\"kt-portlet__body kt-portlet__body--fit w-100\">\r\n            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\" data-ktwizard-state={first === \"current\" ? \"step-first\" : last === \"current\" ? \"last\" : \"between\"}>\r\n                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                    <div className=\"kt-wizard-v2__nav\">\r\n                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                            <div onClick={() => onClickFirst() } className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\" data-ktwizard-state={first}>\r\n                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                        <i className=\"flaticon-user-settings\"/>\r\n                                    </div>\r\n                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                            Client\r\n                                        </div>\r\n                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                            Acceder aux détails du client\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => onClickSecond() } className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\" data-ktwizard-state={second}>\r\n                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                        <i className=\"flaticon-book\"/>\r\n                                    </div>\r\n                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                            Réclamation\r\n                                        </div>\r\n                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                            Acceder aux détails de la réclamation\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div onClick={() => onClickThird() } className=\"kt-wizard-v2__nav-item\" href=\"#\" data-ktwizard-type=\"step\" data-ktwizard-state={third}>\r\n                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                        <i className=\"flaticon-file-2\"/>\r\n                                    </div>\r\n                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                            Pièces jointes\r\n                                            {\r\n                                                !props.claim ? \"\" : (\r\n                                                    <span\r\n                                                        className=\"mx-lg-4 kt-badge kt-badge--success  kt-badge--inline kt-badge--pill\">{props.claim.files.length}</span>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                            Acceder à la liste des pièces jointes\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                    <form className=\"kt-form\" id=\"kt_form\">\r\n\r\n                        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\" data-ktwizard-state={first === \"current\" ? \"current\" : \"pending\"}>\r\n                            <div className=\"kt-heading kt-heading--md\">Détails du client</div>\r\n                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                <div className=\"kt-wizard-v2__review\">\r\n                                    <div className=\"kt-wizard-v2__review-item\">\r\n                                        <div className=\"kt-widget kt-widget--user-profile-1\">\r\n                                            <div className=\"kt-widget__head\">\r\n                                                <div className=\"kt-widget__media\">\r\n                                                    <img src=\"/personal/img/default-avatar.png\"\r\n                                                         alt=\"image\"/>\r\n                                                </div>\r\n                                                <div className=\"kt-widget__content\"\r\n                                                     style={{marginTop: \"auto\", marginBottom: \"auto\"}}>\r\n                                                    <div className=\"kt-widget__section\">\r\n                                                        {\r\n                                                            !claim ? (\r\n                                                                <Loader/>\r\n                                                            ) : (\r\n                                                                <a href=\"#\"\r\n                                                                   className=\"kt-widget__username\">\r\n                                                                    {`${claim.claimer.lastname} ${claim.claimer.firstname}`}\r\n                                                                    <i className=\"flaticon2-correct kt-font-success\"/>\r\n                                                                </a>\r\n                                                            )\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"kt-widget__body\">\r\n                                                {\r\n                                                    !claim ? \"\" : (\r\n                                                        <div className=\"kt-widget__content\">\r\n                                                            <div className=\"kt-widget__info\">\r\n                                                                                <span className=\"fa fa-venus-mars\"\r\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\r\n                                                                <span\r\n                                                                    className=\"kt-widget__data\">{claim.claimer.sexe === 'F' ? \"Féminin\" : \"Masculin\"}</span>\r\n                                                            </div>\r\n                                                            <div className=\"kt-widget__info\">\r\n                                                                                <span className=\"fa fa-envelope\"\r\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\r\n                                                                <span className=\"kt-widget__data\">\r\n                                                                                {\r\n                                                                                    claim.claimer.email.map((mail, index) => (\r\n                                                                                        index === claim.claimer.email.length - 1 ? mail : mail + \"/ \"\r\n                                                                                    ))\r\n                                                                                }\r\n                                                                            </span>\r\n                                                            </div>\r\n                                                            <div className=\"kt-widget__info\">\r\n                                                                                <span className=\"fa fa-phone-alt\"\r\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\r\n                                                                <span className=\"kt-widget__data\">\r\n                                                                                {\r\n                                                                                    claim.claimer.telephone.map((telephone, index) => (\r\n                                                                                        index === claim.claimer.telephone.length - 1 ? telephone : telephone + \"/ \"\r\n                                                                                    ))\r\n                                                                                }\r\n                                                                            </span>\r\n                                                            </div>\r\n                                                            <div className=\"kt-widget__info\">\r\n                                                                                <span className=\"fa fa-location-arrow\"\r\n                                                                                      style={{fontSize: \"1.5rem\"}}/>\r\n                                                                <span className=\"kt-widget__data\">\r\n                                                                                {claim.claimer.ville ? claim.claimer.ville : \"Pas d'information sur la ville\"}\r\n                                                                            </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\" data-ktwizard-state={second === \"current\" ? \"current\" : \"pending\"}>\r\n                            <div className=\"kt-heading kt-heading--md\">Détails de la réclamation</div>\r\n                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                <div className=\"kt-wizard-v2__review\">\r\n                                    <div className=\"kt-wizard-v2__review-item\">\r\n                                        {\r\n                                            !claim ? null : (\r\n                                                <div className=\"kt-wizard-v2__review-content\">\r\n                                                    <h5><span style={{color:\"#48465b\"}}>Référence:</span></h5>\r\n                                                    <span className=\"mx-2\">{claim.reference ? claim.reference : \"Pas de canal de référence\"}</span>\r\n                                                    <br/>\r\n                                                    <br/>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n\r\n                                        <div className=\"kt-wizard-v2__review-title\">\r\n                                            <h5><span style={{color:\"#48465b\"}}>Canaux</span></h5>\r\n                                        </div>\r\n                                        {\r\n                                            !claim ? null : (\r\n                                                <div className=\"kt-wizard-v2__review-content\">\r\n                                                    <strong>Canal de réception:</strong> <span\r\n                                                    className=\"mx-2\">{claim.request_channel ? claim.request_channel.name[\"fr\"] : \"Pas de canal de réception\"}</span><br/>\r\n                                                    <strong>Canal de réponse préférentiel:</strong> <span\r\n                                                    className=\"mx-2\">{claim.response_channel ? claim.response_channel.name[\"fr\"] : \"Pas de canal de réponse\"}</span><br/>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"kt-wizard-v2__review-item\">\r\n                                        <div className=\"kt-wizard-v2__review-title\">\r\n                                            <h5><span style={{color:\"#48465b\"}}>Cible</span></h5>\r\n                                        </div>\r\n                                        {\r\n                                            !claim ? null : (\r\n                                                <div className=\"kt-wizard-v2__review-content\">\r\n                                                    <strong>Institution</strong>: <span\r\n                                                    className=\"mx-2\">{claim.institution_targeted.name}</span><br/>\r\n                                                    <strong>Unité</strong>: <span\r\n                                                    className=\"mx-2\">{claim.unit_targeted ? claim.unit_targeted.name[\"fr\"] : \"Pas d'institution ciblé\"}</span><br/>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"kt-wizard-v2__review-item\">\r\n                                        <div className=\"kt-wizard-v2__review-title\">\r\n                                            <h5><span style={{color:\"#48465b\"}}>Spécifications</span></h5>\r\n                                        </div>\r\n                                        {\r\n                                            !claim ? null : (\r\n                                                <div className=\"kt-wizard-v2__review-content\">\r\n                                                    <strong>Objet</strong>: <span\r\n                                                    className=\"mx-2\">{claim.claim_object.name[\"fr\"]}</span><br/>\r\n                                                    <br/>\r\n                                                    <strong>Numéro de compte </strong>: <span\r\n                                                    className=\"mx-2\">{claim.account_targeted ? claim.account_targeted.number : \"Pas de compte cible\"}</span><br/>\r\n                                                    <br/>\r\n                                                    <strong>Montant réclamé</strong>: <span\r\n                                                    className=\"mx-2\">{claim.amount_disputed ? `${claim.amount_disputed} ${claim.amount_currency.name[\"fr\"]}` : \"Pas de montant\"}</span><br/>\r\n                                                    <br/>\r\n                                                    <strong>Date de réception</strong>: <span className=\"mx-2\">{claim.created_at ? formatDateToTimeStampte(claim.created_at) : \"Pas de date\"}</span><br/>\r\n                                                    <br/>\r\n                                                    <strong>Date de l'évernement</strong>: <span className=\"mx-2\">{claim.event_occured_at ? formatDateToTimeStampte(claim.event_occured_at) : \"Pas de date\"}</span><br/>\r\n                                                    <br/>\r\n                                                    <strong>Description:</strong> <span\r\n                                                    className=\"mx-2\">{claim.description ? claim.description : \"Pas de description\"}</span><br/>\r\n                                                    <br/>\r\n                                                    <strong>Attente:</strong> <span\r\n                                                    className=\"mx-2\">{claim.claimer_expectation ? claim.claimer_expectation : \"Pas d'attente\"}</span><br/>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"kt-wizard-v2__content\" data-ktwizard-type=\"step-content\" data-ktwizard-state={third === \"current\" ? \"current\" : \"pending\"}>\r\n                            <div className=\"kt-heading kt-heading--md\">Liste de pièces jointes\r\n                            </div>\r\n                            <div className=\"kt-form__section kt-form__section--first\">\r\n                                <div className=\"kt-wizard-v2__review\">\r\n                                    {\r\n                                        !claim ? \"\" : (\r\n                                            claim.files.length ? (\r\n                                                claim.files.map((file, index) => (\r\n                                                    <div className=\"kt-wizard-v2__review-item\"\r\n                                                         key={index}>\r\n                                                        {/*<div className=\"kt-wizard-v2__review-title\">*/}\r\n                                                        {/*    Pièce jointe Nº{index + 1}*/}\r\n                                                        {/*</div>*/}\r\n                                                        <div className=\"kt-wizard-v2__review-content\">\r\n                                                            <a href={`${appConfig.apiDomaine}${file.url}`}\r\n                                                               download={true} target={\"_blank\"}>\r\n                                                                {file.title}\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : (\r\n                                                <div className=\"kt-wizard-v2__review-item\">\r\n                                                    <div className=\"kt-wizard-v2__review-title\">\r\n                                                        Pas de pièce jointe\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClaimDetails;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\ReasonModal.jsx",["1149"],"import React, {useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {\r\n    toastAssignClaimSuccessMessageConfig,\r\n    toastErrorMessageWithParameterConfig,\r\n    toastRejectTreatmentClaimSuccessMessageConfig,\r\n    toastValidateTreatmentClaimSuccessMessageConfig\r\n} from \"../../config/toastConfig\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst ReasonModal = props => {\r\n    const [description, setDescription] = useState(\"\");\r\n    const [startRequest, setStartRequest] = useState(false);\r\n    const [error, setError] = useState([]);\r\n\r\n    const sendData = () => {\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            if (props.action === \"reject\") {\r\n                axios.put(`${appConfig.apiDomaine}/claim-awaiting-treatment/${props.id}/rejected`, {rejected_reason: description})\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastAssignClaimSuccessMessageConfig);\r\n                        window.location.href = `/process/unit-claims`\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError(error.response.data.error.rejected_reason);\r\n                    })\r\n                ;\r\n            } else if(props.action === \"validateReject\") {\r\n                let endpoint = ``;\r\n                if (props.plan === \"MACRO\" || props.plan === \"PRO\")\r\n                    endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-my-institution/${props.id}/invalidate`;\r\n                else if(props.plan === \"HUB\")\r\n                    endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-any-institution/${props.id}/invalidate`;\r\n                axios.put(endpoint, {invalidated_reason: description})\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastRejectTreatmentClaimSuccessMessageConfig);\r\n                        window.location.href = `/process/claim-to-validated`\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError(error.response.data.error.invalidated_reason);\r\n                    })\r\n                ;\r\n            } else if(props.action === \"validateSolution\") {\r\n                let endpoint = \"\";\r\n                if (props.plan === \"MACRO\" || props.plan === \"PRO\")\r\n                    endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-my-institution/${props.id}/validate`;\r\n                else if(props.plan === \"HUB\")\r\n                    endpoint = `${appConfig.apiDomaine}/claim-awaiting-validation-any-institution/${props.id}/validate`;\r\n                axios.put(endpoint, {solution_communicated: description})\r\n                    .then(response => {\r\n                        setStartRequest(false);\r\n                        ToastBottomEnd.fire(toastValidateTreatmentClaimSuccessMessageConfig);\r\n                        window.location.href = `/process/claim-to-validated`\r\n                    })\r\n                    .catch(error => {\r\n                        setStartRequest(false);\r\n                        setError(error.response.data.error.solution_communicated);\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal fade show\" id=\"kt_modal_4_2\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" style={{display: \"block\", paddingRight: \"17px\"}} aria-modal=\"true\">\r\n            <div className=\"modal-dialog modal-xl\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">{props.reasonTitle}</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"/>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form>\r\n                            <div className={error.length ? \"form-group validated\" : \"\"}>\r\n                                <label htmlFor=\"message-text\" className=\"form-control-label\">{props.reasonLabel}:</label>\r\n                                <textarea\r\n                                    className={error.length ? \"form-control is-invalid\" : \"form-control\"}\r\n                                    id=\"message-text\"\r\n                                    placeholder=\"Veuillez entrer le message à communiquer au réclamant\"\r\n                                    onChange={e => setDescription(e.target.value)}\r\n                                />\r\n                                {\r\n                                    error.map((error, index) => (\r\n                                        <div key={index} className=\"invalid-feedback\">\r\n                                            {error}\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button id={\"close-button-reason\"} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => props.onClose()}>Fermer</button>\r\n                        {\r\n                            !startRequest ? (\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={() => sendData()}>Envoyer</button>\r\n                            ) : (\r\n                                <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                    Chargement...\r\n                                </button>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReasonModal;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\FormInformation.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\MessageList.js",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\kanban\\KanbanElementDetail.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\TreatmentForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\Discussions\\Message.js",["1150","1151","1152","1153"],"import React from 'react';\r\nimport moment from 'moment';\r\nimport './Message.css';\r\nimport appConfig from \"../../../config/appConfig\";\r\n\r\n\r\nexport default function Message(props) {\r\n\r\n    const {\r\n        data,\r\n        isMine,\r\n        startsSequence,\r\n        endsSequence,\r\n        showTimestamp,\r\n    } = props;\r\n\r\n    const friendlyTimestamp = moment(data.created_at).format('LL');\r\n    const chatTimestamp = moment(data.created_at).format('LT');\r\n\r\n    const deletedProps = (key) => {\r\n        props.deleted(key)\r\n    };\r\n\r\n    const responseItemProps = (key, text) => {\r\n        props.responseItem(key, text);\r\n\r\n    };\r\n\r\n    const ouvrirFermerSpoiler = (id) => {\r\n        if (document.getElementById(id).style.display === \"none\")\r\n            document.getElementById(id).style.display = \"block\";\r\n        else\r\n            document.getElementById(id).style.display = \"none\";\r\n    };\r\n\r\n    return (\r\n\r\n        <div\r\n            className={[\r\n                'message',\r\n                `${isMine ? 'mine' : ''}`,\r\n                `${startsSequence ? 'start' : ''}`,\r\n                `${endsSequence ? 'end' : ''}`\r\n            ].join(' ')}>\r\n\r\n            {\r\n                showTimestamp &&\r\n                <div className=\"timestamp\">\r\n                    {friendlyTimestamp}\r\n                </div>\r\n            }\r\n            <div className=\"author\">\r\n\r\n                {\r\n                    !isMine && startsSequence && data.posted_by.identite_id ?\r\n                        <div>\r\n                        <span\r\n                            className=\"kt-media kt-media--circle kt-media--sm\"><img\r\n                            src=\"/assets/media/users/default.jpg\"\r\n                            alt=\"image\"/>\r\n                        </span>\r\n                            {data.posted_by.identite.lastname + \" \" + data.posted_by.identite.firstname}\r\n                        </div> : \"\"\r\n                }\r\n\r\n            </div>\r\n            <div className=\"bubble-container\" onMouseEnter={() => ouvrirFermerSpoiler(data.id)}>\r\n\r\n                {\r\n                    data.files.length ?\r\n                        data.files.map((file, index) => (\r\n                            <div className=\"bubble-media\" key={index}>\r\n                                <div>\r\n                                    <img src={appConfig.apiDomaine + file.url} alt=\"\"\r\n                                         style={{\r\n                                             maxWidth: \"115px\",\r\n                                             maxHeight: \"115px\",\r\n                                             textAlign: 'center'\r\n                                         }}\r\n                                    />\r\n                                </div>\r\n\r\n                                {index === file.length - 1 ? file.title : file.title + \" \"}\r\n                                <br/>\r\n                                <a href={appConfig.apiDomaine + '/download/' + file.id}\r\n                                   download={file.title}><strong>Télécharger</strong></a>\r\n                                <hr/>\r\n                                <div className=\"\">\r\n                                    {data.text}\r\n                                    <div className=\"time\">\r\n                                        {chatTimestamp}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )) :\r\n                        <div className=\"bubble\">\r\n\r\n                            {\r\n                                data.parent_id && data.parent ?\r\n                                    <div>\r\n                                        <div><i className=\"la la-tags\"></i></div>\r\n                                        <em> {data.parent.text} </em>\r\n                                        <div style={{fontSize: '12px'}}>\r\n                                            {\"By:\" + \" \" + data.parent.posted_by.identite.lastname + ' ' + data.parent.posted_by.identite.firstname}\r\n                                        </div>\r\n                                        <hr/>\r\n                                        {data.text}\r\n                                    </div> :\r\n                                    data.text\r\n                            }\r\n\r\n                            <div className=\"time\">\r\n                                {chatTimestamp}\r\n                            </div>\r\n                        </div>\r\n                }\r\n                <div className=\"dropdown dropdown-inline\"\r\n                     style={{cursor: \"pointer\"}}>\r\n                    <div\r\n                        id={data.id}\r\n                        style={{display: \"none\"}}\r\n                        data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"false\">\r\n                        <i className=\"flaticon-more-v5\"></i>\r\n                    </div>\r\n\r\n                    <div\r\n                        className=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-md w-auto\">\r\n\r\n                        <ul className=\"kt-nav\">\r\n                            <li className=\"kt-nav__head\">\r\n                               <span\r\n                                   className=\"kt-nav__link-text\">Citer\r\n                               </span>\r\n                                <a href={\"#\"} onClick={() => responseItemProps(data.id, data.text)}>\r\n                                    <i className=\"kt-nav__link-icon flaticon-reply\"></i>\r\n                                </a>\r\n                            </li>\r\n\r\n                            <li className=\"kt-nav__head\">\r\n                               <span\r\n                                   className=\"kt-nav__link-text\">Supprimer\r\n                               </span>\r\n                                <a href={\"#\"} onClick={(e) => deletedProps(data.id)}>\r\n                                    <i className=\"kt-nav__link-icon flaticon2-trash\"></i>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimDetail.jsx",["1154"],"import React, {useEffect, useState, useRef} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport TreatmentButtonDetail from \"../components/TreatmentButtonDetail\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\nimport RelaunchModal from \"../components/RelaunchModal\";\r\nimport {DeleteConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmRevokeConfig} from \"../../config/confirmConfig\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastErrorMessageWithParameterConfig, toastSuccessMessageWithParameterConfig} from \"../../config/toastConfig\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\nconst ClaimDetail = (props) => {\r\n    document.title = \"Satis client - Détail plainte\";\r\n    const [revokeLoad, setRevokeLoad] = useState(false);\r\n    const {id} = useParams();\r\n    const ref = useRef(null);\r\n\r\n    const [claim, setClaim] = useState(null);\r\n\r\n    if (!(verifyPermission(props.userPermissions, 'search-claim-any-reference') ||\r\n        verifyPermission(props.userPermissions, \"search-claim-my-reference\")))\r\n        window.location.href = ERROR_401;\r\n\r\n    useEffect(() => {\r\n        var endpoint = \"\";\r\n        if (verifyPermission(props.userPermissions, 'search-claim-any-reference'))\r\n            endpoint = `${appConfig.apiDomaine}/any/search-claim/${id}`;\r\n        if (verifyPermission(props.userPermissions, 'search-claim-my-reference'))\r\n            endpoint = `${appConfig.apiDomaine}/my/search-claim/${id}`;\r\n        async function fetchData() {\r\n            console.log(endpoint,\"ENDPOINT\")\r\n            await axios.get(endpoint)\r\n                .then(response => {\r\n                    setClaim(response.data[0]);\r\n                })\r\n                .catch(error => console.log(\"Something is wrong\"))\r\n            ;\r\n        }\r\n\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    const revoke = e => {\r\n        DeleteConfirmation.fire(confirmRevokeConfig)\r\n            .then(result => {\r\n                if (result.value) {\r\n                    setRevokeLoad(true);\r\n                    if (verifyTokenExpire()) {\r\n                        axios.put(`${appConfig.apiDomaine}/revoke-claim/${claim.id}`)\r\n                            .then(response => {\r\n                                setRevokeLoad(false);\r\n                                ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig('Réclamation revoquer avec succès'));\r\n                                setTimeout(() => {\r\n                                    if (document.referrer)\r\n                                        window.location.href = document.referrer;\r\n                                    else\r\n                                        window.location.href = \"/\";\r\n                                }, 1000);\r\n                            })\r\n                            .catch(error => {\r\n                                setRevokeLoad(false);\r\n                                ToastBottomEnd.fire(toastErrorMessageWithParameterConfig('Echec de revocation de la réclamation'));\r\n                                console.log(\"Something is wrong\");\r\n                            })\r\n                    }\r\n                }\r\n            })\r\n        ;\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"search-claim-any-reference\") ||\r\n        verifyPermission(props.userPermissions, \"search-claim-my-reference\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \"/>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                <div className=\"kt-wizard-v2__nav-body\">\r\n                                                    <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                        <i className=\"flaticon-list\"/>\r\n                                                    </div>\r\n                                                    <div className=\"kt-wizard-v2__nav-label\">\r\n                                                        <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                            Traitement Effectué\r\n                                                        </div>\r\n                                                        <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                            Détails du traitement effectué\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        <div className=\"d-flex justify-content-md-end\">\r\n                                            {(verifyPermission(props.userPermissions, 'revoke-claim') && ['incomplete', 'full'].includes(claim ? claim.status : \"\")) && (\r\n                                                <>\r\n                                                    {revokeLoad ? (\r\n                                                        <button className=\"btn mr-2 btn-outline-danger btn-sm kt-spinner kt-spinner--v2 kt-spinner--sm kt-spinner--primary text-uppercase\" disabled={true}>Chargement</button>\r\n                                                    ) : (\r\n                                                        <button onClick={revoke} className=\"btn mr-2 btn-outline-danger btn-sm text-uppercase\">Revoquer</button>\r\n                                                    )}\r\n                                                </>\r\n                                            )}\r\n\r\n                                            {console.log(\"claim:\", claim)}\r\n                                            {(claim && claim.status !== \"archived\") ? (\r\n                                                <>\r\n                                                    {verifyPermission(props.userPermissions, 'revive-staff') && (\r\n                                                        <button onClick={() => {ref.current.click()}} type=\"button\" className=\"btn btn-outline-warning btn-sm\">\r\n                                                            Relancer\r\n                                                        </button>\r\n                                                    )}\r\n                                                    <button ref={ref} type=\"button\" data-keyboard=\"false\" data-backdrop=\"static\" data-toggle=\"modal\" data-target=\"#kt_modal_4\" className=\"d-none btn btn-outline-warning btn-sm\">\r\n                                                        Relancer\r\n                                                    </button>\r\n\r\n                                                    <RelaunchModal id={claim ? claim.id : ''} onClose={() => {}}/>\r\n                                                </>\r\n                                            ) : null}\r\n\r\n                                        </div>\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        <TreatmentButtonDetail archive={true} claim={claim}/>\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANT\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\CompleteAttachment.jsx",["1155"],"import React, {useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {toastErrorMessageWithParameterConfig, toastSuccessMessageWithParameterConfig} from \"../../config/toastConfig\";\r\nimport {ToastBottomEnd} from \"./Toast\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\nconst CompleteAttachments = ({claimId}) => {\r\n    const [error, setError] = useState([]);\r\n    const [load, setLoad] = useState(false);\r\n    const inputRef = useRef(null);\r\n\r\n    const seeFormData = (formData) => {\r\n        console.log(\"SEE_FORM_DATA\");\r\n        for (let input of formData.entries()) {\r\n            console.log(\"element:\", input[1]);\r\n        }\r\n    };\r\n\r\n    const handleClick = async () => {\r\n        setLoad(true);\r\n        const files = inputRef.current.files;\r\n        const formData = new FormData();\r\n        for(let i = 0; i < files.length; i++)\r\n            formData.append(\"file[]\", files[i], files[i].name);\r\n\r\n        // seeFormData(formData);\r\n\r\n        if (verifyTokenExpire()) {\r\n            await axios.post(`${appConfig.apiDomaine}/attach-files-to-claim/${claimId}`, formData)\r\n                .then((response) => {\r\n                    console.log(\"cool:\", response.data);\r\n                    // window.location.reload();\r\n                    setLoad(false);\r\n                    setError([]);\r\n                    inputRef.current.files = null;\r\n                    inputRef.current.value = null;\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig('Pièce(s)  jointe(s)  ajouter avec succès'));\r\n                })\r\n                .catch(({response}) => {\r\n                    console.log(\"error:\", response.status);\r\n                    console.log(\"response:\", response);\r\n                    setLoad(false);\r\n                    if (response.status === 422)\r\n                        setError(Object.values(response.data.error).map(el => el[0]));\r\n                    if (response.status === 404)\r\n                        ToastBottomEnd.fire(toastErrorMessageWithParameterConfig(response.data));\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"kt-heading kt-heading--md\">\r\n                Ajouter d'autres pièces\r\n            </div>\r\n\r\n            <div className=\"kt-wizard-v2__review-item\">\r\n                <div className=\"kt-wizard-v2__review-content\">\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            ref={inputRef}\r\n                            multiple={true}\r\n                            type=\"file\"\r\n                            className={`form-control${error.length ? ' is-invalid' : ''}`}\r\n                        />\r\n                        {error.length ? (\r\n                            error.map((el, index) => (\r\n                                <div key={index} className=\"invalid-feedback\">\r\n                                    {el}\r\n                                </div>\r\n                            ))\r\n                        ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"text-right\">\r\n                        {\r\n                            !load ? (\r\n                                <button type=\"submit\" onClick={handleClick} className=\"btn btn-primary\">Completer</button>\r\n                            ) : (\r\n                                <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                    Chargement...\r\n                                </button>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CompleteAttachments;\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\modules\\login\\views\\Pages\\ForgotForm.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\modules\\login\\views\\Pages\\ReinitialisationForm.jsx",["1156","1157"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport appConfig from \"../../../../config/appConfig\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ToastBottomEnd} from \"../../../../views/components/Toast\";\r\nimport {\r\n    toastAddErrorMessageConfig, toastEditErrorMessageConfig,\r\n    toastEditSuccessMessageConfig,\r\n} from \"../../../../config/toastConfig\";\r\nimport \"./LoginCss.css\"\r\nimport Loader from \"../../../../views/components/Loader\";\r\n\r\n\r\nconst ReinitialisationForm = (props) => {\r\n    const defaultData = {\r\n        email: \"\",\r\n        token: props.token,\r\n        password: \"\",\r\n        password_confirmation: \"\"\r\n    };\r\n    const defaultError = {\r\n        email: \"\",\r\n        token: \"\",\r\n        password: \"\",\r\n        password_confirmation: \"\"\r\n    };\r\n    const [load, setLoad] = useState(true);\r\n    const [getTokenData, setGetTokenData] = useState(defaultData);\r\n    const [error, setError] = useState(defaultError);\r\n    const [startRequestForgot, setStartRequestForgot] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        if (props.token) {\r\n            axios.get(appConfig.apiDomaine + `/forgot-password/${props.token}`)\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    if (response.data.code === 200) {\r\n                        const newData = {\r\n                            email: response.data.data.email,\r\n                            token: response.data.data.token,\r\n                            password: \"\",\r\n                            password_confirmation: \"\"\r\n                        };\r\n                        setGetTokenData(newData)\r\n                    }\r\n                    setLoad(false);\r\n                }).catch(errorRequest => {\r\n                setLoad(false);\r\n                setGetTokenData(defaultError)\r\n            })\r\n            ;\r\n\r\n        }\r\n    }, []);\r\n\r\n    const onChangePassword = (e) => {\r\n        const newData = {...getTokenData};\r\n        newData.password = e.target.value;\r\n        setGetTokenData(newData);\r\n    };\r\n    const onChangePasswordConfirm = (e) => {\r\n        const newData = {...getTokenData};\r\n        newData.password_confirmation = e.target.value;\r\n        setGetTokenData(newData);\r\n    };\r\n    const onViewPassword = (e) => {\r\n        let input = document.getElementById(\"password\");\r\n        let inputConfirm = document.getElementById(\"password_confirm\");\r\n        let icon = document.getElementById(\"icon\");\r\n        if (input.type === \"password\"||inputConfirm.type === \"password\") {\r\n            input.type = \"text\";\r\n            inputConfirm.type = \"text\";\r\n            icon.className = \"fa fa-eye\"\r\n        } else {\r\n            input.type = \"password\";\r\n            inputConfirm.type = \"password\";\r\n            icon.className = \"fa fa-eye-slash\"\r\n        }\r\n    };\r\n\r\n    const onClick = (e) => {\r\n        setStartRequestForgot(true);\r\n\r\n        axios.post(appConfig.apiDomaine + `/reset-password`, getTokenData)\r\n            .then(response => {\r\n                setStartRequestForgot(false);\r\n                setError(defaultError);\r\n                setGetTokenData(defaultData);\r\n                ToastBottomEnd.fire(toastEditSuccessMessageConfig);\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response.data.error, \"error\");\r\n                setStartRequestForgot(false);\r\n                setError({...defaultError,...error.response.data.error});\r\n                ToastBottomEnd.fire(toastEditErrorMessageConfig);\r\n            })\r\n        ;\r\n    };\r\n\r\n    return (\r\n        getTokenData.token === props.token ?\r\n            <div>\r\n                <div className=\"kt-login__form \"\r\n                     style={{paddingTop: \"100px\"}}>\r\n                    <div className=\"kt-login__head\">\r\n                        <h3 className=\"kt-login__title\">Réinitialisation du Mot de Passe </h3>\r\n                        <div className=\"kt-login__desc text-center\">Entrer votre nouveau mot de passe:\r\n                        </div>\r\n                    </div>\r\n                    <form className=\"kt-form\" id=\"kt_login__form\" style={{marginBottom: '90px'}}>\r\n                        <div className=\"form-group row input_container\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                placeholder=\"Email\"\r\n                                defaultValue={getTokenData.email}\r\n                                style={{display: 'none'}}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group row input_container\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                placeholder=\"Token\"\r\n                                defaultValue={getTokenData.token}\r\n                                style={{display: 'none'}}\r\n                            />\r\n                        </div>\r\n                        <div\r\n                            className={error.password.length ? \"form-group row input_container validated\" : \"form-group row input_container\"}>\r\n                             <span className=\"input_icon\">\r\n                                 <i id=\"icon\" className=\"fa fa-eye-slash\" aria-hidden=\"true\"\r\n                                    onClick={(e) => onViewPassword(e)}></i>\r\n                             </span>\r\n                            <input\r\n                                id=\"password\"\r\n                                className=\"form-control\"\r\n                                type=\"password\"\r\n                                placeholder=\"Nouveau mot de passe\"\r\n                                value={getTokenData.password}\r\n                                onChange={e => onChangePassword(e)}\r\n                            />\r\n                            {\r\n                                error.password.length ? (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {error.password}\r\n                                    </div>\r\n                                ) : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group row input_container\">\r\n\r\n                            <input\r\n                                id=\"password_confirm\"\r\n                                className=\"form-control\"\r\n                                type=\"password\"\r\n                                placeholder=\"Confirmer le nouveau mot de passe\"\r\n                                value={getTokenData.password_confirmation}\r\n                                onChange={e => onChangePasswordConfirm(e)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"kt-login__actions\">\r\n\r\n                            {\r\n                                !startRequestForgot ? (\r\n                                    <button type=\"submit\"\r\n                                            id=\"kt_login_forgot_submit\"\r\n                                            className=\"btn btn-brand btn-pill btn-elevate\"\r\n                                            onClick={onClick}>Envoyer\r\n                                    </button>\r\n                                ) : (\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-pill btn-elevate kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                        type=\"button\" disabled>\r\n                                        Chargement...\r\n                                    </button>\r\n                                )\r\n                            }\r\n                            <Link to={\"/login\"} id=\"kt_login_forgot_cancel\"\r\n                                  className=\"btn btn-outline-brand btn-pill\">Quitter\r\n                            </Link>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            : load ? (\r\n                <Loader/>\r\n            ) : ( window.location.href = \"/login\")\r\n    );\r\n\r\n};\r\n\r\nexport default ReinitialisationForm;","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReassignDetail.jsx",["1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {loadCss, loadScript} from \"../../helpers/function\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {\r\n    toastAssignClaimSuccessMessageConfig, toastSuccessMessageWithParameterConfig\r\n} from \"../../config/toastConfig\";\r\nimport {AssignClaimConfirmation} from \"../components/ConfirmationAlert\";\r\nimport {confirmAssignConfig} from \"../../config/confirmConfig\";\r\nimport ClientButton from \"../components/ClientButton\";\r\nimport ClaimButton from \"../components/ClaimButton\";\r\nimport AttachmentsButton from \"../components/AttachmentsButton\";\r\nimport ClientButtonDetail from \"../components/ClientButtonDetail\";\r\nimport ClaimButtonDetail from \"../components/ClaimButtonDetail\";\r\nimport AttachmentsButtonDetail from \"../components/AttachmentsButtonDetail\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\n\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\nloadCss(\"/assets/css/pages/wizard/wizard-2.css\");\r\nloadScript(\"/assets/js/pages/custom/wizard/wizard-2.js\");\r\nloadScript(\"/assets/js/pages/custom/chat/chat.js\");\r\n\r\n\r\nconst ClaimReassignDetail = (props) => {\r\n    document.title = \"Satis client - Détail réclamation\";\r\n    const {id} = useParams();\r\n\r\n    if (!verifyPermission(props.userPermissions, \"assignment-claim-awaiting-treatment\"))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [claim, setClaim] = useState(null);\r\n    const [showReason, setShowReason] = useState(false);\r\n    const [reasonTitle, setReasonTitle] = useState(\"\");\r\n    const [reasonLabel, setReasonLabel] = useState(\"\");\r\n    const [action, setAction] = useState(\"\");\r\n    const [staffs, setStaffs] = useState([]);\r\n    const [errors, setErrors] = useState([]);\r\n    const [staff, setStaff] = useState(null);\r\n    const [startRequest, setStartRequest] = useState(false);\r\n\r\n    const formatStaffsOptions = (data) => {\r\n        const newData = [];\r\n        for (let i = 0; i < data.length; i++)\r\n            newData.push({value: data[i].id, label: `${data[i].identite.lastname} ${data[i].identite.firstname}`});\r\n        return newData;\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${appConfig.apiDomaine}/claim-reassignment/${id}/edit`)\r\n                .then(response => {\r\n                    setClaim(response.data.claim);\r\n                    setStaffs(formatStaffsOptions(response.data.staffs));\r\n                })\r\n                .catch(error => {console.log(\"Something is wrong\");})\r\n            ;\r\n        }\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [id]);\r\n\r\n    const onChangeStaff = (selected) => {\r\n        setStaff(selected);\r\n    };\r\n\r\n    const assignClaim = () => {\r\n        setStartRequest(true);\r\n        if (verifyTokenExpire()) {\r\n            axios.put(`${appConfig.apiDomaine}/claim-reassignment/${id}`, {staff_id: staff ? staff.value : null})\r\n                .then(({data}) => {\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig('La réclamation à été réassigner avec succès'));\r\n                    setStartRequest(false);\r\n                    setStaff(null);\r\n                    setErrors([]);\r\n                })\r\n                .catch(error => {\r\n                    setStartRequest(false);\r\n                    if (error.response.data.code === 422)\r\n                        setErrors(error.response.data.error.staff_id)\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, \"assignment-claim-awaiting-treatment\") ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i\r\n                                    className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()}\r\n                                   className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"default\"}}>\r\n                                    Traitement\r\n                                </a>\r\n                                <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                                <div className=\"kt-subheader__breadcrumbs\">\r\n                                    <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                    <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                    <Link to=\"/process/unit-claims\" className=\"kt-subheader__breadcrumbs-link\">\r\n                                        Liste des réclamations\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#\" className=\"kt-subheader__breadcrumbs-home\">\r\n                                    <i className=\"flaticon2-shelter\"/>\r\n                                </a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#detail\" onClick={e => e.preventDefault()} style={{cursor: \"text\"}}\r\n                                   className=\"kt-subheader__breadcrumbs-link\">\r\n                                    {\r\n                                        claim ? claim.reference : \"Détail réclamation\"\r\n                                    }\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <div className=\"kt-portlet\">\r\n                        <div className=\"kt-portlet__body kt-portlet__body--fit\">\r\n                            <div className=\"kt-grid  kt-wizard-v2 kt-wizard-v2--white\" id=\"kt_wizard_v2\"\r\n                                 data-ktwizard-state=\"step-first\">\r\n                                <div className=\"kt-grid__item kt-wizard-v2__aside\">\r\n                                    <div className=\"kt-wizard-v2__nav\">\r\n                                        <div className=\"kt-wizard-v2__nav-items kt-wizard-v2__nav-items--clickable\">\r\n                                            <ClientButton/>\r\n\r\n                                            <ClaimButton/>\r\n\r\n                                            <AttachmentsButton claim={claim}/>\r\n\r\n                                            {\r\n                                                props.lead ? (\r\n                                                    <div className=\"kt-wizard-v2__nav-item\" data-ktwizard-type=\"step\">\r\n                                                        <div className=\"kt-wizard-v2__nav-body\">\r\n                                                            <div className=\"kt-wizard-v2__nav-icon\">\r\n                                                                <i className=\"flaticon-paper-plane\"/>\r\n                                                            </div>\r\n                                                            <div className=\"kt-wizard-v2__nav-label\">\r\n                                                                <div className=\"kt-wizard-v2__nav-label-title\">\r\n                                                                    Réassignation de la réclamation\r\n                                                                </div>\r\n                                                                <div className=\"kt-wizard-v2__nav-label-desc\">\r\n                                                                    Réassigner la reclamation à un agent\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper\">\r\n                                    <form className=\"kt-form\" id=\"kt_form\">\r\n                                        <ClientButtonDetail claim={claim}/>\r\n\r\n                                        <ClaimButtonDetail claim={claim}/>\r\n\r\n                                        <AttachmentsButtonDetail claim={claim}/>\r\n\r\n                                        {\r\n                                            props.lead ? (\r\n                                                <div className=\"kt-wizard-v2__content\"\r\n                                                     data-ktwizard-type=\"step-content\">\r\n                                                    <div className=\"kt-heading kt-heading--md\">\r\n                                                        Réassignation de la réclamation\r\n                                                    </div>\r\n                                                    <div className=\"kt-form__section kt-form__section--first\">\r\n                                                        <div className=\"kt-wizard-v2__review\">\r\n                                                            <div className=\"kt-wizard-v2__review-content\">\r\n                                                                <div\r\n                                                                    className={errors.length ? \"form-group validated\" : \"form-group\"}>\r\n                                                                    <label>Agent</label>\r\n                                                                    <Select\r\n                                                                        isClearable\r\n                                                                        placeholder={\"Veillez selectioner l'agent\"}\r\n                                                                        value={staff}\r\n                                                                        onChange={onChangeStaff}\r\n                                                                        options={staffs}\r\n                                                                    />\r\n                                                                    {\r\n                                                                        errors.map((error, index) => (\r\n                                                                            <div key={index}\r\n                                                                                 className=\"invalid-feedback\">\r\n                                                                                {error}\r\n                                                                            </div>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </div>\r\n                                                                <div className=\"form-group d-flex justify-content-end\">\r\n                                                                    {\r\n                                                                        !startRequest ? (\r\n                                                                            <button className=\"btn btn-primary\" onClick={assignClaim}>\r\n                                                                                Réassigner\r\n                                                                            </button>\r\n                                                                        ) : (\r\n                                                                            <button\r\n                                                                                className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\"\r\n                                                                                type=\"button\" disabled>\r\n                                                                                Chargement...\r\n                                                                            </button>\r\n                                                                        )\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : null\r\n                                        }\r\n\r\n                                        <div className=\"kt-form__actions\">\r\n                                            <button\r\n                                                className=\"btn btn-secondary btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-prev\">\r\n                                                PRÉCÉDENT\r\n                                            </button>\r\n\r\n                                            <button\r\n                                                className=\"btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u\"\r\n                                                data-ktwizard-type=\"action-next\">\r\n                                                SUIVANT\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userPermissions: state.user.user.permissions,\r\n        lead: state.user.user.staff.is_lead,\r\n        plan: state.plan.plan,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimReassignDetail);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\components\\RelaunchModal.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReassign.jsx",[],"C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReportingUemoaThree.jsx",["1170","1171","1172"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\"\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {\r\n    forceRound, formatSelectOption,\r\n    getLowerCaseString,\r\n    loadCss,\r\n} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastSuccessMessageWithParameterConfig} from \"../../config/toastConfig\";\r\nimport Select from \"react-select\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimReportingUemoaThree = (props) => {\r\n    if (!(verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution')))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claims, setClaims] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [dateStart, setDateStart] = useState('2020-01-01');\r\n    const [dateEnd, setDateEnd] = useState(\"2021-02-01\");\r\n    const [error, setError] = useState({\r\n        date_start: [],\r\n        date_end: [],\r\n        institution_id: []\r\n    });\r\n    const [loadFilter, setLoadFilter] = useState(false);\r\n    const [loadDownload, setLoadDownload] = useState(false);\r\n    const [institution, setInstitution] = useState(null);\r\n    const [institutions, setInstitutions] = useState([]);\r\n\r\n    const fetchData = async (click = false) => {\r\n        setLoadFilter(true);\r\n        setLoad(true);\r\n        let endpoint = \"\";\r\n        let sendData = \"\";\r\n        if (verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/any/uemoa/state-out-time`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd, institution_id: institution ? institution.value : null};\r\n        }\r\n        else if (verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/my/uemoa/state-out-time`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd};\r\n        }\r\n        await axios.get(endpoint, {params: sendData})\r\n            .then(response => {\r\n                if (click)\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Filtre éffectuer avec succès\"));\r\n                setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                setShowList(response.data.slice(0, numberPerPage));\r\n                setClaims(response.data);\r\n                setError({\r\n                    date_start: [],\r\n                    date_end: [],\r\n                    institution_id: []\r\n                });\r\n                setLoadFilter(false);\r\n                setLoad(false);\r\n            })\r\n            .catch(error => {\r\n                setError({\r\n                    date_start: [],\r\n                    date_end: [],\r\n                    institution_id: [],\r\n                    ...error.response.data.error\r\n                });\r\n                setLoadFilter(false);\r\n                setLoad(false);\r\n                console.log(\"Something is wrong\");\r\n            })\r\n        ;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [numberPerPage]);\r\n\r\n    useEffect(() => {\r\n        if (verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution')) {\r\n            if (verifyTokenExpire()) {\r\n                axios.get(`${appConfig.apiDomaine}/any/uemoa/institution`)\r\n                    .then(response => {\r\n                        setInstitutions(formatSelectOption(response.data, \"name\", false));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\")\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaims = [...claims];\r\n        newClaims = newClaims.filter(el => {\r\n            return (\r\n                getLowerCaseString(el.filiale ? el.filiale : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.account ? el.account : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.amountDisputed ? el.amountDisputed : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.claimCategorie ? el.claimCategorie : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.claimObject ? el.claimObject : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.client ? el.client : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.commentClient ? el.commentClient : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.dateClosing ? el.dateClosing : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.dateQualification ? el.dateQualification : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.dateRegister ? el.dateRegister : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.dateTreatment ? el.dateTreatment : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayQualificationOpenDay ? el.delayQualificationOpenDay : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayQualificationWorkingDay ? el.delayQualificationWorkingDay : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayTreatmentOpenDay ? el.delayTreatmentOpenDay : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayTreatmentWorkingDay ? el.delayTreatmentWorkingDay : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.requestChannel ? el.requestChannel : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.solution ? el.solution : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.staffTreating ? el.staffTreating : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.status ? el.status : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.typeClient ? el.typeClient : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.accountCurrency ? el.accountCurrency : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.agence ? el.agence : '-').indexOf(value) >= 0\r\n            )\r\n        });\r\n\r\n        return newClaims;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claims.length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claims.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claims.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onChangeInstitution = (selected) => {\r\n        setInstitution(selected);\r\n    };\r\n\r\n    const handleDateEndChange = e => {\r\n        setDateEnd(e.target.value);\r\n    };\r\n\r\n    const handleDateStartChange = e => {\r\n        setDateStart(e.target.value);\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const filterReporting = () => {\r\n        setLoadFilter(true);\r\n        setLoad(true);\r\n        if (verifyTokenExpire())\r\n            fetchData(true);\r\n    };\r\n\r\n    const downloadReporting = () => {\r\n        setLoadDownload(true);\r\n        let endpoint = \"\";\r\n        let sendData = {};\r\n        if (verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/any/uemoa/state-out-time`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd, institution_id: institution ? institution.value : null};\r\n        } else if (verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/my/uemoa/state-out-time`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd};\r\n        }\r\n\r\n        if (sendData.institution_id === null)\r\n            delete sendData.institution_id;\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoint,\r\n                responseType: 'json',\r\n                data: sendData\r\n            })\r\n                .then(({data}) => {\r\n                    setError({\r\n                        date_start: [],\r\n                        date_end: [],\r\n                        institution_id: []\r\n                    });\r\n                    setLoadDownload(false);\r\n                    const downloadButton = document.getElementById(\"downloadButton\");\r\n                    downloadButton.href =`${appConfig.apiDomaine}/download-uemoa-reports/${data.file}`;\r\n                    downloadButton.click();\r\n                    setLoadDownload(false);\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig('Téléchargement éffectuer avec succès'));\r\n                })\r\n                .catch(error => {\r\n                    setError({\r\n                        date_start: [],\r\n                        date_end: [],\r\n                        institution_id: [],\r\n                        ...error.response.data.error\r\n                    });\r\n                    console.log(\"Something is wrong\");\r\n                    setLoadDownload(false);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>\r\n                    <button className=\"btn btn-sm btn-clean btn-icon btn-icon-md dropdown-toggle dropdown-toggle-split\" title=\"Détail\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        {/*<i className=\"flaticon2-down\"/>*/}\r\n                    </button>\r\n                    <div className=\"dropdown-menu px-5\" style={{ width: \"550px\" }}>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Objet de réclamation</strong>\r\n                            <p className=\"ml-5\">{claim.claimObject ? claim.claimObject : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Canal de réception</strong>\r\n                            <p className=\"ml-5\">{claim.requestChannel ? claim.requestChannel : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Commentaire (client)</strong>\r\n                            <p className=\"ml-5\">{claim.commentClient ? claim.commentClient : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Fonction de traitement</strong>\r\n                            <p className=\"ml-5\">{claim.status ? claim.status : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Commentaire (fonction de traitement)</strong>\r\n                            <p className=\"ml-5\">{claim.staffTreating ? claim.staffTreating : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Statut</strong>\r\n                            <p className=\"ml-5\">{claim.status ? claim.status : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Date réclamation</strong>\r\n                            <p className=\"ml-5\">{claim.dateRegister ? claim.dateRegister : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Date qualification</strong>\r\n                            <p className=\"ml-5\">{claim.dateQualification ? claim.dateQualification : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Date de traitement</strong>\r\n                            <p className=\"ml-5\">{claim.dateTreatment ? claim.dateTreatment : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Délai de qualification</strong>\r\n                            <p className=\"ml-5\">{claim.delayQualificationWorkingDay ? claim.delayQualificationWorkingDay : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Délait de traitement(jour ouvrable)</strong>\r\n                            <p className=\"ml-5\">{claim.delayTreatmentWorkingDay ? claim.delayTreatmentWorkingDay : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Tempps global de traitement</strong>\r\n                            <p className=\"ml-5\">{claim.delayTreatmentOpenDay ? claim.delayTreatmentOpenDay : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Montant réclamé</strong>\r\n                            <p className=\"ml-5\">{claim.amountDisputed ? claim.amountDisputed : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Devise du montant</strong>\r\n                            <p className=\"ml-5\">{claim.accountCurrency ? claim.accountCurrency : \"-\"}</p>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                    <td>{claim.filiale ? claim.filiale : '-'}</td>\r\n                ) : null}\r\n                <td>{claim.typeClient ? claim.typeClient : \"-\"}</td>\r\n                <td>{claim.client ? claim.client : \"-\"}</td>\r\n                <td>{claim.account ? claim.account : \"-\"}</td>\r\n                <td>{claim.telephone ? claim.telephone : \"-\"}</td>\r\n                <td>{claim.agence ? claim.agence : \"-\"}</td>\r\n                <td>{claim.claimCategorie ? claim.claimCategorie : \"-\"}</td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Retard de +30\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={(\r\n                        <div>\r\n                            Raport Retard de 30 jours\r\n                        </div>\r\n                    )}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Rapport Retard de 30 jours\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div className=\"row\">\r\n                                {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                    <div className=\"col\">\r\n                                        <div className={error.institution_id.length ? \"form-group validated\" : \"form-group\"}>\r\n                                            <label htmlFor=\"\">Institution</label>\r\n                                            <Select\r\n                                                isClearable\r\n                                                value={institution}\r\n                                                placeholder={\"Veuillez sélectionner l'institution\"}\r\n                                                onChange={onChangeInstitution}\r\n                                                options={institutions}\r\n                                            />\r\n\r\n                                            {\r\n                                                error.institution_id.length ? (\r\n                                                    error.institution_id.map((error, index) => (\r\n                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                            {error}\r\n                                                        </div>\r\n                                                    ))\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                ) : null}\r\n\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Date début</label>\r\n                                        <input type=\"date\" onChange={handleDateStartChange} className={error.date_start.length ? \"form-control is-invalid\" : \"form-control\"} value={dateStart}/>\r\n\r\n                                        {\r\n                                            error.date_start.length ? (\r\n                                                error.date_start.map((error, index) => (\r\n                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                        {error}\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Date fin</label>\r\n                                        <input type=\"date\" onChange={handleDateEndChange} className={error.date_end.length ? \"form-control is-invalid\" : \"form-control\"} value={dateEnd}/>\r\n\r\n                                        {\r\n                                            error.date_end.length ? (\r\n                                                error.date_end.map((error, index) => (\r\n                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                        {error}\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"form-group d-flex justify-content-end\">\r\n                                        <a className=\"d-none\" href=\"#\" id=\"downloadButton\" download={true}>downloadButton</a>\r\n                                        {loadFilter ? (\r\n                                            <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                Chargement...\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button onClick={filterReporting} className=\"btn btn-primary\" disabled={loadDownload ? true : false}>Filtrer le rapport</button>\r\n                                        )}\r\n\r\n                                        {loadDownload ? (\r\n                                            <button className=\"btn btn-secondary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--dark ml-3\" type=\"button\" disabled>\r\n                                                Chargement...\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button onClick={downloadReporting} className=\"btn btn-secondary ml-3\" disabled={loadFilter ? true : false}>Télécharger le rapport</button>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Rechercher:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Détail\r\n                                                        </th>\r\n                                                        {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                                Filiale\r\n                                                            </th>\r\n                                                        ) : null}\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Type Client\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Client\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            N Compte\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            N téléphone\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Agence\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Catégorie réclamation\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claims.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Détail</th>\r\n                                                        {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Filiale</th>\r\n                                                        ) : null}\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Type Client</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Client</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">N Compte</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">N Téléphone</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Agence</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Catégorie réclamation</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {claims.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        plan: state.plan.plan,\r\n        userPermissions: state.user.user.permissions,\r\n        activePilot: state.user.user.staff.is_active_pilot\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimReportingUemoaThree);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReportingUemoaFour.jsx",["1173","1174","1175","1176"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\"\r\nimport FileSaver from \"file-saver\";\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {\r\n    forceRound, formatSelectOption,\r\n    getLowerCaseString,\r\n    loadCss,\r\n} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastSuccessMessageWithParameterConfig} from \"../../config/toastConfig\";\r\nimport Select from \"react-select\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimReportingUemoaThree = (props) => {\r\n    if (!(verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution')))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claims, setClaims] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [dateStart, setDateStart] = useState('2020-01-01');\r\n    const [dateEnd, setDateEnd] = useState(\"2021-02-01\");\r\n    const [error, setError] = useState({\r\n        date_start: [],\r\n        date_end: [],\r\n        institution_id: []\r\n    });\r\n    const [loadFilter, setLoadFilter] = useState(false);\r\n    const [loadDownload, setLoadDownload] = useState(false);\r\n    const [institution, setInstitution] = useState(null);\r\n    const [institutions, setInstitutions] = useState([]);\r\n\r\n    const fetchData = async (click = false) => {\r\n        setLoadFilter(true);\r\n        setLoad(true);\r\n        let endpoint = \"\";\r\n        let sendData = \"\";\r\n        if (verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/any/uemoa/state-analytique`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd, institution_id: institution ? institution.value : null};\r\n        }\r\n        else if (verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/my/uemoa/state-analytique`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd};\r\n        }\r\n        await axios.get(endpoint, {params: sendData})\r\n            .then(response => {\r\n                if (click)\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Filtre éffectuer avec succès\"));\r\n                setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                setShowList(response.data.slice(0, numberPerPage));\r\n                setClaims(response.data);\r\n                setError({\r\n                    date_start: [],\r\n                    date_end: [],\r\n                    institution_id: [],\r\n                });\r\n                setLoadFilter(false);\r\n                setLoad(false);\r\n            })\r\n            .catch(error => {\r\n                setError({\r\n                    date_start: [],\r\n                    date_end: [],\r\n                    institution_id: [],\r\n                    ...error.response.data.error\r\n                });\r\n                setLoadFilter(false);\r\n                setLoad(false);\r\n                console.log(\"Something is wrong\");\r\n            })\r\n        ;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [numberPerPage]);\r\n\r\n    useEffect(() => {\r\n        if (verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution')) {\r\n            if (verifyTokenExpire()) {\r\n                axios.get(`${appConfig.apiDomaine}/any/uemoa/institution`)\r\n                    .then(response => {\r\n                        setInstitutions(formatSelectOption(response.data, \"name\", false));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\")\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaims = [...claims];\r\n        newClaims = newClaims.filter(el => {\r\n            return (\r\n                getLowerCaseString(el.filiale ? el.filiale : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.claimCategorie ? el.claimCategorie : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.claimObject ? el.claimObject : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayMediumQualification+\"\").indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayMediumTreatmentOpenDay+\"\").indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayMediumTreatmentWorkingDay+\"\").indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayPlanned+\"\").indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.filiale ? el.filiale : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.percentageNoTreated+\"\").indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.percentageTreatedInDelay+\"\").indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.percentageTreatedOutDelay+\"\").indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.totalClaim+\"\").indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.totalNoValidated+\"\").indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.totalTreated+\"\").indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.totalUnfounded+\"\").indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.typeClient ? el.typeClient : '-').indexOf(value) >= 0\r\n            )\r\n        });\r\n\r\n        return newClaims;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claims.length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claims.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claims.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const onChangeInstitution = (selected) => {\r\n        setInstitution(selected);\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleDateEndChange = e => {\r\n        setDateEnd(e.target.value);\r\n    };\r\n\r\n    const handleDateStartChange = e => {\r\n        setDateStart(e.target.value);\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const filterReporting = () => {\r\n        setLoadFilter(true);\r\n        setLoad(true);\r\n        if (verifyTokenExpire())\r\n            fetchData(true);\r\n    };\r\n\r\n    const downloadReporting = () => {\r\n        setLoadDownload(true);\r\n        let endpoint = \"\";\r\n        let sendData = {};\r\n        if (verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/any/uemoa/state-analytique`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd, institution_id: institution ? institution.value : null};\r\n        } else if (verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/my/uemoa/state-analytique`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd};\r\n        }\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoint,\r\n                responseType: 'json',\r\n                data: sendData\r\n            })\r\n                .then(({data}) => {\r\n                    setError({\r\n                        date_start: [],\r\n                        date_end: [],\r\n                        institution_id: []\r\n                    });\r\n                    const downloadButton = document.getElementById(\"downloadButton\");\r\n                    downloadButton.href =`${appConfig.apiDomaine}/download-uemoa-reports/${data.file}`;\r\n                    downloadButton.click();\r\n                    setLoadDownload(false);\r\n                    setLoadDownload(false);\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig('Téléchargement éffectuer avec succès'));\r\n                })\r\n                .catch(error => {\r\n                    setError({\r\n                        date_start: '',\r\n                        date_end: '',\r\n                        institution_id: [],\r\n                        ...error.response.data.error\r\n                    });\r\n                    console.log(\"Something is wrong\");\r\n                    setLoadDownload(false);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>\r\n                    <button className=\"btn btn-sm btn-clean btn-icon btn-icon-md dropdown-toggle dropdown-toggle-split\" title=\"Détail\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        {/*<i className=\"flaticon2-down\"/>*/}\r\n                    </button>\r\n                    <div className=\"dropdown-menu px-5\" style={{ width: \"550px\" }}>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Nombre de réclamation en cours</strong>\r\n                            <p className=\"ml-5\">{claim.totalNoValidated}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Délai moyen de qualification</strong>\r\n                            <p className=\"ml-5\">{claim.delayMediumQualification}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Délai prévu pour le traitement</strong>\r\n                            <p className=\"ml-5\">{claim.delayPlanned}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Délai moyen de traitement ouvré</strong>\r\n                            <p className=\"ml-5\">{claim.delayMediumTreatmentOpenDay}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Délai moyen de traitement ouvrable</strong>\r\n                            <p className=\"ml-5\">{claim.delayMediumTreatmentWorkingDay}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Pourcentage de réclamations traitées dans le delai</strong>\r\n                            <p className=\"ml-5\">{claim.percentageTreatedInDelay+\"%\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Pourcentage de réclamation traité hors délai</strong>\r\n                            <p className=\"ml-5\">{claim.percentageTreatedOutDelay+\"%\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Pourcentage de réclamation en cours de traitement</strong>\r\n                            <p className=\"ml-5\">{claim.percentageNoTreated+\"%\"}</p>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                    <td>{claim.filiale ? claim.filiale : '-'}</td>\r\n                ) : null}\r\n                <td>{claim.typeClient ? claim.typeClient : \"-\"}</td>\r\n                <td>{claim.claimCategorie  ? claim.claimCategorie  : \"-\"}</td>\r\n                <td>{claim.claimObject  ? claim.claimObject  : \"-\"}</td>\r\n                <td>{claim.totalClaim ? claim.totalClaim : \"-\"}</td>\r\n                <td>{claim.totalTreated ? claim.totalTreated : \"-\"}</td>\r\n                <td>{claim.totalUnfounded}</td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Etat  Retard de +30\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={(\r\n                        <div>\r\n                            Raport Etat analytique\r\n                        </div>\r\n                    )}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Rapport Etat analytique\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div className=\"row\">\r\n                                {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                    <div className=\"col\">\r\n                                        <div className={error.institution_id.length ? \"form-group validated\" : \"form-group\"}>\r\n                                            <label htmlFor=\"\">Institution</label>\r\n                                            <Select\r\n                                                isClearable\r\n                                                value={institution}\r\n                                                placeholder={\"Veuillez sélectionner l'institution\"}\r\n                                                onChange={onChangeInstitution}\r\n                                                options={institutions}\r\n                                            />\r\n\r\n                                            {\r\n                                                error.institution_id.length ? (\r\n                                                    error.institution_id.map((error, index) => (\r\n                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                            {error}\r\n                                                        </div>\r\n                                                    ))\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                ) : null}\r\n\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Date début</label>\r\n                                        <input type=\"date\" onChange={handleDateStartChange} className={error.date_start.length ? \"form-control is-invalid\" : \"form-control\"} value={dateStart}/>\r\n\r\n                                        {\r\n                                            error.date_start.length ? (\r\n                                                error.date_start.map((error, index) => (\r\n                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                        {error}\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Date fin</label>\r\n                                        <input type=\"date\" onChange={handleDateEndChange} className={error.date_end.length ? \"form-control is-invalid\" : \"form-control\"} value={dateEnd}/>\r\n\r\n                                        {\r\n                                            error.date_end.length ? (\r\n                                                error.date_end.map((error, index) => (\r\n                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                        {error}\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"form-group d-flex justify-content-end\">\r\n                                        <a className=\"d-none\" href=\"#\" id=\"downloadButton\" download={true}>downloadButton</a>\r\n                                        {loadFilter ? (\r\n                                            <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                Chargement...\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button onClick={filterReporting} className=\"btn btn-primary\" disabled={loadDownload ? true : false}>Filtrer le rapport</button>\r\n                                        )}\r\n\r\n                                        {loadDownload ? (\r\n                                            <button className=\"btn btn-secondary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--dark ml-3\" type=\"button\" disabled>\r\n                                                Chargement...\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button onClick={downloadReporting} className=\"btn btn-secondary ml-3\" disabled={loadFilter ? true : false}>Télécharger le rapport</button>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Rechercher:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Détail\r\n                                                        </th>\r\n                                                        {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                                Filiale\r\n                                                            </th>\r\n                                                        ) : null}\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Type Client\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Catégorie réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Objet réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Nombre de réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Nombre de réclamation traitées\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Nombre de réclamation non fondé\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claims.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Détail</th>\r\n                                                        {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Filiale</th>\r\n                                                        ) : null}\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Type Client</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Catégorie réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objet réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nombre de réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nombre de réclamation traitées</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Nombre de réclamation non fondé</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {claims.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        plan: state.plan.plan,\r\n        userPermissions: state.user.user.permissions,\r\n        activePilot: state.user.user.staff.is_active_pilot\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimReportingUemoaThree);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReportingUemoaOne.jsx",["1177","1178","1179"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\"\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {\r\n    forceRound, formatSelectOption,\r\n    getLowerCaseString,\r\n    loadCss,\r\n} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastSuccessMessageWithParameterConfig} from \"../../config/toastConfig\";\r\nimport Select from \"react-select\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimReportingUemoaOne = (props) => {\r\n    if (!(verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution')))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claims, setClaims] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [dateStart, setDateStart] = useState('2020-01-01');\r\n    const [dateEnd, setDateEnd] = useState(\"2021-02-01\");\r\n    const [error, setError] = useState({\r\n        date_start: [],\r\n        date_end: [],\r\n        institution_id: []\r\n    });\r\n    const [loadFilter, setLoadFilter] = useState(false);\r\n    const [loadDownload, setLoadDownload] = useState(false);\r\n    const [institution, setInstitution] = useState(null);\r\n    const [institutions, setInstitutions] = useState([]);\r\n\r\n    const fetchData = async (click = false) => {\r\n        setLoadFilter(true);\r\n        setLoad(true);\r\n        let endpoint = \"\";\r\n        let sendData = \"\";\r\n        if (verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/any/uemoa/global-state-report`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd, institution_id: institution ? institution.value : null};\r\n        }\r\n        else if (verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/my/uemoa/global-state-report`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd};\r\n        }\r\n        await axios.get(endpoint, {params: sendData})\r\n            .then(response => {\r\n                if (click)\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Filtre éffectuer avec succès\"));\r\n                setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                setShowList(response.data.slice(0, numberPerPage));\r\n                setClaims(response.data);\r\n                setError({\r\n                    date_start: [],\r\n                    date_end: [],\r\n                    institution_id: []\r\n                });\r\n                setLoadFilter(false);\r\n                setLoad(false);\r\n            })\r\n            .catch(error => {\r\n                setError({\r\n                    date_start: [],\r\n                    date_end: [],\r\n                    institution_id: [],\r\n                    ...error.response.data.error\r\n                });\r\n                setLoadFilter(false);\r\n                setLoad(false);\r\n                console.log(\"Something is wrong\");\r\n            })\r\n        ;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution')) {\r\n            if (verifyTokenExpire()) {\r\n                axios.get(`${appConfig.apiDomaine}/any/uemoa/institution`)\r\n                    .then(response => {\r\n                        setInstitutions(formatSelectOption(response.data, \"name\", false));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\")\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaims = [...claims];\r\n        newClaims = newClaims.filter(el => {\r\n            return (\r\n                getLowerCaseString(el.account ? el.account : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.filiale ? el.filiale : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.amountDisputed ? el.amountDisputed : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.claimCategorie ? el.claimCategorie : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.claimObject ? el.claimObject : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.client ? el.client : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.commentClient ? el.commentClient : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.dateClosing ? el.dateClosing : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.dateQualification ? el.dateQualification : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.dateRegister ? el.dateRegister : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.dateTreatment ? el.dateTreatment : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayQualificationOpenDay ? el.delayQualificationOpenDay : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayQualificationWorkingDay ? el.delayQualificationWorkingDay : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayTreatmentOpenDay ? el.delayTreatmentOpenDay : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayTreatmentWorkingDay ? el.delayTreatmentWorkingDay : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.requestChannel ? el.requestChannel : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.solution ? el.solution : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.staffTreating ? el.staffTreating : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.status ? el.status : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.typeClient ? el.typeClient : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.accountCurrency ? el.accountCurrency : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.agence ? el.agence : '-').indexOf(value) >= 0\r\n            )\r\n        });\r\n\r\n        return newClaims;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claims.length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claims.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claims.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleDateEndChange = e => {\r\n        setDateEnd(e.target.value);\r\n    };\r\n\r\n    const handleDateStartChange = e => {\r\n        setDateStart(e.target.value);\r\n    };\r\n\r\n    const onChangeInstitution = (selected) => {\r\n        setInstitution(selected);\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const filterReporting = () => {\r\n        setLoadFilter(true);\r\n        setLoad(true);\r\n        if (verifyTokenExpire())\r\n            fetchData(true);\r\n    };\r\n\r\n    const downloadReporting = async () => {\r\n        setLoadDownload(true);\r\n        let endpoint = \"\";\r\n        let sendData = {};\r\n        if (verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/any/uemoa/global-state-report`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd, institution_id: institution ? institution.value : null};\r\n        } else if (verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/my/uemoa/global-state-report`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd};\r\n        }\r\n\r\n        if (sendData.institution_id === null)\r\n            delete  sendData.institution_id;\r\n\r\n        if (verifyTokenExpire()) {\r\n            await axios({\r\n                method: 'post',\r\n                url: endpoint,\r\n                responseType: 'json',\r\n                data: sendData\r\n            })\r\n                .then(async ({data}) => {\r\n                    setError({\r\n                        date_start: [],\r\n                        date_end: [],\r\n                        institution_id: [],\r\n                    });\r\n                    const downloadButton = document.getElementById(\"downloadButton\");\r\n                    downloadButton.href =`${appConfig.apiDomaine}/download-uemoa-reports/${data.file}`;\r\n                    downloadButton.click();\r\n                    setLoadDownload(false);\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig('Téléchargement éffectuer avec succès'));\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"error:\", {\r\n                        date_start: [],\r\n                        date_end: [],\r\n                        institution_id: [],\r\n                        ...error.response.data.error\r\n                    });\r\n                    setError({\r\n                        date_start: [],\r\n                        date_end: [],\r\n                        institution_id: [],\r\n                        ...error.response.data.error\r\n                    });\r\n                    console.log(\"Something is wrong\");\r\n                    setLoadDownload(false);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>\r\n                    <button className=\"btn btn-sm btn-clean btn-icon btn-icon-md dropdown-toggle dropdown-toggle-split\" title=\"Détail\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        {/*<i className=\"flaticon2-down\"/>*/}\r\n                    </button>\r\n                    <div className=\"dropdown-menu px-5\" style={{ width: \"550px\" }}>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Commentaire (Description réclamation)</strong>\r\n                            <p className=\"ml-5\">{claim.commentClient ? claim.commentClient : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Fonction de traitement</strong>\r\n                            <p className=\"ml-5\">{claim.staffTreating ? claim.staffTreating : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Commentaire (Solution du staff)</strong>\r\n                            <p className=\"ml-5\">{claim.solution ? claim.solution : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Status</strong>\r\n                            <p className=\"ml-5\">{claim.status ? claim.status : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Date de réclamation</strong>\r\n                            <p className=\"ml-5\">{claim.dateRegister ? claim.dateRegister : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Date de qualification</strong>\r\n                            <p className=\"ml-5\">{claim.dateQualification ? claim.dateQualification : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Date de traitement</strong>\r\n                            <p className=\"ml-5\">{claim.dateTreatment ? claim.dateTreatment : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Date de qualification (j)</strong>\r\n                            <p className=\"ml-5\">{claim.delayQualificationOpenDay ? claim.delayQualificationOpenDay : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Date de traitement (j)</strong>\r\n                            <p className=\"ml-5\">{claim.delayQualificationWorkingDay ? claim.delayQualificationWorkingDay : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Montant réclamé</strong>\r\n                            <p className=\"ml-5\">{claim.amountDisputed ? claim.amountDisputed : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Devise du montant</strong>\r\n                            <p className=\"ml-5\">{claim.accountCurrency ? claim.accountCurrency : \"-\"}</p>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                    <td>{claim.filiale ? claim.filiale : '-'}</td>\r\n                ) : null}\r\n                <td>{claim.typeClient ? claim.typeClient : \"-\"}</td>\r\n                <td>{claim.account ? claim.account : \"-\"}</td>\r\n                <td>{claim.agence ? claim.agence : \"-\"}</td>\r\n                <td>{claim.claimCategorie ? claim.claimCategorie : \"-\"}</td>\r\n                <td>{claim.claimObject ? claim.claimObject : \"-\"}</td>\r\n                <td>{claim.requestChannel ? claim.requestChannel : \"-\"}</td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Etat global\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={(\r\n                        <div>\r\n                            Raport Etat global\r\n                        </div>\r\n                    )}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Rapport Etat global\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div className=\"row\">\r\n                                {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                    <div className=\"col\">\r\n                                        <div className={error.institution_id.length ? \"form-group validated\" : \"form-group\"}>\r\n                                            <label htmlFor=\"\">Institution</label>\r\n                                            <Select\r\n                                                isClearable\r\n                                                value={institution}\r\n                                                placeholder={\"Veuillez sélectionner l'institution\"}\r\n                                                onChange={onChangeInstitution}\r\n                                                options={institutions}\r\n                                            />\r\n\r\n                                            {\r\n                                                error.institution_id.length ? (\r\n                                                    error.institution_id.map((error, index) => (\r\n                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                            {error}\r\n                                                        </div>\r\n                                                    ))\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                ) : null}\r\n\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Date début</label>\r\n                                        <input type=\"date\" onChange={handleDateStartChange} className={error.date_start.length ? \"form-control is-invalid\" : \"form-control\"} value={dateStart}/>\r\n\r\n                                        {\r\n                                            error.date_start.length ? (\r\n                                                error.date_start.map((error, index) => (\r\n                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                        {error}\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Date fin</label>\r\n                                        <input type=\"date\" onChange={handleDateEndChange} className={error.date_end.length ? \"form-control is-invalid\" : \"form-control\"} value={dateEnd}/>\r\n\r\n                                        {\r\n                                            error.date_end.length ? (\r\n                                                error.date_end.map((error, index) => (\r\n                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                        {error}\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"form-group d-flex justify-content-end\">\r\n                                        <a className=\"d-none\" href=\"#\" id=\"downloadButton\" download={true}>downloadButton</a>\r\n                                        {loadFilter ? (\r\n                                            <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                Chargement...\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button onClick={filterReporting} className=\"btn btn-primary\" disabled={loadDownload ? true : false}>Filtrer le rapport</button>\r\n                                        )}\r\n\r\n                                        {loadDownload ? (\r\n                                            <button className=\"btn btn-secondary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--dark ml-3\" type=\"button\" disabled>\r\n                                                Chargement...\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button onClick={downloadReporting} className=\"btn btn-secondary ml-3\" disabled={loadFilter ? true : false}>Télécharger le rapport</button>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Rechercher:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Détail\r\n                                                        </th>\r\n                                                        {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                                Filiale\r\n                                                            </th>\r\n                                                        ) : null}\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Type Client\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            N Compte\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Agence\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Catégorie réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Objet réclamation\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Canal réception\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claims.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Détail</th>\r\n                                                        {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Filiale</th>\r\n                                                        ) : null}\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Type Client</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">N Compte</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Agence</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Catégorie réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Objet réclamation</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Canal réception</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {claims.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        plan: state.plan.plan,\r\n        userPermissions: state.user.user.permissions,\r\n        activePilot: state.user.user.staff.is_active_pilot\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimReportingUemoaOne);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\views\\pages\\ClaimReportingUemoaTwo.jsx",["1180","1181","1182","1183"],"import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\"\r\nimport {verifyPermission} from \"../../helpers/permission\";\r\nimport InfirmationTable from \"../components/InfirmationTable\";\r\nimport HeaderTablePage from \"../components/HeaderTablePage\";\r\nimport LoadingTable from \"../components/LoadingTable\";\r\nimport EmptyTable from \"../components/EmptyTable\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport {ERROR_401} from \"../../config/errorPage\";\r\nimport appConfig from \"../../config/appConfig\";\r\nimport {\r\n    forceRound, formatSelectOption,\r\n    getLowerCaseString,\r\n    loadCss,\r\n} from \"../../helpers/function\";\r\nimport {AUTH_TOKEN} from \"../../constants/token\";\r\nimport {NUMBER_ELEMENT_PER_PAGE} from \"../../constants/dataTable\";\r\nimport {verifyTokenExpire} from \"../../middleware/verifyToken\";\r\nimport {ToastBottomEnd} from \"../components/Toast\";\r\nimport {toastSuccessMessageWithParameterConfig} from \"../../config/toastConfig\";\r\nimport Select from \"react-select\";\r\n\r\nloadCss(\"/assets/plugins/custom/datatables/datatables.bundle.css\");\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\n\r\nconst ClaimReportingUemoaTwo = (props) => {\r\n    if (!(verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution')))\r\n        window.location.href = ERROR_401;\r\n\r\n    const [load, setLoad] = useState(true);\r\n    const [claims, setClaims] = useState([]);\r\n    const [numberPerPage, setNumberPerPage] = useState(10);\r\n    const [activeNumberPage, setActiveNumberPage] = useState(0);\r\n    const [numberPage, setNumberPage] = useState(0);\r\n    const [showList, setShowList] = useState([]);\r\n    const [dateStart, setDateStart] = useState('2020-01-01');\r\n    const [dateEnd, setDateEnd] = useState(\"2021-02-01\");\r\n    const [error, setError] = useState({\r\n        date_start: [],\r\n        date_end: [],\r\n        institution_id: []\r\n    });\r\n    const [loadFilter, setLoadFilter] = useState(false);\r\n    const [loadDownload, setLoadDownload] = useState(false);\r\n    const [institution, setInstitution] = useState(null);\r\n    const [institutions, setInstitutions] = useState([]);\r\n\r\n    const fetchData = async (click = false) => {\r\n        setLoadFilter(true);\r\n        setLoad(true);\r\n        let endpoint = \"\";\r\n        let sendData = \"\";\r\n        if (verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/any/uemoa/state-more-30-days`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd, institution_id: institution ? institution.value : null};\r\n        } else if (verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/my/uemoa/state-more-30-days`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd};\r\n        }\r\n        await axios.get(endpoint, {params: sendData})\r\n            .then(response => {\r\n                if (click)\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig(\"Filtre éffectuer avec succès\"));\r\n                setNumberPage(forceRound(response.data.length / numberPerPage));\r\n                setShowList(response.data.slice(0, numberPerPage));\r\n                setClaims(response.data);\r\n                setError({\r\n                    date_start: '',\r\n                    date_end: '',\r\n                    institution_id: ''\r\n                });\r\n                setLoadFilter(false);\r\n                setLoad(false);\r\n            })\r\n            .catch(error => {\r\n                setError({\r\n                    date_start: '',\r\n                    date_end: '',\r\n                    institution_id: '',\r\n                    ...error.response.data.error\r\n                });\r\n                setLoadFilter(false);\r\n                setLoad(false);\r\n                console.log(\"Something is wrong\");\r\n            })\r\n        ;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (verifyTokenExpire())\r\n            fetchData();\r\n    }, [numberPerPage]);\r\n\r\n    useEffect(() => {\r\n        if (verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution')) {\r\n            if (verifyTokenExpire()) {\r\n                axios.get(`${appConfig.apiDomaine}/any/uemoa/institution`)\r\n                    .then(response => {\r\n                        setInstitutions(formatSelectOption(response.data, \"name\", false));\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"Something is wrong\")\r\n                    })\r\n                ;\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const filterShowListBySearchValue = (value) => {\r\n        value = getLowerCaseString(value);\r\n        let newClaims = [...claims];\r\n        newClaims = newClaims.filter(el => {\r\n            return (\r\n                getLowerCaseString(el.filiale ? el.filiale : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.account ? el.account : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.amountDisputed ? el.amountDisputed : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.claimCategorie ? el.claimCategorie : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.claimObject ? el.claimObject : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.client ? el.client : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.commentClient ? el.commentClient : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.dateClosing ? el.dateClosing : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.dateQualification ? el.dateQualification : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.dateRegister ? el.dateRegister : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.dateTreatment ? el.dateTreatment : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayQualificationOpenDay ? el.delayQualificationOpenDay : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayQualificationWorkingDay ? el.delayQualificationWorkingDay : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayTreatmentOpenDay ? el.delayTreatmentOpenDay : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.delayTreatmentWorkingDay ? el.delayTreatmentWorkingDay : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.requestChannel ? el.requestChannel : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.solution ? el.solution : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.staffTreating ? el.staffTreating : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.status ? el.status : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.typeClient ? el.typeClient : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.accountCurrency ? el.accountCurrency : '-').indexOf(value) >= 0 ||\r\n                getLowerCaseString(el.agence ? el.agence : '-').indexOf(value) >= 0\r\n            )\r\n        });\r\n\r\n        return newClaims;\r\n    };\r\n\r\n    const searchElement = async (e) => {\r\n        if (e.target.value) {\r\n            setNumberPage(forceRound(filterShowListBySearchValue(e.target.value).length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(filterShowListBySearchValue(e.target.value.toLowerCase()).slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n        } else {\r\n            setNumberPage(forceRound(claims.length / NUMBER_ELEMENT_PER_PAGE));\r\n            setShowList(claims.slice(0, NUMBER_ELEMENT_PER_PAGE));\r\n            setActiveNumberPage(0);\r\n        }\r\n    };\r\n\r\n    const onChangeNumberPerPage = (e) => {\r\n        setActiveNumberPage(0);\r\n        setNumberPerPage(parseInt(e.target.value));\r\n        setShowList(claims.slice(0, parseInt(e.target.value)));\r\n        setNumberPage(forceRound(claims.length / parseInt(e.target.value)));\r\n    };\r\n\r\n    const getEndByPosition = (position) => {\r\n        let end = numberPerPage;\r\n        for (let i = 0; i < position; i++) {\r\n            end = end + numberPerPage;\r\n        }\r\n        return end;\r\n    };\r\n\r\n    const onClickPage = (e, page) => {\r\n        e.preventDefault();\r\n        setActiveNumberPage(page);\r\n        setShowList(claims.slice(getEndByPosition(page) - numberPerPage, getEndByPosition(page)));\r\n    };\r\n\r\n    const onClickNextPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage <= numberPage) {\r\n            setActiveNumberPage(activeNumberPage + 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(\r\n                        activeNumberPage + 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage + 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const onClickPreviousPage = (e) => {\r\n        e.preventDefault();\r\n        if (activeNumberPage >= 1) {\r\n            setActiveNumberPage(activeNumberPage - 1);\r\n            setShowList(\r\n                claims.slice(\r\n                    getEndByPosition(activeNumberPage - 1) - numberPerPage,\r\n                    getEndByPosition(activeNumberPage - 1)\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleDateEndChange = e => {\r\n        setDateEnd(e.target.value);\r\n    };\r\n\r\n    const handleDateStartChange = e => {\r\n        setDateStart(e.target.value);\r\n    };\r\n\r\n    const arrayNumberPage = () => {\r\n        const pages = [];\r\n        for (let i = 0; i < numberPage; i++) {\r\n            pages[i] = i;\r\n        }\r\n        return pages\r\n    };\r\n\r\n    const filterReporting = () => {\r\n        setLoadFilter(true);\r\n        setLoad(true);\r\n        if (verifyTokenExpire())\r\n            fetchData(true);\r\n    };\r\n\r\n    const onChangeInstitution = (selected) => {\r\n        setInstitution(selected);\r\n    };\r\n\r\n    const downloadReporting = () => {\r\n        setLoadDownload(true);\r\n        let endpoint = \"\";\r\n        let sendData = {};\r\n        if (verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution')) { {\r\n            endpoint = `${appConfig.apiDomaine}/any/uemoa/state-more-30-days`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd, institution_id: institution ? institution.value : null};\r\n        }\r\n        } else if (verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution')) {\r\n            endpoint = `${appConfig.apiDomaine}/my/uemoa/state-more-30-days`;\r\n            sendData = {date_start: dateStart, date_end: dateEnd};\r\n        }\r\n\r\n        if (sendData.institution_id === null)\r\n            delete sendData.institution_id;\r\n\r\n        if (verifyTokenExpire()) {\r\n            axios({\r\n                method: 'post',\r\n                url: endpoint,\r\n                responseType: 'json',\r\n                data: sendData\r\n            })\r\n                .then(({data}) => {\r\n                    setError({\r\n                        date_start: [],\r\n                        date_end: [],\r\n                        institution_id: [],\r\n                    });\r\n                    const downloadButton = document.getElementById(\"downloadButton\");\r\n                    downloadButton.href =`${appConfig.apiDomaine}/download-uemoa-reports/${data.file}`;\r\n                    downloadButton.click();\r\n                    setLoadDownload(false);\r\n                    setLoadDownload(false);\r\n                    ToastBottomEnd.fire(toastSuccessMessageWithParameterConfig('Téléchargement éffectuer avec succès'));\r\n                })\r\n                .catch(error => {\r\n                    setError({\r\n                        date_start: [],\r\n                        date_end: [],\r\n                        institution_id: [],\r\n                        ...error.response.data.error\r\n                    });\r\n                    console.log(\"Something is wrong\");\r\n                    setLoadDownload(false);\r\n                })\r\n            ;\r\n        }\r\n    };\r\n\r\n    const pages = arrayNumberPage();\r\n\r\n    const printBodyTable = (claim, index) => {\r\n        return (\r\n            <tr key={index} role=\"row\" className=\"odd\">\r\n                <td>\r\n                    <button className=\"btn btn-sm btn-clean btn-icon btn-icon-md dropdown-toggle dropdown-toggle-split\" title=\"Détail\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        {/*<i className=\"flaticon2-down\"/>*/}\r\n                    </button>\r\n                    <div className=\"dropdown-menu px-5\" style={{ width: \"550px\" }}>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Objet de réclamation</strong>\r\n                            <p className=\"ml-5\">{claim.claimObject ? claim.claimObject : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Canal de réception</strong>\r\n                            <p className=\"ml-5\">{claim.requestChannel ? claim.requestChannel : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Commentaire (client)</strong>\r\n                            <p className=\"ml-5\">{claim.commentClient ? claim.commentClient : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Fonction de traitement</strong>\r\n                            <p className=\"ml-5\">{claim.status ? claim.status : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Commentaire (fonction de traitement)</strong>\r\n                            <p className=\"ml-5\">{claim.staffTreating ? claim.staffTreating : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Statut</strong>\r\n                            <p className=\"ml-5\">{claim.status ? claim.status : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Date réclamation</strong>\r\n                            <p className=\"ml-5\">{claim.dateRegister ? claim.dateRegister : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Date qualification</strong>\r\n                            <p className=\"ml-5\">{claim.dateQualification ? claim.dateQualification : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Date de traitement</strong>\r\n                            <p className=\"ml-5\">{claim.dateTreatment ? claim.dateTreatment : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Délai de qualification</strong>\r\n                            <p className=\"ml-5\">{claim.delayQualificationWorkingDay ? claim.delayQualificationWorkingDay : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Délait de traitement(jour ouvrable)</strong>\r\n                            <p className=\"ml-5\">{claim.delayTreatmentWorkingDay ? claim.delayTreatmentWorkingDay : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Tempps global de traitement</strong>\r\n                            <p className=\"ml-5\">{claim.delayTreatmentOpenDay ? claim.delayTreatmentOpenDay : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Montant réclamé</strong>\r\n                            <p className=\"ml-5\">{claim.amountDisputed ? claim.amountDisputed : \"-\"}</p>\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <strong>Devise du montant</strong>\r\n                            <p className=\"ml-5\">{claim.accountCurrency ? claim.accountCurrency : \"-\"}</p>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                    <td>{claim.filiale ? claim.filiale : '-'}</td>\r\n                ) : null}\r\n                <td>{claim.typeClient ? claim.typeClient : \"-\"}</td>\r\n                <td>{claim.client ? claim.client : \"-\"}</td>\r\n                <td>{claim.account ? claim.account : \"-\"}</td>\r\n                <td>{claim.telephone ? claim.telephone : \"-\"}</td>\r\n                <td>{claim.agence ? claim.agence : \"-\"}</td>\r\n                <td>{claim.claimCategorie ? claim.claimCategorie : \"-\"}</td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') || verifyPermission(props.userPermissions, 'list-reporting-claim-my-institution') ? (\r\n            <div className=\"kt-content  kt-grid__item kt-grid__item--fluid kt-grid kt-grid--hor\" id=\"kt_content\">\r\n                <div className=\"kt-subheader   kt-grid__item\" id=\"kt_subheader\">\r\n                    <div className=\"kt-container  kt-container--fluid \">\r\n                        <div className=\"kt-subheader__main\">\r\n                            <h3 className=\"kt-subheader__title\">\r\n                                Processus\r\n                            </h3>\r\n                            <span className=\"kt-subheader__separator kt-hidden\"/>\r\n                            <div className=\"kt-subheader__breadcrumbs\">\r\n                                <a href=\"#icone\" className=\"kt-subheader__breadcrumbs-home\"><i className=\"flaticon2-shelter\"/></a>\r\n                                <span className=\"kt-subheader__breadcrumbs-separator\"/>\r\n                                <a href=\"#button\" onClick={e => e.preventDefault()} className=\"kt-subheader__breadcrumbs-link\" style={{cursor: \"text\"}}>\r\n                                    Etat  Retard de +30\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid\">\r\n                    <InfirmationTable information={(\r\n                        <div>\r\n                            Raport Etat Retard de 30 jours\r\n                        </div>\r\n                    )}/>\r\n\r\n                    <div className=\"kt-portlet\">\r\n                        <HeaderTablePage\r\n                            title={\"Rapport Etat Retard de 30 jours\"}\r\n                        />\r\n\r\n                        <div className=\"kt-portlet__body\">\r\n                            <div className=\"row\">\r\n                                {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                    <div className=\"col\">\r\n                                        <div className={error.institution_id.length ? \"form-group validated\" : \"form-group\"}>\r\n                                            <label htmlFor=\"\">Institution</label>\r\n                                            <Select\r\n                                                isClearable\r\n                                                value={institution}\r\n                                                placeholder={\"Veuillez sélectionner l'institution\"}\r\n                                                onChange={onChangeInstitution}\r\n                                                options={institutions}\r\n                                            />\r\n\r\n                                            {\r\n                                                error.institution_id.length > 0 ? (\r\n                                                    error.institution_id.map((error, index) => (\r\n                                                        <div key={index} className=\"invalid-feedback\">\r\n                                                            {error}\r\n                                                        </div>\r\n                                                    ))\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                ) : null}\r\n\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Date début</label>\r\n                                        <input type=\"date\" onChange={handleDateStartChange} className={error.date_start.length ? \"form-control is-invalid\" : \"form-control\"} value={dateStart}/>\r\n\r\n                                        {\r\n                                            error.date_start.length ? (\r\n                                                error.date_start.map((error, index) => (\r\n                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                        {error}\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Date fin</label>\r\n                                        <input type=\"date\" onChange={handleDateEndChange} className={error.date_end.length ? \"form-control is-invalid\" : \"form-control\"} value={dateEnd}/>\r\n\r\n                                        {\r\n                                            error.date_end.length ? (\r\n                                                error.date_end.map((error, index) => (\r\n                                                    <div key={index} className=\"invalid-feedback\">\r\n                                                        {error}\r\n                                                    </div>\r\n                                                ))\r\n                                            ) : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"form-group d-flex justify-content-end\">\r\n                                        <a className=\"d-none\" href=\"#\" id=\"downloadButton\" download={true}>downloadButton</a>\r\n                                        {loadFilter ? (\r\n                                            <button className=\"btn btn-primary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--light\" type=\"button\" disabled>\r\n                                                Chargement...\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button onClick={filterReporting} className=\"btn btn-primary\" disabled={loadDownload ? true : false}>Filtrer le rapport</button>\r\n                                        )}\r\n\r\n                                        {loadDownload ? (\r\n                                            <button className=\"btn btn-secondary kt-spinner kt-spinner--left kt-spinner--md kt-spinner--dark ml-3\" type=\"button\" disabled>\r\n                                                Chargement...\r\n                                            </button>\r\n                                        ) : (\r\n                                            <button onClick={downloadReporting} className=\"btn btn-secondary ml-3\" disabled={loadFilter ? true : false}>Télécharger le rapport</button>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {\r\n                            load ? (\r\n                                <LoadingTable/>\r\n                            ) : (\r\n                                <div className=\"kt-portlet__body\">\r\n                                    <div id=\"kt_table_1_wrapper\" className=\"dataTables_wrapper dt-bootstrap4\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6 text-left\">\r\n                                                <div id=\"kt_table_1_filter\" className=\"dataTables_filter\">\r\n                                                    <label>\r\n                                                        Rechercher:\r\n                                                        <input id=\"myInput\" type=\"text\" onKeyUp={(e) => searchElement(e)} className=\"form-control form-control-sm\" placeholder=\"\" aria-controls=\"kt_table_1\"/>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12\">\r\n                                                <table className=\"table table-striped table-bordered table-hover table-checkable dataTable dtr-inline\" id=\"myTable\" role=\"grid\" aria-describedby=\"kt_table_1_info\" style={{width: \"952px\"}}>\r\n                                                    <thead>\r\n                                                    <tr role=\"row\">\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Détail\r\n                                                        </th>\r\n                                                        {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                                            <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                                Filiale\r\n                                                            </th>\r\n                                                        ) : null}\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Type Client\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Client\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            N Compte\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            N téléphone\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Agence\r\n                                                        </th>\r\n                                                        <th className=\"sorting\" tabIndex=\"0\" aria-controls=\"kt_table_1\" rowSpan=\"1\" colSpan=\"1\" style={{width: \"70.25px\"}} aria-label=\"Country: activate to sort column ascending\">\r\n                                                            Catégorie réclamation\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    {\r\n                                                        claims.length ? (\r\n                                                            showList.length ? (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                showList.map((claim, index) => (\r\n                                                                    printBodyTable(claim, index)\r\n                                                                ))\r\n                                                            )\r\n                                                        ) : (\r\n                                                            <EmptyTable/>\r\n                                                        )\r\n                                                    }\r\n                                                    </tbody>\r\n                                                    <tfoot>\r\n                                                    <tr>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Détail</th>\r\n                                                        {verifyPermission(props.userPermissions, 'list-reporting-claim-any-institution') ? (\r\n                                                            <th rowSpan=\"1\" colSpan=\"1\">Filiale</th>\r\n                                                        ) : null}\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Type Client</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Client</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">N Compte</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">N Téléphone</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Agence</th>\r\n                                                        <th rowSpan=\"1\" colSpan=\"1\">Catégorie réclamation</th>\r\n                                                    </tr>\r\n                                                    </tfoot>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-12 col-md-5\">\r\n                                                <div className=\"dataTables_info\" id=\"kt_table_1_info\" role=\"status\"\r\n                                                     aria-live=\"polite\">Affichage de 1\r\n                                                    à {numberPerPage} sur {claims.length} données\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                showList.length ? (\r\n                                                    <div className=\"col-sm-12 col-md-7 dataTables_pager\">\r\n                                                        <Pagination\r\n                                                            numberPerPage={numberPerPage}\r\n                                                            onChangeNumberPerPage={onChangeNumberPerPage}\r\n                                                            activeNumberPage={activeNumberPage}\r\n                                                            onClickPreviousPage={e => onClickPreviousPage(e)}\r\n                                                            pages={pages}\r\n                                                            onClickPage={(e, number) => onClickPage(e, number)}\r\n                                                            numberPage={numberPage}\r\n                                                            onClickNextPage={e => onClickNextPage(e)}\r\n                                                        />\r\n                                                    </div>\r\n                                                ) : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        plan: state.plan.plan,\r\n        userPermissions: state.user.user.permissions,\r\n        activePilot: state.user.user.staff.is_active_pilot\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ClaimReportingUemoaTwo);\r\n","C:\\wamp64\\www\\REECRITURE_SATIS\\satis-client\\src\\constants\\InfoFormatExcel.js",[],{"ruleId":"1184","replacedBy":"1185"},{"ruleId":"1186","replacedBy":"1187"},{"ruleId":"1188","severity":1,"message":"1189","line":9,"column":1,"nodeType":"1190","endLine":28,"endColumn":2},{"ruleId":"1191","severity":1,"message":"1192","line":61,"column":22,"nodeType":"1193","messageId":"1194","endLine":61,"endColumn":29},{"ruleId":"1191","severity":1,"message":"1195","line":112,"column":27,"nodeType":"1193","messageId":"1194","endLine":112,"endColumn":31},{"ruleId":"1196","severity":1,"message":"1197","line":162,"column":49,"nodeType":"1198","endLine":163,"endColumn":171},{"ruleId":"1199","severity":1,"message":"1200","line":9,"column":80,"nodeType":"1201","endLine":9,"endColumn":95},{"ruleId":"1202","severity":1,"message":"1203","line":37,"column":8,"nodeType":"1204","endLine":37,"endColumn":27,"suggestions":"1205"},{"ruleId":"1202","severity":1,"message":"1206","line":44,"column":8,"nodeType":"1204","endLine":44,"endColumn":30,"suggestions":"1207"},{"ruleId":"1202","severity":1,"message":"1208","line":62,"column":8,"nodeType":"1204","endLine":62,"endColumn":10,"suggestions":"1209"},{"ruleId":"1202","severity":1,"message":"1210","line":78,"column":8,"nodeType":"1204","endLine":78,"endColumn":29,"suggestions":"1211"},{"ruleId":"1202","severity":1,"message":"1212","line":83,"column":8,"nodeType":"1204","endLine":83,"endColumn":30,"suggestions":"1213"},{"ruleId":"1202","severity":1,"message":"1212","line":88,"column":8,"nodeType":"1204","endLine":88,"endColumn":26,"suggestions":"1214"},{"ruleId":"1202","severity":1,"message":"1215","line":90,"column":33,"nodeType":"1193","endLine":90,"endColumn":44},{"ruleId":"1216","severity":1,"message":"1217","line":139,"column":15,"nodeType":"1218","messageId":"1219","endLine":139,"endColumn":19,"fix":"1220"},{"ruleId":"1202","severity":1,"message":"1215","line":143,"column":36,"nodeType":"1193","endLine":143,"endColumn":47},{"ruleId":"1191","severity":1,"message":"1221","line":97,"column":8,"nodeType":"1193","messageId":"1194","endLine":97,"endColumn":20},{"ruleId":"1222","severity":1,"message":"1223","line":16,"column":25,"nodeType":"1198","endLine":16,"endColumn":77},{"ruleId":"1222","severity":1,"message":"1223","line":34,"column":33,"nodeType":"1198","endLine":35,"endColumn":72},{"ruleId":"1222","severity":1,"message":"1223","line":45,"column":45,"nodeType":"1198","endLine":45,"endColumn":119},{"ruleId":"1222","severity":1,"message":"1223","line":82,"column":33,"nodeType":"1198","endLine":82,"endColumn":143},{"ruleId":"1222","severity":1,"message":"1223","line":92,"column":45,"nodeType":"1198","endLine":92,"endColumn":119},{"ruleId":"1222","severity":1,"message":"1223","line":229,"column":37,"nodeType":"1198","endLine":230,"endColumn":76},{"ruleId":"1222","severity":1,"message":"1223","line":240,"column":49,"nodeType":"1198","endLine":240,"endColumn":123},{"ruleId":"1222","severity":1,"message":"1223","line":303,"column":37,"nodeType":"1198","endLine":304,"endColumn":76},{"ruleId":"1222","severity":1,"message":"1223","line":314,"column":49,"nodeType":"1198","endLine":314,"endColumn":123},{"ruleId":"1222","severity":1,"message":"1223","line":358,"column":37,"nodeType":"1198","endLine":358,"endColumn":147},{"ruleId":"1222","severity":1,"message":"1223","line":367,"column":49,"nodeType":"1198","endLine":367,"endColumn":123},{"ruleId":"1202","severity":1,"message":"1224","line":69,"column":8,"nodeType":"1204","endLine":69,"endColumn":10,"suggestions":"1225"},{"ruleId":"1226","severity":1,"message":"1227","line":134,"column":33,"nodeType":"1198","endLine":134,"endColumn":88},{"ruleId":"1226","severity":1,"message":"1227","line":141,"column":33,"nodeType":"1198","endLine":141,"endColumn":121},{"ruleId":"1202","severity":1,"message":"1228","line":52,"column":8,"nodeType":"1204","endLine":52,"endColumn":55,"suggestions":"1229"},{"ruleId":"1202","severity":1,"message":"1230","line":87,"column":8,"nodeType":"1204","endLine":87,"endColumn":48,"suggestions":"1231"},{"ruleId":"1232","severity":1,"message":"1233","line":89,"column":5,"nodeType":"1234","messageId":"1235","endLine":95,"endColumn":13},{"ruleId":"1226","severity":1,"message":"1227","line":269,"column":33,"nodeType":"1198","endLine":269,"endColumn":88},{"ruleId":"1226","severity":1,"message":"1227","line":271,"column":33,"nodeType":"1198","endLine":271,"endColumn":146},{"ruleId":"1202","severity":1,"message":"1230","line":88,"column":8,"nodeType":"1204","endLine":88,"endColumn":48,"suggestions":"1236"},{"ruleId":"1237","severity":1,"message":"1238","line":92,"column":36,"nodeType":"1239","messageId":"1240","endLine":92,"endColumn":38},{"ruleId":"1202","severity":1,"message":"1228","line":59,"column":8,"nodeType":"1204","endLine":59,"endColumn":55,"suggestions":"1241"},{"ruleId":"1202","severity":1,"message":"1228","line":56,"column":8,"nodeType":"1204","endLine":56,"endColumn":55,"suggestions":"1242"},{"ruleId":"1202","severity":1,"message":"1228","line":53,"column":8,"nodeType":"1204","endLine":53,"endColumn":55,"suggestions":"1243"},{"ruleId":"1202","severity":1,"message":"1244","line":57,"column":8,"nodeType":"1204","endLine":57,"endColumn":10,"suggestions":"1245"},{"ruleId":"1191","severity":1,"message":"1246","line":130,"column":11,"nodeType":"1193","messageId":"1194","endLine":130,"endColumn":21},{"ruleId":"1226","severity":1,"message":"1227","line":207,"column":37,"nodeType":"1198","endLine":207,"endColumn":92},{"ruleId":"1226","severity":1,"message":"1227","line":209,"column":37,"nodeType":"1198","endLine":209,"endColumn":125},{"ruleId":"1226","severity":1,"message":"1227","line":214,"column":41,"nodeType":"1198","endLine":214,"endColumn":96},{"ruleId":"1226","severity":1,"message":"1227","line":216,"column":41,"nodeType":"1198","endLine":216,"endColumn":129},{"ruleId":"1202","severity":1,"message":"1244","line":56,"column":8,"nodeType":"1204","endLine":56,"endColumn":10,"suggestions":"1247"},{"ruleId":"1191","severity":1,"message":"1248","line":128,"column":11,"nodeType":"1193","messageId":"1194","endLine":128,"endColumn":29},{"ruleId":"1226","severity":1,"message":"1227","line":203,"column":29,"nodeType":"1198","endLine":203,"endColumn":84},{"ruleId":"1226","severity":1,"message":"1227","line":205,"column":29,"nodeType":"1198","endLine":205,"endColumn":117},{"ruleId":"1226","severity":1,"message":"1227","line":210,"column":33,"nodeType":"1198","endLine":210,"endColumn":88},{"ruleId":"1226","severity":1,"message":"1227","line":212,"column":33,"nodeType":"1198","endLine":212,"endColumn":121},{"ruleId":"1202","severity":1,"message":"1228","line":55,"column":8,"nodeType":"1204","endLine":55,"endColumn":55,"suggestions":"1249"},{"ruleId":"1202","severity":1,"message":"1250","line":56,"column":8,"nodeType":"1204","endLine":56,"endColumn":10,"suggestions":"1251"},{"ruleId":"1226","severity":1,"message":"1227","line":110,"column":33,"nodeType":"1198","endLine":110,"endColumn":88},{"ruleId":"1226","severity":1,"message":"1227","line":117,"column":33,"nodeType":"1198","endLine":117,"endColumn":121},{"ruleId":"1202","severity":1,"message":"1252","line":56,"column":7,"nodeType":"1204","endLine":56,"endColumn":9,"suggestions":"1253"},{"ruleId":"1191","severity":1,"message":"1254","line":6,"column":60,"nodeType":"1193","messageId":"1194","endLine":6,"endColumn":70},{"ruleId":"1202","severity":1,"message":"1244","line":54,"column":8,"nodeType":"1204","endLine":54,"endColumn":10,"suggestions":"1255"},{"ruleId":"1226","severity":1,"message":"1227","line":216,"column":33,"nodeType":"1198","endLine":216,"endColumn":121},{"ruleId":"1191","severity":1,"message":"1256","line":22,"column":8,"nodeType":"1193","messageId":"1194","endLine":22,"endColumn":23},{"ruleId":"1202","severity":1,"message":"1244","line":56,"column":8,"nodeType":"1204","endLine":56,"endColumn":10,"suggestions":"1257"},{"ruleId":"1191","severity":1,"message":"1258","line":130,"column":11,"nodeType":"1193","messageId":"1194","endLine":130,"endColumn":28},{"ruleId":"1202","severity":1,"message":"1244","line":55,"column":7,"nodeType":"1204","endLine":55,"endColumn":9,"suggestions":"1259"},{"ruleId":"1202","severity":1,"message":"1260","line":60,"column":7,"nodeType":"1204","endLine":60,"endColumn":9,"suggestions":"1261"},{"ruleId":"1202","severity":1,"message":"1262","line":86,"column":8,"nodeType":"1204","endLine":86,"endColumn":10,"suggestions":"1263"},{"ruleId":"1237","severity":1,"message":"1238","line":90,"column":31,"nodeType":"1239","messageId":"1240","endLine":90,"endColumn":33},{"ruleId":"1264","severity":1,"message":"1265","line":242,"column":121,"nodeType":"1266","messageId":"1267","endLine":242,"endColumn":122},{"ruleId":"1264","severity":1,"message":"1265","line":242,"column":128,"nodeType":"1266","messageId":"1267","endLine":242,"endColumn":129},{"ruleId":"1264","severity":1,"message":"1265","line":253,"column":115,"nodeType":"1266","messageId":"1267","endLine":253,"endColumn":116},{"ruleId":"1264","severity":1,"message":"1265","line":253,"column":122,"nodeType":"1266","messageId":"1267","endLine":253,"endColumn":123},{"ruleId":"1226","severity":1,"message":"1227","line":305,"column":29,"nodeType":"1198","endLine":305,"endColumn":84},{"ruleId":"1226","severity":1,"message":"1227","line":308,"column":29,"nodeType":"1198","endLine":308,"endColumn":117},{"ruleId":"1202","severity":1,"message":"1230","line":74,"column":8,"nodeType":"1204","endLine":74,"endColumn":48,"suggestions":"1268"},{"ruleId":"1226","severity":1,"message":"1227","line":244,"column":33,"nodeType":"1198","endLine":244,"endColumn":88},{"ruleId":"1226","severity":1,"message":"1227","line":246,"column":33,"nodeType":"1198","endLine":246,"endColumn":146},{"ruleId":"1202","severity":1,"message":"1269","line":70,"column":8,"nodeType":"1204","endLine":70,"endColumn":34,"suggestions":"1270"},{"ruleId":"1202","severity":1,"message":"1269","line":92,"column":8,"nodeType":"1204","endLine":92,"endColumn":34,"suggestions":"1271"},{"ruleId":"1202","severity":1,"message":"1269","line":59,"column":8,"nodeType":"1204","endLine":59,"endColumn":34,"suggestions":"1272"},{"ruleId":"1202","severity":1,"message":"1250","line":94,"column":8,"nodeType":"1204","endLine":94,"endColumn":10,"suggestions":"1273"},{"ruleId":"1191","severity":1,"message":"1274","line":3,"column":9,"nodeType":"1193","messageId":"1194","endLine":3,"endColumn":13},{"ruleId":"1202","severity":1,"message":"1228","line":56,"column":8,"nodeType":"1204","endLine":56,"endColumn":55,"suggestions":"1275"},{"ruleId":"1202","severity":1,"message":"1276","line":79,"column":8,"nodeType":"1204","endLine":79,"endColumn":34,"suggestions":"1277"},{"ruleId":"1202","severity":1,"message":"1228","line":56,"column":8,"nodeType":"1204","endLine":56,"endColumn":55,"suggestions":"1278"},{"ruleId":"1202","severity":1,"message":"1269","line":66,"column":8,"nodeType":"1204","endLine":66,"endColumn":34,"suggestions":"1279"},{"ruleId":"1191","severity":1,"message":"1254","line":6,"column":60,"nodeType":"1193","messageId":"1194","endLine":6,"endColumn":70},{"ruleId":"1202","severity":1,"message":"1228","line":55,"column":8,"nodeType":"1204","endLine":55,"endColumn":55,"suggestions":"1280"},{"ruleId":"1281","severity":1,"message":"1282","line":167,"column":17,"nodeType":"1201","endLine":167,"endColumn":32},{"ruleId":"1226","severity":1,"message":"1227","line":208,"column":33,"nodeType":"1198","endLine":208,"endColumn":88},{"ruleId":"1226","severity":1,"message":"1227","line":211,"column":33,"nodeType":"1198","endLine":211,"endColumn":121},{"ruleId":"1202","severity":1,"message":"1244","line":70,"column":8,"nodeType":"1204","endLine":70,"endColumn":10,"suggestions":"1283"},{"ruleId":"1237","severity":1,"message":"1238","line":74,"column":28,"nodeType":"1239","messageId":"1240","endLine":74,"endColumn":30},{"ruleId":"1237","severity":1,"message":"1238","line":85,"column":24,"nodeType":"1239","messageId":"1240","endLine":85,"endColumn":26},{"ruleId":"1226","severity":1,"message":"1227","line":251,"column":33,"nodeType":"1198","endLine":251,"endColumn":88},{"ruleId":"1226","severity":1,"message":"1227","line":254,"column":33,"nodeType":"1198","endLine":255,"endColumn":79},{"ruleId":"1202","severity":1,"message":"1269","line":57,"column":7,"nodeType":"1204","endLine":57,"endColumn":33,"suggestions":"1284"},{"ruleId":"1191","severity":1,"message":"1192","line":75,"column":13,"nodeType":"1193","messageId":"1194","endLine":75,"endColumn":20},{"ruleId":"1202","severity":1,"message":"1262","line":91,"column":8,"nodeType":"1204","endLine":91,"endColumn":10,"suggestions":"1285"},{"ruleId":"1232","severity":1,"message":"1233","line":129,"column":5,"nodeType":"1234","messageId":"1235","endLine":151,"endColumn":13},{"ruleId":"1237","severity":1,"message":"1238","line":155,"column":21,"nodeType":"1239","messageId":"1240","endLine":155,"endColumn":23},{"ruleId":"1191","severity":1,"message":"1286","line":18,"column":35,"nodeType":"1193","messageId":"1194","endLine":18,"endColumn":71},{"ruleId":"1191","severity":1,"message":"1287","line":68,"column":19,"nodeType":"1193","messageId":"1194","endLine":68,"endColumn":27},{"ruleId":"1202","severity":1,"message":"1288","line":105,"column":8,"nodeType":"1204","endLine":105,"endColumn":10,"suggestions":"1289"},{"ruleId":"1226","severity":1,"message":"1227","line":185,"column":33,"nodeType":"1198","endLine":185,"endColumn":88},{"ruleId":"1191","severity":1,"message":"1290","line":25,"column":5,"nodeType":"1193","messageId":"1194","endLine":25,"endColumn":32},{"ruleId":"1191","severity":1,"message":"1291","line":144,"column":12,"nodeType":"1193","messageId":"1194","endLine":144,"endColumn":25},{"ruleId":"1191","severity":1,"message":"1292","line":144,"column":27,"nodeType":"1193","messageId":"1194","endLine":144,"endColumn":43},{"ruleId":"1202","severity":1,"message":"1293","line":57,"column":8,"nodeType":"1204","endLine":57,"endColumn":10,"suggestions":"1294"},{"ruleId":"1191","severity":1,"message":"1295","line":16,"column":5,"nodeType":"1193","messageId":"1194","endLine":16,"endColumn":28},{"ruleId":"1202","severity":1,"message":"1293","line":55,"column":8,"nodeType":"1204","endLine":55,"endColumn":10,"suggestions":"1296"},{"ruleId":"1202","severity":1,"message":"1297","line":54,"column":8,"nodeType":"1204","endLine":54,"endColumn":10,"suggestions":"1298"},{"ruleId":"1202","severity":1,"message":"1262","line":82,"column":8,"nodeType":"1204","endLine":82,"endColumn":10,"suggestions":"1299"},{"ruleId":"1191","severity":1,"message":"1300","line":19,"column":9,"nodeType":"1193","messageId":"1194","endLine":19,"endColumn":14},{"ruleId":"1237","severity":1,"message":"1238","line":71,"column":45,"nodeType":"1239","messageId":"1240","endLine":71,"endColumn":47},{"ruleId":"1237","severity":1,"message":"1238","line":72,"column":41,"nodeType":"1239","messageId":"1240","endLine":72,"endColumn":43},{"ruleId":"1237","severity":1,"message":"1238","line":100,"column":29,"nodeType":"1239","messageId":"1240","endLine":100,"endColumn":31},{"ruleId":"1202","severity":1,"message":"1301","line":253,"column":8,"nodeType":"1204","endLine":253,"endColumn":10,"suggestions":"1302"},{"ruleId":"1191","severity":1,"message":"1303","line":7,"column":25,"nodeType":"1193","messageId":"1194","endLine":7,"endColumn":41},{"ruleId":"1202","severity":1,"message":"1262","line":80,"column":8,"nodeType":"1204","endLine":80,"endColumn":10,"suggestions":"1304"},{"ruleId":"1226","severity":1,"message":"1227","line":225,"column":33,"nodeType":"1198","endLine":225,"endColumn":88},{"ruleId":"1202","severity":1,"message":"1269","line":63,"column":8,"nodeType":"1204","endLine":63,"endColumn":30,"suggestions":"1305"},{"ruleId":"1191","severity":1,"message":"1306","line":1,"column":16,"nodeType":"1193","messageId":"1194","endLine":1,"endColumn":24},{"ruleId":"1191","severity":1,"message":"1307","line":3,"column":8,"nodeType":"1193","messageId":"1194","endLine":3,"endColumn":13},{"ruleId":"1191","severity":1,"message":"1308","line":4,"column":9,"nodeType":"1193","messageId":"1194","endLine":4,"endColumn":23},{"ruleId":"1191","severity":1,"message":"1286","line":6,"column":5,"nodeType":"1193","messageId":"1194","endLine":6,"endColumn":41},{"ruleId":"1191","severity":1,"message":"1309","line":6,"column":43,"nodeType":"1193","messageId":"1194","endLine":6,"endColumn":81},{"ruleId":"1191","severity":1,"message":"1310","line":11,"column":8,"nodeType":"1193","messageId":"1194","endLine":11,"endColumn":20},{"ruleId":"1191","severity":1,"message":"1274","line":12,"column":9,"nodeType":"1193","messageId":"1194","endLine":12,"endColumn":13},{"ruleId":"1191","severity":1,"message":"1311","line":3,"column":25,"nodeType":"1193","messageId":"1194","endLine":3,"endColumn":31},{"ruleId":"1226","severity":1,"message":"1227","line":88,"column":29,"nodeType":"1198","endLine":88,"endColumn":84},{"ruleId":"1226","severity":1,"message":"1227","line":92,"column":29,"nodeType":"1198","endLine":92,"endColumn":145},{"ruleId":"1312","severity":1,"message":"1313","line":119,"column":45,"nodeType":"1198","endLine":119,"endColumn":101},{"ruleId":"1226","severity":1,"message":"1227","line":123,"column":49,"nodeType":"1198","endLine":123,"endColumn":93},{"ruleId":"1226","severity":1,"message":"1227","line":136,"column":49,"nodeType":"1198","endLine":136,"endColumn":89},{"ruleId":"1226","severity":1,"message":"1227","line":140,"column":49,"nodeType":"1198","endLine":140,"endColumn":89},{"ruleId":"1202","severity":1,"message":"1314","line":110,"column":8,"nodeType":"1204","endLine":110,"endColumn":35,"suggestions":"1315"},{"ruleId":"1316","severity":1,"message":"1317","line":373,"column":21,"nodeType":"1193","messageId":"1318","endLine":373,"endColumn":29},{"ruleId":"1202","severity":1,"message":"1319","line":64,"column":8,"nodeType":"1204","endLine":64,"endColumn":10,"suggestions":"1320"},{"ruleId":"1202","severity":1,"message":"1244","line":48,"column":8,"nodeType":"1204","endLine":48,"endColumn":10,"suggestions":"1321"},{"ruleId":"1191","severity":1,"message":"1303","line":4,"column":21,"nodeType":"1193","messageId":"1194","endLine":4,"endColumn":37},{"ruleId":"1202","severity":1,"message":"1244","line":48,"column":8,"nodeType":"1204","endLine":48,"endColumn":10,"suggestions":"1322"},{"ruleId":"1226","severity":1,"message":"1227","line":83,"column":33,"nodeType":"1198","endLine":83,"endColumn":88},{"ruleId":"1226","severity":1,"message":"1227","line":86,"column":33,"nodeType":"1198","endLine":86,"endColumn":121},{"ruleId":"1202","severity":1,"message":"1323","line":78,"column":8,"nodeType":"1204","endLine":78,"endColumn":42,"suggestions":"1324"},{"ruleId":"1237","severity":1,"message":"1238","line":31,"column":26,"nodeType":"1239","messageId":"1240","endLine":31,"endColumn":28},{"ruleId":"1202","severity":1,"message":"1325","line":62,"column":8,"nodeType":"1204","endLine":62,"endColumn":10,"suggestions":"1326"},{"ruleId":"1264","severity":1,"message":"1265","line":242,"column":104,"nodeType":"1266","messageId":"1267","endLine":242,"endColumn":105},{"ruleId":"1226","severity":1,"message":"1227","line":137,"column":33,"nodeType":"1198","endLine":137,"endColumn":88},{"ruleId":"1226","severity":1,"message":"1227","line":140,"column":33,"nodeType":"1198","endLine":140,"endColumn":121},{"ruleId":"1202","severity":1,"message":"1327","line":99,"column":8,"nodeType":"1204","endLine":99,"endColumn":10,"suggestions":"1328"},{"ruleId":"1232","severity":1,"message":"1233","line":125,"column":9,"nodeType":"1234","messageId":"1235","endLine":127,"endColumn":10},{"ruleId":"1226","severity":1,"message":"1227","line":214,"column":29,"nodeType":"1198","endLine":214,"endColumn":84},{"ruleId":"1226","severity":1,"message":"1227","line":221,"column":29,"nodeType":"1198","endLine":221,"endColumn":117},{"ruleId":"1202","severity":1,"message":"1329","line":92,"column":8,"nodeType":"1204","endLine":92,"endColumn":10,"suggestions":"1330"},{"ruleId":"1226","severity":1,"message":"1227","line":92,"column":33,"nodeType":"1198","endLine":92,"endColumn":88},{"ruleId":"1226","severity":1,"message":"1227","line":95,"column":33,"nodeType":"1198","endLine":95,"endColumn":121},{"ruleId":"1202","severity":1,"message":"1244","line":54,"column":7,"nodeType":"1204","endLine":54,"endColumn":9,"suggestions":"1331"},{"ruleId":"1191","severity":1,"message":"1332","line":11,"column":5,"nodeType":"1193","messageId":"1194","endLine":11,"endColumn":34},{"ruleId":"1191","severity":1,"message":"1333","line":117,"column":12,"nodeType":"1193","messageId":"1194","endLine":117,"endColumn":24},{"ruleId":"1202","severity":1,"message":"1288","line":177,"column":8,"nodeType":"1204","endLine":177,"endColumn":10,"suggestions":"1334"},{"ruleId":"1226","severity":1,"message":"1227","line":385,"column":29,"nodeType":"1198","endLine":385,"endColumn":84},{"ruleId":"1226","severity":1,"message":"1227","line":392,"column":29,"nodeType":"1198","endLine":392,"endColumn":117},{"ruleId":"1202","severity":1,"message":"1228","line":54,"column":8,"nodeType":"1204","endLine":54,"endColumn":55,"suggestions":"1335"},{"ruleId":"1202","severity":1,"message":"1336","line":86,"column":8,"nodeType":"1204","endLine":86,"endColumn":42,"suggestions":"1337"},{"ruleId":"1202","severity":1,"message":"1228","line":53,"column":8,"nodeType":"1204","endLine":53,"endColumn":55,"suggestions":"1338"},{"ruleId":"1202","severity":1,"message":"1336","line":66,"column":8,"nodeType":"1204","endLine":66,"endColumn":67,"suggestions":"1339"},{"ruleId":"1237","severity":1,"message":"1238","line":200,"column":21,"nodeType":"1239","messageId":"1240","endLine":200,"endColumn":23},{"ruleId":"1202","severity":1,"message":"1340","line":77,"column":8,"nodeType":"1204","endLine":77,"endColumn":10,"suggestions":"1341"},{"ruleId":"1226","severity":1,"message":"1227","line":110,"column":33,"nodeType":"1198","endLine":110,"endColumn":88},{"ruleId":"1202","severity":1,"message":"1342","line":70,"column":8,"nodeType":"1204","endLine":70,"endColumn":12,"suggestions":"1343"},{"ruleId":"1344","severity":1,"message":"1345","line":86,"column":99,"nodeType":"1346","messageId":"1347","endLine":86,"endColumn":101},{"ruleId":"1344","severity":1,"message":"1345","line":87,"column":99,"nodeType":"1346","messageId":"1347","endLine":87,"endColumn":101},{"ruleId":"1226","severity":1,"message":"1227","line":115,"column":33,"nodeType":"1198","endLine":115,"endColumn":88},{"ruleId":"1202","severity":1,"message":"1348","line":79,"column":8,"nodeType":"1204","endLine":79,"endColumn":10,"suggestions":"1349"},{"ruleId":"1226","severity":1,"message":"1227","line":112,"column":33,"nodeType":"1198","endLine":112,"endColumn":88},{"ruleId":"1202","severity":1,"message":"1350","line":68,"column":8,"nodeType":"1204","endLine":68,"endColumn":10,"suggestions":"1351"},{"ruleId":"1191","severity":1,"message":"1352","line":6,"column":5,"nodeType":"1193","messageId":"1194","endLine":6,"endColumn":31},{"ruleId":"1191","severity":1,"message":"1353","line":11,"column":9,"nodeType":"1193","messageId":"1194","endLine":11,"endColumn":27},{"ruleId":"1191","severity":1,"message":"1354","line":46,"column":12,"nodeType":"1193","messageId":"1194","endLine":46,"endColumn":19},{"ruleId":"1191","severity":1,"message":"1355","line":46,"column":21,"nodeType":"1193","messageId":"1194","endLine":46,"endColumn":31},{"ruleId":"1191","severity":1,"message":"1356","line":53,"column":12,"nodeType":"1193","messageId":"1194","endLine":53,"endColumn":18},{"ruleId":"1191","severity":1,"message":"1357","line":53,"column":20,"nodeType":"1193","messageId":"1194","endLine":53,"endColumn":29},{"ruleId":"1191","severity":1,"message":"1333","line":68,"column":12,"nodeType":"1193","messageId":"1194","endLine":68,"endColumn":24},{"ruleId":"1202","severity":1,"message":"1358","line":93,"column":8,"nodeType":"1204","endLine":93,"endColumn":10,"suggestions":"1359"},{"ruleId":"1191","severity":1,"message":"1360","line":4,"column":9,"nodeType":"1193","messageId":"1194","endLine":4,"endColumn":25},{"ruleId":"1202","severity":1,"message":"1350","line":70,"column":8,"nodeType":"1204","endLine":70,"endColumn":10,"suggestions":"1361"},{"ruleId":"1202","severity":1,"message":"1362","line":93,"column":8,"nodeType":"1204","endLine":93,"endColumn":10,"suggestions":"1363"},{"ruleId":"1202","severity":1,"message":"1364","line":20,"column":11,"nodeType":"1365","endLine":74,"endColumn":6},{"ruleId":"1202","severity":1,"message":"1362","line":149,"column":8,"nodeType":"1204","endLine":149,"endColumn":10,"suggestions":"1366"},{"ruleId":"1191","severity":1,"message":"1367","line":3,"column":9,"nodeType":"1193","messageId":"1194","endLine":3,"endColumn":18},{"ruleId":"1202","severity":1,"message":"1342","line":83,"column":8,"nodeType":"1204","endLine":83,"endColumn":10,"suggestions":"1368"},{"ruleId":"1199","severity":1,"message":"1200","line":22,"column":64,"nodeType":"1201","endLine":22,"endColumn":81},{"ruleId":"1312","severity":1,"message":"1313","line":15,"column":37,"nodeType":"1198","endLine":16,"endColumn":55},{"ruleId":"1226","severity":1,"message":"1227","line":25,"column":49,"nodeType":"1198","endLine":26,"endColumn":84},{"ruleId":"1191","severity":1,"message":"1309","line":8,"column":5,"nodeType":"1193","messageId":"1194","endLine":8,"endColumn":43},{"ruleId":"1191","severity":1,"message":"1300","line":10,"column":9,"nodeType":"1193","messageId":"1194","endLine":10,"endColumn":14},{"ruleId":"1202","severity":1,"message":"1250","line":49,"column":8,"nodeType":"1204","endLine":49,"endColumn":10,"suggestions":"1369"},{"ruleId":"1226","severity":1,"message":"1227","line":80,"column":33,"nodeType":"1198","endLine":80,"endColumn":88},{"ruleId":"1191","severity":1,"message":"1367","line":14,"column":9,"nodeType":"1193","messageId":"1194","endLine":14,"endColumn":18},{"ruleId":"1202","severity":1,"message":"1340","line":107,"column":8,"nodeType":"1204","endLine":107,"endColumn":10,"suggestions":"1370"},{"ruleId":"1237","severity":1,"message":"1238","line":51,"column":26,"nodeType":"1239","messageId":"1240","endLine":51,"endColumn":28},{"ruleId":"1202","severity":1,"message":"1325","line":104,"column":8,"nodeType":"1204","endLine":104,"endColumn":10,"suggestions":"1371"},{"ruleId":"1202","severity":1,"message":"1269","line":87,"column":8,"nodeType":"1204","endLine":87,"endColumn":34,"suggestions":"1372"},{"ruleId":"1226","severity":1,"message":"1227","line":150,"column":33,"nodeType":"1198","endLine":150,"endColumn":88},{"ruleId":"1202","severity":1,"message":"1228","line":55,"column":8,"nodeType":"1204","endLine":55,"endColumn":55,"suggestions":"1373"},{"ruleId":"1202","severity":1,"message":"1314","line":39,"column":8,"nodeType":"1204","endLine":39,"endColumn":10,"suggestions":"1374"},{"ruleId":"1202","severity":1,"message":"1262","line":80,"column":7,"nodeType":"1204","endLine":80,"endColumn":9,"suggestions":"1375"},{"ruleId":"1202","severity":1,"message":"1376","line":58,"column":8,"nodeType":"1204","endLine":58,"endColumn":10,"suggestions":"1377"},{"ruleId":"1191","severity":1,"message":"1378","line":12,"column":8,"nodeType":"1193","messageId":"1194","endLine":12,"endColumn":20},{"ruleId":"1202","severity":1,"message":"1244","line":53,"column":7,"nodeType":"1204","endLine":53,"endColumn":9,"suggestions":"1379"},{"ruleId":"1202","severity":1,"message":"1250","line":54,"column":8,"nodeType":"1204","endLine":54,"endColumn":10,"suggestions":"1380"},{"ruleId":"1191","severity":1,"message":"1381","line":46,"column":12,"nodeType":"1193","messageId":"1194","endLine":46,"endColumn":18},{"ruleId":"1202","severity":1,"message":"1382","line":76,"column":9,"nodeType":"1218","endLine":76,"endColumn":42},{"ruleId":"1222","severity":1,"message":"1383","line":303,"column":89,"nodeType":"1198","endLine":307,"endColumn":124},{"ruleId":"1191","severity":1,"message":"1384","line":52,"column":11,"nodeType":"1193","messageId":"1194","endLine":52,"endColumn":26},{"ruleId":"1191","severity":1,"message":"1385","line":62,"column":11,"nodeType":"1193","messageId":"1194","endLine":62,"endColumn":22},{"ruleId":"1312","severity":1,"message":"1313","line":146,"column":53,"nodeType":"1198","endLine":147,"endColumn":71},{"ruleId":"1226","severity":1,"message":"1227","line":156,"column":65,"nodeType":"1198","endLine":157,"endColumn":100},{"ruleId":"1199","severity":1,"message":"1200","line":310,"column":80,"nodeType":"1201","endLine":310,"endColumn":97},{"ruleId":"1191","severity":1,"message":"1286","line":7,"column":5,"nodeType":"1193","messageId":"1194","endLine":7,"endColumn":41},{"ruleId":"1312","severity":1,"message":"1313","line":58,"column":80,"nodeType":"1198","endLine":60,"endColumn":42},{"ruleId":"1264","severity":1,"message":"1265","line":104,"column":52,"nodeType":"1266","messageId":"1267","endLine":104,"endColumn":53},{"ruleId":"1226","severity":1,"message":"1227","line":136,"column":33,"nodeType":"1198","endLine":136,"endColumn":101},{"ruleId":"1226","severity":1,"message":"1227","line":145,"column":33,"nodeType":"1198","endLine":145,"endColumn":86},{"ruleId":"1202","severity":1,"message":"1329","line":61,"column":8,"nodeType":"1204","endLine":61,"endColumn":10,"suggestions":"1386"},{"ruleId":"1191","severity":1,"message":"1387","line":13,"column":11,"nodeType":"1193","messageId":"1194","endLine":13,"endColumn":22},{"ruleId":"1191","severity":1,"message":"1352","line":7,"column":5,"nodeType":"1193","messageId":"1194","endLine":7,"endColumn":31},{"ruleId":"1202","severity":1,"message":"1388","line":55,"column":8,"nodeType":"1204","endLine":55,"endColumn":10,"suggestions":"1389"},{"ruleId":"1191","severity":1,"message":"1390","line":16,"column":5,"nodeType":"1193","messageId":"1194","endLine":16,"endColumn":41},{"ruleId":"1191","severity":1,"message":"1391","line":18,"column":9,"nodeType":"1193","messageId":"1194","endLine":18,"endColumn":32},{"ruleId":"1191","severity":1,"message":"1392","line":19,"column":9,"nodeType":"1193","messageId":"1194","endLine":19,"endColumn":28},{"ruleId":"1191","severity":1,"message":"1393","line":42,"column":12,"nodeType":"1193","messageId":"1194","endLine":42,"endColumn":22},{"ruleId":"1191","severity":1,"message":"1394","line":42,"column":24,"nodeType":"1193","messageId":"1194","endLine":42,"endColumn":37},{"ruleId":"1191","severity":1,"message":"1395","line":43,"column":12,"nodeType":"1193","messageId":"1194","endLine":43,"endColumn":23},{"ruleId":"1191","severity":1,"message":"1396","line":43,"column":25,"nodeType":"1193","messageId":"1194","endLine":43,"endColumn":39},{"ruleId":"1191","severity":1,"message":"1397","line":44,"column":12,"nodeType":"1193","messageId":"1194","endLine":44,"endColumn":23},{"ruleId":"1191","severity":1,"message":"1398","line":44,"column":25,"nodeType":"1193","messageId":"1194","endLine":44,"endColumn":39},{"ruleId":"1191","severity":1,"message":"1399","line":45,"column":12,"nodeType":"1193","messageId":"1194","endLine":45,"endColumn":18},{"ruleId":"1191","severity":1,"message":"1400","line":45,"column":20,"nodeType":"1193","messageId":"1194","endLine":45,"endColumn":29},{"ruleId":"1226","severity":1,"message":"1227","line":125,"column":33,"nodeType":"1198","endLine":125,"endColumn":88},{"ruleId":"1202","severity":1,"message":"1208","line":94,"column":8,"nodeType":"1204","endLine":94,"endColumn":23,"suggestions":"1401"},{"ruleId":"1202","severity":1,"message":"1342","line":109,"column":8,"nodeType":"1204","endLine":109,"endColumn":10,"suggestions":"1402"},{"ruleId":"1226","severity":1,"message":"1227","line":469,"column":41,"nodeType":"1198","endLine":469,"endColumn":108},{"ruleId":"1191","severity":1,"message":"1403","line":4,"column":8,"nodeType":"1193","messageId":"1194","endLine":4,"endColumn":17},{"ruleId":"1202","severity":1,"message":"1208","line":95,"column":8,"nodeType":"1204","endLine":95,"endColumn":23,"suggestions":"1404"},{"ruleId":"1202","severity":1,"message":"1342","line":110,"column":8,"nodeType":"1204","endLine":110,"endColumn":10,"suggestions":"1405"},{"ruleId":"1226","severity":1,"message":"1227","line":431,"column":41,"nodeType":"1198","endLine":431,"endColumn":108},{"ruleId":"1202","severity":1,"message":"1208","line":94,"column":8,"nodeType":"1204","endLine":94,"endColumn":10,"suggestions":"1406"},{"ruleId":"1202","severity":1,"message":"1342","line":109,"column":8,"nodeType":"1204","endLine":109,"endColumn":10,"suggestions":"1407"},{"ruleId":"1226","severity":1,"message":"1227","line":459,"column":41,"nodeType":"1198","endLine":459,"endColumn":108},{"ruleId":"1202","severity":1,"message":"1208","line":93,"column":8,"nodeType":"1204","endLine":93,"endColumn":23,"suggestions":"1408"},{"ruleId":"1202","severity":1,"message":"1342","line":108,"column":8,"nodeType":"1204","endLine":108,"endColumn":10,"suggestions":"1409"},{"ruleId":"1232","severity":1,"message":"1233","line":233,"column":96,"nodeType":"1234","messageId":"1235","endLine":236,"endColumn":10},{"ruleId":"1226","severity":1,"message":"1227","line":469,"column":41,"nodeType":"1198","endLine":469,"endColumn":108},"no-native-reassign",["1410"],"no-negated-in-lhs",["1411"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'mounted' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'EventNotification'. Either exclude it or remove the dependency array. Outer scope values like 'EventNotification' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["1412"],"React Hook useCallback has an unnecessary dependency: 'RelaunchNotification'. Either exclude it or remove the dependency array. Outer scope values like 'RelaunchNotification' aren't valid dependencies because mutating them doesn't re-render the component.",["1413"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["1414"],"React Hook useEffect has missing dependencies: 'fetchData' and 'props.user'. Either include them or remove the dependency array.",["1415"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["1416"],["1417"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"1418","text":"1419"},"'RuleEditPage' is defined but never used.","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role listitem. This role is implicit on the element li.","React Hook useEffect has a missing dependency: 'editfaqid'. Either include it or remove the dependency array.",["1420"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has unnecessary dependencies: 'NUMBER_ELEMENT_PER_PAGE' and 'appConfig.apiDomaine'. Either exclude them or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1421"],"React Hook useEffect has an unnecessary dependency: 'NUMBER_ELEMENT_PER_PAGE'. Either exclude it or remove the dependency array. Outer scope values like 'NUMBER_ELEMENT_PER_PAGE' aren't valid dependencies because mutating them doesn't re-render the component.",["1422"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["1423"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["1424"],["1425"],["1426"],"React Hook useEffect has a missing dependency: 'numberPerPage'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1427"],"'deleteFaqs' is assigned a value but never used.",["1428"],"'deleteCategoryFaqs' is assigned a value but never used.",["1429"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1430"],"React Hook useEffect has a missing dependency: 'edittypeid'. Either include it or remove the dependency array.",["1431"],"'loadScript' is defined but never used.",["1432"],"'InfoFormatExcel' is defined but never used.",["1433"],"'deleteInstitution' is assigned a value but never used.",["1434"],"React Hook useEffect has a missing dependency: 'editcategoryid'. Either include it or remove the dependency array.",["1435"],"React Hook useEffect has missing dependencies: 'endPoint.list' and 'numberPerPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1436"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["1437"],"React Hook useEffect has an unnecessary dependency: 'appConfig.apiDomaine'. Either exclude it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1438"],["1439"],["1440"],["1441"],"'Link' is defined but never used.",["1442"],"React Hook useEffect has a missing dependency: 'filterCurrency'. Either include it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1443"],["1444"],["1445"],["1446"],"react/jsx-no-duplicate-props","No duplicate props allowed",["1447"],["1448"],["1449"],"'toastErrorMessageWithParameterConfig' is defined but never used.","'setError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'endPoint', 'id', and 'props.userPermissions'. Either include them or remove the dependency array.",["1450"],"'toastEditErrorMessageConfig' is defined but never used.","'disabledInput' is assigned a value but never used.","'setDisabledInput' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'numberPerPage'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberPage' needs the current value of 'numberPerPage'.",["1451"],"'formatDateToTimeStampte' is defined but never used.",["1452"],"React Hook useEffect has missing dependencies: 'numberPerPage' and 'props.plan'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberPage' needs the current value of 'numberPerPage'.",["1453"],["1454"],"'debug' is defined but never used.","React Hook useEffect has missing dependencies: 'applyPossibleFilter', 'endpoint', and 'renderChart'. Either include them or remove the dependency array.",["1455"],"'formatDateToTime' is defined but never used.",["1456"],["1457"],"'useState' is defined but never used.","'axios' is defined but never used.","'ToastBottomEnd' is defined but never used.","'toastSuccessMessageWithParameterConfig' is defined but never used.","'InputRequire' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["1458"],"no-redeclare","'endpoint' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'numberPerPage' and 'props.userPermissions'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNumberPage' needs the current value of 'numberPerPage'.",["1459"],["1460"],["1461"],"React Hook useEffect has missing dependencies: 'defaultData', 'id', and 'props.userPermissions'. Either include them or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1462"],"React Hook useEffect has missing dependencies: 'id' and 'initialState'. Either include them or remove the dependency array.",["1463"],"React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1464"],"React Hook useEffect has missing dependencies: 'id' and 'props.userPermissions'. Either include them or remove the dependency array.",["1465"],["1466"],"'toastDeleteErrorMessageConfig' is defined but never used.","'disableInput' is assigned a value but never used.",["1467"],["1468"],"React Hook useEffect has a missing dependency: 'props.userPermissions'. Either include it or remove the dependency array. Outer scope values like 'appConfig.apiDomaine' aren't valid dependencies because mutating them doesn't re-render the component.",["1469"],["1470"],["1471"],"React Hook useEffect has missing dependencies: 'endPoint.list' and 'id'. Either include them or remove the dependency array.",["1472"],"React Hook useEffect has a missing dependency: 'props.userPermissions'. Either include it or remove the dependency array.",["1473"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'endPoint.edit' and 'id'. Either include them or remove the dependency array.",["1474"],"React Hook useEffect has a missing dependency: 'defaultData'. Either include it or remove the dependency array.",["1475"],"'toastAddErrorMessageConfig' is defined but never used.","'formatInstitutions' is defined but never used.","'clients' is assigned a value but never used.","'setClients' is assigned a value but never used.","'client' is assigned a value but never used.","'setClient' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'endPoint.list' and 'props.userPermissions'. Either include them or remove the dependency array.",["1476"],"'verifyPermission' is defined but never used.",["1477"],"React Hook useEffect has missing dependencies: 'defaultData' and 'props.userPermissions'. Either include them or remove the dependency array.",["1478"],"The 'defaultData' object makes the dependencies of useEffect Hook (at line 130) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'defaultData' in its own useMemo() Hook.","VariableDeclarator",["1479"],"'ERROR_401' is defined but never used.",["1480"],["1481"],["1482"],["1483"],["1484"],["1485"],["1486"],["1487"],"React Hook useEffect has missing dependencies: 'id' and 'numberPerPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShowList' needs the current value of 'numberPerPage'.",["1488"],"'ExportButton' is defined but never used.",["1489"],["1490"],"'search' is assigned a value but never used.","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'onClickPrevious' is assigned a value but never used.","'onClickNext' is assigned a value but never used.",["1491"],"'seeFormData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'defaultError' and 'props.token'. Either include them or remove the dependency array.",["1492"],"'toastAssignClaimSuccessMessageConfig' is defined but never used.","'AssignClaimConfirmation' is defined but never used.","'confirmAssignConfig' is defined but never used.","'showReason' is assigned a value but never used.","'setShowReason' is assigned a value but never used.","'reasonTitle' is assigned a value but never used.","'setReasonTitle' is assigned a value but never used.","'reasonLabel' is assigned a value but never used.","'setReasonLabel' is assigned a value but never used.","'action' is assigned a value but never used.","'setAction' is assigned a value but never used.",["1493"],["1494"],"'FileSaver' is defined but never used.",["1495"],["1496"],["1497"],["1498"],["1499"],["1500"],"no-global-assign","no-unsafe-negation",{"desc":"1501","fix":"1502"},{"desc":"1501","fix":"1503"},{"desc":"1504","fix":"1505"},{"desc":"1506","fix":"1507"},{"desc":"1508","fix":"1509"},{"desc":"1508","fix":"1510"},[5936,5948],"",{"desc":"1511","fix":"1512"},{"desc":"1501","fix":"1513"},{"desc":"1514","fix":"1515"},{"desc":"1514","fix":"1516"},{"desc":"1501","fix":"1517"},{"desc":"1501","fix":"1518"},{"desc":"1501","fix":"1519"},{"desc":"1520","fix":"1521"},{"desc":"1520","fix":"1522"},{"desc":"1501","fix":"1523"},{"desc":"1524","fix":"1525"},{"desc":"1526","fix":"1527"},{"desc":"1520","fix":"1528"},{"desc":"1520","fix":"1529"},{"desc":"1520","fix":"1530"},{"desc":"1531","fix":"1532"},{"desc":"1533","fix":"1534"},{"desc":"1514","fix":"1535"},{"desc":"1524","fix":"1536"},{"desc":"1524","fix":"1537"},{"desc":"1524","fix":"1538"},{"desc":"1524","fix":"1539"},{"desc":"1501","fix":"1540"},{"desc":"1541","fix":"1542"},{"desc":"1501","fix":"1543"},{"desc":"1524","fix":"1544"},{"desc":"1501","fix":"1545"},{"desc":"1520","fix":"1546"},{"desc":"1524","fix":"1547"},{"desc":"1533","fix":"1548"},{"desc":"1549","fix":"1550"},{"desc":"1520","fix":"1551"},{"desc":"1520","fix":"1552"},{"desc":"1553","fix":"1554"},{"desc":"1533","fix":"1555"},{"desc":"1556","fix":"1557"},{"desc":"1533","fix":"1558"},{"desc":"1501","fix":"1559"},{"desc":"1560","fix":"1561"},{"desc":"1562","fix":"1563"},{"desc":"1520","fix":"1564"},{"desc":"1520","fix":"1565"},{"desc":"1566","fix":"1567"},{"desc":"1568","fix":"1569"},{"desc":"1570","fix":"1571"},{"desc":"1572","fix":"1573"},{"desc":"1520","fix":"1574"},{"desc":"1549","fix":"1575"},{"desc":"1501","fix":"1576"},{"desc":"1577","fix":"1578"},{"desc":"1501","fix":"1579"},{"desc":"1577","fix":"1580"},{"desc":"1581","fix":"1582"},{"desc":"1572","fix":"1583"},{"desc":"1584","fix":"1585"},{"desc":"1586","fix":"1587"},{"desc":"1588","fix":"1589"},{"desc":"1586","fix":"1590"},{"desc":"1591","fix":"1592"},{"desc":"1591","fix":"1593"},{"desc":"1594","fix":"1595"},{"desc":"1524","fix":"1596"},{"desc":"1581","fix":"1597"},{"desc":"1568","fix":"1598"},{"desc":"1524","fix":"1599"},{"desc":"1501","fix":"1600"},{"desc":"1601","fix":"1602"},{"desc":"1533","fix":"1603"},{"desc":"1604","fix":"1605"},{"desc":"1520","fix":"1606"},{"desc":"1524","fix":"1607"},{"desc":"1572","fix":"1608"},{"desc":"1609","fix":"1610"},{"desc":"1611","fix":"1612"},{"desc":"1594","fix":"1613"},{"desc":"1611","fix":"1614"},{"desc":"1594","fix":"1615"},{"desc":"1504","fix":"1616"},{"desc":"1594","fix":"1617"},{"desc":"1611","fix":"1618"},{"desc":"1594","fix":"1619"},"Update the dependencies array to be: []",{"range":"1620","text":"1621"},{"range":"1622","text":"1621"},"Update the dependencies array to be: [fetchData]",{"range":"1623","text":"1624"},"Update the dependencies array to be: [fetchData, props.user, props.user.identite]",{"range":"1625","text":"1626"},"Update the dependencies array to be: [props]",{"range":"1627","text":"1628"},{"range":"1629","text":"1628"},"Update the dependencies array to be: [editfaqid]",{"range":"1630","text":"1631"},{"range":"1632","text":"1621"},"Update the dependencies array to be: [endPoint.list]",{"range":"1633","text":"1634"},{"range":"1635","text":"1634"},{"range":"1636","text":"1621"},{"range":"1637","text":"1621"},{"range":"1638","text":"1621"},"Update the dependencies array to be: [numberPerPage]",{"range":"1639","text":"1640"},{"range":"1641","text":"1640"},{"range":"1642","text":"1621"},"Update the dependencies array to be: [id]",{"range":"1643","text":"1644"},"Update the dependencies array to be: [edittypeid]",{"range":"1645","text":"1646"},{"range":"1647","text":"1640"},{"range":"1648","text":"1640"},{"range":"1649","text":"1640"},"Update the dependencies array to be: [editcategoryid]",{"range":"1650","text":"1651"},"Update the dependencies array to be: [endPoint.list, numberPerPage]",{"range":"1652","text":"1653"},{"range":"1654","text":"1634"},{"range":"1655","text":"1644"},{"range":"1656","text":"1644"},{"range":"1657","text":"1644"},{"range":"1658","text":"1644"},{"range":"1659","text":"1621"},"Update the dependencies array to be: [filterCurrency, id]",{"range":"1660","text":"1661"},{"range":"1662","text":"1621"},{"range":"1663","text":"1644"},{"range":"1664","text":"1621"},{"range":"1665","text":"1640"},{"range":"1666","text":"1644"},{"range":"1667","text":"1653"},"Update the dependencies array to be: [endPoint, id, props.userPermissions]",{"range":"1668","text":"1669"},{"range":"1670","text":"1640"},{"range":"1671","text":"1640"},"Update the dependencies array to be: [numberPerPage, props.plan]",{"range":"1672","text":"1673"},{"range":"1674","text":"1653"},"Update the dependencies array to be: [applyPossibleFilter, endpoint, renderChart]",{"range":"1675","text":"1676"},{"range":"1677","text":"1653"},{"range":"1678","text":"1621"},"Update the dependencies array to be: [data, id, props.userPermissions]",{"range":"1679","text":"1680"},"Update the dependencies array to be: [numberPerPage, props.userPermissions]",{"range":"1681","text":"1682"},{"range":"1683","text":"1640"},{"range":"1684","text":"1640"},"Update the dependencies array to be: [props.plan, props.userPermissions, id, defaultData]",{"range":"1685","text":"1686"},"Update the dependencies array to be: [id, initialState]",{"range":"1687","text":"1688"},"Update the dependencies array to be: [id, props]",{"range":"1689","text":"1690"},"Update the dependencies array to be: [id, props.userPermissions]",{"range":"1691","text":"1692"},{"range":"1693","text":"1640"},{"range":"1694","text":"1669"},{"range":"1695","text":"1621"},"Update the dependencies array to be: [props.plan, props.userPermissions]",{"range":"1696","text":"1697"},{"range":"1698","text":"1621"},{"range":"1699","text":"1697"},"Update the dependencies array to be: [endPoint.list, id]",{"range":"1700","text":"1701"},{"range":"1702","text":"1692"},"Update the dependencies array to be: [endPoint.edit, id]",{"range":"1703","text":"1704"},"Update the dependencies array to be: [defaultData]",{"range":"1705","text":"1706"},"Update the dependencies array to be: [endPoint.list, props.userPermissions]",{"range":"1707","text":"1708"},{"range":"1709","text":"1706"},"Update the dependencies array to be: [defaultData, props.userPermissions]",{"range":"1710","text":"1711"},{"range":"1712","text":"1711"},"Update the dependencies array to be: [props.userPermissions]",{"range":"1713","text":"1714"},{"range":"1715","text":"1644"},{"range":"1716","text":"1701"},{"range":"1717","text":"1688"},{"range":"1718","text":"1644"},{"range":"1719","text":"1621"},"Update the dependencies array to be: [data]",{"range":"1720","text":"1721"},{"range":"1722","text":"1653"},"Update the dependencies array to be: [id, numberPerPage]",{"range":"1723","text":"1724"},{"range":"1725","text":"1640"},{"range":"1726","text":"1644"},{"range":"1727","text":"1692"},"Update the dependencies array to be: [defaultError, props.token]",{"range":"1728","text":"1729"},"Update the dependencies array to be: [fetchData, numberPerPage]",{"range":"1730","text":"1731"},{"range":"1732","text":"1714"},{"range":"1733","text":"1731"},{"range":"1734","text":"1714"},{"range":"1735","text":"1624"},{"range":"1736","text":"1714"},{"range":"1737","text":"1731"},{"range":"1738","text":"1714"},[1792,1811],"[]",[2029,2051],[2635,2637],"[fetchData]",[3423,3444],"[fetchData, props.user, props.user.identite]",[3579,3601],"[props]",[3724,3742],[2608,2610],"[editfaqid]",[2345,2392],[3711,3751],"[endPoint.list]",[3781,3821],[2545,2592],[2457,2504],[2370,2417],[2415,2417],"[numberPerPage]",[2479,2481],[2490,2537],[1787,1789],"[id]",[1944,1946],"[edittypeid]",[2442,2444],[2516,2518],[2467,2469],[1978,1980],"[editcategoryid]",[3726,3728],"[endPoint.list, numberPerPage]",[2961,3001],[2520,2546],[3262,3288],[1958,1984],[4247,4249],[2479,2526],[2809,2835],"[filterCurrency, id]",[2442,2489],[2186,2212],[2549,2596],[3038,3040],[1992,2018],[3756,3758],[4362,4364],"[endPoint, id, props.userPermissions]",[2336,2338],[2208,2210],[2631,2633],"[numberPerPage, props.plan]",[3203,3205],[9891,9893],"[applyPossibleFilter, endpoint, renderChart]",[3090,3092],[2690,2712],[5705,5732],"[data, id, props.userPermissions]",[2846,2848],"[numberPerPage, props.userPermissions]",[2096,2098],[2097,2099],[3269,3303],"[props.plan, props.userPermissions, id, defaultData]",[2400,2402],"[id, initialState]",[4372,4374],"[id, props]",[3733,3735],"[id, props.userPermissions]",[2232,2234],[8456,8458],[2385,2432],[3630,3664],"[props.plan, props.userPermissions]",[2407,2454],[3064,3123],[2899,2901],"[endPoint.list, id]",[3300,3304],[3012,3014],"[endPoint.edit, id]",[2318,2320],"[defaultData]",[3210,3212],"[endPoint.list, props.userPermissions]",[2568,2570],[3246,3248],"[defaultData, props.userPermissions]",[5886,5888],[2759,2761],"[props.userPermissions]",[1971,1973],[4222,4224],[4244,4246],[3228,3254],[2404,2451],[1566,1568],"[data]",[3372,3374],[2667,2669],"[id, numberPerPage]",[2467,2469],[1970,1972],[2798,2800],[1896,1898],"[defaultError, props.token]",[4140,4155],"[fetchData, numberPerPage]",[4727,4729],[4182,4197],[4769,4771],[4148,4150],[4722,4724],[4137,4152],[4724,4726]]
>>>>>>> 4b9a4e460d1dbe2aa5bdda3e76bc9a156408336c
